cset: moving following pidspec: 22221
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.287766307 seconds)
loading group "string"... done (took 0.590510587 seconds)
loading group "linalg"... done (took 7.347555195 seconds)
loading group "parallel"... done (took 0.16328953 seconds)
loading group "find"... done (took 1.165585013 seconds)
loading group "tuple"... done (took 1.800676354 seconds)
loading group "dates"... done (took 1.247913838 seconds)
loading group "micro"... done (took 0.221417346 seconds)
loading group "io"... done (took 1.028182 seconds)
loading group "scalar"... done (took 39.14063454 seconds)
loading group "sparse"... done (took 12.573010179 seconds)
loading group "broadcast"... done (took 1.022945682 seconds)
loading group "union"... done (took 13.132918666 seconds)
loading group "simd"... done (took 5.141213248 seconds)
loading group "random"... done (took 9.704419572 seconds)
loading group "problem"... done (took 1.915681948 seconds)
loading group "array"... done (took 23.344453829 seconds)
loading group "misc"... done (took 1.843034867 seconds)
loading group "sort"... done (took 3.745992372 seconds)
loading group "collection"... done (took 18.828639097 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.526816349 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.128076776 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.120213319 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.122760743 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.151267573 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.115517159 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.128867324 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.088681515 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.825539898 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.15933711 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.121803091 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.435646041 seconds)
done (took 5.206100851 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.176659781 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.083625453 seconds)
    (2/2) benchmarking "String"...
    done (took 0.086291179 seconds)
  done (took 1.271765488 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.068771455 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.123198899 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.068970313 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.069985801 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.069192836 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.069607185 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.069543248 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.06862489 seconds)
  done (took 1.641747523 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.074109109 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.071088752 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.069441273 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.071018781 seconds)
  done (took 1.389908129 seconds)
done (took 5.661900122 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.795654928 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.208172329 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.188140763 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.424885581 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.138973814 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.163307046 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.646437823 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.326170494 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.194360495 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.085424432 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.113644499 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.336570842 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.112962876 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.645006646 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.075219989 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.092277666 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.139609704 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.451095138 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.068340338 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.084970179 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.092107228 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.12928875 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.085948261 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.07559571 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.145226217 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.06845866 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.136863729 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.082157455 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.067059524 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.213129843 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.175417296 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.661218546 seconds)
  done (took 10.365667545 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.097965981 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.099199175 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.071888045 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.12575997 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.101269142 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.072847769 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.074587997 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.070688906 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.091046471 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.132042908 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.092200908 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.105263084 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.069145187 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.0716287 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.088258969 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.208089478 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.081795705 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.085091604 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.073610339 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.078509345 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.109389893 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.081315377 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.080005057 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.080244227 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.132982962 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.184416295 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.099979758 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.100181861 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.070176398 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.083116286 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.117544612 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.128579174 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.068650215 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.068911154 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.127536335 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.097031973 seconds)
  done (took 4.657166586 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.0149818 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.148710697 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.094130175 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.140181608 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.067658096 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.114158797 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.068321951 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.085103194 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.216528545 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.463829531 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.6029354 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.113639767 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.108845417 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.071100769 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.074596475 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.070258849 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.509386145 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.095708844 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.110813167 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.085043407 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.073911169 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.072252536 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.362026731 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.070554758 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.066892175 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.071071702 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.060232867 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.130539719 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.071689475 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.969285783 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.131897583 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.07039166 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.104834726 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.16533137 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.092235032 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.277918863 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.073605424 seconds)
    (37/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.089590387 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.068395069 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.159630906 seconds)
    (40/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.097030239 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.073988407 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.069979752 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.088645006 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.107437958 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.118718066 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.069166926 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.070471664 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.169978671 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.068152888 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.083950167 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.645951099 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.155436533 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.078931207 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.06808083 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.26182225 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.093028839 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.073329719 seconds)
    (58/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.068004875 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.067641556 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.190794125 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.131120742 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.069646781 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.069880889 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.071792662 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.072966164 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.365165156 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.069409075 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.925594026 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.071855662 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.08115381 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.072642042 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.073214523 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.07670102 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.076258293 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.091725523 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.070247143 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.078843382 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.069270983 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.069135386 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.070031015 seconds)
    (81/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.066553794 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.088438893 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.384742998 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.069702249 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.071284691 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.067962865 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.092220951 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.099506986 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.070256375 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.068042404 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.102580618 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068996898 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.068744791 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.110735277 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.06996905 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.088040148 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.073020967 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.114131502 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.067548966 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.098727441 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.068201773 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.100011647 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.075131218 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.101877055 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.083968461 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.070873323 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.419841256 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.067456205 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.066363922 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.070204071 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.067114783 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.069719014 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.068506328 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.080580043 seconds)
  done (took 21.455572113 seconds)
done (took 38.597149601 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.249048631 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.086188054 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.081062805 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.08088794 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.080228932 seconds)
  done (took 1.772023073 seconds)
done (took 2.976645391 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.127856983 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.105760763 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.068059401 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.101784035 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.067708681 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.106468011 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.106301367 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.086981982 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.10523356 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.067806332 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.102905798 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.067616163 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.067766412 seconds)
  done (took 2.376171098 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.084285285 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.087574306 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.073743947 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.087581882 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.066387218 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.08748168 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.085483524 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.093759535 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.085107633 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.076279672 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.066820027 seconds)
  done (took 2.062146366 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.084313639 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.087957474 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.07295449 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.086013372 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.066975985 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.085761747 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.086072565 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.089950823 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.085760711 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.077688642 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.066733677 seconds)
  done (took 2.052804001 seconds)
done (took 7.653027054 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.0796083 seconds)
  done (took 1.233924103 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.605985683 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.113744242 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.083149302 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.115778818 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.197176492 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.122235507 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.271336498 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.090438508 seconds)
  done (took 8.945895309 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.094326534 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.086413698 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.074953435 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.07326678 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.072738679 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.074321817 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.072589039 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.075278129 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.071756057 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.0718729 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.075730135 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.07415706 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.074811032 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.075589625 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.073621372 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.071683603 seconds)
  done (took 2.44595901 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.095509819 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.094541292 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.076879234 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.079013329 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.075733134 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.074968398 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.077445968 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.077405822 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.074519663 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.075332142 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.077898831 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.076893714 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.075247082 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.067844018 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.07669992 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.078737979 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.07462068 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.077350345 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.078723176 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.078600137 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.078097223 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.067696549 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.074727539 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.077315709 seconds)
  done (took 3.131671505 seconds)
done (took 16.920545289 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.11612902 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.07311951 seconds)
  done (took 1.35289046 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.082107282 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.086329646 seconds)
  done (took 1.338313198 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.084416524 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.068342601 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.094432162 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.081791245 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.069572259 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.06896594 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.091590837 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.069522439 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.068961075 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.069474353 seconds)
  done (took 1.936949576 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.069197637 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.078532188 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.072753143 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.08545776 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.076940605 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.067329396 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.075846393 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.071012681 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.081635906 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.065929326 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.074571021 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.085856648 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.074658143 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.088159673 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.076397059 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.07187432 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.073593444 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.071464917 seconds)
  done (took 2.534997177 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.066575075 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.067866317 seconds)
  done (took 1.30977978 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.067928222 seconds)
    (2/7) benchmarking "second"...
    done (took 0.064294269 seconds)
    (3/7) benchmarking "month"...
    done (took 0.070091669 seconds)
    (4/7) benchmarking "year"...
    done (took 0.069747503 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.066235732 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.065703307 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.065946003 seconds)
  done (took 1.641723774 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.385965653 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.118166135 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.32246374 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.074472145 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.08632831 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.266047429 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.069316047 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.074322755 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.074517205 seconds)
  done (took 2.692065497 seconds)
done (took 13.98541299 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.080786462 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.087101292 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.100412487 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.388399837 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.095275192 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.069287248 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.116473059 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.194137206 seconds)
done (took 2.319035358 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.215657245 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.644205886 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.421918442 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.213434687 seconds)
  done (took 2.458594354 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.346274227 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.091643543 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.062029417 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.071147848 seconds)
  done (took 1.761998623 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.067946053 seconds)
    (2/2) benchmarking "read"...
    done (took 0.070387735 seconds)
  done (took 1.32393781 seconds)
done (took 6.945217006 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.067696449 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.067959783 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.065661937 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.06951852 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.066584374 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.066592986 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.069454911 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.069338491 seconds)
    (9/24) benchmarking ("zero", "Float32")...
    done (took 0.069621969 seconds)
    (10/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.089520112 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.070823379 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068967172 seconds)
    (13/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.068574371 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066229557 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066595476 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069181087 seconds)
    (17/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.066659312 seconds)
    (18/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.067401749 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.066513052 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066100708 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066209107 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068651345 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.066129653 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.066849883 seconds)
  done (took 2.871729458 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.085889566 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.068550619 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.075124875 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.074247048 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.073276301 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.074097392 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.074319691 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.068780127 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.073956721 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.071835486 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.072504553 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.072405372 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.0715497 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.072851883 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071190889 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.072671197 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.074755983 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069358147 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.07167739 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.072907366 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.07409642 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069242286 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.072343833 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.074252532 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.071981383 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.074415933 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.071450964 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.0692385 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.074688167 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.07223972 seconds)
  done (took 3.381361639 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.070418625 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.063968677 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.066485437 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.073951196 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.066495973 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.06741252 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.066598981 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.067402714 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.067479339 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.066322967 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.06761499 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.066525253 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.06618933 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.067806195 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.067365299 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.070227576 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.081999729 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.067312086 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.066846278 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.066844156 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.070217013 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.06668032 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.066580471 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.065863652 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.066745849 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.066066021 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.067335356 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.066197363 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.066711593 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.066353232 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.069446514 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.070183969 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.066145464 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.07359627 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.179490614 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.066516433 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.070642696 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.066043109 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.067121351 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.066509619 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.065828827 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.066048719 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.066396499 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.073254986 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.066958775 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.067877833 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.066725756 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.067227307 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.066646117 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.069187284 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.066941987 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.066097205 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.068325262 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.068143341 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.070435642 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.066233264 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.067053325 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.065858865 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.067510553 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.066057183 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.066498634 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.065863409 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.068997875 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.067027441 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.082080727 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.074130789 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.067046273 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.06819443 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.067311725 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.069318976 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.068274093 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.080945027 seconds)
  done (took 6.220292006 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.091588405 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.087657815 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.06816225 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.068212741 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.065450945 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.067343608 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.072987826 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067474554 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068380815 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.085163955 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067578919 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.06794549 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06865058 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.070973785 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.067165215 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.068326903 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.075654184 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.064816776 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.067202205 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.070452705 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.067210974 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.072572008 seconds)
  done (took 2.779534516 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.153833582 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.071328953 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.109634559 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.078709631 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.073202748 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.079052567 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.073150821 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.072953889 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.073066458 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.070396247 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070504334 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.073130074 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.073269491 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070519986 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.071408258 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.071024571 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.073145298 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.070800517 seconds)
  done (took 2.6296788 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.077352013 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.06895555 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.090598161 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.069131801 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.069478817 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.0718694 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.074027976 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.077599018 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.071333588 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.068696192 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.0771875 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071745062 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.07154069 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069297775 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071197667 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.06925153 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.071652381 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068679484 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.077454939 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.073262511 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.074113021 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.077450152 seconds)
  done (took 2.812930845 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.08049891 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.069139129 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.084507093 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.070956262 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.064993371 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.067641568 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.073473716 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.068675851 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.073297798 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.071299294 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06865244 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.067101898 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.07208668 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.068788885 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.072580815 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068719386 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.071700129 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.068876301 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071011496 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.0646598 seconds)
  done (took 2.621502857 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.087679059 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.07038771 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.071428177 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.078904707 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.07095994 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.071042943 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.078611649 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.07091732 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.071261095 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.091811926 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.07172758 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.071173888 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.078635309 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.07585686 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.070849235 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.078472424 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.079069886 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.078578125 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.070569136 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.070862644 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.091424382 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.071100169 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.078998059 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.071079638 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.070625962 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.071185843 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.070602265 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.075692178 seconds)
  done (took 3.314342504 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.06818693 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.067171271 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.066267091 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.066420418 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.066404672 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.066530214 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.067038292 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.066968423 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.069729195 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.067080445 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.069444396 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.069625277 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.070033413 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.068921557 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.069155361 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.069030281 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069746275 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.066685848 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066657989 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066504475 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.068958812 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069319071 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.069468183 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.067050032 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066412852 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.069158178 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066333765 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.067100389 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.06928433 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.066456571 seconds)
  done (took 3.243518682 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.075927279 seconds)
    (2/2) benchmarking "in"...
    done (took 0.074032488 seconds)
  done (took 1.356917942 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.06405687 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.081172204 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.065856639 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.073030293 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.072670306 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.07023627 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.076983766 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.072750383 seconds)
  done (took 1.77942897 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.082985464 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.079533989 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.070631968 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.083438287 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.080574272 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.086894294 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.139161137 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.070706026 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.076548285 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.067444079 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.083416123 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.069010372 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.076041084 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.070270141 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.075451376 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.076084925 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.067088951 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.075301766 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.072241476 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.067803665 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.070825404 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.078697966 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.072121817 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.064760764 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.07194797 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.093223338 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.081758975 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.06939389 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073265661 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.077102975 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.076339474 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.063882567 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.069838659 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.070027295 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.067671281 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.07993732 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.085127729 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.073053651 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.078715498 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.070369341 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.08014006 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.064579678 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.074734971 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.076427473 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.079864028 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.070129357 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.070080232 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.064427508 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.067734642 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.072048035 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.064405444 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.071883707 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.064350348 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.076477266 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.073177591 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.080216783 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.069018701 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.071548777 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.072200004 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.073054883 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.076678036 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.071815109 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.072075029 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.069373086 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.079938339 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.074782881 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.078789334 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.06451102 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.063644376 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.067289901 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.079395168 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.093088498 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.076292717 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.070042052 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.070319791 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.067455202 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.07260972 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.070398021 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.075891152 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.077274369 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.070384326 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.075393006 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.076754023 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069865415 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.071785864 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.077665196 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.068238429 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.072142714 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.067391148 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.086410366 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.068675882 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.06714136 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.067077623 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.080058378 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.072842358 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.06931626 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.067797388 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.076293141 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.063057212 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.069183004 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069355908 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070126908 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.079592774 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.07303577 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.073544922 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.077857146 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.076103268 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068914807 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.071771323 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.065179116 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.06961974 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.067527613 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.075369115 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.062523306 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071743067 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.193055614 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.06953711 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.077884305 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.067020287 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.068315039 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.076598025 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.07513266 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.067027909 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.066881614 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.074462153 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.070558557 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.073095401 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.079598954 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.068424335 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.064906733 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.065107252 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.074322059 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.070047217 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.073753865 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.074914751 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.073193348 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.063949774 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.067954436 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.075498663 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.079515127 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.070837476 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.071569182 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.076745037 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.071476111 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.069504291 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.07719719 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.072632795 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.068871202 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.076540308 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.071161566 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.065247786 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.072122802 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.072526005 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.0686044 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.073739601 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.072918177 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.071518921 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.070303126 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.068344113 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.077866694 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.070748598 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.068785955 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070349861 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.068706805 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.081153122 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.072499481 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.064953732 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.06630987 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.078667852 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.068321669 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.069709915 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.069441209 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.07282302 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.071190173 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.067926162 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.069573338 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.071651661 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.079584997 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.073750586 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.0712146 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.074731023 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.081261617 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.068744369 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.07144655 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.069632251 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.070629568 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.06972284 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.078342123 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.075427896 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.074093512 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.072234593 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.06664276 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.07493363 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.077685592 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.068494675 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.067656822 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.068688316 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.073503172 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.075098189 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.07319131 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.070139719 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.067458976 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.070488428 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.073035918 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.072208898 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.069066095 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.068702915 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.075457198 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.067563491 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.076463535 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.070221669 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.08060073 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.073041599 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.064816197 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.0723792 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.067655356 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.075486495 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.063626104 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.066844481 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.067861692 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.069574241 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.067728056 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.071052014 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.062821232 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.075737563 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.075782184 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.069393025 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.067695101 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.067928006 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075462084 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.070384496 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.072115276 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.071957079 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.074664399 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.206678527 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.068326693 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.073892842 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.08252028 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.070762462 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.064833272 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.076509441 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.069000527 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.069556792 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.069258281 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.068514642 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073819404 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.078785663 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.077466793 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.063885331 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.072945184 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.068577795 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.069789125 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.064996862 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.07493182 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.073544036 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.071313937 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076715427 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.070757004 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.071193613 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.074366093 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.070206291 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.071320816 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.071000106 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.072441063 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.070637033 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.072197208 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.069638332 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.07350006 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.069230167 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.068777173 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.07242642 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.06986342 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.070954424 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.075882999 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.070253112 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.06913574 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.072575003 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.069891349 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069971764 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.07095967 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.069042952 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.072608948 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.07041983 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.069572066 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.071926745 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.064493239 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.07747987 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.068825387 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.077922868 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.070215891 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.065916905 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.076392512 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.072382731 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.075639588 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.071209295 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.070078431 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.071244773 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.069052677 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.072106533 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.077100582 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.067600405 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.080482693 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.078292344 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070028424 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.073146173 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.07006392 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.071349349 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.068777283 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.070328184 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.070173474 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.070408559 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.069698064 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.075182168 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.072120353 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.070108958 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.071416225 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.070147496 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.070186464 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.070719405 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.064151563 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.068585099 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.068650358 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.069571145 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.079295056 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.070592401 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.068859094 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.068508129 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.070523627 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.068920613 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.066239592 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.077269966 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.077947792 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.069967499 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076589812 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.06857697 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.070970953 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.080229477 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.063512528 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.067464507 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.067557329 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.06707645 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.076541764 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.069478093 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.078328592 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.068900105 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.068047413 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.065900621 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.069474252 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.067450131 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.062870351 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.065916773 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.07215487 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.067654278 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067641801 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.068610301 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.202171093 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069431329 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.081590619 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.071191873 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.07222821 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.071663566 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.06757327 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.070311004 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.070417519 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.073636831 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.070988666 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.068609545 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.067301668 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.071045863 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.071578259 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.072114667 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.072657113 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.072021572 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.077690817 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.06983584 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.073219972 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.073636149 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.064517837 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.073477655 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.07117641 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.070222865 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.069129168 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.074180905 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.073990747 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.072095696 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.079443437 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.069386814 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.071036157 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.070611043 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.067719068 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.068660954 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.069549664 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.069808587 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.069242447 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.07108342 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.07799141 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.067819147 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.072799005 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.070025788 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.070674611 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.076777236 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.071460948 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.07306376 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.07626174 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.070739028 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.072000005 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.078299052 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.074117898 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.075421219 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.070605081 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.072359694 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.076811799 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.069526903 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.076129606 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.070354967 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.071205667 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.070992396 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.068363931 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.069556772 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.069585 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.069267643 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.076777769 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.071197845 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.069490897 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.068972644 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.067279693 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.070714978 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.072424866 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.078851187 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.072590835 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.072682468 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.065286214 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.066219635 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.069928834 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.067325239 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.071347449 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.072040212 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.07571829 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.072002998 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.070244876 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.069237282 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.079161204 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075718313 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.073744439 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.067688557 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.074063512 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.069973254 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.071793891 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.070868586 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.06982816 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.071124468 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.073494178 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.071263073 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.06864986 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.076670755 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.07302143 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.070580862 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.071794119 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.07049987 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.069999372 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.064765208 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.069914684 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.071258814 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.075486098 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.071888642 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.069927519 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079282374 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.066865106 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.06890736 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.07175631 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.067997497 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.073337099 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.06412621 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.070301491 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069595144 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.069112718 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.063868387 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.068146344 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.198017939 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.074519958 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.070707085 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.066370551 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.081859519 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.080170558 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.074204766 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.07001504 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.069366744 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.065387821 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.065362355 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.069499301 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.071531745 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.072458847 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.081442592 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.069749953 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.068867774 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.065014549 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.070999535 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.073668359 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.073139282 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.067156839 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.06515974 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.068845415 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.073747286 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.077135858 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.069709387 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.069659101 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074058962 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.072798609 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.067801446 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.073124202 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.066636427 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.073411367 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.082913702 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.070079865 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071787735 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.07687224 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.077875915 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.069688984 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.065280759 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.070480972 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.07350435 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.070628802 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.070885062 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.070740017 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.085204926 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.073678438 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.069104945 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.068142036 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.073870187 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.069470892 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.07899268 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.070983066 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.070465535 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.074698125 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.071798047 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.079053297 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.072807926 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.077407807 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.073217911 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.07358844 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.069041889 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.070560695 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.067971265 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.068153974 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.071211878 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.070319882 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.075074379 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.077431815 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.068881673 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.080627958 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.078965765 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.071734561 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.066442253 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.068949629 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.069160346 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.064781887 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.070994718 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.06793441 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.068489372 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.067817836 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.068832238 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.071173497 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.075128485 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.071492864 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.070297678 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.069670894 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.063355778 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.071924875 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.072065314 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.071185517 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.066984782 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.069794538 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.070158182 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.07370914 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.072665314 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.06763812 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.071404754 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.071102592 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.070837471 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.064529096 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.076245572 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.069119497 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.071569043 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.06856101 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.070036476 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.069906091 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.072356376 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.0742685 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.069889548 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.071306652 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.0722898 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.071131929 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.065890166 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.066211506 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.074297581 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.066886041 seconds)
  done (took 44.549078928 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.104056859 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.066769449 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.066316562 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.066130285 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.077862798 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.066728164 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.066568238 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.067153939 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.066746066 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.068900779 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.065419006 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.06520739 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.074226863 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.081455165 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.076945631 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.070052725 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.065354627 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.066692418 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.065394046 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.066010672 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.073854172 seconds)
  done (took 2.82889361 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.07455098 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.078441266 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.078574559 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.085749737 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.074468505 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.073596626 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.078955697 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.074220763 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.082085335 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.076888974 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.082963932 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.074794671 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.076619316 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.076510424 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.076917463 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.0747527 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.082154785 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.074901279 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.073983819 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.07947966 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.074042728 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.079025929 seconds)
  done (took 2.997918224 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.068917256 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.066929771 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.069280336 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.063972788 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.069734538 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.06487641 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.072839149 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.067665362 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.073390365 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.069232593 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.0689802 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.06947728 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.07127604 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.06480472 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.069600538 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.067706012 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.111961686 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.073501318 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.06963879 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.070556151 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.065190186 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.071794606 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.06528726 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.065995281 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.069109136 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.074076654 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.070231759 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.068139597 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.069784925 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.06864213 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.070043116 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.068428211 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.072092733 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.070518162 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.069200057 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.068616379 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.069681824 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.06980715 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.064975668 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.067652613 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.070231074 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.065308049 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.070478863 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.070706208 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.068442238 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.067856743 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.07130267 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.070283562 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.064819009 seconds)
  done (took 4.719737713 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.080068367 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.11454522 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.070310115 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.093167164 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.085293841 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.076273587 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.073885581 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.09423409 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.067333381 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.06775712 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.085735866 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.083110246 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.069626681 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.074480657 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.076414568 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.069447728 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.070307245 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.06781532 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.072874747 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.068577882 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.072786674 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.0759928 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.083737771 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.082104763 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.073060731 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.068264226 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.068883579 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.073437058 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.081298055 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.073228859 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.073449653 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.074292729 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.084289237 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.074547619 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.068535007 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.071280193 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.084860779 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.069196158 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.070964906 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.066547471 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.071428228 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.073061998 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.07578332 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.085235052 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.068949375 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.074012433 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.068840157 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.066171116 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.081134692 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.071428014 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.076864351 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.082951892 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.073002355 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.069112066 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.073727736 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.08355973 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.069135063 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.067660547 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.072230441 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.081950684 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.066907262 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.072872239 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.082359873 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.071239436 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.076484956 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.082681312 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.074516954 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.073407195 seconds)
  done (took 6.577801065 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.076876853 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.097338467 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.08718626 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.086663769 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.079453409 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.079468801 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.07897538 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.079769679 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.079133944 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.083632649 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.079358215 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.121154164 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.075026909 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.082250142 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.080292692 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.079358652 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.079485361 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.079537688 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.079498022 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.078986831 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.079514275 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.08680454 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.07912249 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.086690719 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.083645043 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.075098919 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.079171385 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.079335076 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.087318041 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.078878358 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.091413228 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.078577154 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.079134473 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.087090692 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.082726677 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.078496507 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.069486585 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.079029119 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.079264248 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.079117107 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.074242918 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.086849063 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.078957969 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.074719551 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.079210544 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.078620125 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.086204555 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.082616364 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.081391871 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.083088584 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.078683359 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.086455526 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.079119335 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.079195995 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.086650771 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.089560193 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.086284352 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.086543528 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.079102632 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.086846704 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.086607356 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.090240522 seconds)
  done (took 6.416528295 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083967992 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.077453876 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.085306666 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.064961994 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.067809172 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.075394017 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.067529747 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.068176723 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.077945541 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.077963986 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080157064 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.075482341 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.078335132 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.080069999 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.075250245 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.078608168 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.075200455 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.075274538 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.077331002 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.075978918 seconds)
  done (took 2.830043827 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.076444222 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.083436324 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.069617973 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.075010136 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.073175858 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.07514032 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.072300398 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.072940067 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070343408 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.073044435 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.080041349 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.079572037 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070181811 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.075432792 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.079725624 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.074885803 seconds)
  done (took 2.505669081 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.085585803 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.074755437 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.083900041 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.069925289 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.070392894 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.066004347 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.06946603 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.064658508 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.065563067 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.081858977 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.069396771 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.079902928 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.069635077 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.068428577 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.066056178 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.074841177 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.065716618 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.067001472 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.069370453 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.081438485 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.073459001 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.068112053 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.073535524 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.069231669 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.071853417 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.074134152 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.068459908 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.069572248 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.066264405 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.069555623 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.072206389 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.072401507 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.065842666 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.066878089 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.067970793 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.066423015 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.06896973 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.06973779 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.074535574 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.069312604 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.067639619 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.071608647 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.069253203 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.070742696 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.065640406 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.070222378 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.065081352 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.071147724 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.067174493 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.071957433 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.068938503 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.071693746 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.070535065 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.076330655 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.072255514 seconds)
  done (took 5.199100116 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.08160454 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.070933653 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.064640227 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.067899032 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.072846262 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.070822851 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.072460421 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.070699643 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.070758692 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.067485787 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.071023954 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.072572991 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070429571 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.073229186 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.07095303 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.074375197 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.06568259 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.070449806 seconds)
  done (took 2.595239967 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.072148362 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.068603077 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.076916403 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.069444158 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.069031504 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.071912141 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.065061008 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.067942802 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067518393 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.069089116 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068803614 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.072183478 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067947693 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.071776911 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.068662676 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06885214 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.071649604 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.068111002 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.069243512 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.065191736 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.071771774 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.068024324 seconds)
  done (took 2.841228256 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.094939969 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.086843289 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.14607634 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.08346538 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.088844891 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.07585036 seconds)
  done (took 1.889704637 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.093284173 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.102275426 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.070244364 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072828148 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079402326 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073272697 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07359269 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074349396 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.08176674 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07953543 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073888269 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082239569 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081981889 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.081412771 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079255678 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079865476 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073388765 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07427929 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069789918 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.087571857 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073631899 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081632916 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073640755 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073246988 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073712602 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.081682562 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081934447 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079090628 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072972906 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.081704934 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079206901 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073127759 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081640942 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079048567 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072437241 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081909441 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073617045 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.087183292 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079118854 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.081349095 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.073064796 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079731125 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082110381 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078337909 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.081550389 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074019286 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078084841 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07361506 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074037119 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.089216233 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079392758 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.081073807 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082078649 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082368591 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081926138 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.089287281 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079505529 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.081420874 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079479677 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079425004 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.081093478 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07956303 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.080493018 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079423639 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079612137 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.081936119 seconds)
  done (took 6.545153736 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.104944506 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.068441983 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073673578 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079086197 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.080683676 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073746477 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073863708 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073784862 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074317133 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070801705 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112280697 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074094752 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081875354 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.082152961 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074149552 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07335602 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073479293 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.081454447 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070389628 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.089097887 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073673114 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.081019995 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080870695 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.080976817 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079450211 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079521615 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07416294 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073640286 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073979878 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07386946 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07807433 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073185869 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.080768444 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.070226303 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081371165 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073586478 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073012625 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078419706 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073547361 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.0798112 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.081510309 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.086927566 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073655903 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073651205 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079415955 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073463181 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073473521 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070288396 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073421444 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070349847 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079303604 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079078662 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07916176 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.080907617 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073494237 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07416024 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073660413 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073550417 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073603636 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078825004 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081284969 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073798736 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.089169733 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074214799 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073887286 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.081753457 seconds)
  done (took 6.447781885 seconds)
done (took 133.13761905 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.189447993 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.167867862 seconds)
  done (took 1.669885237 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.070789784 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.102798353 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.081208489 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.132160803 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.068035669 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.103634812 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.100393568 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.079837579 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.070088558 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.070648113 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.070084157 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.072436732 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.135587377 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.067463774 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.069374797 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.072572568 seconds)
  done (took 2.693068747 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.101378467 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.170233031 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.107510967 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.06944161 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.104006721 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.077123529 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.068238724 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.079206256 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.075089573 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.069046639 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.07707851 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.074393193 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.068941329 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.074762487 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.075303678 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.076469905 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.068626247 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.076807647 seconds)
  done (took 2.841935576 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.101502223 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.095486853 seconds)
  done (took 1.532618237 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.161870753 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.136386292 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.205171079 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.354997206 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.167682102 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.156498556 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.152057484 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.150200601 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.125724067 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.14139742 seconds)
  done (took 3.081596913 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.101360518 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.158826448 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.277126563 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.122894138 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.077357958 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.09839588 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.1244471 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.082984885 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.085816377 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.084927726 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.084893808 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.080924732 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.105257709 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.077447091 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.078041978 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.080644705 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.107934137 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.076507081 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.078716874 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.08021242 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.105312805 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.069487811 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.077354212 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.076643284 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.081053667 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.081219035 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.069488793 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.069392062 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.080836237 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.078251457 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.081288947 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.097214523 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.081412349 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.110981031 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.075371509 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.112590504 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.08092496 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.077840423 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.078522122 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.077912085 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.082395883 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.082240003 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.076589555 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.080692537 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.069041823 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.081021951 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.069517492 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.069997912 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.081317258 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.071408114 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.082225043 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.080325163 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.110892393 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.071360038 seconds)
  done (took 6.190691092 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.104141958 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.107209211 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.073454409 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.117617315 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.107160844 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.076455218 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.107259084 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.100033973 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.109590494 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.074821746 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.072286408 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.074124091 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.085788958 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.088053951 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.117594304 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.10765809 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.075492211 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.074697922 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.110412893 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.109809579 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.072209541 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.100915083 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.095494388 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.108023839 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.071412828 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.074030905 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.071782597 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.073843575 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.080769133 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.082183773 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.073795086 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.084281289 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.092827906 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.08260841 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.071868513 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.071964123 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.071524936 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.083611697 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.083614968 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.083068187 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.082299219 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072303667 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.079683689 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.073701885 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.074098166 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.071643906 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.082866548 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.086669516 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.082954489 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.073229546 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.073854784 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.072131733 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.073360875 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.084204406 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.081998825 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.085696924 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.083845854 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.071803244 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.072108564 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.076432683 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.084602955 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.083655429 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.083927747 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.073920566 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.083723666 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.072297225 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.084309255 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.088785583 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.072502581 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.073921327 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.072272697 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.072983398 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.073346641 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.08172042 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.081443095 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.073530511 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.073015925 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071978839 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.084283533 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.081797747 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.0717654 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.080451212 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.070766736 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.07158871 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.073334494 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.072975979 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.081499132 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.083504819 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.07314441 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.071674042 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.072474765 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.071672419 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.070726045 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.079871636 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.08208864 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.08140437 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.080860019 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.072480019 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.081462918 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.080658022 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.072859289 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.081480296 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.070992375 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.072663549 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.20255344 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.081313956 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.080481747 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.084276057 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.074870442 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.07313834 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.084643888 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.084972624 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.073788273 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.082841295 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.084907246 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.083666043 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.072225849 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.085747362 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.073286467 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.084742318 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.074220695 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.084452214 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.073123912 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.083762852 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.072772386 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.072410477 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.072910245 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.084036063 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.07695244 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.07235308 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.074096821 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.073735293 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.083651217 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.086332859 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.07324902 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.082918898 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.083061738 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.074343079 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.083471304 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.074177237 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.082908304 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.073969785 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.073105916 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.07137012 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.086010477 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.07279237 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.072866333 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.072876259 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.085331719 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.072794197 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.083654498 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.081802419 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.072152275 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.08771669 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.082538233 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.079810789 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.081642718 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071690894 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.0714369 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.071968898 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.072409927 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.081834451 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.084189826 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.074111095 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.072301246 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.081456802 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.083046282 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.070705439 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.08175832 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.081081857 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.082009681 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.071987338 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.073363254 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.084275222 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.083982692 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.080637794 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.081770436 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.082228542 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.072273127 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.080717125 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.082357763 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072144456 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.087657185 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.072853205 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.086836252 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.082477303 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.080147892 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.082134279 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.083608248 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.083844778 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.084255065 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.087331544 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.072347656 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.072027507 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.083460631 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.071998627 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.072553932 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.080477077 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.072226648 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.072604156 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.085648112 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068783298 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.078880166 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.068023322 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.078399136 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.0675857 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071257284 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.085515913 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.070397634 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.204890922 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.082194297 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.072002351 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.082210836 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.085993902 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.079359223 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.070273279 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.074203859 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.084352253 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.082906408 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.072735004 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.072910006 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.074116479 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.082449955 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.082229706 seconds)
  done (took 19.477628273 seconds)
done (took 38.822109416 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.215431411 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.15771656 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.17781711 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.120183982 seconds)
  done (took 2.099206684 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.11725808 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.102257368 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.093437471 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.066041976 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.102687929 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.06826583 seconds)
  done (took 1.912011759 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.309975378 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.213688613 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.192379754 seconds)
  done (took 2.075362606 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.207153588 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.194491502 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.427318546 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.26410986 seconds)
  done (took 2.568387319 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.149748416 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.093266127 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.070896703 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.087720923 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.13941493 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.167574278 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.105183018 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.130743003 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.083023725 seconds)
  done (took 2.441682055 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.15463022 seconds)
done (took 12.614121789 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.250126084 seconds)
    (2/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.099571815 seconds)
    (3/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.110595447 seconds)
    (4/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.237155097 seconds)
    (5/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.083039589 seconds)
    (6/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.076476265 seconds)
    (7/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.156759838 seconds)
    (8/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.116008778 seconds)
    (9/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.23115238 seconds)
    (10/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.086427636 seconds)
    (11/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.198958542 seconds)
    (12/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.178978433 seconds)
    (13/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.076567351 seconds)
    (14/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.094971393 seconds)
    (15/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.080748524 seconds)
    (16/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.081842495 seconds)
    (17/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.151810472 seconds)
    (18/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.078118688 seconds)
    (19/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.179005013 seconds)
    (20/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.180303817 seconds)
    (21/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.211858367 seconds)
    (22/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.080110797 seconds)
    (23/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.121560552 seconds)
    (24/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.166991472 seconds)
    (25/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.073891744 seconds)
    (26/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.081163041 seconds)
    (27/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.155119602 seconds)
    (28/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.211586331 seconds)
    (29/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.161870881 seconds)
    (30/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.082287032 seconds)
    (31/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.190433604 seconds)
    (32/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.095117312 seconds)
    (33/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.109065671 seconds)
    (34/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.153647865 seconds)
    (35/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.160515107 seconds)
    (36/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.07774505 seconds)
    (37/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.104481993 seconds)
    (38/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.079950506 seconds)
    (39/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.173759459 seconds)
    (40/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.086340236 seconds)
    (41/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.072968245 seconds)
    (42/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.182754364 seconds)
    (43/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.075340347 seconds)
    (44/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.149974944 seconds)
    (45/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.075516729 seconds)
    (46/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.075776939 seconds)
    (47/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.123772248 seconds)
    (48/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.093021677 seconds)
    (49/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.167194444 seconds)
    (50/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.190917732 seconds)
    (51/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.115731673 seconds)
    (52/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.076068056 seconds)
    (53/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.07698777 seconds)
    (54/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.157107932 seconds)
    (55/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.079213394 seconds)
    (56/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.113997268 seconds)
    (57/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.078944153 seconds)
    (58/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.07661124 seconds)
    (59/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.076251228 seconds)
    (60/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.10723257 seconds)
    (61/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.161569505 seconds)
    (62/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.103635833 seconds)
    (63/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.112243725 seconds)
    (64/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.055262491 seconds)
    (65/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.070185839 seconds)
    (66/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.094677172 seconds)
    (67/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.096947394 seconds)
    (68/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.136576469 seconds)
    (69/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.05409115 seconds)
    (70/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.05492999 seconds)
    (71/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.222047928 seconds)
    (72/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.070723195 seconds)
    (73/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.188430631 seconds)
    (74/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.153720483 seconds)
    (75/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.076980922 seconds)
    (76/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.148390252 seconds)
    (77/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.14854271 seconds)
    (78/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.148500438 seconds)
    (79/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.104154197 seconds)
    (80/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.068212513 seconds)
    (81/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.175821191 seconds)
    (82/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.224334968 seconds)
    (83/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.239284927 seconds)
    (84/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.131461233 seconds)
    (85/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.076802524 seconds)
    (86/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.18846325 seconds)
    (87/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.168226095 seconds)
    (88/309) benchmarking ("sort", Int8, false)...
    done (took 0.148256935 seconds)
    (89/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.09372301 seconds)
    (90/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.069742721 seconds)
    (91/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.094214593 seconds)
    (92/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.054348527 seconds)
    (93/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.082502903 seconds)
    (94/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.097248693 seconds)
    (95/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.071857494 seconds)
    (96/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.163272178 seconds)
    (97/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.069302682 seconds)
    (98/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.072677885 seconds)
    (99/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.069055934 seconds)
    (100/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.071731752 seconds)
    (101/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.072902148 seconds)
    (102/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.068912179 seconds)
    (103/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.07002516 seconds)
    (104/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.070563835 seconds)
    (105/309) benchmarking ("sort", Int64, false)...
    done (took 0.070231359 seconds)
    (106/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.411021859 seconds)
    (107/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.14105476 seconds)
    (108/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.077860618 seconds)
    (109/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.209983491 seconds)
    (110/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.202510312 seconds)
    (111/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.054500478 seconds)
    (112/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.115752238 seconds)
    (113/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.076298925 seconds)
    (114/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.077663533 seconds)
    (115/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.078650658 seconds)
    (116/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.070143238 seconds)
    (117/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.09690842 seconds)
    (118/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.077939821 seconds)
    (119/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.112706667 seconds)
    (120/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.095413943 seconds)
    (121/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.172853613 seconds)
    (122/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.176311532 seconds)
    (123/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.068569308 seconds)
    (124/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.07652416 seconds)
    (125/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.102552381 seconds)
    (126/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.098359428 seconds)
    (127/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.129877639 seconds)
    (128/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.075790476 seconds)
    (129/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.074500277 seconds)
    (130/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.130048731 seconds)
    (131/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.053518435 seconds)
    (132/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.082999494 seconds)
    (133/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.148861345 seconds)
    (134/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.077412768 seconds)
    (135/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.074823322 seconds)
    (136/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.067843729 seconds)
    (137/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.157137332 seconds)
    (138/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.081837257 seconds)
    (139/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.161761236 seconds)
    (140/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.054277652 seconds)
    (141/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.161678713 seconds)
    (142/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.069741049 seconds)
    (143/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.056015251 seconds)
    (144/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.07496296 seconds)
    (145/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.181751203 seconds)
    (146/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.079200045 seconds)
    (147/309) benchmarking ("sort", Bool, false)...
    done (took 0.141450391 seconds)
    (148/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.077367356 seconds)
    (149/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.090414629 seconds)
    (150/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.056276502 seconds)
    (151/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.075640642 seconds)
    (152/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.066403719 seconds)
    (153/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.075271904 seconds)
    (154/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.054064266 seconds)
    (155/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.068614938 seconds)
    (156/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.18214945 seconds)
    (157/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.102760253 seconds)
    (158/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.094134389 seconds)
    (159/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.181855779 seconds)
    (160/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.107340858 seconds)
    (161/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.056887657 seconds)
    (162/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.075809939 seconds)
    (163/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.080121427 seconds)
    (164/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.073980507 seconds)
    (165/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.05583484 seconds)
    (166/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.053801502 seconds)
    (167/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.075339145 seconds)
    (168/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.089507003 seconds)
    (169/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.091053239 seconds)
    (170/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.080125243 seconds)
    (171/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.068735087 seconds)
    (172/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.076669251 seconds)
    (173/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.069585187 seconds)
    (174/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.212933621 seconds)
    (175/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.055756795 seconds)
    (176/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.055518663 seconds)
    (177/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.11504713 seconds)
    (178/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.054999768 seconds)
    (179/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.06424182 seconds)
    (180/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.076463062 seconds)
    (181/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.075845585 seconds)
    (182/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.113207723 seconds)
    (183/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.14875025 seconds)
    (184/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.053412451 seconds)
    (185/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.075782159 seconds)
    (186/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.053820149 seconds)
    (187/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.070626077 seconds)
    (188/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.091531847 seconds)
    (189/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.053917803 seconds)
    (190/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.053700909 seconds)
    (191/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.213729289 seconds)
    (192/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.068312318 seconds)
    (193/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.069251766 seconds)
    (194/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.06809496 seconds)
    (195/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.076542425 seconds)
    (196/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.074515786 seconds)
    (197/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.071479587 seconds)
    (198/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.10645138 seconds)
    (199/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.073509924 seconds)
    (200/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.070418961 seconds)
    (201/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.075788576 seconds)
    (202/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.055017853 seconds)
    (203/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.077443944 seconds)
    (204/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.085263505 seconds)
    (205/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.057092415 seconds)
    (206/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.14645939 seconds)
    (207/309) benchmarking ("sort", Float32, false)...
    done (took 0.136715496 seconds)
    (208/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.078847713 seconds)
    (209/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.095532042 seconds)
    (210/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.102073567 seconds)
    (211/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.07438287 seconds)
    (212/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.073770842 seconds)
    (213/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.095877025 seconds)
    (214/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.055991058 seconds)
    (215/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.06464435 seconds)
    (216/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.055108203 seconds)
    (217/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.067206683 seconds)
    (218/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.054164189 seconds)
    (219/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.0696161 seconds)
    (220/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.082725231 seconds)
    (221/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.080354601 seconds)
    (222/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.094442183 seconds)
    (223/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.055671547 seconds)
    (224/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.054738699 seconds)
    (225/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.069173693 seconds)
    (226/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.070889014 seconds)
    (227/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.055068116 seconds)
    (228/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.078430064 seconds)
    (229/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.077566211 seconds)
    (230/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.07617396 seconds)
    (231/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.05573807 seconds)
    (232/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.125026826 seconds)
    (233/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.093022324 seconds)
    (234/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.070021834 seconds)
    (235/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.069504657 seconds)
    (236/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.074843832 seconds)
    (237/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.054831517 seconds)
    (238/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.068173424 seconds)
    (239/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.067325849 seconds)
    (240/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.055608183 seconds)
    (241/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.067450308 seconds)
    (242/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.069387148 seconds)
    (243/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.095562524 seconds)
    (244/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.09422869 seconds)
    (245/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.067667545 seconds)
    (246/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.069093961 seconds)
    (247/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.186560039 seconds)
    (248/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.082900162 seconds)
    (249/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.141046048 seconds)
    (250/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.054626429 seconds)
    (251/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.143792784 seconds)
    (252/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.089779509 seconds)
    (253/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.06354003 seconds)
    (254/309) benchmarking ("sort", Float64, false)...
    done (took 0.133992161 seconds)
    (255/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.055519352 seconds)
    (256/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.064892113 seconds)
    (257/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.075563836 seconds)
    (258/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.11468991 seconds)
    (259/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.057044065 seconds)
    (260/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.068558295 seconds)
    (261/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.069607131 seconds)
    (262/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.160170244 seconds)
    (263/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.076222269 seconds)
    (264/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.054056738 seconds)
    (265/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.053988185 seconds)
    (266/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.139629657 seconds)
    (267/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.053793509 seconds)
    (268/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.074268973 seconds)
    (269/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.094141024 seconds)
    (270/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.054312735 seconds)
    (271/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.07246219 seconds)
    (272/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.069153768 seconds)
    (273/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.068512127 seconds)
    (274/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.054621233 seconds)
    (275/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.055224509 seconds)
    (276/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.056255432 seconds)
    (277/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.05585647 seconds)
    (278/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.054525336 seconds)
    (279/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.075644528 seconds)
    (280/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.085980929 seconds)
    (281/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.070496655 seconds)
    (282/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.077549206 seconds)
    (283/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.200179706 seconds)
    (284/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.055025355 seconds)
    (285/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.096360674 seconds)
    (286/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.054710243 seconds)
    (287/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.054175799 seconds)
    (288/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.055372237 seconds)
    (289/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.053840838 seconds)
    (290/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.072969807 seconds)
    (291/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.07699275 seconds)
    (292/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.067282681 seconds)
    (293/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.067208412 seconds)
    (294/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.068791125 seconds)
    (295/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.07668836 seconds)
    (296/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.06536022 seconds)
    (297/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.074884642 seconds)
    (298/309) benchmarking ("sort", BigInt, false)...
    done (took 0.193050795 seconds)
    (299/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.067861245 seconds)
    (300/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.068559792 seconds)
    (301/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.054277457 seconds)
    (302/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.070125663 seconds)
    (303/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.095111793 seconds)
    (304/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.075776491 seconds)
    (305/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.074768538 seconds)
    (306/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.091948952 seconds)
    (307/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.054156189 seconds)
    (308/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.090434207 seconds)
    (309/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.056034876 seconds)
  done (took 32.194860119 seconds)
done (took 33.572371268 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.085950039 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.094629989 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.07873494 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.098332578 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.085846901 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.081586384 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.077310958 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.082385471 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.084117303 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.086376995 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.082506562 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.058139355 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.078263371 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.078119866 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.078424097 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.096199575 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.082253187 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.076628217 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.07692486 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.06785068 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.076666339 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.069290781 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.070705357 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.057665065 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.082605211 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.075400891 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.075944977 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.07775436 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.068666827 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.06894568 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.072696475 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.07736803 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.068432895 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.08179851 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.075436721 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.076457896 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.077919426 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.079097472 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.069144726 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.066387704 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.077375773 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.068723494 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.076877496 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.077376587 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.075869708 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.075022006 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.076243804 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.081286913 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.094911647 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.071427698 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.078249053 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.079862923 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.07961245 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.076716809 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.072944346 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.076841084 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.074104428 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.095544782 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.076982189 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.071896071 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.078127778 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.077461311 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.075306522 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.076846608 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.076305057 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.077289856 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.076656107 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.072318537 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.075967769 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.072926737 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.06626033 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.074317329 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.070614491 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.066168396 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.077516667 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.07863635 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.066284002 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.074959208 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.076202152 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.075322034 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.068298609 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.071520841 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.070282148 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.075496607 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.07087336 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.056992767 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.072459818 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.075396194 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.067397509 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.076621712 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.075841978 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.076629514 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.070643261 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.079293852 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.067980815 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.074368859 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.069166826 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.068495479 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.069889117 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.073085853 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.06821595 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.071698233 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.077876648 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.069802672 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.07504607 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.081176112 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.066932699 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.073501436 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.065186878 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.06502599 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.080701143 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.075505803 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.066296607 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070885316 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.067241228 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.076358605 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.067851479 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.06873396 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.068383265 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.068478789 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.074385451 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.068227342 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.070760038 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.075593116 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.080656312 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.067368759 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.071221648 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.07020578 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.067759305 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.073561759 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.067684247 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.201974309 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.069102891 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.06433317 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.069559682 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.066805126 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.075175683 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.070177042 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.075319252 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.069185411 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.075847593 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.071596055 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.073662416 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.074729731 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.0657794 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.060990651 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070866235 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.069143024 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.0682778 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.066285863 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.068463623 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.066639316 seconds)
done (took 12.878175172 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.067036885 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.140781753 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.097549109 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.095647947 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.086383035 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.067235318 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.07629754 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.100634428 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.068135684 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.101366622 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.088236365 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.086770701 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.115247554 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.06548783 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.068140472 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.07232621 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.070643103 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.085718728 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.104059141 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.090325053 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.119489449 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.068590486 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.096542679 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.093441194 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.091066636 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.105988082 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.071882265 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.071565841 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.07259676 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.096176344 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.089070729 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.070472488 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.067430585 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.099165628 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.094628244 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.084948533 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.067435907 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.084272651 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.068110827 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.066774158 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.068160902 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.100673227 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.081061499 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.082095827 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.071132162 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.077458795 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.067368605 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.084636449 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.090994384 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.07977365 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.086341717 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.102244457 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.069750334 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.084778902 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.065357817 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.087419252 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.078294562 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.069356629 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.067938305 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.076945856 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.069428957 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.072798016 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.085167065 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.084618079 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.074559757 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.089239402 seconds)
  done (took 6.933692241 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.084699502 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.092752364 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.08455553 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.084706369 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.066961995 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.069510527 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.069344513 seconds)
  done (took 2.022968196 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.06722245 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.088449706 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.092538706 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.093613468 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.084995261 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.091410301 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.079227144 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.069970939 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.091807903 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.070915451 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.091261348 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.10536895 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.073297774 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.077968533 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.09536003 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.06988914 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.095252342 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.07003845 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.07290322 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.094760094 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.072726333 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.099348552 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.073616082 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.069795282 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.084656099 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.069986318 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.118431669 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.074382531 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.072469874 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.072488299 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067993361 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.11230403 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.08423472 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.078440608 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.069807789 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.08542172 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.084645416 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068558775 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.087161173 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.079145717 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.08444479 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.070176878 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.07091493 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.067681027 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.074756158 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.080579287 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.070689724 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.070553517 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.073109051 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.091163923 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.071042059 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.084973851 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.073197302 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.076416924 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.071527106 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.076546514 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.079337084 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.069772956 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.089900596 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.07125764 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.08798078 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.087103953 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.083969186 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.087139025 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.072718651 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.084070853 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.084176569 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.072300134 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.072261097 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.073791664 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.087056725 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.068185433 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.071943763 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.080624163 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.071813565 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.094132435 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.094282094 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.071708544 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.084153246 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.070417639 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.070444898 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.070395745 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.094445389 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.075674501 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.070010391 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.074534808 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.073543462 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.067944685 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.06943598 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.074115751 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.068477342 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.071899932 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.072786701 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.072982987 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.07277208 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.0878451 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.072411599 seconds)
  done (took 9.142230197 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.06979808 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.069428618 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.07016289 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.068743686 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.069406195 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.071412303 seconds)
  done (took 1.913595434 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.093548891 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.06950707 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.081624378 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.072689098 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.105230541 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.087395049 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.090509844 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.081901273 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.088228817 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.082408591 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.090433332 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.092306184 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.096264909 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.076176936 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.09174557 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.075493778 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.092104453 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.078622254 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.08223586 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.076587681 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.090536623 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.076580223 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.077052655 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.086237949 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.07925703 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.075431471 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.081009042 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.08092681 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.081822926 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.082549058 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.07586529 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.0795923 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.074329918 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.082819684 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.091005856 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.07464698 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.075249347 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.080460111 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.075753277 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.07963789 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.091627973 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.07622137 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.077766753 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.079609811 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.080491835 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.072713019 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.07707512 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.079941862 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.087194258 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.077025531 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.077372201 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.072042491 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.076088238 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.077427681 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.071104885 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.078966838 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.077765507 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.087264326 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.072491579 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.071546236 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.069309067 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.076857412 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.078241455 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.076544343 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.079184863 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.077785463 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.071142498 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.073207082 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.073258821 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.071806727 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.077019036 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.069474533 seconds)
  done (took 7.232170418 seconds)
done (took 28.702221942 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.533825162 seconds)
  done (took 1.992486353 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.610185496 seconds)
  done (took 2.092343538 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.407355672 seconds)
  done (took 7.885869669 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.399953998 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.526688291 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.72602405 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.132712091 seconds)
  done (took 3.300805773 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.705230819 seconds)
  done (took 2.195514777 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.214398529 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.203020879 seconds)
  done (took 1.9203564 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.374668777 seconds)
  done (took 1.853695429 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.134351217 seconds)
  done (took 2.615114026 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.25743924 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.175785416 seconds)
  done (took 1.918360568 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.477338982 seconds)
  done (took 1.959748249 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.884844288 seconds)
  done (took 6.371641445 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.209568303 seconds)
  done (took 1.744781493 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.235964457 seconds)
  done (took 1.721581953 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.713053771 seconds)
  done (took 3.200225426 seconds)
done (took 42.258948246 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.082225456 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.082989227 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.085355206 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.079197885 seconds)
  done (took 1.806878974 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.07840718 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.074592558 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.078131485 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.074148138 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.077983113 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.073700282 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.075310789 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.076802232 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.073847309 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.074104049 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.073761273 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.07445274 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.076069413 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.075268792 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.072787191 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.07622957 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.077415456 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.073854703 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.076682122 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.074293023 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.074353182 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.079382495 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.079492488 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.075502031 seconds)
  done (took 3.308333412 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.078281789 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.074753395 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.075961747 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.073750004 seconds)
  done (took 1.801216693 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.07978716 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.094255883 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.092799211 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.078818644 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.094304272 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.088041325 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.070595814 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.070269957 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.071995876 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.079518649 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.070235621 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.097629647 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.090116117 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.079329105 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.081641686 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.067646 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.069866791 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.089872073 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.07928202 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.079782446 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.072793522 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.082127403 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.072279495 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.093858851 seconds)
  done (took 3.441442799 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.086984888 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.105710298 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.082329558 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.089790906 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.092391786 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.066766615 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.0903444 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.092670954 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.127448755 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.066301043 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.071410827 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.066673864 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.074265809 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.066240018 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.082023595 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.109352374 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.112742616 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.069917237 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.100060439 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.067051011 seconds)
  done (took 3.226184587 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.07376472 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.070131769 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.067147804 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.069723104 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.078750231 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.074225044 seconds)
  done (took 1.937937009 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.069180179 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.068705409 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.068480449 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.067948943 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.073548262 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.067894121 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.066810792 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.068497099 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.068731069 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.068573625 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.068351688 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.067336887 seconds)
  done (took 2.323060557 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.202200611 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.069112083 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.069959515 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.06778478 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.071750507 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.068224691 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.082583428 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.069265318 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.092954428 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.067513833 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.06783469 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.070024682 seconds)
  done (took 2.500582248 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208741913 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076674568 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238929585 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151889837 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111886897 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.11692243 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.113697859 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.114693959 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.144296731 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.103219743 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170073195 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170251408 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.11200429 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140359086 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.090926943 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.102216179 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156159101 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165506415 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107179679 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168100689 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147351042 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.130327137 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.149234067 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.1033332 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107466188 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123545389 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.072744824 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083868404 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173317394 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13429512 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147803427 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114543559 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097157288 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180501653 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174904373 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146074309 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152663812 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.089661553 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.110685708 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.136633102 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200045838 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.089492297 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161483503 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.248719317 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.083443984 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134359635 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12152426 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.120292844 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.10742864 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.090988562 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148090507 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186627124 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.138161771 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.0887499 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126419034 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115573928 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.116777929 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115718896 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182501133 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162855388 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129323525 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.073213716 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109626847 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15442393 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133153181 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.109011738 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.125471069 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093157998 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136031775 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.155712631 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122722448 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14538915 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.11865825 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.092869787 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122173464 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.141286498 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13000614 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162731698 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124941298 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.073817553 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124754775 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10199832 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081509668 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.145081996 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.075707175 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175592524 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099861659 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.109381451 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.12553434 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109228729 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.110431933 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160642011 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143775383 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.245835702 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.068073693 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107498469 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.123294489 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147987995 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088988269 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109332554 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120189015 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.079196808 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138092346 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.076039199 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124795523 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.078070975 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12500027 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133875778 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.078128876 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.12440154 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104394095 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.101001729 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133591183 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162338607 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088893287 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.083561358 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171873036 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123349753 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.104851174 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.145492213 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.156750491 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.101692039 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103452277 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.150225054 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180490904 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.091285428 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164522585 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10781191 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.085048968 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.089363376 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125538608 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.113253694 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.127272974 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083954082 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.11935789 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169232744 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.075623786 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.09607567 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135078908 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079642759 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081526673 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106084766 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105625217 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.096358319 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.102074741 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.105391859 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136941826 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124507066 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106566511 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122840723 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.244960554 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17501105 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.091402454 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.104079265 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.105706233 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.071841848 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.136779443 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159600691 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.081726468 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166124264 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.128185197 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122194789 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122797481 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08810415 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.147552447 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.084730569 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.075664764 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.149785593 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.113544336 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115904165 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.156783804 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12204743 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.131185621 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.122783216 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138868058 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136702908 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.134053154 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107685947 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.091824225 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.116435899 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132888018 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.077145442 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.095964296 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.083998346 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109069824 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101453991 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.088269876 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146879832 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129733165 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.114924881 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.116770005 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099763972 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.14884919 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.077129668 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128741179 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.119489618 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096873532 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.153968213 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153921613 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13264343 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100384171 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138144968 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.072067685 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.077705489 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.091866274 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.266798806 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.085179584 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.086327656 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118343916 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.152549697 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134516426 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142659564 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129007869 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127104811 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.158639506 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.073774786 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.123261513 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154802081 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127954619 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.109918918 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.095155616 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.104598883 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.149465008 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113797501 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187218376 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11589486 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123598947 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153329483 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.104652236 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.084753956 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105073927 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140427244 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107643634 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.145195861 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.100565499 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089615942 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109799263 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.07603655 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.101202706 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129143154 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122686477 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141469102 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.120220208 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138193918 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.081823812 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120650277 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.123736054 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122549679 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.065046639 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119726505 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161593202 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.095523792 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117862548 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153865844 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.079721865 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.13561362 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.180384857 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.29438819 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.087825968 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11118104 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.125063935 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.131404406 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12224372 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.143337372 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108778022 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.139096883 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.111810875 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.088542137 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.091128451 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.100540913 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108867409 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.097656025 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.108524572 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.11673944 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.098082685 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134517884 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105870743 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111629576 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118415487 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.099871651 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.092478034 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097848772 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178871175 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121383811 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172145085 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.101589402 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.145718637 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164569128 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.075992217 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080508876 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.079513705 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.14092043 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085425574 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13188614 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.107948424 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118391156 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127675425 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144220527 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.096614319 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.069927231 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109409612 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133364619 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125607342 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099158111 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.105138707 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165082915 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.101870606 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.079784665 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.114245563 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116794727 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103776281 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173634926 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.063194575 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105518516 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.220859882 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.083172905 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.130307697 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.156706723 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.084916057 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.10691612 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124553939 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114539177 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.130269734 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102581259 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110994754 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.13069037 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.15264679 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130096771 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.091608693 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113325631 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128925332 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158363595 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107114248 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.098015646 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173771192 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154074269 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.160326867 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.089058261 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118466756 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114860897 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108918082 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139206227 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.084583596 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163847312 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083281058 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.13769635 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104656904 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09042548 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13047972 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.109858729 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089340515 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14913599 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118788746 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083912004 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078569587 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118822106 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119952161 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106612842 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.076483329 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139199039 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.074322825 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132773809 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161545388 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084630737 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107572189 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.096157724 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.07994971 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.25465165 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105769295 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089388543 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.102800217 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176780083 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.088634509 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151475586 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135536442 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114310667 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.13852933 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107611451 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.645568422 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.082205331 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159869973 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.122320643 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18089326 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.105794209 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121398483 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.115153021 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126310606 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.149783287 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109359865 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.184163977 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137978128 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.120978219 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.082522078 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104937796 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10480885 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.089078177 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108941762 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113077011 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115874389 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.093639648 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.117249222 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125629557 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.083400201 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.097500803 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157291143 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.119648203 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1447958 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.141221839 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.086837621 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117503657 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138550366 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080710708 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.121372279 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.152245664 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106904197 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10068222 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.083950874 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.103615738 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.303882597 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.075465716 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164993941 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126780823 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.11510428 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117534382 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.117242317 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134978631 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109122255 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123630016 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097250233 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.11391758 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.119546188 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.086943967 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.081326716 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110693441 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117248677 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.10274083 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.102948713 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.103827291 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157903616 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.076453606 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101921344 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116549814 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148320319 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176892212 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.090179378 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.088392662 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122830331 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115450219 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.114309523 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122618213 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.080119567 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082968679 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.081862986 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.081196517 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.110258506 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.114420641 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115774552 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110958306 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168925076 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.08712604 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.234816642 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.097416354 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106632122 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.071276722 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.079372899 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096994054 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099432055 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108105852 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.11014019 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159942946 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.096248772 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.090403104 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091262743 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.074432023 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083825341 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.127687644 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111198731 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.264967552 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102510193 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.065560657 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110244488 seconds)
  done (took 60.134657323 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.10899925 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.083986844 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.095096489 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.145625735 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.123995282 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.203730508 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.155300443 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.189596199 seconds)
  done (took 2.720819678 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.069264391 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.097541459 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.107397498 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.0877495 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.07160127 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.073188251 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.23999935 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.086045727 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.067697695 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.101271109 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.081279669 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.070137527 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.434521244 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.069684556 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.071726213 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.063453242 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.068328074 seconds)
  done (took 3.466231749 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.389684954 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.617051243 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.352893891 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.07400329 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.430845432 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.08925832 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.122962052 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.132644695 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.074962114 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.535677436 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.404564176 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.125039339 seconds)
  done (took 17.963910459 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.077424824 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.071228688 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.084988603 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.085899235 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.073902209 seconds)
  done (took 2.007984777 seconds)
done (took 108.182856365 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.083104685 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.603922917 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.056122177 seconds)
  done (took 2.300462848 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.084319078 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.087099483 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.086521902 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.083476009 seconds)
  done (took 1.96139178 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.07493781 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.077052029 seconds)
  done (took 1.765378832 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.233165477 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.164578705 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.10089912 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.083883375 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.080189948 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.08066575 seconds)
  done (took 1.870742375 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.073902664 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.075537788 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.073833559 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.076702254 seconds)
  done (took 1.924578465 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.077881062 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.054370005 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.057795644 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.060702835 seconds)
  done (took 1.877547492 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.087954899 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.08070187 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.079608833 seconds)
  done (took 1.873349321 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.103734402 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.087758525 seconds)
  done (took 1.814572352 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.082848027 seconds)
  done (took 1.707650347 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.096232603 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.101938393 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.133745546 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.113662624 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.142864405 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.110280088 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.085848846 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.086517242 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.076963532 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.087502352 seconds)
  done (took 2.658964861 seconds)
done (took 21.947754159 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.080697747 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.359704929 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.362153066 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.091512112 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.674313163 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.359982173 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.976085017 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.09815843 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.120674415 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.071780371 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.090105096 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.651437888 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.960715034 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.319672098 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.952749177 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.32261597 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.656144701 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.07336753 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.072178403 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.072144739 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.960989102 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.071974802 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.072557023 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.073408221 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.656689429 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.377410535 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.073097708 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.323519079 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.072348493 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.07477482 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.360614467 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.072906239 seconds)
  done (took 16.169046391 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.070950829 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.120820849 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074654724 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.085060059 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.074123891 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.072710077 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.075057787 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.069860967 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.121105114 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.071018199 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.085812643 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.068506603 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.07247413 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.084740842 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.088139376 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.069519034 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.070596128 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069361137 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.069483583 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.069354525 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.088059927 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.069248884 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.070613756 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.073071682 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.072776464 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.085269694 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.073122875 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.072888041 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.07329102 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.074783287 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.075426049 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.073339257 seconds)
  done (took 4.119450238 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.116813205 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.125471118 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074758339 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.104473552 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.115584423 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.074133099 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.149158322 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.098084335 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.12787175 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.070524769 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.0868479 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.069198891 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.103826818 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.072586162 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.091594995 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.07042266 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.069952841 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.06950684 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.069443342 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.069695105 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.089205576 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.070017982 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.070416782 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.072731824 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.072240744 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.084854888 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.072903449 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.073121205 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.072965518 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.074584021 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.075975941 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.073204684 seconds)
  done (took 4.367412161 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.073800581 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.076509824 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.084555169 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.089027465 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.073423285 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.075509381 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.07704243 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.074518996 seconds)
  done (took 2.261270225 seconds)
done (took 28.550120146 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.080742366 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.070613149 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.076046146 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.086544641 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.077492259 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.08337655 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.0711706 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.080011429 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.076766055 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.077419218 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.078897449 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.071589394 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.075626807 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.070934169 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.07779752 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.071133449 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.083946562 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.076730177 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.083439025 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.083841583 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.073361553 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.077088881 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.078488266 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.083441838 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.083589215 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.082842927 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.081347076 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.07672031 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.073195896 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.074467828 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.081184547 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.088736235 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.071759252 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.083032095 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.071280693 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.071323412 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.075077629 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.071544009 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.083890932 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.081133391 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.073370961 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.080834666 seconds)
  done (took 4.885520243 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.089533748 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.096909764 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.089638265 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.066500967 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.07215343 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.069741626 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.094200894 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.064315464 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.063212208 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.093056513 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.059651822 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.063911691 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.066989098 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.054409486 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.062235884 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.057551954 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.063092255 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.056366092 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.06164162 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.061032601 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.092178073 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.055102986 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.079013769 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.064543259 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.057110527 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.062443661 seconds)
  done (took 3.461488659 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.0767255 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.086601191 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.090602653 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.131211625 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.106461559 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.080625035 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.079780014 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.096290679 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.090271564 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.068305241 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.07218354 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.094621709 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.090871355 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.075079942 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.068754704 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.086971745 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.08414911 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.070860405 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.07432189 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.095789305 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.088216277 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.087081219 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.09894917 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.086397515 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.070884058 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.074065697 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.075433991 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.086271418 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.076624766 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.081744325 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.075844303 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.075511446 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.073929709 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.083563063 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.075620545 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.073843422 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.097005005 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.078600193 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.080241383 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.069225105 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.07695704 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.069649981 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.09339859 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.12667287 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.070441953 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.078075611 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.075614295 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.081415737 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.071415473 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.092319331 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.083231547 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.07073603 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.074915931 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.070400639 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.071427068 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.085423725 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.073698957 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.073775694 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.080871962 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.077690446 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.094811177 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.073329133 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.084383427 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.068343202 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.076551009 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.069556134 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.071736954 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.070421831 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.099933514 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.072743753 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.116008912 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.072552349 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.072432218 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.081182606 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.078871718 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.076604632 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.072331909 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.086732172 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.082239305 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.075188176 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.080748415 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.07470536 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.07449632 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.093272183 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.071383869 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.071799727 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.070058677 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.074352545 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.072160115 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.070241933 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.08195844 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.068008362 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.071507526 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.086059257 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.070794481 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.071727866 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.074532277 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.073516407 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.067807625 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.07903025 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.072986243 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.069088912 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.077874309 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.068845244 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.071117664 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.080789388 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.07458494 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.067217374 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.072589989 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.074434564 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.069096295 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.070126621 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.071065655 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.070682656 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.077274988 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.075078648 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.073674236 seconds)
  done (took 10.903596873 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.16739006 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.159990386 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.072755511 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.154859123 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.077708211 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.082528746 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.15664651 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.100086033 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.072171769 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.072541226 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.072967842 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.116455072 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.11228536 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.127232847 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.083919785 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.072411029 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.089185778 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.121436923 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.162316046 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.152596528 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.08651897 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.078122365 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.072585101 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.073347271 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.074792404 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.083250867 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.089350651 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.07786345 seconds)
  done (took 4.545941682 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.081063842 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.106284629 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.075379502 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.091367121 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.0930535 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.068717618 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.071447931 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.070845755 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.082918064 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.079260117 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.068700393 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.074095048 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.075399007 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.072188365 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.069409059 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.076187369 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.075656388 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.070249113 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.072180412 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.074340712 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.07966709 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.093147325 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.072877747 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.068336394 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.074049984 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.068646944 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.064650874 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.085803518 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.068967528 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.096859924 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.067577492 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.074045171 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.083571464 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.070174344 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.069066118 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.069343357 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.068981598 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.068825311 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.071182862 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.06728816 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.067344934 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.059203602 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.068019088 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.080760979 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.076062383 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.057599833 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.073884476 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.074161933 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.073852336 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.066062844 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.071834705 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.072113801 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.072079363 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.076656231 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.072867745 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.073918884 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.06997117 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.075340634 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.077699814 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.068769823 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.06681462 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.06743998 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.073246256 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.066397979 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.077414077 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.07510787 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.067331428 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.06888611 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.071332852 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.0761088 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.070061957 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.076094865 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.068867914 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.073617869 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.076931374 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.073536833 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.072962778 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.070488696 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.071298371 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.072449554 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.059425091 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.071700916 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.057034547 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.075143294 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.069390374 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.069571846 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.071511268 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.076582402 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.083734581 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.072881535 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.078138486 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.070460319 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.068793163 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.074366106 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.064822165 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.075055615 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.087876992 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.086939579 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.071660539 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.069406892 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.085784286 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.077163883 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.067823546 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.05704637 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.073707037 seconds)
  done (took 9.383750419 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.091359364 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.071764454 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.085397126 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.09307392 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.088179868 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.075705718 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.078347501 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.070807029 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.084176013 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.077117613 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.080715948 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.072092116 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.082096105 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.081166264 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.074094897 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.082036569 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.076202911 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.08932226 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.086982384 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.072338545 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.080260498 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.084754781 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.094885408 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.086438247 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.085117406 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.086896329 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.094948954 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.082184205 seconds)
  done (took 3.992543826 seconds)
done (took 38.803226491 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.730478222 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.896278294 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.720087493 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.083144183 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.871014701 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.737234913 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.928780946 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.712895399 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.993069174 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.757281055 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.922167039 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.883745609 seconds)
done (took 64.888472828 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.793324178 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.852566996 seconds)
    (2/2) benchmarking "String"...
    done (took 1.943718786 seconds)
  done (took 5.45217883 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.929326022 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.284465146 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.968364297 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.71564461 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.723189296 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.057157996 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.544564146 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.22663794 seconds)
  done (took 30.173191922 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.835750793 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.943065138 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.407367472 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.432233824 seconds)
  done (took 15.3285992 seconds)
done (took 62.416697747 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.725736332 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.767860598 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.730609699 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.700946986 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.77518892 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.737876078 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 7.308962934 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.784743252 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.718763017 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.707264914 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.719483377 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.146795262 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.720873965 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 7.200899673 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.720451054 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.727127369 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.787006906 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.314495577 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.874807782 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.73756891 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.72974087 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.727595466 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.721553655 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.72806348 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.733609253 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.716665576 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.111703933 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.714472401 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.332189858 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.717477918 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.747716285 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.264684832 seconds)
  done (took 202.805564502 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.718552664 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.536505416 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.596462845 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.759399825 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.060376853 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.90158804 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.807721992 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.12073561 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.724070538 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.719191255 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.893093067 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.71922373 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.903644928 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.6704199 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.748122003 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.798539448 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.884968286 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.928218387 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.753466659 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.893973609 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.725948082 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.720750254 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.661984684 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.890894554 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.764196493 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.804994409 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.882487876 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.746998883 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.914240836 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.85720199 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.764671076 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.730070535 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.942917571 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.594981121 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.72390863 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.732098678 seconds)
  done (took 167.252927771 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 2.10131892 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.723688091 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.719972675 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.72303415 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.732224475 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.720448923 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.841562278 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.848106704 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.322182169 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.531332312 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.773926103 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.541662415 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.721069587 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.788072673 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.734368131 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.724483642 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.738592837 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.747389534 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.725924035 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.721676511 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.845589652 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.736559236 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.979181097 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.729033386 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.720761887 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.728173325 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.091294291 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.724197277 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.72713298 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.976859863 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.72284857 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.722220319 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.568812655 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.254391109 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.805828615 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.722587337 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.725426771 seconds)
    (37/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.722934081 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.723147544 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.935952732 seconds)
    (40/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.720681476 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.721569718 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.722232536 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.72414744 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.856340803 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.725535914 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.843039908 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.726262509 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.203313361 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.721182138 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.720541994 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.594572643 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.315533191 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.720546894 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.721978371 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.7240638 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.723346567 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.724717376 seconds)
    (58/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.725114585 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.725719021 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.550726056 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.797429077 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.729739913 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.725353594 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.727339914 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.722165164 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.811694592 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.724187211 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.079701659 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.784502387 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.960527526 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.841648626 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.727403409 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.789000085 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.815020913 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.723925899 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.722146879 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.722824295 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.721731701 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.80560617 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.723856156 seconds)
    (81/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.722753503 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.855690854 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.735427399 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.725274447 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.777371334 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.792861177 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.725683241 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.56913507 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.727890758 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.725355882 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.98757225 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.789698025 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.72646711 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.724500617 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.727596208 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.864745842 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.847099095 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.437111262 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.731952144 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.537305811 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.728931705 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.878547062 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.729862781 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.870710201 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.726303312 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.807598176 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.731993694 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.728768944 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.727767867 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.75714009 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.727089532 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.786013994 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.728929771 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.100675242 seconds)
  done (took 396.844276891 seconds)
done (took 770.713773369 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.421545507 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.373892995 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.485699645 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.397957343 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.372135432 seconds)
  done (took 13.713716291 seconds)
done (took 15.376643593 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.816964853 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.823848523 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.754195924 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.822769481 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.753669566 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.817014491 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.806008212 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.755584208 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.786141599 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.757631435 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.790281249 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.753755285 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.741023633 seconds)
  done (took 24.8441665 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.958975815 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.965807983 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.800907407 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.964374853 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.776717179 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.963168691 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.901156466 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.884887092 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.885102611 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.7462488 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.743238048 seconds)
  done (took 22.254332165 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.972312959 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.971379078 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.805436826 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.97082257 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.778785083 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.968001126 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.894340611 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.884663181 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.887605583 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.747200376 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.740957067 seconds)
  done (took 22.287877094 seconds)
done (took 71.050834445 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.736304913 seconds)
  done (took 3.404299391 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.765419274 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.918123311 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.749999691 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.742789107 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.739052704 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.738205111 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.744820641 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.73919306 seconds)
  done (took 15.805365457 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.735585972 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.738449114 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.738457294 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.734443223 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.737309482 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.734430644 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.738803708 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.740098171 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.736634199 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.736223971 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.741168859 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.738038855 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.739715006 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.73843026 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.736397225 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.736567597 seconds)
  done (took 29.467873787 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.736630586 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.737552904 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.736244114 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.736738336 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.738248647 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.739210123 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.739578336 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.73326734 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.73758592 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.737166391 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.740695579 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.734593431 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.736581411 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.737004619 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.736928208 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.737202568 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.735506369 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.736873211 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.743023899 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.735621622 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.739820606 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.738717491 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.738898245 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.734987551 seconds)
  done (took 43.368446349 seconds)
done (took 93.711597545 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.67158111 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.150798549 seconds)
  done (took 8.488599671 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.740461202 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.73881286 seconds)
  done (took 5.185350767 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.74005982 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.743081928 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.73904196 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.739971745 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.739803803 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.742258422 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.742030487 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.741797366 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.739718978 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.742391414 seconds)
  done (took 19.080320766 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.740977862 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.741702755 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.737221136 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.743275157 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.740990111 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.740765357 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.74052618 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.740520709 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.744263508 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.739049297 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.743244617 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.739827781 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.742220241 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.740332012 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.742298508 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.738212232 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.739200643 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.739931597 seconds)
  done (took 33.004678565 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.74263722 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.742913395 seconds)
  done (took 5.157592381 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.740711067 seconds)
    (2/7) benchmarking "second"...
    done (took 1.741681943 seconds)
    (3/7) benchmarking "month"...
    done (took 1.739241187 seconds)
    (4/7) benchmarking "year"...
    done (took 1.738853181 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.738795481 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.740323232 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.740620493 seconds)
  done (took 13.853758973 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.743134474 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.900517234 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.966619552 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.37120625 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.747110423 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.747445625 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.702102455 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.746822928 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.747489753 seconds)
  done (took 19.346217775 seconds)
done (took 105.784448323 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.543326138 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.735376991 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.044856926 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.798204877 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.758489617 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.080975008 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.747507961 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.045159612 seconds)
done (took 42.426957331 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.745461583 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.283353346 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.3203987 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.015624537 seconds)
  done (took 12.290759114 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.722123203 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.280189521 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.783947128 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.396828234 seconds)
  done (took 20.047872584 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.104401412 seconds)
    (2/2) benchmarking "read"...
    done (took 2.094412644 seconds)
  done (took 5.877900731 seconds)
done (took 46.636616578 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.743187094 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.743433414 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.741067586 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.744208898 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.741363964 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.742991222 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.746195357 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.743600763 seconds)
    (9/24) benchmarking ("zero", "Float32")...
    done (took 1.745349575 seconds)
    (10/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.744399292 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.746160568 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.744699111 seconds)
    (13/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.745095748 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.743295366 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.744034867 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.743351763 seconds)
    (17/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.743396172 seconds)
    (18/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.74208607 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.744006767 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.744131364 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.742242577 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.746009282 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.742988212 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.742636776 seconds)
  done (took 43.525402462 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.747643212 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.744859984 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.745914464 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.74573463 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.743180473 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.745924485 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.747404103 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.743347954 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.748427628 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.747777709 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.740789913 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.746410328 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.748399417 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.747865314 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.749930732 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.747500827 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.747621286 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.745822748 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.748248968 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.743399435 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.745648154 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.742315657 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.743271376 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.748411762 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.745216445 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.751676171 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.751894157 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.746873728 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.75089193 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.747161202 seconds)
  done (took 54.07598761 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.754720042 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.752328195 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.747450224 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.749501339 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.748795696 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.746903536 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.748139144 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.750866881 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.74937083 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.748743761 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.748415874 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.749151438 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.749002015 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.74740685 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.747844834 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.746784026 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.747392255 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.747764259 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.751198952 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.751756063 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.74991943 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.750789791 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.753374001 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.750473871 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.748749518 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.748362114 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.749970818 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.74814689 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.748583789 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.747154644 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.74908843 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.750571233 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.752787156 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.751157455 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.753106712 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.751957062 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.7569619 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.757031341 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.749906011 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.750542824 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.750122662 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.750034085 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.749186713 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.751369447 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.75231572 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.752935395 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.75289362 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.753800868 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.753569731 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.750428369 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.753554007 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.752641161 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.750005651 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.749175421 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.75065386 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.750843736 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.753199412 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.751071319 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.75299365 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.752610975 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.754262777 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.750481386 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.750996228 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.75151117 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.751330519 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.752687873 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.750291178 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.751121136 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.753719037 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.753056787 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.753248632 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.754061498 seconds)
  done (took 127.743658033 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.753574229 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.751354297 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.747994311 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.747897436 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.747660304 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.751540584 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.747598708 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.752106396 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.749633997 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.754206385 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.752887807 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.750453428 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.751459396 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.752599786 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.753305991 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.74823635 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.751052197 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.74799128 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.75110466 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.752561256 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.752334953 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.752989688 seconds)
  done (took 40.205227905 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.754889965 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.755335721 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.751814826 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.752274042 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.75004067 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.75128985 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.753473512 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.752915562 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.751272679 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.749672042 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.750922732 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.754155633 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.75361104 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.752370512 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.753096465 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.751585418 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.753908095 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.749964417 seconds)
  done (took 33.22786455 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.751398056 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.750320087 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.752554971 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.751805431 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.753167366 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.755864631 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.752697434 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.756128568 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.75567259 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.752738508 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.75324798 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.751470029 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.752597182 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.751009788 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.752185664 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.751631068 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.75532434 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.754013142 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.755843624 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.7538065 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.75425675 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.756295379 seconds)
  done (took 40.257440004 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.754155371 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.754407428 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.751421577 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.751515939 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.75011448 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.755033907 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.755959266 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.753216366 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.756530987 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.756767916 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.753729507 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.756207236 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.754965732 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.753808843 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.750452888 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.752501596 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.755228727 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.752333603 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.755520537 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.754238377 seconds)
  done (took 36.763287935 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.759348608 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.757774566 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.757670084 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.757537939 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.755699831 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.756321943 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.75660395 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.75684021 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.756958404 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.757321811 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.757307975 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.759908879 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.758750029 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.760921813 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.759877631 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.757355073 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.75769612 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.756535841 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.757662784 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.755925138 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.757030465 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.758736186 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.755987478 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.759083892 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.758121647 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.759277418 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.760202876 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.760642943 seconds)
  done (took 50.911113037 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.75685659 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.754733852 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.753980882 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.752871604 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.754960292 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.752846705 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.75611739 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.756573244 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.760129644 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.756949602 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.758676437 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.758308627 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.757507963 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.756650513 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.756469271 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.756896352 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.757044683 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.754500343 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.754949153 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.75630996 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.761372251 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.760217346 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.759813298 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.75718371 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.757607039 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.758905885 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.756397375 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.754598214 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.757882435 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.755843503 seconds)
  done (took 54.391610608 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.777277645 seconds)
    (2/2) benchmarking "in"...
    done (took 1.778731337 seconds)
  done (took 5.242695373 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.757239093 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.761512304 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.760076749 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.756799536 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.75510425 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.757219512 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.759247548 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.756296764 seconds)
  done (took 15.754265015 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.757810105 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.760838586 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.761504554 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.761006028 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.762690599 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.762260484 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.767707826 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.76037558 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.760175296 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.760397742 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.766470432 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.765458276 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.762912984 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.762224721 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.760866225 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.762086166 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.762060965 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.763764333 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.764298963 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.759732819 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.761269945 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.760919936 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.761342855 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.757805328 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.762307818 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.768935071 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.765666427 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.76152156 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.76227531 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.766234053 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.761930403 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.760386217 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.762081178 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.761078882 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.760216079 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.762769849 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.765643536 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.759317139 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.767347675 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.764555017 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.762754496 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.75997442 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.767503414 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.76482965 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.76394868 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.763305794 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.761380335 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.759399893 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.760834067 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.763745199 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.765770241 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.762219918 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.762339292 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.76674026 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.764378603 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.769066962 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.76503304 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.765316173 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.768563942 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.770420715 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.774755127 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.767849458 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.764107486 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.764588612 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.772475519 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.786987021 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.769149391 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.762177844 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.763352268 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.764054465 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.768440112 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.773928676 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.772236505 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.762271536 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.763882241 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.761964775 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.766596282 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.765556488 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.771638443 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.76658331 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.766241849 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.766045159 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.773859086 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.784038798 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.762134185 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.766304285 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.765515142 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.763980677 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.765494685 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.773671717 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.767140124 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.765771923 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.768289925 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.76902061 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.76781929 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.765770183 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.762638236 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.764690806 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.762056239 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.764580589 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.766077963 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.769240495 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.775585768 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.769082455 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.767707377 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.77351496 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.768402404 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.764061144 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.77067068 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.765530614 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.764494866 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.765059151 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.769960534 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.762562535 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.769378413 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.775348898 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.771061432 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.767619266 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.767919843 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.769977971 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.775164567 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.789453996 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.767003662 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.764709603 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.769816636 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.776964993 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.768361157 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.772093075 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.770413403 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.766796428 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.766147153 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.768634745 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.768188854 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.767519089 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.76676511 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.76782868 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.765702608 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.764870031 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.768017653 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.770918562 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.771994404 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.7693978 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.771116786 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.771126379 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.7685086 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.768003953 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.773797073 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.766604789 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.767890812 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.769844122 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.766154019 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.769742168 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.770382997 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.772220517 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.77110876 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.771927253 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.768740162 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.769355203 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.769375029 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.76775137 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.768044548 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.768744212 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.772261412 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.770892812 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.773353451 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.768225457 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.767057089 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.770851941 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.771993537 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.770233782 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.768509974 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.767029769 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.770976984 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.776128485 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.768398356 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.771301228 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.772554275 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.773317806 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.773048198 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.771465659 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.776401793 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.777367145 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.77006114 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.775682544 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.770800589 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.77047016 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.769412385 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.768984553 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.769533307 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.77247489 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.774372047 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.779128398 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.783506814 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.778255953 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.771243279 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.773424194 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.769795161 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.774526093 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.773805524 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.769917629 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.770908673 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.771778966 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.773457271 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.774389221 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.775315663 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.772842332 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.771342019 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.772795051 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.770280884 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.772819986 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.769496909 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.77090743 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.771997886 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.769563155 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.772072433 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.774136771 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.771724761 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.768900978 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.771661283 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.772322891 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.772244539 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.774058068 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.775872381 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.768908355 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.77087286 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.770872367 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.774583845 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.77242732 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.773862112 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.77397755 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.772735102 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.778080629 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.770192517 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.771298121 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.776411512 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.772525767 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.76917904 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.774678779 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.772145334 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.77145828 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.775663099 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.780435019 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.773724703 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.774938217 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.7723146 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.772673973 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.772520118 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.775758892 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.767391286 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.771071472 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.773900174 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.774446335 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.771424376 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.774894978 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.774907315 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.776226551 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.775841783 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.772916594 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.772513313 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.772249699 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.774830154 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.774155445 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.773174116 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.778898237 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.785181375 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.780489587 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.776760353 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.777303007 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.777223708 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.779242029 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.771933476 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.774852737 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.77539848 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.783745236 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.782946444 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.780055158 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.778187357 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.777603547 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.781623055 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.777406951 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.780221327 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.774867615 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.77317156 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.77379324 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.773593906 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.771488073 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.773718798 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.776240288 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.777858598 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.778846277 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.779976278 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.778249152 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.776281034 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.776024247 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.775425492 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.774262489 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.77392609 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.775560378 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.777963291 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.775336282 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.774674535 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.777039362 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.783540848 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.776525742 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.778520099 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.775171284 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.777561073 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.773644189 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.776196948 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.775767414 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.778189143 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.782636372 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.776629465 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.784611593 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.778247609 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.787333611 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.778581483 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.7811594 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.784566411 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.773784075 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.774418319 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.775965113 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.776087588 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.782019763 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.776583155 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.779933946 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.784044442 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.778512446 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.779621759 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.776485933 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.779825766 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.776955879 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.777107172 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.781756943 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.776996394 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.779413109 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.778460113 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.774412004 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.780439719 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.778026815 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.779461848 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.782517177 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.780798139 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.778360906 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.776954148 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.776924879 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.776820849 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.778508055 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.775982853 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.775501838 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.779527256 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.784420544 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.780847949 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.784361406 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.78033446 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.787371876 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.778714485 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.784528083 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.77943614 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.779476377 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.779058297 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.77791183 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.781695053 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.779848066 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.780206519 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.782038162 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.783549692 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.784946964 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.779861024 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.781949178 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.779772419 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.779389076 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.776722992 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.788707787 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.803452551 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.780988814 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.783137554 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.776164509 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.780791099 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.786264847 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.779909537 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.778807687 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.783991705 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.790728568 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.788845371 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.779141674 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.780901314 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.781039059 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.780419972 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.779511334 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.780014062 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.782566431 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.780971736 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.780527154 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.781088375 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.78250951 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.7813842 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.781605536 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.782159099 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.781250123 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.791267359 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.780541718 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.783414316 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.78144829 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.779929536 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.78065325 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.780078224 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.783870449 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.780844173 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.781538463 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.78404332 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.788169708 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.786194046 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.783580718 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.781559782 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.783300296 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.782479448 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.784053011 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.78205495 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.782000127 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.78247123 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.783471762 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.782104194 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.784437643 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.781151269 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.782419107 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.782145769 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.783095304 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.784680564 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.788488958 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.782033091 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.780590411 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.782918633 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.783728003 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.781482841 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.783890899 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.788135405 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.788014069 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.795661095 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.792540689 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.790084467 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.782616775 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.786244376 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.790161674 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.783303192 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.785007528 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.782916128 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.784380552 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.785566179 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.785839107 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.785432577 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.788272813 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.782945996 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.782800596 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.791303179 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.78460916 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.785743942 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.78443821 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.787592378 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.781580099 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.781694933 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.783847705 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.781757595 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.790542693 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.784786527 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.785608363 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.785238402 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.783145141 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.786401984 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.789670654 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.786027346 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.784015664 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.782668111 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.78511792 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.783931978 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.784554873 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.783063371 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.785283944 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.78465609 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.787847798 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.7930119 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.782392133 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.786141199 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.784340108 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.787014043 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.786444513 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.78489529 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.782537428 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.783680794 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.784916824 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.785540677 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.786529146 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.787755427 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.785294796 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.78850603 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.78796844 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.78658724 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.788321987 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.794624732 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.793323252 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.781990903 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.785452253 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.787724605 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.788689782 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.785012311 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.789665291 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.786006733 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.789648708 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.787048101 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.78705525 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.786010745 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.78925611 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.800296266 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.785918314 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.786744701 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.787020786 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.789458366 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.787104409 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.783930868 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.786180865 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.789622768 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.78952655 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.797016808 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.789020504 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.79454145 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.788017735 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.788611378 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.792810628 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.789347087 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.794331415 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.793169453 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.788845586 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.791098192 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.791693996 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.802871628 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.78875817 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.797246998 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.813765683 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.788250549 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.788059482 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.789892589 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.787920135 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.790903124 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.790429171 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.790095545 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.790275748 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.78888033 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.789363643 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.788891769 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.793452051 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.790389944 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.789094665 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.788854797 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.788824405 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.792368272 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.787608169 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.789978386 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.788949095 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.790292736 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.792035339 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.792110227 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.790770971 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.801831945 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.796444529 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.79011257 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.791671959 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.786193138 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.79196002 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.792040287 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.799006453 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.796884145 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.793009145 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.791905709 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.793378327 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.792240026 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.788535921 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.789409565 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.789499283 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.791209922 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.7866953 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.801542889 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.799008841 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.79400059 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.790706709 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.790375333 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.791873295 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.793327506 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.7920459 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.79177833 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.793847482 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.791603426 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.795762537 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.791306338 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.791718568 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.794254641 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.798934855 seconds)
  done (took 1061.184894851 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.78902631 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.788106657 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.791561804 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.790416789 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.788665559 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.789232837 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.789277961 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.788717885 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.790269329 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.788402534 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.79030447 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.787892251 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.78879408 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.790118074 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.788196772 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.790050542 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.788079368 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.790634434 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.789490965 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.791138127 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.789299605 seconds)
  done (took 39.29684644 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.791005816 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.789404966 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.78920238 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.793303435 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.79035129 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.791677994 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.79092893 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.791868267 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.792232655 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.789805552 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.792103339 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.794053823 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.788488442 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.790767157 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.790078656 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.790387707 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.792757341 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.790399335 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.79378875 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.791165491 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.794224618 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.789124724 seconds)
  done (took 41.128534243 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.795075384 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.791887396 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.793732339 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.790412996 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.79234853 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.790654343 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.794550762 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.795921974 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.793857667 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.793484655 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.793092079 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.792830007 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.800088174 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.799106227 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.796783165 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.792961555 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.937793942 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.79553719 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.796582083 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.795336532 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.79108117 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.799167609 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.792241055 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.7895603 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.793476653 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.795842422 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.796852173 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.796327187 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.796259984 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.795551155 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.800146422 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.795112237 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.795430275 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.795119148 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.794410239 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.796501557 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.799172752 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.79735137 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.790680358 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.794953929 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.80391278 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.814848809 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.795651586 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.799695546 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.797218577 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.796806982 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.799455431 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.805622291 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.793282985 seconds)
  done (took 89.866660278 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.795513393 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.7961031 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.795267998 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.797215864 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.795854853 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.795430378 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.795818829 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.796080335 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.793727632 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.793191301 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.795785796 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.793262333 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.793152557 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.79498326 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.797938831 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.794234186 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.793893115 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.793578813 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.795589458 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.793883744 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.794441784 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.794957675 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.796005345 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.792487844 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.796601939 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.794747446 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.79653613 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.797797209 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.79470996 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.792928125 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.798121884 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.798501715 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.798501586 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.794395061 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.79365054 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.797706508 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.797167368 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.791734324 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.796692863 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.794169962 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.798365104 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.796678936 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.799170516 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.798256586 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.795465264 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.795341659 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.796089495 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.795312723 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.795638499 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.796551909 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.798492495 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.795760503 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.799710984 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.797116777 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.796290128 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.797661092 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.794060833 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.79675304 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.798131425 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.79674443 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.795263408 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.800105266 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.796137619 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.799768856 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.799762452 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.795700904 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.796120747 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.799318023 seconds)
  done (took 123.85856408 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.79911428 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.800182377 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.800697885 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.800377296 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.801220775 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.800269637 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.800420017 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.800759303 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.799888184 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.80004958 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.80238494 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.801268591 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.800272261 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.800011537 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.801206733 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.802496364 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.799972616 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.803591013 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.799126702 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.801456061 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.800119182 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.799558625 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.800784878 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.80253748 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.801645688 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.802586317 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.802072701 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.802369915 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.801820939 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.80065245 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.803018041 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.802320358 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.802247779 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.803627257 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.800327694 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.800991369 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.800983748 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.8026708 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.803761903 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.801695206 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.802118385 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.80157385 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.801538999 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.801361837 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.802587684 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.801079484 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.801255803 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.802544002 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.802075222 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.801239941 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.80392848 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.801668433 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.801746394 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.80215995 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.802283389 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.802275481 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.802451413 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.802288469 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.80385137 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.801526769 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.804042156 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.799997472 seconds)
  done (took 113.425290407 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.802986669 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.801185283 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.798020138 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.800255326 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.801758256 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.801748915 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.802912299 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.800095894 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.803925605 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.803341327 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.805153648 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.800493718 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.800718933 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.803718142 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.802603504 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.803037485 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.800111016 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.801194533 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.80382345 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.802801728 seconds)
  done (took 37.772816285 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.79972843 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.803787196 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.79922932 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.800967621 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.80314998 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.801571615 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.801696459 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.804307211 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.801735645 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.803089092 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.803934635 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.804673391 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.802102038 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.799768586 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.802895261 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.802300883 seconds)
  done (took 30.564357285 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.802259233 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.802361098 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.805734686 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.802249075 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.801485007 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.80356666 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.804520207 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.80188585 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.798478861 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.803187013 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.804750082 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.803078008 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.806046894 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.805496462 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.801303177 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.803202179 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.804986371 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.804616071 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.804759845 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.805148949 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.803529778 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.802818369 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.807649698 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.808409207 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.799915512 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.801631743 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.803062096 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.803149994 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.805267562 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.804375313 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.805007692 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.800159871 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.803479877 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.80230774 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.803497616 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.801456223 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.803992119 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.806860303 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.805432285 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.804591428 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.804850785 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.804129683 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.805437238 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.802888546 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.802764951 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.806011512 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.803316141 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.801147301 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.802166244 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.805410622 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.803654398 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.8043769 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.806999733 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.804538547 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.805909567 seconds)
  done (took 100.942500529 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.80597399 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.806153926 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.801148435 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.807794671 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.80632519 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.804618546 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.803177193 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.803901082 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.801553821 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.806236838 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.804481364 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.804938653 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.801415701 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.807275829 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.804259521 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.80453712 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.802309308 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.806082387 seconds)
  done (took 34.216727692 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.805024985 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.804844872 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.808538923 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.80386436 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.802526188 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.808189576 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.80259426 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.807679682 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.808473694 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.803824589 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.802921697 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.806568712 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.806542183 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.808878485 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.803821221 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.802938289 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.806987402 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.807122066 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.804913758 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.806511912 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.809999538 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.807210239 seconds)
  done (took 41.463189613 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.804894025 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.805208329 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.822925508 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.827947746 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.826734151 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.84188139 seconds)
  done (took 12.663052749 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.806459021 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.807929576 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.804291839 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.810353102 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.8072768 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.807884478 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.805153535 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.804631222 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.808655572 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.80593519 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.80661638 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.809901672 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.810452919 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.808783438 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.810606108 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.808722972 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.807849113 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.811373504 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.805624447 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.809161079 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.809447506 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.811382014 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.808627693 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.805577235 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.811045962 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.807597575 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.811083665 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.808415628 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.805788359 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.813229552 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.813380647 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.81027545 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.808404089 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.809404026 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.806386267 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.810652822 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.808195221 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.809940531 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.808468081 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.810542956 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.80797973 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.811414904 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.810542789 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.807832762 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.810139732 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.808751345 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.80822454 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.808303248 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.80724075 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.810215124 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.80806905 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.80859583 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.811322819 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.810286884 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.811177334 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.813429832 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.808145955 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.807532711 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.811384111 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.807956438 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.807380572 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.812035715 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.810335406 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.809085415 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.810875322 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.810150294 seconds)
  done (took 121.131483653 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.809624483 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.811708473 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.808864127 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.811136948 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.807498901 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.808235911 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.808775577 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.807844204 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.808908379 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.811493441 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.811022351 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.811440809 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.80941832 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.80909829 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.810743011 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.809562659 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.809383001 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.811412549 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.811161775 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.811083379 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.812551628 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.811836619 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.812774171 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.810706662 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.812666742 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.813437154 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.812532874 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.812607975 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.811626898 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.813668549 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.812732275 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.813921006 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.811106428 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.811124316 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.810869962 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.812054931 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.812240266 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.812622508 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.812585474 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.812927027 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.810254165 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.81434578 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.813686001 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.812971345 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.814757729 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.811654166 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.812984 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.815632431 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.812132418 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.813528842 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.812348558 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.811134038 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.812559352 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.808806606 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.812510465 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.811850306 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.814529424 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.813706621 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.815051286 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.81714566 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.812413156 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.811193683 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.813146331 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.812822105 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.812047241 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.811845672 seconds)
  done (took 121.320773045 seconds)
done (took 2472.606427118 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.868668798 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.866573843 seconds)
  done (took 15.476887729 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.976080878 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.931002317 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.812810161 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.824065157 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.813989372 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.836707952 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.830214474 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.813350598 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.813122558 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.81187406 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.813766875 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.999574405 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.80878032 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.811990646 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.812883128 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.907186315 seconds)
  done (took 51.362461459 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.813650246 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.815801218 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.824632473 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.819359718 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.814723325 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.829522719 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.854283181 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.818459262 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.857709998 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.829021612 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.889826362 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.830657777 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.817318886 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.865677471 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.828391342 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.833776126 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.911975486 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.892545233 seconds)
  done (took 34.888513915 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.895544325 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.821376561 seconds)
  done (took 10.467644512 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.829738667 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.869691465 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.814175068 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.818538729 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.821585848 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.842090057 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.826475811 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.821331024 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.82329882 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.843222887 seconds)
  done (took 70.056079842 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.823300264 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.81813026 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.818921647 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.815910372 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.809042578 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.813845741 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.814673912 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.81535321 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.48187431 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.853665592 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.823897716 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.822204513 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.81811001 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.821861521 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.815897602 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.84263229 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.937684306 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.819075799 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.818173096 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.824397301 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.82058606 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.889360055 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.83257092 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.818972882 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.846844733 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.486303264 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.825945392 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.823824049 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.938072124 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.816802818 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.818014639 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.818776729 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.819680699 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.191325762 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.090844802 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.817519723 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.832425313 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.82365873 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.819149274 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.94289202 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.820135745 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.822823631 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.760932901 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.06996731 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.932034724 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.865156706 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.170960645 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.835684722 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.821556445 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.849917054 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.822806457 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.821668606 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.832720908 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.337245119 seconds)
  done (took 129.793073295 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.816613568 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.074543502 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.969635522 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.817268703 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.103969692 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.029706604 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.815896011 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.865599223 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.818596968 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.045604063 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.037159822 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.923224927 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.813317884 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.817797285 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.814210668 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.812037795 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.97596659 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.890396052 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.816445961 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.811582784 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.847473125 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.060743124 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.943036636 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.819119397 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.836993676 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.030900409 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.943949216 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.926162595 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.206533627 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.813991447 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.881893096 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.816594211 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.816830821 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.812451 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.973991416 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.911664552 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.904897122 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.816172604 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.814685269 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.814457962 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.492619972 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.012913603 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.918756157 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.961384951 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.069765932 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.022571699 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.602699843 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.812214316 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.554599623 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.982971595 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.052899793 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.049715591 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.941737743 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.816214785 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.088537315 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.814203941 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.812214448 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.051242316 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.060154299 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.91814012 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.81925986 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.81733255 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.814279118 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.067033081 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.817861573 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.915957406 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.818630066 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.818640593 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.913582941 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.919397204 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.065281934 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.030960612 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.852063137 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.118686259 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.282487457 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.066458354 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.884717912 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.050572716 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.818253858 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.813902708 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.902585228 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.674685476 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.018536934 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.069535376 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.072162419 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.856375436 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.541480768 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.815862676 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.045257842 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.04153801 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.071718577 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.057844721 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.971577275 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.122385754 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.818449727 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.817766427 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.07687491 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.957400153 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.8199787 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.1808673 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.056576657 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.397269368 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.852384736 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.133897499 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.953389017 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.81920858 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.460516439 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.820126173 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.047230768 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.864395133 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.818820949 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.819909843 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.038884436 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.802189504 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.817204555 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.517015405 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.88215207 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.821367432 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.05442706 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.818675844 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.084584122 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.820058782 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.057317215 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.88031528 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.851787431 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.994394194 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.062019237 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.820073588 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.085815952 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.069411698 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.940293735 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.093613738 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.747537025 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.822850289 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.109579914 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.821981699 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.818193503 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.997119515 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.820880083 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.045208087 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.82176738 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.107047888 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.848064934 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.97650996 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.818074801 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.074082992 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.848789633 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.867155564 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.814490861 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.948900321 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.815628798 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.680805624 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.968493942 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.812013707 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.809112554 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.342607171 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.810126273 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.967069424 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.044628397 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.833319722 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.885656882 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.482410602 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.807428786 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.896893751 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.832921647 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.143133685 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.803572578 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.016376816 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.799586945 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.340368264 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.801241252 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.046734104 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.033920818 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.801586315 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.795664111 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.703443137 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.796554292 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.791383223 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.956556181 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.622954869 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.79278172 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.994974377 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.798039285 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.923636134 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.792716693 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.875081033 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.144015595 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.786752346 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.786043528 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.786327637 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.787529523 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.785507465 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.995992888 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.818184557 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.311462234 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.925205048 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.058047959 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.105321128 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.037894335 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.83130436 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.785934532 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.033109729 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.785142863 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.850740179 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.786624998 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.809216563 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.022949474 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.786482079 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.997831033 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.070055026 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.713937866 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.837589269 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.786684944 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.785188252 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.702267546 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.941208622 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.878459574 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.787300148 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.785596599 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.904482233 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.913134524 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.002202714 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.785896692 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 4.013211261 seconds)
  done (took 889.902311623 seconds)
done (took 1203.685782588 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.787338444 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.784982588 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.77368087 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.783306574 seconds)
  done (took 28.846014632 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.792159161 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.787065132 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.789169495 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.788200966 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.789417363 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.786334172 seconds)
  done (took 12.447016243 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.853281059 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.780807703 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.783077525 seconds)
  done (took 21.130410771 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.85576798 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.171926749 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.903977368 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.213902881 seconds)
  done (took 9.858910889 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.792148954 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.788631028 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.787859906 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.790729486 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.791476408 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.793778295 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.789174595 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.792275304 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.792674665 seconds)
  done (took 17.834661581 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.129150709 seconds)
done (took 95.962733279 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.120697584 seconds)
    (2/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.852625563 seconds)
    (3/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.059260392 seconds)
    (4/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.804663882 seconds)
    (5/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.912091674 seconds)
    (6/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.264285277 seconds)
    (7/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.940456545 seconds)
    (8/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.902898442 seconds)
    (9/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.014058935 seconds)
    (10/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.959200767 seconds)
    (11/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.00511115 seconds)
    (12/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.926176943 seconds)
    (13/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.847479006 seconds)
    (14/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.154494762 seconds)
    (15/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.833408357 seconds)
    (16/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 2.879881005 seconds)
    (17/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.851415809 seconds)
    (18/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.846053161 seconds)
    (19/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.069138855 seconds)
    (20/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.822177279 seconds)
    (21/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.156007453 seconds)
    (22/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.823469702 seconds)
    (23/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 2.001207259 seconds)
    (24/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.95377923 seconds)
    (25/309) benchmarking ("perf_sum", Float64, false)...
    done (took 2.021591528 seconds)
    (26/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.906564431 seconds)
    (27/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.081611232 seconds)
    (28/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.126453679 seconds)
    (29/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.023800125 seconds)
    (30/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.843808709 seconds)
    (31/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.174901405 seconds)
    (32/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.202539374 seconds)
    (33/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.436262063 seconds)
    (34/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.82074112 seconds)
    (35/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.955967062 seconds)
    (36/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.851442967 seconds)
    (37/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.511125745 seconds)
    (38/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.936694638 seconds)
    (39/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.913763315 seconds)
    (40/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.388371491 seconds)
    (41/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.900035175 seconds)
    (42/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.432594899 seconds)
    (43/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.96408374 seconds)
    (44/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.927645202 seconds)
    (45/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.204014602 seconds)
    (46/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.934647866 seconds)
    (47/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.807410224 seconds)
    (48/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.911553641 seconds)
    (49/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.347549385 seconds)
    (50/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.824594188 seconds)
    (51/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.775969987 seconds)
    (52/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.859787154 seconds)
    (53/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.849715904 seconds)
    (54/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.89368339 seconds)
    (55/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.885216389 seconds)
    (56/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.616063117 seconds)
    (57/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.911487158 seconds)
    (58/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.934889694 seconds)
    (59/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.08973751 seconds)
    (60/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.886050558 seconds)
    (61/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.056937664 seconds)
    (62/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.75147262 seconds)
    (63/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.813472791 seconds)
    (64/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.183134612 seconds)
    (65/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.939222121 seconds)
    (66/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.850863882 seconds)
    (67/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.335236651 seconds)
    (68/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.957220804 seconds)
    (69/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.00231931 seconds)
    (70/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.963782182 seconds)
    (71/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.810261684 seconds)
    (72/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.975068859 seconds)
    (73/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.819471826 seconds)
    (74/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.977588596 seconds)
    (75/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.824973224 seconds)
    (76/309) benchmarking ("map", identity, Bool, true)...
    done (took 3.094862135 seconds)
    (77/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.158410583 seconds)
    (78/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.206703265 seconds)
    (79/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.991752673 seconds)
    (80/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.201682251 seconds)
    (81/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 6.067108542 seconds)
    (82/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.252326171 seconds)
    (83/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.507161727 seconds)
    (84/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.868356663 seconds)
    (85/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.951424091 seconds)
    (86/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.821399016 seconds)
    (87/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.291115478 seconds)
    (88/309) benchmarking ("sort", Int8, false)...
    done (took 4.819521594 seconds)
    (89/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.122383067 seconds)
    (90/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.822087608 seconds)
    (91/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.879479542 seconds)
    (92/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.032836675 seconds)
    (93/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.839410386 seconds)
    (94/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.735779447 seconds)
    (95/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.937298108 seconds)
    (96/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.081878552 seconds)
    (97/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.114072643 seconds)
    (98/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.893543166 seconds)
    (99/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.122493165 seconds)
    (100/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.828397075 seconds)
    (101/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 2.256917085 seconds)
    (102/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.835567757 seconds)
    (103/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 3.471221276 seconds)
    (104/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.908807088 seconds)
    (105/309) benchmarking ("sort", Int64, false)...
    done (took 5.510659619 seconds)
    (106/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.061133508 seconds)
    (107/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.816195842 seconds)
    (108/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.828236409 seconds)
    (109/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 7.085082049 seconds)
    (110/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.930708971 seconds)
    (111/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.284994885 seconds)
    (112/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.800014294 seconds)
    (113/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.937664896 seconds)
    (114/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.815491274 seconds)
    (115/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 3.247713668 seconds)
    (116/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.829160099 seconds)
    (117/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 8.028904912 seconds)
    (118/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 2.034730106 seconds)
    (119/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.796457481 seconds)
    (120/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 2.022917123 seconds)
    (121/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.797965746 seconds)
    (122/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 7.192886737 seconds)
    (123/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.196972591 seconds)
    (124/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.834469442 seconds)
    (125/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.939553586 seconds)
    (126/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.81190222 seconds)
    (127/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.977960182 seconds)
    (128/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.024354779 seconds)
    (129/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.03193442 seconds)
    (130/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.791559586 seconds)
    (131/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 3.118335367 seconds)
    (132/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.967696929 seconds)
    (133/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.804971648 seconds)
    (134/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.907627157 seconds)
    (135/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.891342844 seconds)
    (136/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.885335666 seconds)
    (137/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.332979159 seconds)
    (138/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.800042136 seconds)
    (139/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.078700853 seconds)
    (140/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.061492853 seconds)
    (141/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.923744535 seconds)
    (142/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.818770377 seconds)
    (143/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.97759049 seconds)
    (144/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.698016525 seconds)
    (145/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.717860899 seconds)
    (146/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.939916632 seconds)
    (147/309) benchmarking ("sort", Bool, false)...
    done (took 2.252907065 seconds)
    (148/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.833765546 seconds)
    (149/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.071591178 seconds)
    (150/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.110533341 seconds)
    (151/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.026910968 seconds)
    (152/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.017737908 seconds)
    (153/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.059279985 seconds)
    (154/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.949476408 seconds)
    (155/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.483114132 seconds)
    (156/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.771411652 seconds)
    (157/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.929784236 seconds)
    (158/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.163037192 seconds)
    (159/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.801354929 seconds)
    (160/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.876005457 seconds)
    (161/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.781702075 seconds)
    (162/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.98538773 seconds)
    (163/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.795555508 seconds)
    (164/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.450933634 seconds)
    (165/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.281803738 seconds)
    (166/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.900976966 seconds)
    (167/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.89867698 seconds)
    (168/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.65347134 seconds)
    (169/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.744782518 seconds)
    (170/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.178815167 seconds)
    (171/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.023783463 seconds)
    (172/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.828079262 seconds)
    (173/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.802167845 seconds)
    (174/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 7.133035263 seconds)
    (175/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.44544029 seconds)
    (176/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.768300168 seconds)
    (177/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.010185943 seconds)
    (178/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.947940434 seconds)
    (179/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.970535068 seconds)
    (180/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.819302056 seconds)
    (181/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.920180855 seconds)
    (182/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.720261364 seconds)
    (183/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.142750055 seconds)
    (184/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.86777925 seconds)
    (185/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.823378056 seconds)
    (186/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.083010129 seconds)
    (187/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.922511106 seconds)
    (188/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.846981772 seconds)
    (189/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 3.112661217 seconds)
    (190/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.079731151 seconds)
    (191/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.70741731 seconds)
    (192/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.037477967 seconds)
    (193/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.879011523 seconds)
    (194/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.049824698 seconds)
    (195/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.816060629 seconds)
    (196/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.879268397 seconds)
    (197/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.795465327 seconds)
    (198/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.998682165 seconds)
    (199/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.864753452 seconds)
    (200/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.938932666 seconds)
    (201/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.286758378 seconds)
    (202/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.001905596 seconds)
    (203/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.829555796 seconds)
    (204/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.488050578 seconds)
    (205/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.814289888 seconds)
    (206/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.802266347 seconds)
    (207/309) benchmarking ("sort", Float32, false)...
    done (took 5.516245517 seconds)
    (208/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.840276007 seconds)
    (209/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.610431852 seconds)
    (210/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.88110788 seconds)
    (211/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 2.778669665 seconds)
    (212/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.293699978 seconds)
    (213/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.451435247 seconds)
    (214/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.791923999 seconds)
    (215/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.584583493 seconds)
    (216/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.354387897 seconds)
    (217/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.863036374 seconds)
    (218/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.847109978 seconds)
    (219/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.802188513 seconds)
    (220/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.401005444 seconds)
    (221/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.82071882 seconds)
    (222/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 2.993431585 seconds)
    (223/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.789434982 seconds)
    (224/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 3.128744743 seconds)
    (225/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.129436144 seconds)
    (226/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.943091279 seconds)
    (227/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.788321786 seconds)
    (228/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.658406872 seconds)
    (229/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.810152003 seconds)
    (230/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.009025924 seconds)
    (231/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.787230118 seconds)
    (232/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.8812939 seconds)
    (233/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 2.995366207 seconds)
    (234/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.807147105 seconds)
    (235/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.222259227 seconds)
    (236/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.826747322 seconds)
    (237/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.097846388 seconds)
    (238/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.085555736 seconds)
    (239/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.996922563 seconds)
    (240/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.263487213 seconds)
    (241/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.852192784 seconds)
    (242/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.972693357 seconds)
    (243/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.454211858 seconds)
    (244/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.8929844 seconds)
    (245/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.80372996 seconds)
    (246/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 3.286006454 seconds)
    (247/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.80868793 seconds)
    (248/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.715099671 seconds)
    (249/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.81702068 seconds)
    (250/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.944038503 seconds)
    (251/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.80786586 seconds)
    (252/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.831908638 seconds)
    (253/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.099528005 seconds)
    (254/309) benchmarking ("sort", Float64, false)...
    done (took 5.608538535 seconds)
    (255/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.292776865 seconds)
    (256/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.009761773 seconds)
    (257/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.842533017 seconds)
    (258/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.287752931 seconds)
    (259/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 7.078637478 seconds)
    (260/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.217849654 seconds)
    (261/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.810937816 seconds)
    (262/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.178975519 seconds)
    (263/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.93878918 seconds)
    (264/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.164657065 seconds)
    (265/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.913881486 seconds)
    (266/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.940976517 seconds)
    (267/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.998537969 seconds)
    (268/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.82981744 seconds)
    (269/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.811816178 seconds)
    (270/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.506943584 seconds)
    (271/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.819602725 seconds)
    (272/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 3.780121758 seconds)
    (273/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.907495407 seconds)
    (274/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.166828217 seconds)
    (275/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.802196287 seconds)
    (276/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.93447808 seconds)
    (277/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.891315631 seconds)
    (278/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 7.126166019 seconds)
    (279/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.972978996 seconds)
    (280/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.673553536 seconds)
    (281/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 7.032756213 seconds)
    (282/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.262315889 seconds)
    (283/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.398176432 seconds)
    (284/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.160006647 seconds)
    (285/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.920008918 seconds)
    (286/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.164331378 seconds)
    (287/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.986322432 seconds)
    (288/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.207586723 seconds)
    (289/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.248267123 seconds)
    (290/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.840142042 seconds)
    (291/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.902447027 seconds)
    (292/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.903492078 seconds)
    (293/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.962636188 seconds)
    (294/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.206178765 seconds)
    (295/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.539621355 seconds)
    (296/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.075310158 seconds)
    (297/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.857188046 seconds)
    (298/309) benchmarking ("sort", BigInt, false)...
    done (took 6.820257089 seconds)
    (299/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.907665928 seconds)
    (300/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.039552364 seconds)
    (301/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.92220012 seconds)
    (302/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.878928946 seconds)
    (303/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.635176112 seconds)
    (304/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.932716027 seconds)
    (305/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.839905681 seconds)
    (306/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.75143174 seconds)
    (307/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.002350905 seconds)
    (308/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.841126915 seconds)
    (309/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.30495598 seconds)
  done (took 991.724668992 seconds)
done (took 993.532902076 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.853835538 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.845730305 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.829792045 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.849677333 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.941485279 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.862930892 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.838851215 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.833077155 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.875878146 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.87898268 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.82679719 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.861351348 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.83411615 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.83193504 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.830654617 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.844501161 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.142575772 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.859256134 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.845277473 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.839624512 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.849124261 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.830257145 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.88043903 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.861347564 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.834408007 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.83601197 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.834907633 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.851858297 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.945879336 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.836078996 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.835248924 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.844049747 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.144315311 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.858266755 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.828973102 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.851060891 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.843686191 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.839677125 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.836111365 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.866974355 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.230978549 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.865732828 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.83379789 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.831994457 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.834127887 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.827537202 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.827777766 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.833309442 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.837489327 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.839705616 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.227034861 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.874368723 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.828637594 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.826496888 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.835045609 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.824382197 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.825479927 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.837475413 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.840557809 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.837221718 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.125325173 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.85080411 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.821511207 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.837669893 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.82618832 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.257740326 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.84811726 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.820530518 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.219000339 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.855302359 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.255372147 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.858162528 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.817075837 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.830144819 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.847669516 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.126985896 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.841069663 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.814839574 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.821790501 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.815401432 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.825829088 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.83005442 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.819539829 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.814089995 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.827828232 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.845267684 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.824651106 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.815250361 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.821295957 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.831978452 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.821095651 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.823307806 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.817133811 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.805073426 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.820838564 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.812359298 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.812006396 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.814754849 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.816005974 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.818192516 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.208475887 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.857729205 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.804011352 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.806811912 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.803535015 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.818831902 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.202341396 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.841239757 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.83103849 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.849985534 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.804670705 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.1032104 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.831783126 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.818297145 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.811225925 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.806714144 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.79679956 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.102290769 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.228290072 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.850100162 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.804379241 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.799834272 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.816478208 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.804192301 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 2.247050808 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.113306013 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.829552541 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.816212814 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.922310955 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.813899509 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.829180805 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.798539322 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.796963564 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.827970145 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.81368418 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.831587904 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.797205493 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.812726432 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.813949877 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.79613357 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.811000092 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.805762853 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.795288192 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.801735039 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.788540989 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.828947446 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.807765008 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.805048323 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.811193783 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.915304754 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.790918489 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.096850949 seconds)
done (took 286.142757488 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.862386555 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.790170327 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.88867414 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.785727517 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.870450447 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.874165935 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.785038901 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.784607987 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.787684297 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.15973425 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.787159225 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.78548953 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.79058486 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.785097526 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.872168524 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.788461314 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.785863783 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.156252636 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.790422633 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.860450241 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.781562849 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.786801855 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.789542774 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.160002784 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.787619212 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.779995639 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.862580843 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.788588996 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.126450608 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.786836868 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.78819131 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.124987034 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.880615127 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.806189519 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.798275863 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.794869867 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.869098568 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.792176467 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.870222934 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.869890699 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.887714191 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.829589003 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.786974577 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.789081259 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.784842585 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.784873915 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.780528904 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.811310148 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.77993045 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.780850068 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.116681522 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.793069342 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.78663231 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.776685655 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.776509936 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.80334009 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.776577794 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.783509684 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.869934256 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.780389892 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.838986468 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.149605459 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.149858581 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.77813869 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.778100144 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.775027956 seconds)
  done (took 178.697441782 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.845880908 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.852649402 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.84544573 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.782483734 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.827153201 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.847154305 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.783015804 seconds)
  done (took 14.48348309 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.784659885 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.779913858 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.829322017 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.829742354 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.777817693 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.928706632 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.779550049 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.788589642 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.777000025 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.83104853 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.781075651 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.778462975 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.786949688 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.776981403 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.826884321 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.791944079 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.895960615 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.780704796 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.782728189 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.930910567 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.778208864 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.78734867 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.835106606 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.791827265 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.780745386 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.786442995 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.362758138 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.781144917 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.777187169 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.782268051 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.777182926 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.825902965 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.778827595 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.770984852 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.777487266 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.890173859 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.775515152 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.773998318 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.776686823 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.768929476 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.773900435 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.774026441 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.774756116 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.768671587 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.770703647 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.79438253 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.772064962 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.771564085 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.77513946 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.771499219 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.821340733 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.771207943 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.767963055 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.768736666 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.828438544 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.777628326 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.772199675 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.768824311 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.771863343 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.773020352 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.92297424 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.81863129 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.77083508 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.820007413 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.772397715 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.774035723 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.771472375 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.771598748 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.867654993 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.770865974 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.820110472 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.768920817 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.930315469 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.7963496 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.77205355 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.774986081 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.774304275 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.774665705 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.764864647 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.779514839 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.770732531 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.773956289 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.780612523 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.770000171 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.770112057 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.885166788 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.880220144 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.769896966 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.786369255 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.780249858 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.77169951 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.823816908 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.772636659 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.770018475 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.827086706 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.890766934 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.828371717 seconds)
  done (took 196.55809778 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.776867301 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.781403021 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.774780436 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.790931418 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.772437434 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.773235252 seconds)
  done (took 12.364752469 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.774326401 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.774535619 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.774837401 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.773961375 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.77289437 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.776281173 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.77398045 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.778801001 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.777882514 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.775007545 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.775181874 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.776084743 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.775684369 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.775611839 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.776398814 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.774149538 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.775194318 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.773133685 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.773308103 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.774826623 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.923211239 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.774604726 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.776540731 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.774727877 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.780268465 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.774682478 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.781734998 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.774434316 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.774485456 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.784745164 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.77923023 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.774677065 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.77498993 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.781464741 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.780005129 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.77642884 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.779874627 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.775824916 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.773674527 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.777305217 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.778071901 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.776817863 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.776714737 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.77666628 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.777699325 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.78076873 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.779745783 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.783297867 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.777680254 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.776467435 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.778755484 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.777795764 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.778239058 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.776616532 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.777274876 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.781218729 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.782663795 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.777285313 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.776609642 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.778370542 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.776731897 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.779649442 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.778968019 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.781019508 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.784563726 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.77803076 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.778210171 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.781393519 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.777190664 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.776858589 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.77769458 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.773921574 seconds)
  done (took 130.804890161 seconds)
done (took 534.637776102 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.968298201 seconds)
  done (took 8.665645994 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.878636403 seconds)
  done (took 8.879598146 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.475779662 seconds)
  done (took 10.21272983 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.825742587 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.832239465 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.818074566 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.806030708 seconds)
  done (took 29.042768074 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.906188265 seconds)
  done (took 8.64264769 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.828384584 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.803332131 seconds)
  done (took 15.395578242 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.906990147 seconds)
  done (took 8.642029923 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.915331667 seconds)
  done (took 8.678461932 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.819129906 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.832461477 seconds)
  done (took 15.397958267 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.788962159 seconds)
  done (took 8.524468693 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.467883396 seconds)
  done (took 11.294355541 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.832119185 seconds)
  done (took 8.670046901 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.80650774 seconds)
  done (took 8.540159627 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 6.856084451 seconds)
  done (took 8.589922272 seconds)
done (took 160.875111143 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.808958728 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.804298587 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.807198413 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.806883528 seconds)
  done (took 28.960540622 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.845721261 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.84652477 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.847870997 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.856531851 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.849719679 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.848729862 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.837075655 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.838651747 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.857837146 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.85078605 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.848260407 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.851614374 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.847612137 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.842823016 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.849507172 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.848452056 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.85909373 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.849277355 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.841599059 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.852438999 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.815341029 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.860384661 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.850855412 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.814219208 seconds)
  done (took 46.045504494 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.01352425 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.884845116 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.967134265 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.864857254 seconds)
  done (took 9.465168167 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.863200561 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.866979219 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.880748144 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.916759259 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.939627433 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.877105976 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.84007641 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.83519443 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.821401168 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.866632119 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.943386479 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.862806232 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.953066688 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.816179175 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.002734831 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.813319466 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.817276303 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.865505359 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.920661504 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.932217382 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.815906009 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.867220502 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.870252758 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.863398545 seconds)
  done (took 46.787404891 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.812494234 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.821923383 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.820989287 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.814211343 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.812289968 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.815167237 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.820260189 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.816801592 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.835809897 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.814807738 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.813554808 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.814583284 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.815774439 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.815193531 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.814618557 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.826626718 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.831295204 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.81490387 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.817723826 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.820988147 seconds)
  done (took 38.104381779 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.808438079 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.664506258 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.160187389 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.06562851 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.807095713 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.808350431 seconds)
  done (took 31.051696708 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.829673187 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.822176893 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.815858928 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.873592266 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.954655736 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.82089475 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.817320458 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.830157857 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.865910991 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.879763583 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.835988418 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.846760145 seconds)
  done (took 23.93233461 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.811966463 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.829584224 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.811186868 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.845327387 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.826411591 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.825534389 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.822924633 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.808914888 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.829250445 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.83699296 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.825770672 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.827478803 seconds)
  done (took 43.644010858 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.899515604 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.702397286 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.859704993 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.543517997 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.284594803 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.023150967 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.344798968 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.156076287 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.816504671 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.08558083 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.791450395 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.052786869 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.066495609 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.81148895 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.898581004 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.307897464 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.110190828 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.041505475 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.837373991 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.502029105 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.964515377 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.455432446 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.576042666 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.969884111 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.059118466 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.977675127 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.109410037 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.806746405 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.9774809 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.884754766 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.858583029 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.847841681 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.123581755 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.224016439 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.943218154 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.860135533 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.503809438 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.565225151 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.965367573 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.552659022 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.736136453 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.976147356 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.856074575 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.84738917 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.779406431 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.481952238 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.184172001 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.853144274 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.559477927 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.847864295 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.856533443 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.937249327 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.85059694 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.668320712 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.81897 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.130153434 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.846032215 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.854862374 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.420164334 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.876801058 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.557339596 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.782264146 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.046988548 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.571978055 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.314361187 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.999332893 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.854112491 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.852805625 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.786205258 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.557702317 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.972580189 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.997241707 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.868218924 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.499608596 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.146332329 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.894668731 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.930492805 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.13581095 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.599571061 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.912514219 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.0804315 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.810557551 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.787197177 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.710293382 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.786952339 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.120321036 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.889739142 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.484661122 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.894044169 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.191813873 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.861920473 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.867454246 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.859910598 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.077043779 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.733692632 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.850134771 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.61287558 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.141163319 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.870833614 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.191875892 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.787602334 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.853301655 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.109378883 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.062704427 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.057366226 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.454655934 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.01251225 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.855238681 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.937824241 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.734920416 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.974968585 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.126243651 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.91250844 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.90097407 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.981412518 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.810461469 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.15381479 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.878103206 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.022908011 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.850852103 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.116138823 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.184914901 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.143799435 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.919238184 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.854269251 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.853358346 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.628257705 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.47484879 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.122547881 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.854706516 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.307031748 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.974447767 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.85744786 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.795898175 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.472709054 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.859027687 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 4.965016887 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.078464201 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.755734394 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.243064477 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.791696919 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.003013077 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.966460617 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.075798537 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.497436955 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.930210987 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.114518442 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.318974413 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.169754799 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.978981684 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.874478375 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.944776552 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.87982381 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.260440539 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.221601685 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.861632266 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.860601895 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.643475095 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.930504934 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.858392792 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.861862207 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.658149767 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.142391666 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.880102883 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.857524869 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.746459383 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.871285781 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.922405031 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.862219594 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.868359306 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.384983992 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.613631103 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.868185617 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.499943588 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.08306419 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.867408498 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.568896892 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.039140032 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.941403823 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.128500613 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.918913918 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.793572027 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.568488273 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.550964144 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.859325562 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.792645021 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.857877309 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.867676042 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.868875635 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.240914144 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.134229062 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.901476171 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.636756084 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.970202947 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.869799744 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.861363171 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.859048908 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.385822318 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.912956937 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.444612359 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.980254407 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.994628477 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.874312297 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.79407834 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.861429148 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.863573918 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.860204511 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.818295135 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.912933118 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.56746779 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.315018896 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.113988942 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.507392177 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.875141241 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.594075386 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.986693907 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.876663825 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.632817483 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.905974545 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.96269641 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.934864294 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.869699722 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.585731298 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.637915975 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.428628874 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.16372142 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.165727852 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.293769583 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.327547023 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.241324662 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.205703872 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.096692863 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.390456288 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.921201137 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.205560495 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.80682032 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.945912911 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.502562457 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.211307545 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.875437254 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.090175077 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.243309075 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.678696528 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.01872221 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.073554333 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.894501589 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.738888212 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.899198477 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.062969317 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.006303824 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.64293059 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.077056992 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.200628039 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.626496189 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.968326669 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.860976899 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.563078167 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.947833011 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.574709745 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.225159557 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.342322021 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.986011993 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.362470616 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.8620009 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.308956702 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.215217993 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.151287494 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.075700754 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.798649006 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.872939064 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.872708028 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.861976097 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.839421997 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.784793051 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.146858869 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.871098192 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.097893114 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.113516771 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.232664727 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.775043755 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.869035109 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.86287401 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.163265826 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.617440667 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.104182064 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.292724927 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.457284649 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.873490249 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.800036091 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.798073414 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.558683566 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.871720748 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.842035747 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.087079889 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 3.048017922 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.82951498 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.328500625 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.185465807 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.117397613 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.878062923 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.139388325 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.137555221 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.602581231 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.893520545 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.965160985 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.620301619 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.97660996 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.134246504 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.100300054 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.664798656 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.097056428 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.911936554 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.682950591 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.864213478 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.080628977 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.134332849 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.868262881 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.110378909 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.58779429 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.881664223 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.243850702 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.921605502 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.84314241 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.034995179 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.059203722 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.873584246 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.95040595 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.877640541 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.876066656 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.876270219 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.91178637 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.865728642 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.996035956 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.880404704 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.95411405 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.916182001 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.458727909 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.874167936 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.141293154 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.220286606 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.188184562 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.925432068 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.866412747 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.865007976 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.801832064 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.999606411 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.314650881 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.140647842 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.999126534 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.165792534 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.893916561 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.620319553 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.234109103 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.190803393 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.146824763 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.764174253 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.868295796 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.974945123 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.135507043 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.879456141 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.080897369 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.099047533 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.185936102 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.337162387 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.085069938 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.316217799 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.141763219 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.237109893 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.868695006 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.460710769 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.873725317 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.635741774 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.914304669 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.877229826 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.14890451 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.880587433 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.245058073 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.889873969 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.071745061 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.386182111 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.587488855 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.225699597 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.852774201 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.924020687 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.144232943 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.251831355 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.181877667 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.940534518 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.882105317 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.580027288 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.006786578 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.812716983 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.182994376 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.871147295 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.080802341 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.581184242 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.880610355 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.147805269 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.180271089 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.86660905 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.848836332 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.925890872 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.880675528 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.094883085 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.138507935 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.126092902 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.87855012 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.879668599 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.68717199 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.143997781 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.927794133 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.8034499 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.869846776 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.966919578 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.114275377 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.893680526 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.388773166 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.582621314 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.169488834 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.787925547 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.89229005 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.338733766 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.315116399 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.197099662 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.419741228 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.109595747 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.429910829 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.782254362 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.25297958 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.877818153 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.349058316 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.260216324 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.875119937 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.450410152 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.991261503 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.14577483 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.194680647 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.885010925 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.658436796 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.913915545 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.09606109 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.467112134 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.814245113 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.870678421 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.933921345 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.873661522 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.005731278 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.882943638 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.869165854 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.821625657 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.705379209 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.367543519 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.876712337 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.866115823 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.684927246 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.49391058 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.987014326 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.015918028 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.879888818 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.636691452 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.166257502 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.127858958 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.471116291 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.953145452 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.877606458 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.874733005 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.800366533 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.071580468 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.25070104 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.177624493 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.311988152 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.992134296 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.879682077 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.087683294 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.084876575 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.86988766 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.029418525 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.338987546 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.992804152 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.606360328 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.553678731 seconds)
  done (took 1684.587471925 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.873997549 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.920171222 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.944005613 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.91925431 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.921235102 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.9877453 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.910829915 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.930167937 seconds)
  done (took 57.20771412 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.876414451 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.077337849 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.885421142 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.876969942 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.949726862 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.887946908 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.117205308 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.886056649 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.95093587 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.888451354 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.878524429 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.885933194 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.239858686 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.89966967 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.877119939 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.91695772 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.913391412 seconds)
  done (took 74.854050239 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.882272365 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.068684035 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.913059462 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.894508263 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.835713311 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.89147288 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.853388939 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.9100913 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.878184392 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.114855419 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.215422096 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.888625219 seconds)
  done (took 90.150544746 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.894749527 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.884627695 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.885120808 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.884370523 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.885414731 seconds)
  done (took 11.245422421 seconds)
done (took 2187.780794903 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.126260692 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.102779578 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.102713944 seconds)
  done (took 6.009997052 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.026749399 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.073353942 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.194030067 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.199861986 seconds)
  done (took 10.301499922 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.170066647 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.250019813 seconds)
  done (took 6.223427102 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.254441353 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.905621929 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.278014189 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.881455644 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.880454626 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.874454024 seconds)
  done (took 22.443064321 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.882412188 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.886455818 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.883847926 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.883756527 seconds)
  done (took 9.33917081 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.860240213 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.604933136 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.857986222 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.874887321 seconds)
  done (took 20.999696762 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.631216104 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.282259591 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.626494278 seconds)
  done (took 9.341335585 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.38078948 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.721651026 seconds)
  done (took 8.906757538 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.141606734 seconds)
  done (took 3.945610391 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.910611801 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.154452387 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.404975377 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.403954045 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.480888571 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.716691732 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.187320943 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.112103745 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.324911173 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.33840491 seconds)
  done (took 24.83875097 seconds)
done (took 137.718937032 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.255538363 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.883117285 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.078270108 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.226030172 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.106561295 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.076691052 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.094195345 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.208195824 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.725641285 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.719194927 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.224212432 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.109452124 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.042306719 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 8.121393479 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.050937202 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 8.121624683 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.106786917 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.273932691 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.914239682 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.114027849 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.105683371 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.846548678 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.060686313 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.859600126 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.103599694 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.031005221 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.423490876 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.878780398 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.067144338 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.430079886 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.035499429 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.266933523 seconds)
  done (took 170.367545486 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.870060879 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.879426348 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.877785078 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.878902975 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.28766574 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.878572984 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.877438371 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.879373758 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.973444716 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.956058648 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.878150811 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.260073558 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.880540393 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.880037955 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.878914505 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.879528041 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.123729166 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.878912264 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.885244978 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.888239977 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.889203699 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.148526873 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.888998872 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.185353545 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.147456774 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.893497876 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.880396245 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.895842609 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.899015965 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.900079941 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.900198207 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.882112994 seconds)
  done (took 208.113746972 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.883855133 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.882074239 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.881386363 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.87929474 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.887092262 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.890747033 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.879529337 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.881211433 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.374360867 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.416928347 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.902233689 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.88614577 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.899298809 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.879319042 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.902507263 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.880139979 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.903849668 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.904393115 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.904083906 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.900766399 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.899445218 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.661081515 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.896873577 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.666072159 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.894422478 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.89733037 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.881170891 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.900018414 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.902005555 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.895997497 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.899367551 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.879567722 seconds)
  done (took 220.928797652 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.081841189 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.892422124 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.895205192 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.833050223 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.89201197 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.891985894 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.851907637 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.089112093 seconds)
  done (took 19.259583356 seconds)
done (took 620.483080661 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.360058282 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.205557742 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.066929872 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.912183441 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.17240776 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.946377561 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.914263063 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.976301521 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.643762141 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.981693917 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.607872581 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.931792959 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.698738996 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.941524954 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.038857494 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.966573364 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.468447001 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.55427728 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.08940309 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.980009163 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.082621121 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.878668375 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.992430123 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.664616418 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.718513392 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.921020514 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.104245394 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.470240028 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.92017533 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.08359953 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.660867568 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.311791361 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.92342745 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.909446277 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.967996579 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.946387126 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.275095345 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.920900361 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.033380354 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.681551338 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.987088118 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.519716197 seconds)
  done (took 104.239095588 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.883482673 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.882976293 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.88244722 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.879398281 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.883949019 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.880013071 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.877890886 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.879004513 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.880934914 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.879900104 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.879945387 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.883882883 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.878452327 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.880310997 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.881905177 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.880652691 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.880980839 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.880979236 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.880786835 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.881772018 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.883912209 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.883436271 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.897155497 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.879314457 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.879685964 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.881435193 seconds)
  done (took 50.7473308 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.893905835 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.064243092 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.151074697 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.911581691 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.89387036 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.898230794 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.913306155 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.895783097 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.896226619 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.897847842 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.987853769 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.897862802 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.913851404 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.154255109 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.908259993 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.897511825 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.896646244 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.894960512 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.068621383 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.907756115 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.914559996 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.898537703 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.914149932 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.904785106 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.895670588 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.897096559 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.901747064 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.366429381 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.900579531 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.985997875 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.933607225 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.917741665 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.320509706 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.173673496 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.950035831 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.905083825 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.896282031 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.990993817 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.897102804 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.896503351 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.916164495 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.899115544 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.154301476 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.385798367 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.908471349 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.898058288 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.378264578 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.996312972 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.934565895 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.90308284 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.156625799 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.914072649 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.897342826 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.897355409 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.932799147 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.90291884 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.896857195 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.215323346 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.903874708 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.914361105 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.901995174 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.896576243 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.075176319 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.902373637 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.061502112 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.904316117 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.904367248 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.898511077 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.159566089 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.91322875 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.394559955 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.910725831 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.89641009 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.988139308 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.06298346 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.401943786 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.909167791 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.078739522 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.337825161 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.919587088 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.903128795 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.355590455 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.925033134 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.902963081 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.901287815 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.902420602 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.90120744 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.945323233 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.915970745 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.318605777 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.397067462 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.231614372 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.920492369 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.914414669 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.899611998 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.217122232 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.908200702 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.899756944 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.150586975 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.404025015 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.912105485 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.909490955 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.38190632 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.913768311 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.919276287 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.906818315 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.16361943 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.915467907 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.946242094 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.900419485 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.906867101 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.901590832 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.919669981 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.90274417 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.904122761 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.367210517 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.008719196 seconds)
  done (took 235.439788438 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.899479719 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.915218093 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.893682247 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.919597852 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.895330864 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.900186918 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.894996864 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.891179532 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.900941452 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.894748895 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.895680331 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.897270456 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.896570154 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.903385511 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.512693596 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.902151166 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.551844788 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.894446253 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.897644041 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.897414442 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.589447014 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.903798652 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.895814735 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.888981843 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.896035315 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.897006141 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.907479062 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 7.04696652 seconds)
  done (took 169.103536981 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.903596938 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.087293049 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.923030004 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.940133851 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.911736729 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.900748198 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.927075569 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.919191635 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.906857264 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.899076668 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.900386058 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.963779217 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.913099152 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.046420361 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.931959053 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.936852798 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.000941095 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.905113015 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.903568453 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.901147052 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.931965701 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.895868111 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.963715603 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.025513208 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.921132735 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.020756946 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.909333244 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.90323869 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.90312975 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.021564226 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.917768284 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.964515711 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.930013272 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.920493018 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.027185734 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.019852292 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.004946577 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.928040267 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.903632311 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.90379233 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.905361962 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.892185861 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.022213211 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.923156432 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.906960188 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.008986773 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.924688253 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.906190224 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.915649977 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.903243576 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.917049139 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.92287213 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.970586007 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.034777938 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.939351148 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.929551219 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.928462229 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.193382746 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.913764273 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.004091693 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.897175451 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.020481736 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.922740019 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.890319721 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.906046974 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.911172695 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.933565475 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.936290548 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.008560374 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.908200193 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.005171564 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.934376061 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.910501461 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.903228136 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.908465856 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.022374575 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.022352066 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.934420739 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.942987792 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.931804595 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.901271926 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.903955442 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.893036163 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.92288622 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.908642483 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.023047345 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.023720984 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.909899635 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.907222095 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.907346644 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.908376802 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.93057178 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.031610422 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.938911381 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.001330354 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.974607476 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.979388954 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.921300915 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.919162067 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.911920738 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.968732799 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.921670848 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.914380633 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.242129387 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.980654293 seconds)
  done (took 206.320412284 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.367354704 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.956769594 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.965397438 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.219147121 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.327297507 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.799067666 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.95272487 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.955942479 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.982752594 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.145486181 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.025185755 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.973114053 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.940576852 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.93249128 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.953020654 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.97721222 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.967037193 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.290050665 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.080260474 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.095449081 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.935011832 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.225644405 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.272568362 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.353421287 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.991470287 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.291447605 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.650878275 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.101401243 seconds)
  done (took 62.559859377 seconds)
done (took 830.21681461 seconds)
SAVING RESULT...
DONE!
