cset: moving following pidspec: 22457
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.393715537 seconds)
loading group "string"... done (took 0.499997647 seconds)
loading group "linalg"... done (took 8.4273464 seconds)
loading group "parallel"... done (took 0.176631863 seconds)
loading group "find"... done (took 3.027551304 seconds)
loading group "tuple"... done (took 1.843960831 seconds)
loading group "dates"... done (took 1.337042958 seconds)
loading group "micro"... done (took 0.191022575 seconds)
loading group "io"... done (took 0.4988002 seconds)
loading group "scalar"... done (took 52.171901715 seconds)
loading group "sparse"... done (took 13.890040861 seconds)
loading group "broadcast"... done (took 1.195305614 seconds)
loading group "union"... done (took 9.564694345 seconds)
loading group "simd"... done (took 3.240826924 seconds)
loading group "random"... done (took 11.99015075 seconds)
loading group "problem"... done (took 2.192605348 seconds)
loading group "array"... done (took 24.939060201 seconds)
loading group "misc"... done (took 1.102562692 seconds)
loading group "sort"... done (took 3.729687096 seconds)
loading group "collection"... done (took 19.18080766 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.596675485 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.12720041 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.201214007 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.281154704 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.232239983 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.167466822 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.141050156 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.237391984 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.64873062 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.204923486 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.137608795 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.419468742 seconds)
done (took 6.208746139 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.251756881 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.239893089 seconds)
    (2/2) benchmarking "String"...
    done (took 0.16382142 seconds)
  done (took 1.160661297 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.07551679 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.154723011 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.107558189 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.092869796 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.091684364 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.107763304 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.092496438 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.106492841 seconds)
  done (took 1.514572477 seconds)
done (took 3.76157443 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.493945088 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.865051538 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.497679837 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.141697398 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.309021924 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.291576622 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.266879938 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.198625424 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.09304924 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.089388309 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.174406113 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.392531249 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.380034058 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.941224665 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.086416465 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.092384689 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.127677497 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.754246235 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.080874765 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.110621026 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.507013173 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.187121769 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.098019383 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.12007912 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.183129779 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.132522981 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.157431906 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.10205652 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.66957052 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.135033004 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.177845809 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.097381152 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.156215801 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.185167912 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.193067666 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.112405542 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.682533723 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.201579223 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.099416662 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.101649021 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.68435168 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.120587067 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.182400102 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.102433557 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.086761329 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.180084026 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.099592901 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.092487244 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.093111874 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.084796767 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.163334308 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.449563425 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.108969266 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.169570936 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.092461961 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.682988267 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.098099825 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.275050154 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.130493396 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.094837819 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.090027226 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.086131663 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.15799735 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.094230308 seconds)
  done (took 19.903253203 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.143677573 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.16363109 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.07598638 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.155401744 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.12066926 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.078494465 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.099747245 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.076747902 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.106923402 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.193472868 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.136812177 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.149067099 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.089701011 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.089433653 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.125253294 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.245991671 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.106079189 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.120788977 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.088105903 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.087798967 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.137544646 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.095308761 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.089463701 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.107378499 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.167719079 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.203307828 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.111065782 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.123897392 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.09031644 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.097196227 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.14259497 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.148564184 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.093713801 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.090447769 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.172171193 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.122132322 seconds)
  done (took 5.220432347 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.162507205 seconds)
    (2/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.217409004 seconds)
    (3/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.121437538 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.221325964 seconds)
    (5/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.080508684 seconds)
    (6/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.194270384 seconds)
    (7/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.130234766 seconds)
    (8/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.180628882 seconds)
    (9/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.162686894 seconds)
    (10/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.252438591 seconds)
    (11/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.186034279 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.180020719 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.115136186 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.11275524 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.079200002 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.079292161 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.076514246 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.457492171 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.146939695 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.18726838 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.158958698 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.093646464 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.097172903 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.363550525 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.099819008 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.082592244 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.108242095 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.063823128 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.195641314 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.091265435 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.124429143 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.083365468 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.11854824 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.112004345 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.209651806 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.123485824 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.120419887 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.109654981 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.084220683 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.221084144 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.114227037 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.077937513 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.113161091 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.130809264 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.113734519 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.105591949 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.120681265 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.218089455 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.085971341 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.107391334 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 4.02289338 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.195699566 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.124488797 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.083936556 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.289501721 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.124663375 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.096533105 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.105227041 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 2.780551392 seconds)
    (60/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.104703026 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.11030148 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.081021059 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.095229715 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.092150767 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.077242153 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.443331159 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.104483329 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.205849477 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.083329437 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.157437878 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.097123431 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.116824664 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.083922969 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.082849625 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.123931937 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.083230473 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.094135795 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.084176478 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.077939225 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.103539286 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.113877295 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.082399102 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.095875918 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.145153074 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.098784562 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.12251771 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.107359117 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.102468942 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.08300758 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.125844199 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.081979782 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.085841839 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.15869606 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.09371495 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.129520041 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.109267352 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.127812302 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.10078599 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 2.218164811 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.082683803 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.120645285 seconds)
    (102/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.098242366 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.082646055 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.126697684 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.112811486 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.079478699 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.082340899 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.092978344 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.079468244 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.144294805 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.101117846 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.079516715 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.085569861 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.108048671 seconds)
  done (took 28.092147687 seconds)
done (took 53.973138539 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.428872155 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.080042832 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.079661254 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.099060219 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.081380405 seconds)
  done (took 1.599120532 seconds)
done (took 2.402449109 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.318249932 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.185712616 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.101056552 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.186935857 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.085638131 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.190901182 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.1757851 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.092682442 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.201334635 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.082584111 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.182907273 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.082628089 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.10229635 seconds)
  done (took 2.822161881 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.102209282 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.108651539 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.100092445 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.118340698 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.084447112 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.099172166 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.117486754 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.109778403 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.098494944 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.111460338 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.083881965 seconds)
  done (took 1.939789016 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.097780214 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.104569427 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.097121985 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.116053626 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.083633437 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.097893648 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.113820658 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.107313375 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.096425184 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.112515268 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.084617637 seconds)
  done (took 1.92268617 seconds)
done (took 7.489111172 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.074623623 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 10.421636526 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.165648854 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.20693154 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.34692399 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.234566354 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.555118487 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.150914462 seconds)
  done (took 14.113044828 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.121521243 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.15076807 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.090313566 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.090946334 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.090962364 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.10884951 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.09249584 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.088757169 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.109098573 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.093720861 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.092557071 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.108014023 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.091790634 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.09310742 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.092179837 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.111278859 seconds)
  done (took 2.491351 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.142292027 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.139403408 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.095902104 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.097529946 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.111438822 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.098383849 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.101962712 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.114456657 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.093015881 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.094277268 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.100409854 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.114439147 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.095566272 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.092913014 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.115143539 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.116539886 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.091987765 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.114191215 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.115103972 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.095163519 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.115668855 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.094518693 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.096624031 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.113539161 seconds)
  done (took 3.452161356 seconds)
done (took 20.869182558 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.145478127 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.099809358 seconds)
  done (took 1.056540679 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.137383122 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.154153957 seconds)
  done (took 1.107012488 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.111014621 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.088470352 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.136562244 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.101460603 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.088705039 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.106939854 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.116664601 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.089061177 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.107820817 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.090768591 seconds)
  done (took 1.856709348 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.094429249 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.092793642 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.120229949 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.132727281 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.095743793 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.10966135 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.093494118 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.090267 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.112093625 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.089694886 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.093346382 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.122612422 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.093505378 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.123156707 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.094274757 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.093673997 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.11451063 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.09354631 seconds)
  done (took 2.681519175 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.088845664 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.090033686 seconds)
  done (took 1.002135812 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.092151107 seconds)
    (2/7) benchmarking "second"...
    done (took 0.089007047 seconds)
    (3/7) benchmarking "month"...
    done (took 0.090029823 seconds)
    (4/7) benchmarking "year"...
    done (took 0.10792513 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.087946783 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.087939234 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.10555862 seconds)
  done (took 1.482911439 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.483478126 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.376150452 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.35548346 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.10746254 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.145015079 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.348138696 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.144210006 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.10192581 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.100391477 seconds)
  done (took 3.021100343 seconds)
done (took 13.027570773 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.090112359 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.224524124 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.605265583 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.11274744 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.088278638 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.158235592 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.285338859 seconds)
done (took 2.392887506 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.33721711 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.140925392 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.082838802 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.090271017 seconds)
  done (took 1.469047486 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.080454784 seconds)
    (2/2) benchmarking "read"...
    done (took 0.098419003 seconds)
  done (took 1.005120783 seconds)
done (took 3.299483731 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.089782548 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.118840768 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.104696879 seconds)
    (4/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.088586591 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.087944779 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.08554166 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.105305738 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.086422795 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.087051582 seconds)
    (10/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.08590018 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.107748072 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.087427603 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.08633304 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103320935 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.086919772 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.08607808 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.085661038 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.103779487 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.087390804 seconds)
    (20/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.086559928 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.103897698 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.087336214 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.085643271 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.086848695 seconds)
  done (took 3.085034795 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.105572249 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.08941157 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.108914461 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.093172688 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.090653586 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.108925022 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.092315495 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.089312608 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.109055939 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.090147128 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.091288823 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.090864285 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.106173637 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.091422084 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.088220764 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.108813262 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.091371268 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.088616694 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.107716971 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.092222663 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.091255947 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.107367996 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.093894712 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.092160495 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.109353648 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.091874603 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.089419756 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.106875762 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.092618109 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.092312169 seconds)
  done (took 3.726850782 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.096294168 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.083802935 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.086984937 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.114359067 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.085694696 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.0893423 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.101640398 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.086684593 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.088641808 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.087489464 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.108122715 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.088549025 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.084784892 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.106556184 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.08943337 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.091276617 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.095815614 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.104049096 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.085602859 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.088021302 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.107979288 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.084936135 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.08844613 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.087046285 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.106667162 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.08578094 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.0872652 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.105947173 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.0901078 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.087904866 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.091143397 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.108488779 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.088588557 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.098267922 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.108527085 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.087654497 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.092601884 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.103227321 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.090176945 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.084364421 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.084421153 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.105487171 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.086043662 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.093271827 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.106698298 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.090130375 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.08478629 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.088118426 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.105101487 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.091535265 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.084859572 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.103217341 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.090495133 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.08950321 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.089985157 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.102115575 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.088835129 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.084501339 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.106398472 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.08857481 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.084810738 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.08492834 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.110234013 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.090570128 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.101866544 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.111782715 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.087094051 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.090031038 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.105764589 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.094789577 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.090950738 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.116784101 seconds)
  done (took 7.612016449 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.100345478 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.096498825 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.088735724 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.107324425 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.089240086 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.088157385 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.110634571 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.089417334 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.090548415 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.111240729 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.090284096 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.090229737 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.088865814 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.109091902 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.091098213 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.08924437 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.112950316 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.090981984 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.088999471 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.107210207 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.089998921 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.094018136 seconds)
  done (took 2.946786793 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.233188813 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.096549794 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.134856689 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.119757243 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.106380316 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.119541088 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.094187731 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.09377821 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.110436138 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.101941644 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.097200889 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.110994909 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.109269951 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.096430064 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.115600134 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.10131055 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.09154198 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.116303549 seconds)
  done (took 2.885126657 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.102326855 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.090512246 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.126762802 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.092327013 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.091353948 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.092716779 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.11404438 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.110275506 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.089507371 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.109950435 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.098174089 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.090090866 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.111528822 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.091517996 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.091060698 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.108331433 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.092887459 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.090940028 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.114714309 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.096183852 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.096372354 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.114955057 seconds)
  done (took 3.054306186 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.103814102 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.090504175 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.12534846 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.094112408 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.090769828 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.089708269 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.113815037 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.090440173 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.097475361 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.108400126 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.091555269 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.089858437 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.122300193 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.089883711 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.096127748 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.1100925 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.092705009 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.090801649 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.107559363 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.090653101 seconds)
  done (took 2.822452793 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.16706857 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.122482512 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.107083791 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.114007152 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.123611028 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.10685545 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.112802109 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.124056752 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.106262911 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.133768053 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.10770593 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.10621153 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.133748847 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.111508935 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.106219655 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.133659219 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.113594478 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.132387741 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.108179412 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.10541396 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.135934767 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.106330699 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.131072556 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.107565939 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.105783708 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.123501181 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.106323782 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.109851924 seconds)
  done (took 4.14419425 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.089591007 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.089228769 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.088068202 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.106748278 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.089359659 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.089096439 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.087098112 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.107725391 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.090174236 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.088002451 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.105951553 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.090016871 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.088436423 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.088717154 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.106649971 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.089870719 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.089020164 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.105824563 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.090078343 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.088477887 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.088535361 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.106586308 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.090083435 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.089509098 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.087563906 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.107274989 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.089897786 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.088641616 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.10627397 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.090149474 seconds)
  done (took 3.656900189 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.104363802 seconds)
    (2/2) benchmarking "in"...
    done (took 0.099347094 seconds)
  done (took 1.045506044 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.098345089 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.103525576 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.088621052 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.108342806 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.096873106 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.089643618 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.11613016 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.097010353 seconds)
  done (took 1.643552711 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.138937114 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.158644197 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.094924512 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.100962898 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.158480403 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.149655197 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.133299403 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.093486621 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.105821084 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.083667511 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.133513204 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.102667297 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.090789975 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.0861823 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.10978689 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.097026039 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.089639973 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.117761365 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.096762505 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.092031013 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.112540057 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.096025463 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.093129721 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.119938711 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.085675704 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.092972936 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.111927011 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.102082846 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.08632797 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.111339827 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.089480877 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.093397029 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.111442339 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.096250396 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.09036925 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.158766077 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.098106187 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.086699101 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.109918638 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.095026838 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.121416506 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.110009913 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.093024654 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.087810533 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.1118632 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.094809698 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.095237007 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.108655954 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.083256984 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.087380409 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.108630212 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.087185739 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.08889912 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.090146088 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.109934324 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.098773934 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.092363334 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.105616007 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.087139203 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.085516696 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.108060977 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.086978637 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.091824556 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.111472768 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.091328481 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.091155561 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.109152006 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.091121713 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.091396382 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.110074704 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.091743325 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.105491361 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.109350199 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.095527035 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.095122082 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.108104864 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.091080969 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.096756986 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.106562212 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.091877361 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.095057308 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.136764815 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.093395955 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.086370273 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.08608938 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.117720525 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.092593883 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.093734067 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.103018208 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.100486443 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.092767418 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.110536384 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.085538008 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.088392382 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.104602427 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.095275891 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.084492195 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.108834416 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.091660208 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.09646475 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.09435263 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.107676634 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.093663361 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.094151803 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.115054847 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.089999859 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.151902459 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.08913626 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.086205179 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.092379324 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.114748058 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.085023049 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.089496339 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.109180431 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.087985318 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.086290608 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.11282077 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.091867187 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.0920574 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.113032769 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.092895416 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.092981552 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.110034241 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.090968344 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.08684836 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.093931267 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.117754004 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.093254823 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.091331016 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.110086997 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.092465758 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.091248961 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.113526476 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.088966603 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.095292162 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.105511939 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.091489334 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.093332527 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.095718139 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.10960842 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.087649089 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.090338838 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.111751147 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.09091308 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.094322278 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.110916407 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.087887837 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.083477205 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.111673324 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.088285018 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.091654572 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.118927476 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.088286133 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.09375515 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.105440909 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.100084466 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.089529068 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.114194193 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.095829103 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.097409367 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.096166388 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.102965542 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.0886903 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.093886073 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.111958462 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.089899177 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.093236936 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.108719591 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.099070361 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.085470193 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.112248665 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.086293965 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.08963086 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.096515085 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.112275494 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.096435574 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.0873486 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.151893649 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.102993216 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.096026537 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.110236746 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.09302598 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.095590163 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.109502147 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.095228424 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.096166609 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.113214693 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.090288221 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.090261244 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.114776958 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.088250909 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.093922255 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.089443584 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.111126238 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.084471044 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.092586861 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.101912632 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.097720868 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.095004565 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.115001846 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.09693371 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.094440242 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.109684316 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.102033516 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.088317471 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.09466805 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.103256588 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.098029802 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.101752346 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.118258618 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.097656987 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.093294433 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.108750305 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.094378508 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.100887513 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.112525879 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.093866662 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.0936288 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.084841805 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.106128403 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.097214272 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.094309161 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.107370005 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.092833194 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.093776523 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.113085337 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.099271641 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.084932676 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.114340759 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.098033464 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.088670427 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.110480731 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.090036229 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.092505282 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.1178591 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.086514573 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.088999086 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.112515504 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.098663357 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.092693495 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.091151383 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.114461644 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.098368558 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.095325063 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.114468642 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.092243191 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.100447351 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.107918726 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.094148527 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.098869299 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.095590557 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.106115813 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.095099994 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.092234418 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.108557414 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.08956905 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.09711023 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.116622713 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.099266297 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.091440774 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.114556414 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.099585284 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.098733004 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.107986998 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.099871169 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.088473828 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.085275063 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.107952139 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.087322383 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.093662059 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.1069895 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.098130283 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.090557527 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.109915492 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.09673566 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.094289419 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.10791699 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.098163795 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.103603763 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.104265572 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.08678708 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.091409926 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.111362787 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.091031001 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.090029091 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.094032163 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.113010064 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.097040397 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.095034098 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.108867195 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.093421538 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.098258218 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.107881689 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.100418538 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.098492925 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.117765817 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.089657757 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.097578643 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.107233964 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.09836245 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.08623449 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.091172245 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.111941902 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.092531469 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.089028078 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.111071609 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.089506062 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.08492559 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.108502482 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.10029574 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.09075257 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.116019367 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.093771325 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.090758019 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.108859426 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.090503543 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.098581663 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.109077042 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.099961631 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.093409728 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.0852286 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.106206147 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.097650573 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.092669877 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.117193056 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.091130595 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.095522976 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.118672642 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.097391765 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.093133684 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.099923338 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.121632825 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.099119507 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.099326116 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.106230163 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.092348328 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.096119931 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.112333937 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.095839745 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.095015687 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.104598606 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.097061612 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.098311778 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.112078078 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.093154755 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.08656539 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.092854195 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.11998014 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.096176944 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.095946856 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.113438787 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.096189635 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.088409092 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.114794203 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.099510645 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.094020079 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.09934244 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.112285682 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.096819282 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.089707813 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.117626415 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.094964575 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.086928735 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.106322718 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.092149852 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.098100628 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.1045606 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.098899454 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.097392809 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.090040471 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.110029007 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.097835243 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.089477094 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.114470097 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.097575302 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.090450937 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.121022207 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.09541927 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.090269575 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.115591984 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.099176908 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.087523543 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.090064706 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.113422988 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.101730103 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.091263699 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.11653463 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.09395829 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.096566843 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.11511529 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.099576607 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.097964123 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.116692664 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.08827313 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.099448212 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.096017088 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.115823602 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.090852572 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.092021506 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.107252775 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.091925629 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.097704963 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.109827223 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.10308244 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.098272459 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.110337516 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.093087076 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.097884966 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.110780325 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.100327401 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.090579199 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.093902923 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.107347268 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.096326693 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.091644405 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.119321266 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.090666199 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.087811431 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.116720503 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.099409205 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.096607081 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.114586686 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.101142093 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.087881516 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.086640653 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.115477842 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.092168343 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.102419084 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.115772584 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.09284513 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.091721205 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.114909151 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.094845746 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.10070223 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.106994249 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.091441722 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.094148376 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.113381839 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.09379884 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.087736059 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.097083318 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.111893002 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.096103857 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.092100551 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.108518372 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.092855715 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.098704991 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.110918265 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.090322277 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.090540973 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.119348639 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.093748967 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.090517249 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.105511105 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.100361088 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.0950328 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.119284725 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.091408327 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.094672759 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.109400784 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.097032157 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.102337128 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.090189461 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.114164382 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.092637297 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.098583558 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.117710043 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.088182717 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.09039699 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.121719276 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.099117784 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.095097316 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.11511222 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.094512752 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.100129648 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.118739785 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.097271921 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.087794426 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.087535546 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.111621203 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.08810997 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.095791937 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.118844048 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.093711343 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.090888504 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.116871698 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.099837659 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.096825607 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.095220595 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.108726223 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.10211193 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.091926749 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.116433204 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.089519794 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.087176537 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.115342668 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.100611101 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.094008839 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.11220307 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.097335236 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.096613501 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.08824917 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.111752789 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.099560176 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.097149319 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.118597679 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.095221471 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.092026274 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.115842819 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.10475143 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.095615234 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.1122652 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.102814931 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.099424181 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.112981629 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.095008467 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.09722765 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.118605965 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.098868548 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.101750291 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.091449755 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.113270947 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.100702482 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.101328016 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.123180336 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.094243502 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.087951055 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.117152662 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.093014881 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.088011614 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.117546024 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.10127408 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.100440736 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.112721428 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.093199983 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.103221705 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.117091058 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.096281582 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.092234733 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.091425923 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.11717726 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.092117129 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.09760577 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.111072452 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.10177853 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.100857322 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.118667907 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.10441436 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.089611118 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.118215409 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.099229274 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.101449465 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.09469039 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.108943152 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.089183186 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.095999116 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.122405586 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.100263996 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.097735811 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.117456541 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.099870339 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.095688626 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.092828664 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.112332379 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.101150317 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.098752057 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.117236303 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.097407222 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.093980412 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.115608743 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.09650507 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.100183452 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.119021085 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.096898326 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.104295639 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.118557822 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.095643391 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.092864274 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.094471331 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.117401814 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.095255474 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.098790122 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.112245728 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.089928224 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.099336944 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.120898816 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.096019245 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.101298383 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.119176351 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.095542794 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.097065345 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.101081855 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.119473288 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.096516113 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.094627497 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.117769379 seconds)
  done (took 60.778898926 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.144303551 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.102144058 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.116498585 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.097467632 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.11343812 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.118152226 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.097782319 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.09792726 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.116657033 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.10711759 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.096949006 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.114731801 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.114052116 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.115326227 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.133746731 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.106439518 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.116055378 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.099777818 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.096911902 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.099041654 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.131659349 seconds)
  done (took 3.230078481 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.114948656 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.108839271 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.127323395 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.112238248 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.104132513 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.127301474 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.108499141 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.128148338 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.111616828 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.1046429 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.130744916 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.110229802 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.123340711 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.107267558 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.10484062 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.12486918 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.11293115 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.10298635 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.128423472 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.108701873 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.124525757 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.1097764 seconds)
  done (took 3.431463917 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.127395352 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.099462793 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.0947385 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.116593688 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.100706859 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.098177052 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.120505137 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.098147152 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.104534644 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.091918547 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.108776493 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.093602462 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.094839671 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.117251006 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.093818697 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.096615054 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.104874311 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.118992509 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.10162881 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.0963011 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.107637154 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.098508852 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.096973294 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.106472428 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.103382301 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.101339597 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.09641339 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.119989081 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.089435155 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.099895945 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.118812837 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.091318595 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.089023321 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.088004549 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.108504769 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.101075806 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.099746922 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.117744243 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.098638941 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.087611337 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.09738142 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.120588909 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.09006899 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.097208688 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.117293304 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.093595205 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.100628825 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.097034044 seconds)
  done (took 5.813489282 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.127306173 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.161233 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.101908598 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.136066593 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.132027325 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.108016314 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.100846278 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.134862738 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.099344663 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.121899418 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.113335595 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.111014188 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.124758628 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.105184139 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.102621721 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.122987395 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.336217534 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.099572457 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.125237025 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.101145809 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.105061616 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.122931816 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.112307 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.130711633 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.104724277 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.10058418 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.120233347 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.105467344 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.110565726 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.125629057 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.105472398 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.104300231 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.131861051 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.101770601 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.099412106 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.122666488 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.114023058 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.101577733 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.123999178 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.099850182 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.101929996 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.123812727 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.102989257 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.130749258 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.10348096 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.101632448 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.120836579 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.100344373 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.112159867 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.120104567 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.107883362 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.110849681 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.123336633 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.103490725 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.103468702 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.131241797 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.104537632 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.100374786 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.12396342 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.110456541 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.097773069 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.123643809 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.110874629 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.100588701 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.12673389 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.110947691 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.121650881 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.104388719 seconds)
  done (took 8.983692671 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.132194874 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.104571761 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.131811748 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.113216854 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.104901785 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.125135425 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.1060124 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.103360439 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.126719125 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.109782562 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.122328909 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.196552794 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.122515754 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.109644412 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.104776726 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.126251063 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.1058738 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.105095987 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.126819899 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.10605637 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.104058446 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.133249711 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.105621469 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.131866535 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.118203333 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.101465169 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.125750112 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.106425696 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.113222248 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.125191028 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.11759459 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.125261017 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.107047803 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.113001762 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.136681399 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.106117255 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.098843176 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.12592526 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.106630216 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.105202434 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.123115247 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.114134337 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.10536488 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.12267486 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.106667512 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.104910788 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.134622 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.115968088 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.129216082 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.111244777 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.104564637 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.136306176 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.107229372 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.12426694 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.115383855 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.118798225 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.134072669 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.113645078 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.124234593 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.114678951 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.111806221 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.139707164 seconds)
  done (took 8.213330157 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.099224845 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.098240138 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.097904675 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.117993842 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.100165214 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.097258882 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.098148503 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.119442467 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.099273516 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.097146295 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.118605728 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.098872 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.097516949 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.098404635 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.119209175 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.098645699 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.09767077 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.118217714 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.101490895 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.098637786 seconds)
  done (took 2.98221356 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.108433241 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.115437858 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.121521072 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.108287994 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.099933961 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.125133452 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.102217022 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.101775888 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.100236693 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.122291283 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.109735486 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.107657278 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.122256759 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.106254481 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.127433543 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.108488946 seconds)
  done (took 2.701374967 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.119396887 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.116953394 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.185822986 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.103475259 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.122843999 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.109405852 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.101399911 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.123719166 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.10178968 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.107086134 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.104739445 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.12541655 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.102486607 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.101562038 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.122069434 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.105258769 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.099947987 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.123858491 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.10194904 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.185018193 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.106358151 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.103402092 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.102318706 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.125808551 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.103106637 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.104732623 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.128779741 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.101143875 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.101599308 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.123786754 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.104780455 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.107285156 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.12165278 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.106425334 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.103143969 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.121354576 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.102966323 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.10275954 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.123156852 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.102654614 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.102339318 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.102079981 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.122354387 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.104511563 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.099473038 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.122402498 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.100720035 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.106722384 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.121382626 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.103067576 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.102236823 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.127996862 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.107668826 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.109066419 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.126621355 seconds)
  done (took 7.136275763 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.113799513 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.101077398 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.133073679 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.100755398 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.102379493 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.102027704 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.123172458 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.104577969 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.101320963 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.12045143 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.103679623 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.10389112 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.123589924 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.104142899 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.1028846 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.103167448 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.120677418 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.10345458 seconds)
  done (took 2.884166051 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.107230441 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.101238096 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.104799736 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.122892535 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.10187508 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.100231268 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.12021093 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.101208319 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.101619129 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.10087374 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.122307672 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.100615068 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099030086 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.122093972 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.102409867 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.100941126 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.120947131 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.102363337 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.100917828 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.098775442 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.122625162 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.101348339 seconds)
  done (took 3.278287084 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.112699434 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.180292259 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.107068405 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.18974661 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.097769872 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.095069828 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.126916674 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.098302601 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.112585153 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.117065805 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.096905825 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.096308967 seconds)
  done (took 2.353890644 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.129009965 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.138799182 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.121678226 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.102158771 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109835217 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.126982819 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105759576 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105609757 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.134726518 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117181014 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.126394061 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11526424 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.112760506 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.134824917 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.10939863 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.128821935 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106963984 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105624091 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.122152418 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.122420308 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.105142961 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.133138308 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107318334 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.104808862 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.12796966 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.114123896 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.132624703 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117570826 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.105074931 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.134318201 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.111001254 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.104980265 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.134770798 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116780117 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.121739258 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114221502 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105948399 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.141600514 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110902773 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.134613682 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.103627345 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110059738 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.134358907 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.111816136 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112586718 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.126606605 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.111156089 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.125579815 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10863177 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.125309405 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.133029027 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114565419 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.129618309 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114573738 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113860603 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.147366025 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117560935 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.134518729 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110108442 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.135957596 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114229154 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109423626 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.13459154 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117278735 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.131834375 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.114065699 seconds)
  done (took 8.821958783 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.143170467 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.103800165 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.127124331 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118394243 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.112892897 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.12818425 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107573268 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.127992655 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107831205 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.1021975 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.168612607 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108470443 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116132885 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.135121639 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106768903 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.125894246 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107345032 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11553164 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.123495306 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.127037413 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.106046628 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.137154983 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113917313 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.134481325 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118028607 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.129976349 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107682386 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106642251 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.127018576 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108795737 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.11152212 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.127996542 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115040977 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.102864189 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.135091397 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107815516 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.10685422 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.134618885 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10753078 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.131015927 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116064793 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120593989 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.128638315 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108261397 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.137878287 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107345979 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.1068926 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.123604785 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109138286 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.103197142 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.138545486 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.119494446 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.138655727 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115278567 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10688986 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.126916097 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108113154 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106404741 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.128950415 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112110568 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115627059 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.129137619 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.127141697 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.127360627 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109087215 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.114217754 seconds)
  done (took 8.79906199 seconds)
done (took 166.855831751 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.146277335 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.182431865 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.143134413 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.176651701 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.094428317 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.127001016 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.146652518 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.14509466 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.091070553 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.113820853 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.093341144 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.094685103 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.179489209 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.094358008 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.09283659 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.093803434 seconds)
  done (took 2.937764796 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.190348897 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.301920389 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.107097183 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.118175567 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.100540107 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.096815462 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.117103546 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.099636595 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.098333959 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.124163994 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.097768654 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.09513052 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.123931051 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.094755057 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.097450881 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.09721366 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.125381808 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.097539662 seconds)
  done (took 3.119935334 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.117577532 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.140892113 seconds)
  done (took 1.195480258 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.127467686 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.207134155 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.278229531 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.16527614 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.119119582 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.135957718 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.14581346 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.131343015 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.186360227 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.131161354 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.110164832 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.09466807 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.144549183 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.103579425 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.112665248 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.118537951 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.124338305 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.132643981 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.113192425 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.098832272 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.139763137 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.102501619 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.101974462 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.13307694 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.176492822 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.130975425 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.10251975 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.099978071 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.12022122 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.111802886 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.103397969 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.135735612 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.111027153 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.175252277 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.101477289 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.171461456 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.104170946 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.119898824 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.111643488 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.097969817 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.123740224 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.102301957 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.110083959 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.118809312 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.102473529 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.103502733 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.123667668 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.100623247 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.125048916 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.106223495 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.106377187 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.125400349 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.148446163 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.127423567 seconds)
  done (took 7.789907786 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.848929149 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.139701133 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.097941159 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.995977152 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.147572348 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.113335992 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.839768259 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.142334422 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.250363153 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.87227845 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.115573212 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.110889993 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.252704268 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.25492766 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.261004876 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.372037551 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.685974663 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.133556254 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.128292894 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.161326022 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.106049473 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.145238995 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.118902341 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.510805829 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.100145355 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.09853922 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.129645921 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.111199738 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.172931793 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.099548214 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.122889928 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.172913 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.287485871 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.20024556 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.12128104 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.099817294 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.097936584 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.181506867 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.263871482 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.21149098 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.192366167 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.096216864 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.098344524 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.127197449 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.119272896 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.095797659 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.176722826 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.188663224 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.186853435 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.102989812 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.111377635 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.1323755 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.106397434 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.174003398 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.097344536 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.348870016 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.375214757 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.099872653 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.10629774 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.136457476 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.263020248 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.100354422 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.228224037 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.147485467 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.20891545 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.098677797 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.822681956 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.180603974 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.098757845 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.127292818 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.107691523 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.104988145 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.128202321 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.163451301 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.494816303 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.110745998 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.125308946 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.099614807 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.227986799 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.098941159 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.119270673 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.156921095 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.121607832 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.107222671 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.132983304 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.113854867 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.184676993 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.246154951 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.134080455 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.109083955 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.125819703 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.112353609 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.099175699 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.229965203 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.220712755 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.171877575 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.226552225 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.10817972 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.180184294 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.182318783 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.107742022 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.186924188 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.106045325 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.136832999 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.10802846 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.2166365 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.154504242 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.104005966 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.103790162 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.130137836 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.134260218 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.124805071 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.108456278 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.185161958 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.547159249 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.159838141 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.118464214 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.104814857 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.108829889 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.176429001 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.1049656 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.257340219 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.13183266 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.181579222 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.108639389 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.096359338 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.128814655 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.156298374 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.133115726 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.107344429 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.129128166 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.109707958 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.277379496 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.215578922 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.112644531 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.246253794 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.197739453 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.1073427 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.189688191 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.106389622 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.184672649 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.129729942 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.108608904 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.100780482 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.813522888 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.13634211 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.108168999 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.12625235 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.184504381 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.097955725 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.123898967 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.100283267 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.095328178 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.806002154 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.124074519 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.099188925 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.101614072 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.128006221 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.107226409 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.10732745 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.126850183 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.155616372 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.2596674 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.113425404 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.127238448 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.10116747 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.172884238 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.102003505 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.099553573 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.099783214 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.122950626 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.108328647 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.124833756 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.104157358 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.186866115 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.152696042 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.221181327 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.66649329 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.101382168 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.101291692 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.234431477 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.121454841 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.321292969 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.108786275 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.228112915 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.181806162 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.096252603 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.372782013 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.162112269 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.203667585 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.10361318 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.188566398 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.097455573 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.129100817 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.153621339 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.121511735 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.108100593 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.17488942 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.115715667 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.134237929 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.272542377 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.100211607 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.246943178 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.097137242 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.186240088 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.100946387 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.129769273 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.322363522 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.099424926 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.139044803 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.15417504 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.126956549 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.10146151 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.6274351 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.100957542 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.13194324 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.109145205 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.227298801 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.180751196 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.107165307 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.131788193 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.114433908 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.178053261 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.225659847 seconds)
  done (took 47.13964831 seconds)
done (took 63.114976457 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.260798299 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.173214633 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.277639521 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.172175003 seconds)
  done (took 1.917862808 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.238946569 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.159530676 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.196517244 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.117738096 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.201612572 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.117990638 seconds)
  done (took 1.994547922 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.170042115 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.164022879 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.142211236 seconds)
  done (took 1.436867224 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.19680529 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.211237696 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.318910739 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.228922513 seconds)
  done (took 2.007198613 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.258171475 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.11514988 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.12217615 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.202311813 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.215130267 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.17240542 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.143046435 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.168188623 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.129509132 seconds)
  done (took 2.534336348 seconds)
done (took 10.850358174 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.289434637 seconds)
    (2/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.278788428 seconds)
    (3/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.24616699 seconds)
    (4/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.376632159 seconds)
    (5/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.222639786 seconds)
    (6/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.357843782 seconds)
    (7/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.190806065 seconds)
    (8/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.13592509 seconds)
    (9/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.234637612 seconds)
    (10/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.105326139 seconds)
    (11/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.346415932 seconds)
    (12/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.212446232 seconds)
    (13/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.132321077 seconds)
    (14/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.117620473 seconds)
    (15/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.358501238 seconds)
    (16/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.176291055 seconds)
    (17/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.127504783 seconds)
    (18/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.239705677 seconds)
    (19/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.139296719 seconds)
    (20/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.189439223 seconds)
    (21/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.246808841 seconds)
    (22/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.112481339 seconds)
    (23/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.107027778 seconds)
    (24/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.226375171 seconds)
    (25/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.289616954 seconds)
    (26/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.182371904 seconds)
    (27/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.244905125 seconds)
    (28/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.107765429 seconds)
    (29/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.198548179 seconds)
    (30/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.180937192 seconds)
    (31/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.147252847 seconds)
    (32/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.126449306 seconds)
    (33/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.189763696 seconds)
    (34/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.084691257 seconds)
    (35/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.105315119 seconds)
    (36/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.145043043 seconds)
    (37/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.124826268 seconds)
    (38/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.108900772 seconds)
    (39/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.118691148 seconds)
    (40/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.245714215 seconds)
    (41/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.111144954 seconds)
    (42/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.211175851 seconds)
    (43/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.079627296 seconds)
    (44/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.169971104 seconds)
    (45/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.110161817 seconds)
    (46/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.149536926 seconds)
    (47/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.23602461 seconds)
    (48/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.153495258 seconds)
    (49/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.205860483 seconds)
    (50/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.208941162 seconds)
    (51/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.116991913 seconds)
    (52/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.127502263 seconds)
    (53/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.135385562 seconds)
    (54/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.12346197 seconds)
    (55/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.141614496 seconds)
    (56/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.159462284 seconds)
    (57/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.107163474 seconds)
    (58/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.190777713 seconds)
    (59/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.09684396 seconds)
    (60/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.083826764 seconds)
    (61/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.216311564 seconds)
    (62/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.078705346 seconds)
    (63/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.104548936 seconds)
    (64/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.083294999 seconds)
    (65/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.130881487 seconds)
    (66/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.157729612 seconds)
    (67/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.08385138 seconds)
    (68/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.079058793 seconds)
    (69/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.1936912 seconds)
    (70/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.156055566 seconds)
    (71/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.099063896 seconds)
    (72/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.115001463 seconds)
    (73/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.10129199 seconds)
    (74/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.151762211 seconds)
    (75/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.084637784 seconds)
    (76/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.127804716 seconds)
    (77/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.212864564 seconds)
    (78/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.137225872 seconds)
    (79/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.083580247 seconds)
    (80/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.129375171 seconds)
    (81/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.1071715 seconds)
    (82/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.109907137 seconds)
    (83/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.168388798 seconds)
    (84/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.102560895 seconds)
    (85/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.127833035 seconds)
    (86/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.107077441 seconds)
    (87/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.124571606 seconds)
    (88/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.168790874 seconds)
    (89/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.099455537 seconds)
    (90/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.133214333 seconds)
    (91/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.127557425 seconds)
    (92/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.110183899 seconds)
    (93/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.07924145 seconds)
    (94/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.122000464 seconds)
    (95/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.101331785 seconds)
    (96/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.078943862 seconds)
    (97/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.1434871 seconds)
    (98/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.119868006 seconds)
    (99/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.100800417 seconds)
    (100/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.128675823 seconds)
    (101/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.14431358 seconds)
    (102/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.12010485 seconds)
    (103/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.07702129 seconds)
    (104/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.123622306 seconds)
    (105/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.07774427 seconds)
    (106/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.077667174 seconds)
    (107/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.077140377 seconds)
    (108/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.079355853 seconds)
    (109/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.103539498 seconds)
    (110/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.126283997 seconds)
    (111/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.097839851 seconds)
    (112/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.132514283 seconds)
    (113/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.077691944 seconds)
    (114/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.147183392 seconds)
    (115/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.139505191 seconds)
    (116/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.162171352 seconds)
    (117/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.078176227 seconds)
    (118/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.124252037 seconds)
    (119/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.162031138 seconds)
    (120/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.102993827 seconds)
    (121/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.101587059 seconds)
    (122/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.152630843 seconds)
    (123/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.16078138 seconds)
    (124/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.084458446 seconds)
    (125/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.077804411 seconds)
    (126/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.107379583 seconds)
    (127/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.10304236 seconds)
    (128/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.108752135 seconds)
    (129/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.083401847 seconds)
    (130/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.104181832 seconds)
    (131/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.100566872 seconds)
    (132/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.103286666 seconds)
    (133/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.077778334 seconds)
    (134/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.130729758 seconds)
    (135/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.083874221 seconds)
    (136/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.080721168 seconds)
    (137/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.100655074 seconds)
    (138/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.100185563 seconds)
    (139/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.078948745 seconds)
    (140/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.137585444 seconds)
    (141/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.1215192 seconds)
    (142/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.147977243 seconds)
    (143/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.107927895 seconds)
    (144/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.100954674 seconds)
    (145/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.133807472 seconds)
    (146/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.110427184 seconds)
    (147/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.078201034 seconds)
    (148/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.083554565 seconds)
    (149/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.124817299 seconds)
    (150/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.113902009 seconds)
    (151/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.109298288 seconds)
    (152/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.106187952 seconds)
    (153/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.082087996 seconds)
    (154/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.084217908 seconds)
    (155/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.08352015 seconds)
    (156/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.083991416 seconds)
    (157/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.123747248 seconds)
    (158/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.0851703 seconds)
    (159/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.098671693 seconds)
    (160/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.100240222 seconds)
    (161/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.135277682 seconds)
    (162/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.077727607 seconds)
    (163/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.106957031 seconds)
    (164/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.077436029 seconds)
    (165/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.10682256 seconds)
    (166/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.080165969 seconds)
    (167/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.121087035 seconds)
    (168/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.080430162 seconds)
    (169/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.100408671 seconds)
    (170/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.100255649 seconds)
    (171/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.101894161 seconds)
    (172/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.108152914 seconds)
    (173/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.104214684 seconds)
    (174/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.099349174 seconds)
    (175/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.084883836 seconds)
    (176/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.080226696 seconds)
    (177/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.100840989 seconds)
    (178/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.081672537 seconds)
    (179/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.078032601 seconds)
    (180/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.098573841 seconds)
    (181/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.083001049 seconds)
    (182/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.121876717 seconds)
    (183/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.101864766 seconds)
    (184/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.083551607 seconds)
    (185/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.142481777 seconds)
    (186/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.078390686 seconds)
    (187/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.078457817 seconds)
    (188/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.077999501 seconds)
    (189/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.079630085 seconds)
    (190/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.077431218 seconds)
    (191/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.131703369 seconds)
    (192/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.108018094 seconds)
  done (took 26.229447601 seconds)
done (took 27.195173729 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.202292038 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.125960918 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.109599244 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.107875764 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.197009795 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.115939318 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.124830822 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.134267438 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.117738343 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.108322232 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.122412675 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.122353628 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.108595267 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.199082442 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.110795214 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.123886088 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.101151666 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.118548272 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.14704863 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.125515114 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.197734401 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.104028197 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.117570309 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.122999456 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.175243528 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.100561076 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.132916327 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.110278041 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.120335642 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.135056593 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.110809132 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.099375094 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.151128305 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.126360579 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.099036749 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.131965611 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.101548841 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.085575326 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.109476113 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.13374032 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.122011747 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.109778094 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.134306094 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.10297727 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.110013592 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.133077668 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.100886333 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.11282192 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.122785717 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.111941796 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.102257833 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.147281441 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.109749078 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.098723071 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.098458948 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.125619826 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.120972825 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.099906923 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.145746472 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.101706378 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.100797166 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.12420577 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.112738097 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.100945225 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.13324497 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.101798578 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.112846137 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.111157694 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.133408317 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.103519357 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.100276856 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.132427373 seconds)
done (took 9.769457659 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.106436455 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.144955604 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.196500445 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.207741073 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.127860509 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.114211875 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.139625984 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.123965274 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.112693109 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.144731319 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.138606995 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.156108054 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.181702138 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.141010492 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.117130997 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.1122245 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.136859748 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.111287159 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.206207478 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.126659621 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.124935785 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.142475441 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.12792007 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.140404382 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.106030928 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.135062602 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.132145144 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.113836888 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.104214789 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.137036989 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.12658565 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.105200864 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.130532114 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.124913821 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.120157783 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.138542106 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.116698965 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.112562522 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.12824107 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.105882635 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.11219639 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.145427391 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.107118783 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.114587923 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.137118995 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.120796883 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.111851465 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.142044789 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.107773544 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.112007214 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.129453312 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.130787633 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.117123794 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.144975078 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.118269686 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.116339712 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.142070014 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.118477433 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.108113932 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.141344621 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.10752961 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.104842635 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.130366299 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.127270515 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.107774486 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.142567355 seconds)
  done (took 9.514598083 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.124274656 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.133985336 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.138947916 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.11645098 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.109105035 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.122929014 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.099743268 seconds)
  done (took 1.854362616 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.101961999 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.183184576 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.205478732 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.206660624 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.178742581 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.216054675 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.146258678 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.101342673 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.13468792 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.134617097 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.184430599 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.234024094 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.110443173 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.14020692 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.184077412 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.124756169 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.186932159 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.125812584 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.1162978 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.210610927 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.116994648 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.131269439 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.138507737 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.102047897 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.202703361 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.103363842 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.260506275 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.119219362 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.133718548 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.115276629 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.114761757 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.202928382 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.17981623 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.139280307 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.10923172 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.207681706 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.179381136 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.138634564 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.19206463 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.130341793 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.180314356 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.139883205 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.116444266 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.114603414 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.141435544 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.168332107 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.144206306 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.116960948 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.113573602 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.211993334 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.1112391 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.20775194 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.112096951 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.13897822 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.114305519 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.116421454 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.14712712 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.118086271 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.211878247 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.118848287 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.205998266 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.182948279 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.205945702 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.207635882 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.124803084 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.207771488 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.174812313 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.137898574 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.111266148 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.11555664 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.209009189 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.114137645 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.138803353 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.173171043 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.142689685 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.185354098 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.208540943 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.112646282 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.138930819 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.106589576 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.113938636 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.125356882 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.175530197 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.114570118 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.138984914 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.119949163 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.112568907 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.140628507 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.106647509 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.147381829 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.116713913 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.113058466 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.143379739 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.116913072 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.118094773 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.211490528 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.110990878 seconds)
  done (took 15.536813163 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.104619128 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.103003055 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.106416296 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.127796463 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.10481687 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.103435513 seconds)
  done (took 1.683723535 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.139998673 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.116102116 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.148570228 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.11710651 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.15940922 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.21207135 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.216728346 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.111187209 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.155750432 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.126503632 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.213088399 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.190389589 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.214721484 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.118456118 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.217448689 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.116916548 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.21753133 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.114786398 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.149378625 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.115322059 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.115356915 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.143218514 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.11503409 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.204194748 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.118279529 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.117329023 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.154715316 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.125785412 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.122448656 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.135570325 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.119319762 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.116060429 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.13443508 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.11201459 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.218207216 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.109444395 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.110512606 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.145926495 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.118777252 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.141216569 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.192428448 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.13833306 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.123645171 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.119418342 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.13433604 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.110464807 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.119052609 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.135041344 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.195078836 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.1451733 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.120329475 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.116333923 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.142238649 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.121894909 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.108891004 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.136996258 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.120391607 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.220843421 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.119591189 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.108884835 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.143616572 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.119130878 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.135947117 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.122038902 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.117470146 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.142076205 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.110814421 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.117496079 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.136663153 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.118637126 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.119064961 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.139713874 seconds)
  done (took 11.133972899 seconds)
done (took 40.725656674 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.587664575 seconds)
  done (took 2.616930801 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.880348599 seconds)
  done (took 1.910215413 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.533496454 seconds)
  done (took 18.593074304 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.420023849 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.463222848 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.113912546 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.146669576 seconds)
  done (took 3.172450422 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.811567949 seconds)
  done (took 1.860291358 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.279600172 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.258098909 seconds)
  done (took 1.570200307 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.72039478 seconds)
  done (took 1.763528252 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.499302548 seconds)
  done (took 2.534159087 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.28382923 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.238269219 seconds)
  done (took 1.567082632 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.601092788 seconds)
  done (took 1.646122259 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 19.61650938 seconds)
  done (took 20.664116868 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.25312739 seconds)
  done (took 1.303278357 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.286046269 seconds)
  done (took 1.338810957 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.4430115 seconds)
  done (took 4.497678325 seconds)
done (took 66.074824434 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.114720065 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.116864563 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.115073939 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.138768897 seconds)
  done (took 1.528137129 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.122086323 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.117465267 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.11998632 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.141226804 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.122998999 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.115831963 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.140676791 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.118872119 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.116257918 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.143977423 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.117936721 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.116200575 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.143072513 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.116159671 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.113299708 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.142941716 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.120234054 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.116520523 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.141912171 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.119201015 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.116776647 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.140910231 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.121358715 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.117465525 seconds)
  done (took 4.053775225 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.112695238 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.107786986 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.109951921 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.129990295 seconds)
  done (took 1.515083143 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.124845657 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.127364703 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.149506962 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.125097751 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.127054899 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.150086224 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.115982954 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.112781973 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.13912835 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.125107679 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.130903923 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.153967398 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.127463989 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.115886539 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.150735467 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.110985634 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.11554701 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.152054097 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.122361928 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.123076328 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.141714122 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.12285869 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.119018391 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.1496235 seconds)
  done (took 4.184306765 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.188922871 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.12718445 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.169417348 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.159568344 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.171337465 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.114298045 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.142812169 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.146495073 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.12267471 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.117123675 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.143701137 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.160207318 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.145548754 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.119289095 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.115773974 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.146446506 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.127837405 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.121437938 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.185572009 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.121717208 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.145224113 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.130301181 seconds)
  done (took 4.177297698 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.119428949 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.108203727 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.104267912 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.133744227 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.118449461 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.109060717 seconds)
  done (took 1.756212461 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.10641708 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.101920169 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.101560025 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.126411134 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.106175283 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.101336592 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.099494007 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.126545745 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.102137288 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.101567019 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.125200376 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.102179615 seconds)
  done (took 2.363641741 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.326680494 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.107226988 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.132496729 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.109377608 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.112333969 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.103708159 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.143494917 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.106220459 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.261730788 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.102511432 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.128893309 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.192823635 seconds)
  done (took 2.888960401 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197264951 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.144828106 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.250081718 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.362782005 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182940345 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.157696816 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.290003306 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.187191571 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.173754823 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.158843097 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180234589 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182567384 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.150312166 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207647661 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135908787 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.181158198 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160224586 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.229273617 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137233251 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.230952906 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178655236 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.170340999 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.211323927 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.144365845 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.163809327 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155862537 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.140525676 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.126227003 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186224517 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16108028 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191279124 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145792577 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.163392765 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209828444 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227540644 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193014045 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.267698314 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.129276358 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.191685898 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.212191943 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.251498084 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140007518 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.209500639 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148716963 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.151626188 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181630304 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17571288 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.178396233 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.15653294 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.141085669 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202281718 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17296091 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.196560447 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.131639115 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.303964586 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15694217 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.139348235 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.187218754 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184132504 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.221111771 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197969385 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.122183305 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.198443671 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186580893 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233536227 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.163032431 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.161269644 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.14708328 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162499593 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.226422046 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174543358 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182344243 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.224513169 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127088401 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192139164 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.164404899 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176692418 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22191596 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165788066 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.116169981 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171729376 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129856569 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147753927 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.18638037 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.117875979 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.233715266 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153667788 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.340460218 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178306186 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.179804901 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.155156887 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.182890506 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158833771 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.171625497 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.100586408 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163647179 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.159270082 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17665274 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126989483 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.150193281 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163324028 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.123769772 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172469725 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.120927254 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187057181 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.134564087 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157805852 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190707063 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.127107556 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.20029032 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.143992103 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.184637771 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188274936 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188778532 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152666924 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.130580043 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238627604 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165496526 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.160644254 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.170585613 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.216809042 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.146529652 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157718984 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.156720971 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.214041632 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138368064 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.222447042 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159440381 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.131599032 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.134035605 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195877359 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.179742375 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.152280352 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123469925 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.187378302 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212193485 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.124904649 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.135498917 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201920993 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.12962531 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148274531 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133246172 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157379355 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.142670219 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.144101865 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.162707267 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150915502 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186905962 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.159736739 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17705739 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131017102 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191788575 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1274182 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.189757591 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.145065602 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.141668597 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.169956384 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217966716 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.126741062 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203873449 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.158826041 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209840567 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195523217 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127149359 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.206402688 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.127089854 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.116947238 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181790482 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.16684812 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.1834352 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.207980029 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204381959 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.161825092 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.185605309 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14542022 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18835036 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.18015819 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179202872 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.139278975 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.19457037 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163211189 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.144050125 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.120344254 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.123891366 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160266536 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127152893 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.158812019 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173259513 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184966158 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.203229013 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.165166229 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160332502 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.188435221 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.147715944 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156739075 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.196225202 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135981892 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.209457151 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185233795 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200002208 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.136452684 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18269494 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.118281928 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.149159964 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.132596117 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.182632441 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13590252 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.131512918 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163796522 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.185923305 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194492144 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143776257 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216001629 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187618523 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.221941655 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.119717711 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.156594853 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191823229 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162679641 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.206693347 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132011374 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.183503517 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.187682562 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164649176 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18613818 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190810305 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198116529 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190169457 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.188147484 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.128072811 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.170350268 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159299636 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160210929 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.159637001 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.167078843 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129411357 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146346424 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.161072048 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136305281 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203370618 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138973599 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199343785 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.177397374 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16723761 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.122707745 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164919009 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.170400662 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170787938 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.10399666 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190887558 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189330843 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1727401 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150232006 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195429577 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.127063439 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.33632328 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.208421592 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172363831 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.158945454 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135309766 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.190464827 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.161369801 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184188858 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.182527743 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164887208 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200366307 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.193009111 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.138995481 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154724886 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.145293305 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.171689692 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.136631853 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.172280225 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.158729433 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.16489884 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179393872 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160868424 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.16631203 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198532628 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.14364218 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.171455969 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136317791 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.245615127 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162678053 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194306715 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.159966398 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.188123193 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20450653 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.122876863 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123329699 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.15362127 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.181801091 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126016786 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19923709 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.19011012 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209760894 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172045636 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18766857 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138139049 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.149907516 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.16410744 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142892281 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.211557921 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158389171 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.134664101 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211001151 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.126276487 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.153980567 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.159120136 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.292153063 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145437742 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194962082 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.105972741 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.287052007 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.127039796 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.129005831 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.184853072 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164447207 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.157128547 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.178547086 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198468895 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138340482 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.185896689 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132464828 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.203510334 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183691527 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189318931 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194181903 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.14166769 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.185119973 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156397968 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197590082 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141757275 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.171414283 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.156333774 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.217861861 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.175335955 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.155606179 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164621829 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192582991 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.166154912 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195047407 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.135960217 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206844409 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124215755 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187286645 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135146088 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.146985697 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157437029 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.19126192 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127945914 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199427708 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165354961 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155507618 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.12656796 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140729155 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187429823 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136163877 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.152812625 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177005469 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.153402708 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175697901 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229141549 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126663379 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.191093214 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.143919406 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.154236751 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13624651 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164511385 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130709287 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.17048415 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204790222 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.129138071 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200716707 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159436409 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186143199 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.151291388 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.167379433 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 1.33252866 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.153886183 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187209488 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.173177138 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192555941 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.174652108 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170476727 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.193073505 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144207573 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186674398 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142981641 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.245089457 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158993432 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.191258746 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.129028026 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167537195 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135816018 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.129952359 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.176990413 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164361041 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167144807 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.132977393 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.191100557 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142586258 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.170033038 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140305806 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.22444087 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.149129732 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205965548 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.181902251 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.162384439 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170327979 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196873582 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125652611 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.188180424 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192511426 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.142703646 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146092065 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.159694095 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.135986565 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234597837 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.12295024 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.183695525 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169220405 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.191881322 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167043362 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.159497515 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172674386 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16349164 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170818343 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.151312732 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.15054512 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.192679369 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.132761035 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.123903277 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.193840609 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153445848 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.189358269 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138447965 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.197511442 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193139298 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.147657319 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131940021 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.29052875 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158226876 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.218295825 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.135567775 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.160057932 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144486941 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153705685 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.188705634 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166408343 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.156739189 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127048955 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.168536092 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.156648971 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.169014948 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.166771591 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194363672 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157621228 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208307563 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.132483541 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.275820227 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.139932781 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.191725192 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.116106616 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.126066966 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163145473 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132627067 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137988814 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.208064149 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237006279 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.15959807 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.171780718 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.132063904 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.151784969 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129788518 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160187583 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174649224 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164580323 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170574869 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.10272067 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136116582 seconds)
  done (took 84.062358596 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.160125951 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.148951085 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.166003434 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.218943426 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.190803494 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.286904136 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.22571683 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.241768736 seconds)
  done (took 2.781428722 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.117046726 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.15529822 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.138572069 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.141162887 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.107547051 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.435626218 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.129162366 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.144137509 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.158424642 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.146609729 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.132474345 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.495672678 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.112018079 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.145549082 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.143772655 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.106975069 seconds)
  done (took 3.946975465 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.520775735 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.526275035 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.738087611 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.285807847 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.253375113 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.195837903 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.71148693 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.194292735 seconds)
  done (took 11.570852935 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.152837073 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.144750021 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.409330274 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.728052094 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.199635058 seconds)
  done (took 2.781694966 seconds)
done (took 128.654670359 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.121116475 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.120265741 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.121065724 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.149402835 seconds)
  done (took 1.645978498 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.173445942 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.089180624 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.091238225 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.115042257 seconds)
  done (took 1.611082393 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.418720996 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.089554043 seconds)
  done (took 1.678928626 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.14776662 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.134243707 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.161839118 seconds)
  done (took 1.603550229 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.136905147 seconds)
  done (took 1.283792934 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.11886607 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.113434852 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.232340565 seconds)
  done (took 1.616654076 seconds)
done (took 10.585697725 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.118271943 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.922479921 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.428818012 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.131363795 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.708529686 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.424482767 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.397372612 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.170548404 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.171569971 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.134651159 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.130295189 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.685990367 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.408196878 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.871243162 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.365330934 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.896324571 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.690526089 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.11071158 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.140554472 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.110400887 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.375673511 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.132923811 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.109812072 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.110137722 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.715945549 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.418800013 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.107750862 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.910146399 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.107942555 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.110728017 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.423167103 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.109323101 seconds)
  done (took 20.789904823 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.115141579 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.163193034 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.141753523 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.109461444 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.110337757 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.135598372 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.119895673 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.120226946 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.199519148 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.107518741 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.15638705 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.108646913 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.112702076 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.134961581 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.134239255 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.108289412 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.135941001 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.11172342 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.116197708 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.134023206 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.130907797 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.106730921 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.10960853 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.137761103 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.107734874 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.128771432 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.134945795 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.120534934 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.106721176 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.139220433 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.112275414 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.108301994 seconds)
  done (took 5.179279406 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.155887971 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.173996338 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.145794434 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.145339937 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.182419235 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.11092042 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.219222616 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.14717458 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.199059419 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.111899002 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.129569528 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.134732937 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.149171614 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.108674657 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.160243565 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.10888292 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.111466343 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.136829025 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.117294985 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.109366127 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.157470632 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.110182353 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.109460143 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.137450834 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.109795284 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.130098784 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.136151325 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.120388782 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.10770043 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.14001085 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.114446136 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.108391315 seconds)
  done (took 5.501311594 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.123467105 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.124135982 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.13128728 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.15845074 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.120310359 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.121544202 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.149281159 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.118590686 seconds)
  done (took 2.210630809 seconds)
done (took 34.830681611 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.134275654 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.1270568 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.129211776 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.150756792 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.185284881 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.144171318 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.12634477 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.115074752 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.149024302 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.130701438 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.108869392 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.11643866 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.157165365 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.119154019 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.214645107 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.124117715 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.219508638 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.188393546 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.14399417 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.124720683 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.117327364 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.219978417 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.120540989 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.115797019 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.218995045 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.11182757 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.209028602 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.11874156 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.118074101 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.139132509 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.187866995 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.148927746 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.117219966 seconds)
  done (took 6.004212562 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.204953129 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.118758889 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.146326649 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.118591486 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.118548068 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.143536995 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.207381532 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.144166399 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.118865504 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.11675139 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.11463194 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.216902475 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.122311026 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.139037107 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.120797309 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.109158448 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.234336563 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.119635987 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.107944206 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.091263119 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.141137359 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.11658483 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.248422607 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.114283857 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.115822394 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.144282329 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.121335356 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.122308477 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.118878511 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.148722485 seconds)
  done (took 5.376785285 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.123384387 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.129965506 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.133487189 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.210863803 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.146037538 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.15721091 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.137764749 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.130925517 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.166499068 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.112396911 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.125669729 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.174406761 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.127469699 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.121435433 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.142713854 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.130593958 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.131920585 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.138707067 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.120302529 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.127215253 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.158710842 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.129297197 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.134045262 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.145341443 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.111559084 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.118002955 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.121255651 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.156170127 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.119724134 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.124714879 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.141875756 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.116122787 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.11284331 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.174485756 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.114261927 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.123176343 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.165014744 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.124804025 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.124841565 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.172275879 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.115506708 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.111369737 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.16569457 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.164631953 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.11227784 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.154052325 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.123728323 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.125173073 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.137318764 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.130703301 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.152724395 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.139213014 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.13253196 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.109863494 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.138490722 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.120328362 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.111529753 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.141612489 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.127293655 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.113620605 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.134501497 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.14898381 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.122262697 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.112080815 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.150453193 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.111355705 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.10989164 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.143549446 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.137591366 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.118388575 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.174041618 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.113161114 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.122770654 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.150573779 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.123773346 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.123941406 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.110597066 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.150813398 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.123551404 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.117084358 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.152051932 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.114497968 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.114493177 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.155415722 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.133190829 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.125497241 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.151603249 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.126597919 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.114512015 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.141219595 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.130682187 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.113218407 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.116145049 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.153359785 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.112470663 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.114779674 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.153545506 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.123650143 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.109045143 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.164171999 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.116693472 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.111017613 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.163643359 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.116721838 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.117520286 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.120706661 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.181929434 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.111890873 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.12159908 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.155323943 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.112110295 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.118125149 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.143559986 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.112312208 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.129008215 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.155930253 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.121081713 seconds)
  done (took 16.706471511 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.312746 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.27053544 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.211333295 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.302703108 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.124981622 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.23408409 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.296088253 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.299204376 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.111597824 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.176753646 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.163578675 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.269927306 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.1415274 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.140973817 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.301161006 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.354686945 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.17006911 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.151095538 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.176220282 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.127175946 seconds)
  done (took 5.52015247 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.133307261 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.145926116 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.162152468 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.140575528 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.122078517 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.158343722 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.112215341 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.133796714 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.152321778 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.122046022 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.114773062 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.156925626 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.125325957 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.128969178 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.155512079 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.145944854 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.118906805 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.144129117 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.135280107 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.115622144 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.12811426 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.138202231 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.120219469 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.161664171 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.131948669 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.12263252 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.138975441 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.118398754 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.118006004 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.147191955 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.119411275 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.130757003 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.148003973 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.106258896 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.124759603 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.126739725 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.146330996 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.116210604 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.117155338 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.143456788 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.128903814 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.125313795 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.120477304 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.125585444 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.13163602 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.109016099 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.12583549 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.153467761 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.106410261 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.131182656 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.152507835 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.128126782 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.119016208 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.16305803 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.120389125 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.128561002 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.151550238 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.128450232 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.116913936 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.138623092 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.112226105 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.116021423 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.120296271 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.156147129 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.125609322 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.131128137 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.156681045 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.112560106 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.11595661 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.144958043 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.116501758 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.125730193 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.160903311 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.12171587 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.118231374 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.152618247 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.122179605 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.094280976 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.12062178 seconds)
  done (took 11.555119495 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.137438876 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.122949051 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.130151821 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.175984184 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.126061352 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.117763951 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.151461551 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.133213666 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.127092855 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.159667981 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.128257513 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.125802927 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.162863018 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.123626085 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.122030844 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.156538664 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.126986506 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.148516447 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.159642833 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.139728201 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.127012513 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.1467297 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.125340036 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.123099699 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.169532919 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.124227667 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.138898871 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.156961017 seconds)
  done (took 5.086456459 seconds)
done (took 51.411020067 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.308777289 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.515265101 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.289006878 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.286276657 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.319540172 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.31516232 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.288212854 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.289022968 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.775885661 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.261353589 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.288220918 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.294858041 seconds)
done (took 29.42067867 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.37513277 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.834066679 seconds)
    (2/2) benchmarking "String"...
    done (took 1.57647697 seconds)
  done (took 4.590449746 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.292853305 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.278193319 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.524674723 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.276232883 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.277181105 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.278284919 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.280152482 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.291933585 seconds)
  done (took 16.38807108 seconds)
done (took 26.82722156 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.328880856 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.478731931 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.520021888 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.277595987 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.279503057 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.27792271 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.282625794 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.292690177 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.289379762 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.277707918 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.665998368 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.541159569 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.284706232 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.646880316 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.279166317 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.305577502 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.283780402 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.517327635 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.293257708 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.30675293 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.25679206 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.262395125 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.333018339 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.281246328 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.278720364 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.28116684 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.292489842 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.277611659 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.453697838 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.277142933 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.312721681 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.282043664 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.286309795 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.278742283 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.280793986 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.291132606 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.463313463 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.283255855 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.26181255 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.299280625 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.458975547 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.282746558 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.285082716 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.290255763 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.284083266 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.337877841 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.263280701 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.402411321 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.316081397 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.287373878 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.338855643 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.64307951 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.286199004 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.300184945 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.294709228 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.493612802 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.280741099 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.317835994 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.302584073 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.305042831 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.281410503 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.28953569 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.322099109 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.280309538 seconds)
  done (took 148.591697469 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.275823761 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.282218152 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.2841617 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.342791649 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.282242798 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.283711626 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.276884172 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.279801175 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.283009827 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.310955182 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.284254018 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.279331851 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.282332574 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.2462743 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.288599129 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.296132842 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.28358284 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.279426247 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.304322287 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.280035835 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.280775245 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.283294522 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.295807886 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.279446349 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.30034277 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.336463595 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.284063578 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.294438818 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.292819569 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.277843872 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.305029412 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.330830673 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.834837158 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.152278655 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.286231326 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.311385758 seconds)
  done (took 83.054011884 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.277172486 seconds)
    (2/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.277715527 seconds)
    (3/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.278486954 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.277639822 seconds)
    (5/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.279419428 seconds)
    (6/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.305695162 seconds)
    (7/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.276983476 seconds)
    (8/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.789267588 seconds)
    (9/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.792722323 seconds)
    (10/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.248146148 seconds)
    (11/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.362825116 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.441710543 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.439774466 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.276957537 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.364947374 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.29095138 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.279197277 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.292825218 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.303074675 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.281939469 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.279921555 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.785596677 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.293609987 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.471458335 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.44001677 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.294286334 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.306969632 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.6666213 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.28060995 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.307236975 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.597542406 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.322679899 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.275659781 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.535254575 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.31903702 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.384462603 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.279069107 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.30598272 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.277315103 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.548955933 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.279403795 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.277670839 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.27952152 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.829794814 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.279831546 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.772873362 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.282200184 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.142011423 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.277741735 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.277358634 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.220667868 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.796690143 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.281001119 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.275879743 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.278648614 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.274467463 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.277703619 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.304966836 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.184469906 seconds)
    (60/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.279781671 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.361494552 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.278510685 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.28031351 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.304868495 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.277067288 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.47483238 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.276343529 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.797100528 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.336070344 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.368959151 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.759257166 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.280045006 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.362904889 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.386661162 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.273929033 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.27347401 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.272564255 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.273004519 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.380637055 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.275332373 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 5.894517898 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.435921068 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.288039009 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.357948328 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.37155737 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.27330158 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.524776095 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.278481175 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.274498222 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.896279335 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.364713595 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.275485726 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.274866093 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.275341184 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 5.89762449 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.761841235 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.427715732 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.280943769 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.836258896 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.280580744 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 5.075059251 seconds)
    (102/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.274895965 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.755153016 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.838596476 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.278950406 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.380611313 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.437836653 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.29138056 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.278670079 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.355321742 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.281141801 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.335524961 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.276726382 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.674376603 seconds)
  done (took 379.268225978 seconds)
done (took 612.093971769 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.147839632 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.098133543 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.242333959 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.111053241 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.094924801 seconds)
  done (took 11.873847231 seconds)
done (took 13.052810438 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.450478922 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.451752274 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.328416068 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.45499186 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.309778098 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.4675046 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.437001974 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.295416302 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.379337847 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.349722861 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.384653919 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.327148516 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.312367579 seconds)
  done (took 19.126447521 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.548468952 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.289091596 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.342708709 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.523583849 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.322590306 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.548246172 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.58343147 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.285668951 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.447646415 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.331980023 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.298507153 seconds)
  done (took 18.701872394 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.55240046 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.290038503 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.346328378 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.539041518 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.324271542 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.551476097 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.571427318 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.28970071 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.440929393 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.302523824 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.301001545 seconds)
  done (took 18.68787203 seconds)
done (took 57.694037334 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.315313023 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.372506565 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.314514175 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.298621001 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.295962253 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.297959443 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.298618441 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.296986448 seconds)
  done (took 11.671133607 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.295345995 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.297568691 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.296141344 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.295728868 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.293560005 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.29687745 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.296531482 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.298079279 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.297599864 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.298224343 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.29770159 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.293957996 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.296940683 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.298842472 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.29768767 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.297308394 seconds)
  done (took 21.929352117 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.299483189 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.297730381 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.297461377 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.297282099 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.298233124 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.29944989 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.295517789 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.296878672 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.299315241 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.297632224 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.299088195 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.297230106 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.295594157 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.29902437 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.297747426 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.300331273 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.298596058 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.298999248 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.301184961 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.299283539 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.297516047 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.298140654 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.297982621 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.297016807 seconds)
  done (took 32.337817816 seconds)
done (took 67.118377364 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.291422139 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.285991706 seconds)
  done (took 5.75955683 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.359688461 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.355158006 seconds)
  done (took 3.900079613 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.300497798 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.298671444 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.300447803 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.299648142 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.298565914 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.301106448 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.299513638 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.297308222 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.298575631 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.298526152 seconds)
  done (took 14.176155728 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.299889409 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.299226457 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.299144352 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.297019698 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.300278192 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.301278508 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.299870862 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.300079411 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.301898002 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.299823014 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.300681603 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.301758618 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.300247514 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.301169311 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.299964163 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.298808655 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.299054102 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.300696051 seconds)
  done (took 24.585353237 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.313732643 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.320032628 seconds)
  done (took 3.818028438 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.43050187 seconds)
    (2/7) benchmarking "second"...
    done (took 1.343092252 seconds)
    (3/7) benchmarking "month"...
    done (took 1.405021502 seconds)
    (4/7) benchmarking "year"...
    done (took 1.397565677 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.344527587 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.323102977 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.3431321 seconds)
  done (took 10.774556018 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.302186576 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.52682306 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.649184911 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.905590798 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.302680046 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.304458425 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.22979053 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.306967026 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.309900825 seconds)
  done (took 15.025195531 seconds)
done (took 79.221520242 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.29387709 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.3165703 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.316738865 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.307400577 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.599788448 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.315984827 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.29442865 seconds)
done (took 16.629194877 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.268969912 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.283255869 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.277115636 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.264629926 seconds)
  done (took 10.281385715 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.272738621 seconds)
    (2/2) benchmarking "read"...
    done (took 1.615867084 seconds)
  done (took 5.074080864 seconds)
done (took 16.54300597 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.303474525 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.301845767 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.30107232 seconds)
    (4/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.303685113 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.302089129 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.301157801 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.302768937 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.302114198 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.301035478 seconds)
    (10/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.303829512 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.301925927 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.300901015 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.303796563 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.301919991 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.304270384 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.303859114 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.303816116 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.301833469 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.304607443 seconds)
    (20/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.302640979 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.304053239 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.302642335 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.303955094 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.304132838 seconds)
  done (took 32.455528178 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.306093553 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.303803615 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.305377012 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.302262189 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.303890233 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.304785005 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.304159934 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.30433059 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.305781979 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.304499735 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.30534321 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.305069115 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.305460112 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.306629507 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.303631197 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.305462479 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.30436429 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.305622735 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.306266175 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.305204371 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.303947903 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.305354194 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.306323643 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.303923961 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.305064242 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.305020614 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.303320835 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.303988223 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.302077078 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.303829664 seconds)
  done (took 40.330445905 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.30675028 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.307178153 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.307185586 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.30612928 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.30680038 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.304474899 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.301560506 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.306348378 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.306072069 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.30627051 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.307091942 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.305376078 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.304359295 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.303958465 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.303824502 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.307513275 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.307019994 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.305143726 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.305269828 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.305740808 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.305806905 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.306531646 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.308308968 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.305512891 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.305402081 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.307777979 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.308014487 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.30660565 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.307953483 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.305661157 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.307096758 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.30837922 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.30682704 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.30748626 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.307099207 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.30708807 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.307533772 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.308874555 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.307185293 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.308431839 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.309784695 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.308445133 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.307058775 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.308538138 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.309836839 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.308040321 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.305995004 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.306451885 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.309215781 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.307521571 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.31025828 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.307530007 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.309842096 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.307752239 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.307940582 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.310243901 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.309433581 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.30739257 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.305821101 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.30996478 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.30785101 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.308207443 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.308299114 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.30819148 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.31130517 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.308292034 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.309067298 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.307637499 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.310598649 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.309589562 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.309927533 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.309949987 seconds)
  done (took 95.323663205 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.30785398 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.308593143 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.308864424 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.309801698 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.310489614 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.309308436 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.311712717 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.306708372 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.310463889 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.309754667 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.30933325 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.312855444 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.310231754 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.311748659 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.311767727 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.310463118 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.311693583 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.310305452 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.312554178 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.3104115 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.310152787 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.309262086 seconds)
  done (took 30.019010898 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.311221953 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.310916414 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.310363939 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.312214901 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.311321781 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.309709218 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.312140337 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.312807957 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.311856352 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.310480721 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.311169228 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.312713027 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.314492124 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.313320724 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.312332255 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.315644259 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.309337999 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.30638516 seconds)
  done (took 24.805203048 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.305284796 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.304100707 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.304052454 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.303676561 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.305761925 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.30074224 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.300879756 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.302422164 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.301497253 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.303027005 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.301557988 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.301667491 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.302385047 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.301525942 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.301636137 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.301594486 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.302559946 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.303003593 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.30245696 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.302514701 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.3022468 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.302547602 seconds)
  done (took 29.84310118 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.301928294 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.302163928 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.302912432 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.302457712 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.303482801 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.304221801 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.299581046 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.299032471 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.301423974 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.300771881 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.299985171 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.301028558 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.302740697 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.297561958 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.297286775 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.297422888 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.296360397 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.297161077 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.298029513 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.296897239 seconds)
  done (took 27.189611126 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.294758685 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.294365653 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.292967385 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.294404592 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.294018195 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.296396897 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.294988377 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.293412648 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.292220663 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.290837293 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.290544867 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.292656396 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.291157724 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.293505653 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.292318604 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.286928178 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.289528023 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.288293921 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.287165465 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.287577212 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.288776637 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.288564395 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.288743126 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.284763082 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.284814607 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.284263404 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.285250287 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.283570964 seconds)
  done (took 37.308368109 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.284470639 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.283497201 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.280456324 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.279718554 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.281813475 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.2808832 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.28022778 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.282000859 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.281675805 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.280687882 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.279223596 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.279547861 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.277989467 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.277700904 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.278346839 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.278709853 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.278124273 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.277589175 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.275938742 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.275402646 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.278242569 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.276290539 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.275767364 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.276056257 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.276426809 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.273062625 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.272459954 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.272569829 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.274608544 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.272771227 seconds)
  done (took 39.512853093 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.292542274 seconds)
    (2/2) benchmarking "in"...
    done (took 1.29182899 seconds)
  done (took 3.745630696 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.272344251 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.270147949 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.271155694 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.272035023 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.271081543 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.27029532 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.272738316 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.269959464 seconds)
  done (took 11.330964956 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.260057086 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.269008762 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.270051469 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.271428817 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.269407483 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.264148147 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.264391283 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.272038875 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.257088422 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.261351595 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.259290321 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.263862541 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.263187016 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.265212573 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.259410754 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.260287193 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.268536849 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.265026876 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.266488135 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.266728667 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.266430725 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.261810876 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.26038876 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.266919253 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.255386083 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.263449771 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.264652283 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.267848486 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.257191062 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.261105733 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.259167071 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.264514882 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.263054619 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.263165384 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.262303971 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.262627718 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.265360753 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.263330352 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.261847887 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.26691712 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.261717384 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.261821629 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.255232448 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.258156211 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.258449542 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.267157047 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.259872229 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.259535136 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.253931374 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.254575924 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.262696402 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.252481469 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.262265062 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.25597057 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.256883633 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.260886831 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.264211559 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.250998088 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.253417593 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.259706043 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.266997295 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.259246711 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.255824327 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.262435861 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.253696196 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.25694592 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.261114032 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.264350789 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.256644332 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.259472582 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.257016441 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.264330333 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.262776365 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.261255512 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.25628454 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.258196853 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.250196157 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.259198867 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.256807363 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.259735054 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.260093566 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.254641808 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.25352685 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.252781974 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.249588795 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.255550624 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.255920947 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.25560087 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.248236058 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.257087213 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.262695085 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.255256101 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.247818819 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.252393782 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.247176316 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.255869841 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.245032925 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.248840834 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.256743433 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.250619979 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.252949828 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.247486836 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.24568075 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.257511466 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.25253971 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.2536387 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.25701673 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.2451951 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.255892076 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.258378402 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.251221086 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.243150497 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.247823223 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.254141197 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.243617171 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.249705022 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.256318375 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.248823766 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.255225874 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.249126507 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.246747826 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.252518706 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.255673936 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.248957919 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.244042919 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.257549954 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.249971377 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.249490747 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.255552961 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.249885422 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.249979882 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.24695166 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.257994156 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.245855924 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.253946979 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.244808105 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.253454078 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.250751628 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.250961405 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.246781627 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.25101826 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.250340554 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.249203646 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.252146664 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.256313217 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.246295068 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.256633232 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.2503417 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.248215038 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.249250863 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.252175834 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.248707002 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.241159069 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.253079915 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.240936597 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.248749839 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.242041061 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.253765615 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.249073149 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.250490173 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.248189294 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.241209795 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.24454057 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.252350119 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.248315682 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.246179565 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.250454312 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.247734406 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.247192355 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.239867177 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.247887366 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.238833004 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.242262225 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.250489275 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.24882187 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.246349032 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.245655455 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.255415408 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.248214029 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.248412034 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.240364597 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.245736784 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.252588838 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.249859114 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.25641019 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.249370512 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.247408554 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.242997589 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.242525154 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.249769478 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.242375996 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.251819603 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.252267167 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.255907614 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.24487191 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.250464115 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.240624711 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.250829854 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.246110279 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.253799507 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.246845437 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.24710867 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.241484153 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.251543328 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.244895023 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.253193906 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.241136231 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.252419046 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.251257504 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.24946174 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.2504806 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.245064504 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.248296247 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.254238203 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.250978869 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.251467892 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.244712133 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.254690528 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.243182639 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.246012235 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.254793741 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.251568662 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.251962719 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.260234558 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.249498196 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.255560278 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.25360416 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.246356035 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.254165123 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.249180839 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.251346947 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.2555911 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.252903442 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.247397521 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.25657548 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.252516913 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.24522851 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.250841805 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.261716567 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.252601611 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.24616163 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.255307216 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.25440291 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.252283197 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.25353809 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.246261972 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.256649711 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.255415831 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.261211807 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.246523672 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.257530355 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.247674139 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.255410315 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.250550034 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.254288309 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.251963211 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.256199107 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.260289848 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.254537905 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.247779655 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.256350441 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.254591871 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.253423606 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.247847428 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.257428861 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.25597053 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.254591997 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.249584221 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.251810175 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.256549705 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.246570416 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.255242956 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.247725571 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.262941094 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.270828106 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.259131243 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.258239752 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.258896907 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.257180953 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.256719952 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.24802644 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.250405518 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.25084692 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.251315004 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.249389346 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.256981065 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.249103688 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.257169632 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.252439942 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.256758778 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.256664886 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.2553973 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.24704253 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.260182788 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.254714814 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.255467006 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.248236677 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.257871999 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.250119594 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.255999744 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.256860943 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.250590651 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.261809753 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.260958097 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.253327485 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.252005945 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.250962489 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.24969958 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.253308029 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.260710583 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.250171091 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.258368901 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.251520857 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.253226082 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.252387474 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.260926773 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.26670281 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.251012646 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.260156642 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.258912383 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.248912835 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.251390337 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.259707032 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.260066808 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.266390244 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.24976431 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.259689014 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.258424589 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.258830486 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.25706731 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.257735093 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.258269292 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.258738296 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.263382578 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.261884277 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.252401366 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.25954824 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.266240409 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.259981466 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.258555676 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.249823573 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.260363342 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.268593269 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.253498 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.254951852 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.254062715 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.260593012 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.258032024 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.259390629 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.259376489 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.259105665 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.2619537 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.263238193 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.261364698 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.260258171 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.264457195 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.269724982 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.261816849 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.270151879 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.253933664 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.266623776 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.259512765 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.255147378 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.254562368 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.256397989 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.264012473 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.252909104 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.263662425 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.259958429 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.256357395 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.260665305 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.266419202 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.253731469 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.260200569 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.268972078 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.252047703 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.261679769 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.261727393 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.253763588 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.262629719 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.258881654 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.248555379 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.250512751 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.251457955 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.260136015 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.249097932 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.260754274 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.249130629 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.257081312 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.250671625 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.250353286 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.250849446 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.250489161 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.243708226 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.253746533 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.250940973 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.261347534 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.245193354 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.249299294 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.244129254 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.255954884 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.261158946 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.244655529 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.255931294 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.250922768 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.24387865 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.247453643 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.255896084 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.243743739 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.25297476 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.241569201 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.243641262 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.246085369 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.25229533 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.25345705 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.253281358 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.242555735 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.245416895 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.252294977 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.250521395 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.252223552 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.247623097 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.256643366 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.24500169 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.245291987 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.252435405 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.245142408 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.256434377 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.243845801 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.248255142 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.249358771 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.255288916 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.252309974 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.251767209 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.243666403 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.246832788 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.257436759 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.255896133 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.24813029 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.248006771 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.253279913 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.245291783 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.249107798 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.248928379 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.246741604 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.248478726 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.255114143 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.245279861 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.246392599 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.247039484 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.255666002 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.254252796 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.256459258 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.248589721 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.25982842 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.261361978 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.259937898 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.245962014 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.250361415 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.25002783 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.254194441 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.254104078 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.248135586 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.262586882 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.259573927 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.257319827 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.252055984 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.254193638 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.247367218 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.256066655 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.254635608 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.249544764 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.259835035 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.250969164 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.260425513 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.253914882 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.254951918 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.245552987 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.247863057 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.249136644 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.249066467 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.256289205 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.253278551 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.256910457 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.251878075 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.259742878 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.25477587 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.254413716 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.253905451 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.246847466 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.256476551 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.246482721 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.255062532 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.256750932 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.247804223 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.257610259 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.255017032 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.249144412 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.250038464 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.260858122 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.254157333 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.249604924 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.252847544 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.26145381 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.265720676 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.255365408 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.248943694 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.253798635 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.25893171 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.256148511 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.256805944 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.249369567 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.265116991 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.269037564 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.249626066 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.253654595 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.258218792 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.26702338 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.255699332 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.258078905 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.252343474 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.254229763 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.258775236 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.257911303 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.260321483 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.263683971 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.252110946 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.259428157 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.249793905 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.252278678 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.257390782 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.266218396 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.257424367 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.251867466 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.264736874 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.266836822 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.254438068 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.268149469 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.264589191 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.257436837 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.263076517 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.250170079 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.25958875 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.253982532 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.262472765 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.25893179 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.258093664 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.259195041 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.250660111 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.259457146 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.26632586 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.268544122 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.259457105 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.251677331 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.254141657 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.261468546 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.259033273 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.261043127 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.258010335 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.259162097 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.259866586 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.253928961 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.269654479 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.273489609 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.264559638 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.25959126 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.259789374 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.259158891 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.262910667 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.256667256 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.264229257 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.260446148 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.260970226 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.258633414 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.269126475 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.261953327 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.253341232 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.255328291 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.254755794 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.263760388 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.266436559 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.278415476 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.262856236 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.264349719 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.262683817 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.261052357 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.25441764 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.265418286 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.259991892 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.255405545 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.256673497 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.263175691 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.261825357 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.260590906 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.253756508 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.264634266 seconds)
  done (took 749.127659881 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.262074908 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.260559136 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.26169895 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.261485286 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.262384554 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.260857421 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.260892459 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.260827804 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.261511692 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.261911062 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.261347368 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.263429781 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.262355993 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.261905143 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.262445392 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.261183729 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.262134949 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.262128251 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.262499594 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.263143594 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.261958577 seconds)
  done (took 27.64938069 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.263808012 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.262256434 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.262097274 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.262127309 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.263438393 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.262662889 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.262284054 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.263614364 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.263118447 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.263236083 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.264366697 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.26361628 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.263723612 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.262483593 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.26255182 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.263215548 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.263242258 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.263138993 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.263337379 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.26387303 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.263512818 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.264086311 seconds)
  done (took 28.942773252 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.263041827 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.263718747 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.256540812 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.266629441 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.26414541 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.263202826 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.263460104 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.263796076 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.262868446 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.257253262 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.258456822 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.257740884 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.258749607 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.268903443 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.259977945 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.270286279 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.265311709 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.265117219 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.264975293 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.264781532 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.266425702 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.27719349 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.264006546 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.256430264 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.268115348 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.264576881 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.264948049 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.264392912 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.25803296 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.266934531 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.265401895 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.258446193 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.266731476 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.267355556 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.260106483 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.267612541 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.265704052 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.265070871 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.266144988 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.262787645 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.274608538 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.266307045 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.269115522 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.276960124 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.266264744 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.257862265 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.269107967 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.266770075 seconds)
  done (took 61.856400926 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.267043327 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.266464876 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.265814771 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.266735978 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.267208192 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.266555931 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.266930683 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.267311365 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.267106519 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.266354722 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.266416992 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.267336775 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.267618174 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.267473827 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.267236826 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.266342128 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.267908497 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.266975711 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.268304661 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.268181076 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.267934598 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.268341964 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.268077366 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.268692985 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.267818104 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.268036739 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.267655727 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.267301109 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.269256036 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.267618969 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.267035726 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.26770772 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.26929089 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.268019558 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.268197533 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.268028528 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.268307886 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.268500262 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.26879976 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.268298403 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.269490276 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.269083372 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.267744933 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.270013191 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.2682267 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.268343914 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.269097415 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.268763757 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.269568417 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.268915368 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.270565441 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.270719094 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.268536227 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.26857601 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.270132142 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.270439786 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.269503631 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.27034069 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.26939281 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.269749132 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.269967843 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.270585914 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.270346969 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.270939228 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.269810363 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.27151374 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.271137748 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.269893696 seconds)
  done (took 87.412917106 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.271770158 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.271486223 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.27066267 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.270994302 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.271135483 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.271335035 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.270647687 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.271189274 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.27125864 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.273640532 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.270986514 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.271305245 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.271955336 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.271813878 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.272088868 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.271875943 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.271544842 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.273119499 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.273320616 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.272227777 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.271561759 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.272871769 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.27214493 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.272550825 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.272645872 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.273712522 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.272891518 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.273895186 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.272607537 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.272679537 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.273275444 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.273245946 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.272792508 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.274107329 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.274695989 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.272259391 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.273373585 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.273690209 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.273391599 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.272685011 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.273482312 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.27258698 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.27325635 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.273223977 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.273993887 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.273706796 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.273600602 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.274066163 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.273465439 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.27326338 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.273902448 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.273758175 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.273509036 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.274378157 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.273723219 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.27396791 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.274665366 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.274641801 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.275498841 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.275095879 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.275266866 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.274887012 seconds)
  done (took 80.084069929 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.274587814 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.274680968 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.274392568 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.27281488 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.274705289 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.274135576 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.274370094 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.27445339 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.275850784 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.275224731 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.2759097 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.275207999 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.275740419 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.277036015 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.275691927 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.275953133 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.277093488 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.275481526 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.276277013 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.275468282 seconds)
  done (took 26.666306334 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.275872145 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.276900888 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.27533293 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.276202385 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.27543964 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.275055982 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.276154771 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.275664105 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.275597576 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.276368445 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.27678382 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.276844164 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.277795912 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.276846935 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.276277439 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.277198172 seconds)
  done (took 21.582993199 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.277632873 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.27725658 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.277101925 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.276890174 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.277030871 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.277564616 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.277538864 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.276635572 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.277285394 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.277003817 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.277431221 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.277343655 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.278360564 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.278685142 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.277693956 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.277527733 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.276795454 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.276684664 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.278312485 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.277375243 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.277472933 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.277918808 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.279248355 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.278314004 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.278169172 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.27872667 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.277981254 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.278232593 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.278228249 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.278962981 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.278557204 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.279732743 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.279075742 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.278479816 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.278688236 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.277742448 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.279798128 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.279422207 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.27891159 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.280524663 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.278522089 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.279699367 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.279585893 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.279170265 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.279544084 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.279727205 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.279652005 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.278693872 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.278301951 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.280369693 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.279429432 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.280009582 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.279335429 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.279988702 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.279205676 seconds)
  done (took 71.479465093 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.280288975 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.279717366 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.279546668 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.279623492 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.281488526 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.28095195 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.279225678 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.282186046 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.279617697 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.280921623 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.280498271 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.280060408 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.280847384 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.280944912 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.281043469 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.281330959 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.280592247 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.280983869 seconds)
  done (took 24.216948863 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.282184294 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.281976155 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.279802722 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.279736706 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.280848966 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.283847207 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.281283262 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.282826641 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.282102388 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.283594268 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.28196977 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.282603184 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.281546247 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.281196663 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.282219226 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.282448461 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.281459327 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.282308686 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.28322474 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.282289201 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.283296609 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.282454367 seconds)
  done (took 29.37279066 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.273432545 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.273100386 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.272079882 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.285903056 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.281774741 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.273416075 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.272978091 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.272514767 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.290356651 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.297385728 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.291869563 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.279647569 seconds)
  done (took 16.532582934 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.283608757 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.284142996 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.284643159 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.284257204 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.284615518 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.283441405 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.283693746 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.283379583 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.284901009 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.284777723 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.28368034 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.285058198 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.282806297 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.284418026 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.283463473 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.285100271 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.283111421 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.284559814 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.284408261 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.286228489 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.283861851 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.284142628 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.2843221 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.284772466 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.28339913 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.284214115 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.285247291 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.284073127 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.285323346 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.284967606 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.286936569 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.284972929 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.283813619 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.286401987 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.285386681 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.284384467 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.285352565 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.284888451 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.287099298 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.286957384 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.286733499 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.286262223 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.287011985 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.286357127 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.28611261 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.285642556 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.286628327 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.286279227 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.285179489 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.286967471 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.286096365 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.286599989 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.286529638 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.285997752 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.286745506 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.287297978 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.286233004 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.287658942 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.286682317 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.286687633 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.287219464 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.286462132 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.286646683 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.287552074 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.288087257 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.286464677 seconds)
  done (took 86.009125096 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.287292682 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.287136228 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.28725702 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.287550119 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.287324732 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.287309756 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.288076161 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.286567386 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.287948965 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.286931068 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.287297831 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.287437028 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.288273521 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.289139449 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.288357872 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.287992672 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.288118721 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.28801366 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.288600999 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.288996171 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.288256178 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.286937211 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.288961344 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.28922585 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.288794857 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.28862376 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.289179302 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.288771307 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.289227259 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.288150648 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.288149842 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.287842825 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.289654436 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.288505077 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.288992519 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.288645272 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.290602738 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.288512414 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.289721858 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.290090344 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.289726234 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.290498773 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.288462754 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.289413085 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.289685797 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.290797232 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.290427867 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.290898295 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.29028611 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.290184226 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.290148751 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.29069025 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.291135963 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.291887624 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.290711135 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.291383832 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.291103294 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.290138162 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.291386604 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.291039177 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.290547329 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.291311055 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.29127539 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.290879677 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.290892533 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.291134754 seconds)
  done (took 86.264242211 seconds)
done (took 1770.24810372 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.445816891 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.40218978 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.280241465 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.293694715 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.28077 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.28124905 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.296896095 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.281339693 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.281867458 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.281556561 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.281612976 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.470482596 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.313205731 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.282464322 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.283185791 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.376610715 seconds)
  done (took 26.309942336 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.307014729 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.289596545 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.391731505 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.289269478 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.307790155 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.46442771 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.340113574 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.292235645 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.443595299 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.302259806 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.285033695 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.305997806 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.287346432 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.286429942 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.303451228 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.465480993 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.52237517 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.288267873 seconds)
  done (took 28.350105718 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.697448834 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.298458254 seconds)
  done (took 5.174006616 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.304892082 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.289307102 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.287819636 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.285466 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.279852819 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.280078375 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.287061523 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.281273752 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.282966078 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.409193533 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.29046366 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.298567124 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.286935592 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.287588527 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.295569964 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.32953252 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.45190777 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.296112259 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.297401857 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.293058307 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.287385522 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.377547587 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.327063822 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.297637648 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.40462503 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.295715838 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.294749205 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.295225865 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.400979093 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.299758622 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.287325568 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.288033273 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.289832362 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.243768124 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.820575859 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.28732832 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.310742112 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.299477403 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.29737825 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.436600667 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.290153422 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.295427166 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.282722232 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.808585065 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.39955125 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.400553153 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.287009305 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.308989022 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.290188419 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.351493294 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.293461981 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.290932027 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.345892027 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.082812824 seconds)
  done (took 82.865744813 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.332123833 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.282760903 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.464414251 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.303590275 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.283728083 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.287110406 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.288586638 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.548279096 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.295680058 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.283534491 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.593846736 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.884188096 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.29601317 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.348516251 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.324714467 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.335572415 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.285977048 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.283655828 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.287486559 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.287645806 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.834703684 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.284819482 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.284791802 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.35984852 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.322988998 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.801744812 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.28382863 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.284072842 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.289176846 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.285034017 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.854978149 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.292762883 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.338586185 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.286261917 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.563837003 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.661255412 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.621899226 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.29365941 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.307145947 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.286041151 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.31034542 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.796984518 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.640889409 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.285493641 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.285954184 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.792022927 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.286280857 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.294832046 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.296485569 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.553063196 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.292331106 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.286530931 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.286713828 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.284835361 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.286575228 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.33672575 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.329326001 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.804552255 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.286748501 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.286732629 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.330900022 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.289279313 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.291329359 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.29269045 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.289526581 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.640602507 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.516662105 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.289853586 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.637619903 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.846350872 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.289288064 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.935674095 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.292073116 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.292313162 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.321811483 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.297169649 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.286725349 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.803167104 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.30610102 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.287840217 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.616975897 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.289062368 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.587111447 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.30796375 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.290224351 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.850102406 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.300397094 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.332500704 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.288819888 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.290984396 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.288055762 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.290499195 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.569136474 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.334041477 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.288642001 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.289874062 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.338768143 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.288764115 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.30449846 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.297104719 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.923744876 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.30236462 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.288840615 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.30526857 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.288354118 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.288312767 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.292234934 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.290012284 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.571108629 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.291129639 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.307579897 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.289942714 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.289824778 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.292732492 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.365076411 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.299366158 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.581913337 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.293000424 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.290255384 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.293522783 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.29085694 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.302762232 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.290780117 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.313008954 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.289084184 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.594613629 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.305619678 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.305273479 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.291441156 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.290920885 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.315005948 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.294366604 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.343815013 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.292701976 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.046543122 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.333738166 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.291588775 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.290732883 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.299804894 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.291629427 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.316593543 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.29141674 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.589977666 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.574419846 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.521122939 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.294887559 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.292072975 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.073145682 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.331304382 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.475453574 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.311063031 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.292001482 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.570186863 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.513771363 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.295519273 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.292036149 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.295266245 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.569424867 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.297683417 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.604181306 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.878044755 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.297958167 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.296708479 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.048163986 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.10886963 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.294177041 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.29876333 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.58480737 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.31364553 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.293585486 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.294357774 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.294649073 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.293727199 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.298579845 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.294080989 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.294021712 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.292534374 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.635113419 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.487141974 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.309262852 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.305012734 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.811599692 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.314065389 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.294484094 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.30016151 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.297042402 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.295980197 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.355997584 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.297682011 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.329829777 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.298965333 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.305614726 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.834893617 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.295767714 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.297595229 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.488638757 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.006346648 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.299470216 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.297151752 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.295058317 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.3506834 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.845251375 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.320206752 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.587301833 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.306873983 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.337078343 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.296325449 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.311270731 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.844554526 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.29643911 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.29522751 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.019980549 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.297779053 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 4.726908695 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.295297132 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.298462006 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.935306859 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.297166023 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.297524593 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.304271851 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.297005101 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.611232612 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.297152607 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.34496681 seconds)
  done (took 488.793071297 seconds)
done (took 632.669282387 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.29603992 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.296911043 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.30226079 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.302700689 seconds)
  done (took 10.392175712 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.314617184 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.304189126 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.312146799 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.30176019 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.315245633 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.302292769 seconds)
  done (took 9.044625099 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.29683082 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.297547318 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.302151924 seconds)
  done (took 8.090368924 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.497437367 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.321557944 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.641825601 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.31624919 seconds)
  done (took 8.970727576 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.314138573 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.312210752 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.313693453 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.314430153 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.315085294 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.314993112 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.315738038 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.315105229 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.315828991 seconds)
  done (took 13.024026227 seconds)
done (took 50.715307704 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("map", abs, Bool, true)...
    done (took 1.412457024 seconds)
    (2/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.513024216 seconds)
    (3/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.443054339 seconds)
    (4/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.366550554 seconds)
    (5/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.405193369 seconds)
    (6/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.475983867 seconds)
    (7/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.389808813 seconds)
    (8/192) benchmarking ("map", identity, Bool, true)...
    done (took 1.415312693 seconds)
    (9/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.279470992 seconds)
    (10/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.373769913 seconds)
    (11/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 1.590628487 seconds)
    (12/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.284256735 seconds)
    (13/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.335699787 seconds)
    (14/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.405906352 seconds)
    (15/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.293462185 seconds)
    (16/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.283242328 seconds)
    (17/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.407082445 seconds)
    (18/192) benchmarking ("map", identity, Int8, false)...
    done (took 1.330298712 seconds)
    (19/192) benchmarking ("map", abs, Int8, true)...
    done (took 1.4195064 seconds)
    (20/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.478195283 seconds)
    (21/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 1.713848158 seconds)
    (22/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.412258588 seconds)
    (23/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.440004068 seconds)
    (24/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.286200973 seconds)
    (25/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.473288242 seconds)
    (26/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.457178254 seconds)
    (27/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.455982662 seconds)
    (28/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.342495096 seconds)
    (29/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 1.534579206 seconds)
    (30/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.381184841 seconds)
    (31/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 1.53295215 seconds)
    (32/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.38644151 seconds)
    (33/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.287515487 seconds)
    (34/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 1.516833392 seconds)
    (35/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.41023562 seconds)
    (36/192) benchmarking ("map", identity, Float32, true)...
    done (took 1.46805064 seconds)
    (37/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.455546463 seconds)
    (38/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.341239446 seconds)
    (39/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.448998367 seconds)
    (40/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.283934685 seconds)
    (41/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.339552694 seconds)
    (42/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.313005327 seconds)
    (43/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.458214905 seconds)
    (44/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.388728858 seconds)
    (45/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.336134583 seconds)
    (46/192) benchmarking ("perf_sum", Float32, false)...
    done (took 1.367903169 seconds)
    (47/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.456907689 seconds)
    (48/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.39048439 seconds)
    (49/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.281123624 seconds)
    (50/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.519652279 seconds)
    (51/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.552581453 seconds)
    (52/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 1.650033446 seconds)
    (53/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.380072019 seconds)
    (54/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.425074889 seconds)
    (55/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.3074912 seconds)
    (56/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.436877008 seconds)
    (57/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.346804115 seconds)
    (58/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.281236628 seconds)
    (59/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.288371741 seconds)
    (60/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.291947475 seconds)
    (61/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.286944925 seconds)
    (62/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.292466097 seconds)
    (63/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.374161656 seconds)
    (64/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 1.595609653 seconds)
    (65/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.345787999 seconds)
    (66/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.282434761 seconds)
    (67/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.300789872 seconds)
    (68/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 1.574922349 seconds)
    (69/192) benchmarking ("map", identity, Int64, false)...
    done (took 1.382627024 seconds)
    (70/192) benchmarking ("map", identity, Bool, false)...
    done (took 1.334147455 seconds)
    (71/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.283512381 seconds)
    (72/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.321871714 seconds)
    (73/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.545611868 seconds)
    (74/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.287226377 seconds)
    (75/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 1.566582362 seconds)
    (76/192) benchmarking ("perf_sum", Float64, true)...
    done (took 1.383168305 seconds)
    (77/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.459306965 seconds)
    (78/192) benchmarking ("map", abs, Float32, false)...
    done (took 1.369802454 seconds)
    (79/192) benchmarking ("map", identity, Int64, true)...
    done (took 1.515126975 seconds)
    (80/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.454599074 seconds)
    (81/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.551853502 seconds)
    (82/192) benchmarking ("perf_sum", Float64, false)...
    done (took 1.375905197 seconds)
    (83/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.41209936 seconds)
    (84/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.434295568 seconds)
    (85/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.399619063 seconds)
    (86/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.344616739 seconds)
    (87/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.455793329 seconds)
    (88/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.287469669 seconds)
    (89/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.459496511 seconds)
    (90/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.428060253 seconds)
    (91/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.463807651 seconds)
    (92/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.408888772 seconds)
    (93/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.463934131 seconds)
    (94/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.420706988 seconds)
    (95/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.426693747 seconds)
    (96/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 1.546719212 seconds)
    (97/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.394106319 seconds)
    (98/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.337917703 seconds)
    (99/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.402799907 seconds)
    (100/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.417926003 seconds)
    (101/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.650395183 seconds)
    (102/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.397289017 seconds)
    (103/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.28360197 seconds)
    (104/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.469982602 seconds)
    (105/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.287909399 seconds)
    (106/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.307393277 seconds)
    (107/192) benchmarking ("map", abs, Bool, false)...
    done (took 1.341301586 seconds)
    (108/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 1.538682418 seconds)
    (109/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.313970755 seconds)
    (110/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.416437474 seconds)
    (111/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.42821424 seconds)
    (112/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.342598044 seconds)
    (113/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.285027389 seconds)
    (114/192) benchmarking ("map", abs, Float64, true)...
    done (took 1.531248126 seconds)
    (115/192) benchmarking ("map", identity, BigInt, true)...
    done (took 1.557242066 seconds)
    (116/192) benchmarking ("map", abs, Int64, true)...
    done (took 1.519522089 seconds)
    (117/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.290539436 seconds)
    (118/192) benchmarking ("perf_sum", Int64, true)...
    done (took 1.384292374 seconds)
    (119/192) benchmarking ("map", identity, Float64, true)...
    done (took 1.523252944 seconds)
    (120/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.553496254 seconds)
    (121/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.311228477 seconds)
    (122/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.293205154 seconds)
    (123/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.290251292 seconds)
    (124/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.318153692 seconds)
    (125/192) benchmarking ("map", identity, BigInt, false)...
    done (took 1.407762267 seconds)
    (126/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.28511068 seconds)
    (127/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.42316529 seconds)
    (128/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.343609419 seconds)
    (129/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.48342739 seconds)
    (130/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.469196911 seconds)
    (131/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.491644935 seconds)
    (132/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.311704903 seconds)
    (133/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.498829399 seconds)
    (134/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.352024764 seconds)
    (135/192) benchmarking ("map", identity, Int8, true)...
    done (took 1.422844133 seconds)
    (136/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.303495109 seconds)
    (137/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.310812647 seconds)
    (138/192) benchmarking ("map", abs, Int8, false)...
    done (took 1.353272333 seconds)
    (139/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.287244728 seconds)
    (140/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.406252319 seconds)
    (141/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.437534028 seconds)
    (142/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.398630028 seconds)
    (143/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.338856794 seconds)
    (144/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.315718636 seconds)
    (145/192) benchmarking ("perf_sum", Float32, true)...
    done (took 1.386259077 seconds)
    (146/192) benchmarking ("perf_sum", Int64, false)...
    done (took 1.369420621 seconds)
    (147/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.291633933 seconds)
    (148/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.290887891 seconds)
    (149/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.319882594 seconds)
    (150/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.355027085 seconds)
    (151/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.377207662 seconds)
    (152/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.46233542 seconds)
    (153/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.467884813 seconds)
    (154/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.438335859 seconds)
    (155/192) benchmarking ("map", abs, Float32, true)...
    done (took 1.472783979 seconds)
    (156/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.604048091 seconds)
    (157/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.413544694 seconds)
    (158/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 1.602552551 seconds)
    (159/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.37557245 seconds)
    (160/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.419519371 seconds)
    (161/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.463492395 seconds)
    (162/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.288684169 seconds)
    (163/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.351278183 seconds)
    (164/192) benchmarking ("map", abs, Float64, false)...
    done (took 1.38174025 seconds)
    (165/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 1.603203444 seconds)
    (166/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.41259364 seconds)
    (167/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.425929671 seconds)
    (168/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 1.537498552 seconds)
    (169/192) benchmarking ("map", identity, Float64, false)...
    done (took 1.390678953 seconds)
    (170/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.372343561 seconds)
    (171/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.422900991 seconds)
    (172/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.350262478 seconds)
    (173/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.393711434 seconds)
    (174/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.428315404 seconds)
    (175/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 1.722560726 seconds)
    (176/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 1.550053009 seconds)
    (177/192) benchmarking ("map", identity, Float32, false)...
    done (took 1.375607632 seconds)
    (178/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.537899567 seconds)
    (179/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.319151037 seconds)
    (180/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.388804508 seconds)
    (181/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.533462962 seconds)
    (182/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.430176754 seconds)
    (183/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.316410733 seconds)
    (184/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.583031556 seconds)
    (185/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.516879637 seconds)
    (186/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.290581597 seconds)
    (187/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.295212501 seconds)
    (188/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.29941845 seconds)
    (189/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.386402411 seconds)
    (190/192) benchmarking ("map", abs, Int64, false)...
    done (took 1.387992014 seconds)
    (191/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.344853348 seconds)
    (192/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.345262853 seconds)
  done (took 319.30897219 seconds)
done (took 320.505704619 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.338674853 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.40715806 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.318838236 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.319391676 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.319846594 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.320162349 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.341035365 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.321308398 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.334039508 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.334101325 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.31220805 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.333643395 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.335255559 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.331072188 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.352600372 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.320007989 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.320037281 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.33023326 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.333815392 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.33676106 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.322028124 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.321319201 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.347586776 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.319969504 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.327400597 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.327931612 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.327488395 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.318525648 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.3318015 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.335272121 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.312231294 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.347587899 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.337081421 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.33208656 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.32276084 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.331768442 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.322640644 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.410698128 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.341654118 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.33232579 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.329721356 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.33724916 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.327244769 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.32768251 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.333759589 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.348621497 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.329750268 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.336397135 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.313181576 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.319739538 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.346872441 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.334992568 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.331546595 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.315076191 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.32053931 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.339433931 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.333736214 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.341598548 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.330043451 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.32457348 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.356783749 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.343956554 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.33511353 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.331590596 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.330285868 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.338558718 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.333748874 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.339461194 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.331556816 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.324092181 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.324391159 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.331721855 seconds)
done (took 105.182808455 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.446799416 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.318838571 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.480211968 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.332916695 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.487572625 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.446001958 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.331144375 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.332179187 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.331518564 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.126235102 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.3319257 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.331242882 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.321704567 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.332628283 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.44109655 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.331976492 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.331997518 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.021125097 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.332940924 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.462586594 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.321691587 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.331942197 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.331595642 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.12954983 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.32094969 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.316146528 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.462738394 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.331937537 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.030156616 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.315081529 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.318771125 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.029589846 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.465452606 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.350782725 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.343309901 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.34248424 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.489090903 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.335282728 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.450122314 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.449894046 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.481134213 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.37156261 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.317113987 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.323379776 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.336842905 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.333026413 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.333388446 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.362417301 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.321837419 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.333212634 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.025513287 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.343054285 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.342443697 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.334554196 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.332946937 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.353894641 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.334422479 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.335094658 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.46734801 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.335932726 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.450270676 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.131991983 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.130086392 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.334428802 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.322015781 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.334623086 seconds)
  done (took 107.97367447 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.395810989 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.399189423 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.438079701 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.326427329 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.375874674 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.437391529 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.326618333 seconds)
  done (took 10.912929183 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.332594502 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.335082955 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.374977922 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.374370724 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.335701451 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.498655306 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.335881945 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.338039287 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.336797781 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.378322531 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.337313913 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.335115736 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.345284127 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.324991995 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.374903173 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.338276608 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.444343911 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.327906789 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.335265061 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.478398758 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.336988961 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.345605563 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.377460439 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.340391123 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.337165416 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.334281989 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.111550804 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.336451479 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.337725436 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.336300814 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.336197632 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.393474295 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.338415265 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.32627992 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.337821083 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.440257373 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.337455203 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.337229379 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.336971491 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.329099015 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.338021201 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.337370886 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.337709451 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.337820855 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.337288924 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.352743208 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.338712958 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.338327232 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.339267221 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.337841028 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.378731879 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.338513017 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.338580168 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.337415612 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.383698269 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.347593506 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.33896856 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.338271054 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.337750347 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.338292769 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.482095019 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.375615223 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.339241681 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.378011558 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.34044913 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.337491604 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.338612672 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.339094905 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.420083529 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.33904955 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.376645476 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.338934354 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.510868901 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.353659114 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.341197648 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.333756834 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.334335349 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.339669638 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.329007924 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.336390956 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.339860722 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.332870511 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.338015045 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.340005221 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.339786515 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.489786263 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.438345488 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.339577857 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.347318053 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.338556913 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.34008178 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.381357991 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.339272096 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.340638057 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.382095481 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.450409402 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.382835717 seconds)
  done (took 137.624206856 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.343758608 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.345274235 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.334906857 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.359556353 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.332078037 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.331568838 seconds)
  done (took 9.266011796 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.334404592 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.344219773 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.342244604 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.342214305 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.341503884 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.341889917 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.3420862 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.334339947 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.344739811 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.341436509 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.343182075 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.344597791 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.345052425 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.343880386 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.342969229 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.342278292 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.344062677 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.34306719 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.342354225 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.343930007 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.330032804 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.344376326 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.342910067 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.336585986 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.345991134 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.344227399 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.356505454 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.342926892 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.343059874 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.34159605 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.347484753 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.343698586 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.336282941 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.339861887 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.346825969 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.336882453 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.346034996 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.344727298 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.342049018 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.344065156 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.344929083 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.344287692 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.342808595 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.343736047 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.337246985 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.340611385 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.347921332 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.358923013 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.344950115 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.34682694 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.345847467 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.344826315 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.345798606 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.345986177 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.337685981 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.33952982 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.348657086 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.344455203 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.346135229 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.338950708 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.349158746 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.345330527 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.337875659 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.347992194 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.346628277 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.34671815 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.338734612 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.34881288 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.345520432 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.346267441 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.348220981 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.346370018 seconds)
  done (took 98.959753893 seconds)
done (took 365.94600466 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.655846251 seconds)
  done (took 3.878919908 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.33475326 seconds)
  done (took 3.55846902 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 21.101818642 seconds)
  done (took 22.327562731 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.345659769 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.352649324 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.355372174 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.331414674 seconds)
  done (took 10.607990269 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.600114155 seconds)
  done (took 3.824375038 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.34487808 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.350335802 seconds)
  done (took 5.920928068 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.512700685 seconds)
  done (took 3.737871687 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.542923952 seconds)
  done (took 3.766278958 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.359196315 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.347751835 seconds)
  done (took 5.938326718 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.311281507 seconds)
  done (took 3.535618998 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 20.373853879 seconds)
  done (took 21.598365591 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.354079208 seconds)
  done (took 3.57895392 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.363516965 seconds)
  done (took 3.587457032 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 4.792672778 seconds)
  done (took 6.017655149 seconds)
done (took 103.103178225 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.332439703 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.334269638 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.334635456 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.332720719 seconds)
  done (took 10.558248266 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.412000719 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.411047226 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.420044496 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.405350658 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.405903501 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.415298511 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.372921327 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.373558182 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.4029538 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.400515801 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.415208038 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.406125638 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.414027999 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.37302789 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.399979936 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.415857808 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.404530297 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.422543463 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.374068072 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.407812649 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.350004097 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.40917397 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.402624567 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.351231495 seconds)
  done (took 34.791476835 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.835748339 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.409651006 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.494574505 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.391278801 seconds)
  done (took 7.35679351 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.452588611 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.454256898 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.470505683 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.507213707 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.555704437 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.466542724 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.375883424 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.370650066 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.357574494 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.456397196 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.539803119 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.4527805 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.668117153 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.349543698 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.667592289 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.349413382 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.350650178 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.45345653 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.502790965 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.532796477 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.350464639 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.453801407 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.458270112 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.452947349 seconds)
  done (took 36.276629787 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.358981174 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.369260529 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.35201596 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.367210891 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.35128878 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.352229556 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.353984973 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.358815051 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.351902984 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.350397383 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.351958437 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.365637914 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.352640314 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.352820724 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.35931398 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.355046247 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.3559336 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.358999015 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.361304387 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.353033865 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.353160187 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.360559365 seconds)
  done (took 31.074529525 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.337197703 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.336823064 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.687830975 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.59307357 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.338139281 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.342532098 seconds)
  done (took 13.86394455 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.409842276 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.550848693 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.348316857 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.682284355 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.771208975 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.349720685 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.345347271 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.581660273 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.876414675 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.867823214 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.406606215 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.416387868 seconds)
  done (took 19.835539155 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.34297022 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.342840223 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.343134978 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.359458356 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.397672283 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.354005632 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.352555515 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.339389411 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.403195459 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.404205096 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.350771038 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.399035899 seconds)
  done (took 21.619559261 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.428747086 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.349809084 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.349371183 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.384501651 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.354789856 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.350031274 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.415426286 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.067015762 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.357934631 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.626917767 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.354412564 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.436248237 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.596417102 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.348715645 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.356197655 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.296597119 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.57963635 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.851094906 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.351011949 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.361459755 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.387660112 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.350694582 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.362323767 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.561630018 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.357510837 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.351399662 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.617077731 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.352078678 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.637263277 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.617830118 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.618557585 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.357881858 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.626918062 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.983132469 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.463898963 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.558596932 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.351442547 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.357450223 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.345582111 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.354696278 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.359315466 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.357256484 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.612025616 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.358830405 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.350991381 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.364086755 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.090863372 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.363757109 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.351938117 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.351760855 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.613762416 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.440218039 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.357569014 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.352641032 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.40906749 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.35722145 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.358729724 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.469799524 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.998520399 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.352887836 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.367226197 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.358400786 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.348712642 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.360051219 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.014877221 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.358457646 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.358459368 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.358397215 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.35275893 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.353631947 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.381334997 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.353353901 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.372724136 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.353624216 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.142470417 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.361360557 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.36043759 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.904590735 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.353665435 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.361710434 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.579615586 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.355507127 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.354959815 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.353786081 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.355555916 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.08364107 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.36542197 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.323990285 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.416052497 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.073772945 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.564239165 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.37910636 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.384475473 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.575240497 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.32415626 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.35465822 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.355242565 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.361500331 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.375781431 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.085010039 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.358590759 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.359806739 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.601382294 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.565338406 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.357789154 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.308457832 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.839685372 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.35915976 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.386745878 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.36358722 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.56664201 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.992321175 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.620218942 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.367429501 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.394846607 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.355966592 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.144371933 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.361236031 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.369136248 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.365071363 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.640165854 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.192366863 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.361235895 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.430940942 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.369386313 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.357288862 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.356829646 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.364994828 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.356671042 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.543753606 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.368420901 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.62524009 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.366116306 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.360269879 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.367400685 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.36435484 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.382756517 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.577902815 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.3563853 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.639857271 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.357692768 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.357976716 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.359650465 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.576853829 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.359662387 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.371145435 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.697231526 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.36305512 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.36804299 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.626671068 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.396576304 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.470625052 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.390334204 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.360283278 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.610648458 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.365386539 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.364209076 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.359363623 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.382626108 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.362088857 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.367235787 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.348632283 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.999431766 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.336043848 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.366299333 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.360564333 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.375920901 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.433934188 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.369291137 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.56788658 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.366777043 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.380234284 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.372470778 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.359984264 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.60207256 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.62333206 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.372190831 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.54178896 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.839760512 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.998386919 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.373932827 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.360645316 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.359798424 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.359028671 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.362853257 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.362181038 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.361480573 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.56794968 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.631636858 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.367335184 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.00619206 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.362305841 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.371727977 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.373897444 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.62391897 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.375503929 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.362846787 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.3721632 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.371119368 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.367331252 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.645412795 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.58633045 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.377390542 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.362153504 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.879446392 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.368315155 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.362965748 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.362251393 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.38936863 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.37575642 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.200821799 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.702068048 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.356972756 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.63049225 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.377844914 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.385269295 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.36151348 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.367748876 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.377632159 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.376820566 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.375606337 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.570733215 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.369770807 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.371723541 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.001634061 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.161979193 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.943258294 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.364471155 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.37334188 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.368586888 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.095794716 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.366175446 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.363140097 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.609536053 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.089226494 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.367091165 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.84448002 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.367096642 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.132525538 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.633515855 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.594536781 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.371317699 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.375376458 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.635086648 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.582007233 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.390744941 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.370086446 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.370740563 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.334383341 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.911061177 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.373685782 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.549880572 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.089387035 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.375871272 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.37207675 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.419169799 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.373539639 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.748932696 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.368626045 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.365489106 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.365021818 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.373121113 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.222857312 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.372000137 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.366643653 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.029150869 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.366284015 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.867623292 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.368856459 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.574635111 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.63417044 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.614321325 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.371503392 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.379682878 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.615403982 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.632044855 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.37134174 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.37941372 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.956996107 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.221215934 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.37305702 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.367694148 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.156657506 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.374151037 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.660111322 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.382496529 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.373594439 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.37920265 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.369410003 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.368298723 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.367790052 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.376636321 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.345332977 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.866202926 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.364887459 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.364573786 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.383786884 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.37373622 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.614026368 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.383788389 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.005124899 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.591936555 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.357445461 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.422714815 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.373744071 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.38087272 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.344224793 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.367807837 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.369884315 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.400929764 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.593723364 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.368810113 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.34257455 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.358714624 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.58387368 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.368046451 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.368711656 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.596900566 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.374613833 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.385634876 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.174978352 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.399154493 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.368513483 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.392825246 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.371883017 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.410735118 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.443133306 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.577131301 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.639596922 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.641806889 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.755176712 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.374465383 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.376480091 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.385016177 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.4505508 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.370851192 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.37697314 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.374092082 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.006881019 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.167669289 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.013184384 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.636706226 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.376453735 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.380283224 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.370199439 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.611369572 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.368974628 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.647368737 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.370205363 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.37046796 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.396729444 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.369688937 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.401505362 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.58675047 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.647751617 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.370102413 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.377826005 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.377654189 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.371791082 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.639941725 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.588523387 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.87487773 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.923509035 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.372058517 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.383778298 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.112787754 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.652325413 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.37334747 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.373109751 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.373482518 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.375146664 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.387011164 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.384042012 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.372525646 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.602102131 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.637302862 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.023752468 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.640524159 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.5728561 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.372500117 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.37843956 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.624355308 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.216036691 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.57984531 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.020127739 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.120486609 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.627276224 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.447637094 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.582289327 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.378692219 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.611473244 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.379159229 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.37780222 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.37536553 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.373928471 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.374549192 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.637709976 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.022480365 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.624708907 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.377598329 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.3783653 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.408531815 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.58223672 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.600833993 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.110106051 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.59755052 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.643454565 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.389177032 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.375201311 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.026787563 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.6426393 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.383077558 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.381047278 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.595596581 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.378689286 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.409085529 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.249105733 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.374687496 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.929694621 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 1.585729027 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.396567586 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.37656046 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.134850419 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.025445241 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.380646704 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.886914472 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.376465056 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.37564082 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.660424899 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.38400377 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.384065336 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.662581488 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.381274375 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.385415584 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.592565661 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.018003397 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.129444202 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.385395579 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.383385554 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.385002922 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.377907952 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.3709475 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.382349857 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.385848026 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.767735752 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.381599677 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.377486461 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.390583934 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.386068359 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.389214218 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.38349502 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.378171659 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.385488529 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.363862214 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.346510579 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.391943826 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.501420599 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.934175327 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.378464528 seconds)
    (460/481) benchmarking "2d"...
    done (took 1.992870562 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.711127102 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.623904371 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.382636554 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.352974156 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.383515285 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.379385231 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.379084198 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.379480499 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.380968357 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.94034495 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.38595213 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.65162615 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.392388459 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.58963359 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.589702331 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.379958859 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.595781145 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.384272747 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.40560552 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.349047572 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.380063832 seconds)
  done (took 978.31622454 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.389793798 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.398639481 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.377108742 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.443876855 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.395227814 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.385256089 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.389470107 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.4414288 seconds)
  done (took 20.477855503 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.384261378 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.379710089 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.383518031 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.380785836 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.369741324 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.918880174 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.384879632 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.379025884 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.392627449 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.371285107 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.386213703 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.047431736 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.385384024 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.372003516 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.393616219 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.385625547 seconds)
  done (took 32.573643093 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.111721377 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.400988819 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.951727603 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.413180783 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.372502774 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.376679017 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.51955551 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.372919996 seconds)
  done (took 25.777550916 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.385436205 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.38516195 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.384561748 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.385388445 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.387598176 seconds)
  done (took 8.189156476 seconds)
done (took 1241.935935651 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.386638582 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.386697825 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.387435038 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.387851614 seconds)
  done (took 6.808103029 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.352935971 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.35224412 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.352260065 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.364180938 seconds)
  done (took 9.682044156 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.063666591 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.895358214 seconds)
  done (took 5.218739531 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.926049617 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.931099805 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.927004584 seconds)
  done (took 7.043687513 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.668075177 seconds)
  done (took 2.928315669 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.36884633 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.378398443 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.11341238 seconds)
  done (took 8.121360285 seconds)
done (took 41.060940156 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.378591672 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 3.138392238 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.528696218 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.380558522 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.535651372 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.529110367 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.625219806 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.373022027 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.382141152 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.388278193 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.37923582 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.537796858 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.612756913 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 3.139560878 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.612483578 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 3.139006106 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.536350466 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.388335765 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.37472031 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.387984352 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.625802734 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.380651191 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.374974234 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.381163405 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.53806661 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.519315816 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.375622824 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 3.140007872 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.375504724 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.390446741 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.52081031 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.383017188 seconds)
  done (took 82.633841462 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.374951219 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.383464135 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.384267737 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.374770392 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.389969029 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.386234992 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.377810668 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.374846191 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.375325397 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.37692814 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.375929161 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.391425764 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.393117495 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.377186938 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.392977607 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.376647202 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.391756809 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.376109401 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.376455521 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.392766017 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.378366598 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.376394571 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.384259859 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.381558369 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.381511773 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.392159494 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.377347115 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.377947536 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.378182335 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.377537785 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.392026975 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.378745285 seconds)
  done (took 77.481016245 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.377489127 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.37724227 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.381792921 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.386588652 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.386826606 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.3855972 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.376940811 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.378413783 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.388677134 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.38667739 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.389375701 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.381940083 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.381763672 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.393483663 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.380153796 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.377881651 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.378050243 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.378183933 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.378933237 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.37897231 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.380232213 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.389306481 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.378754594 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.378955566 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.402705984 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.379887904 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.378120714 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.396321162 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.381126276 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.379815548 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.383632235 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.390809382 seconds)
  done (took 77.530055753 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.62092703 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.394697441 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.397163763 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.388291593 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.396586025 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.393841494 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.388679823 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.624860287 seconds)
  done (took 14.870619116 seconds)
done (took 253.775666898 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.389106409 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.875307705 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.42185292 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.389163481 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.409466604 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.416792042 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.609289742 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.421484775 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.612674946 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.421214043 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.409062199 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.390710914 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.192906296 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.53955297 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.195642108 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.301534141 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.253305911 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.382256346 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 1.942533628 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.667186278 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.421274059 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.395405099 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.189018455 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.269680955 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.360689793 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.47118785 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.490072278 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.618184026 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.554249177 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.470342744 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 1.886966596 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.391919053 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.396484019 seconds)
  done (took 64.42404017 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.387798746 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.398014615 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.397672824 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.397600906 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.39777779 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.398509035 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.387692003 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.397151389 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.398617632 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.398074722 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.398895169 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.398133744 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.397543988 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.397626464 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.398465077 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.371287598 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.388182546 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.396600742 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.387638932 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.372705385 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.398785196 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.398965609 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.39990689 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.397624244 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.398058067 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.397935457 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.39999388 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.400242513 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.398973722 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.399255517 seconds)
  done (took 43.125751735 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.39961738 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.964982402 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.124065091 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.402566762 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.392143884 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.395294745 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.675281039 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.406383786 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.393054563 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.39446195 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.863440498 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.408371885 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.424973804 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.126783256 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.398233919 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.400402219 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.401134234 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.391395001 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.964801986 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.403046663 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.673905398 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.403302428 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.67542115 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.407289715 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.395320636 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.393194492 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.397023781 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.179957218 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.412751122 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.862610527 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.158173084 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.674731624 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.114246091 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.175221271 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.164759189 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.408819084 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.402009133 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.867357136 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.401613242 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.392999714 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.673845617 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.398296114 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.130359894 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.081795626 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.41589483 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.401881657 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.21792714 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.86399181 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.638508774 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.403627495 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.163317666 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.403183128 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.405501015 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.395626911 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.632193214 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.399396493 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.394548794 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.224845029 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.399513874 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.676044955 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.40927384 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.394769342 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.962892603 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.401548617 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.961411585 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.401571606 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.403021449 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.395733866 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.135356011 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.403546735 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.095925773 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.416624564 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.40447209 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.86582609 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.967017094 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.258524019 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.397116112 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.969618664 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.142630311 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.693150049 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.404044119 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.157905069 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.693840023 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.399756944 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.405778373 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.406780377 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.404712636 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.468686315 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.674176454 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.00712027 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.097791782 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.243856717 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.680277889 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.403273108 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.397232249 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.230612913 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.406474494 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.406464226 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.132765958 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.101536016 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.418217648 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.403803691 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.079394788 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.421559382 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.680394249 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.403509599 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.172898623 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.404470364 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.469566879 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.408168589 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.405380127 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.40074434 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.680848596 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.402564917 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.407911305 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.077730955 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.89900112 seconds)
  done (took 194.825017476 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.402530945 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.392757853 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.396133627 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.393750024 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.393307171 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.40147577 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.393206224 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.391868345 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.398076512 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.394090796 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.392716302 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.400967645 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.399545872 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.392210883 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.401117406 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.394008605 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.393265232 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.406289286 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.392126691 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.393689852 seconds)
  done (took 45.200464059 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.408226131 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.946769156 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.920536481 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.408997864 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.408645605 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.399877024 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.455117124 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.415584778 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.408997368 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.692925986 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.569206399 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.41752491 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.408799196 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.408778764 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.919541121 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.386866103 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.693127416 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.946931922 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.410309076 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.947291843 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.38341501 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.40874403 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.399169947 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.94824667 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.705817859 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.682457796 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.458432209 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.954034018 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.40977554 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.410181855 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.949104236 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.41171881 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.402382426 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.937075024 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.410976504 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.424052285 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.411305436 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.46022377 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.463794945 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.699409608 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.957893155 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.69594161 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.426701412 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.561118723 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.418265707 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.383170678 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.962443147 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.41228382 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.385377491 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.413926878 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.416414273 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.937878013 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.403227447 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.937676343 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.412630888 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.413505756 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.951691136 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.939337436 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.927249507 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.569918782 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.408175295 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.683695571 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.412016948 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.965199566 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.412514179 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.414556358 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.41218043 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.572580682 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.958513652 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.685378404 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.697671893 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.697845194 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.412269612 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.472165448 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.418655039 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.698420597 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.471338386 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.789948564 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.704614346 seconds)
  done (took 126.998841423 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.671004306 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.52598765 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.782130647 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 1.977724604 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 1.899590184 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.544305461 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.525178152 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.655261428 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.421843414 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.513216178 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.043447336 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.497835554 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.156308152 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.477616075 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.514296884 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.529208664 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.794581129 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.345490763 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.051680952 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.020736868 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.410551657 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.521195534 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 1.929696407 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.61499769 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.419378565 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 1.986345354 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.319492946 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 1.919290523 seconds)
  done (took 53.349672672 seconds)
done (took 529.190493261 seconds)
SAVING RESULT...
DONE!
