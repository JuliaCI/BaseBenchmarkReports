cset: moving following pidspec: 17910
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.396120001 seconds)
loading group "string"... done (took 0.503319672 seconds)
loading group "linalg"... done (took 8.544947501 seconds)
loading group "parallel"... done (took 0.172073243 seconds)
loading group "find"... done (took 1.210037397 seconds)
loading group "tuple"... done (took 1.83920861 seconds)
loading group "dates"... done (took 1.331854376 seconds)
loading group "micro"... done (took 0.191265874 seconds)
loading group "io"... done (took 0.498603558 seconds)
loading group "scalar"... done (took 52.265803663 seconds)
loading group "sparse"... done (took 13.959022992 seconds)
loading group "broadcast"... done (took 1.187104193 seconds)
loading group "union"... done (took 9.584792167 seconds)
loading group "simd"... done (took 3.239230344 seconds)
loading group "random"... done (took 11.899064642 seconds)
loading group "problem"... done (took 2.216359224 seconds)
loading group "array"... done (took 24.956613544 seconds)
loading group "misc"... done (took 1.106301501 seconds)
loading group "sort"... done (took 3.732663174 seconds)
loading group "collection"... done (took 19.284933635 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.599438378 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.127822915 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.263930568 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.280168919 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.230890606 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.167087032 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.141585769 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.240697919 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.62569637 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.20135252 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.13639256 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.669938379 seconds)
done (took 6.499138128 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.250817288 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.23903474 seconds)
    (2/2) benchmarking "String"...
    done (took 0.162542204 seconds)
  done (took 1.158898454 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.075007048 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.155371093 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.10726764 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.093182525 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.092718648 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.11139841 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.09463374 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.112137965 seconds)
  done (took 1.530515914 seconds)
done (took 3.772542091 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.498516884 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.865146615 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.504509532 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.139183277 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.305937235 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.290154529 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.267663769 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.198197049 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.093244285 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.089957679 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.17120885 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.434809748 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.387847963 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.994196788 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.09086833 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.091635543 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.133596505 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.806506084 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.081747636 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.110163158 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.515495996 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.179396465 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.098467128 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.120894539 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.184558792 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.133031621 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.159614652 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.101964424 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.70620157 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.132876897 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.177535869 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.097171328 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.156654215 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.183593532 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.190748579 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.108641776 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.685294999 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.199777098 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.086196729 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.0984286 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.680607414 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.116730752 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.182218947 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.100932214 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.087409856 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.178820675 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.088892227 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.077315582 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.109154031 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.085361875 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.163040193 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.442422656 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.106245122 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.171864554 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.092598386 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.69328563 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.095561809 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.273048923 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.125737783 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.094214919 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.090249166 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.086711778 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.161541933 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.09625158 seconds)
  done (took 20.071527111 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.142914894 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.161335398 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.07779167 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.15490359 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.120375281 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.07940918 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.099736822 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.077529796 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.107725577 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.194497605 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.136902149 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.150451639 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.090108073 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.088426942 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.126177209 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.246620565 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.105656067 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.119494253 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.088568348 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.089543243 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.13979449 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.094964252 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.08979651 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.110141962 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.171325941 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.203147062 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.106228475 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.12070776 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.088539096 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.09443006 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.140409163 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.142709468 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.09054229 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.08684481 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.170622412 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.121447194 seconds)
  done (took 5.205971581 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.208597818 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.121300203 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.217409095 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.17428182 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.158032681 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.182395107 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.139041671 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.252835192 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.180965578 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.182211465 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.114091194 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.119436979 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.079340103 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.078932826 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.077054188 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.463916006 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.147553402 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.176390135 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.136978694 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.103139873 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.079890576 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.735567315 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.101260539 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.07903582 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.082851287 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.063652084 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.219969458 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.100026219 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 1.241070532 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.101902753 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.084843212 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.086034273 seconds)
    (33/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.191743592 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.133647606 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.123286118 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.119355087 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.105063086 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.08412921 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.230939802 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.083635127 seconds)
    (41/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.102265737 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.080335566 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.116190617 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.136496267 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.115726416 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.09982955 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.089357991 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.244805869 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.084487499 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.093944297 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 4.100987153 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.198313032 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.125260095 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.076689998 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.302375115 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.107771377 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.086656858 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.078522261 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 2.828115325 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.117175227 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.08238298 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.099300585 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.083825764 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.079895982 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.424027828 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.104268097 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.302422001 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.084049748 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.158777347 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.085380752 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.104281543 seconds)
    (72/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.084298696 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.08651155 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.104010578 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.09118679 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.086648928 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.078867473 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.104796376 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.080329539 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.089937227 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.134377571 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.086766484 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.099002529 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.149041449 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.10145151 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.103066331 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.110671738 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.101230372 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.085613023 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.128900232 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.082714416 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.087484808 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.166630384 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.086040491 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.131027518 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.087056425 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.146561477 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.088782556 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 2.260143192 seconds)
    (100/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.084076572 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.079869673 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.138347972 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.088293178 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.130494505 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.120348869 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.08321125 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.085255927 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.096463075 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.082897371 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.148580571 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.102838257 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.082777911 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.080772262 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.109553241 seconds)
  done (took 28.635682115 seconds)
done (took 54.674375233 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.432756463 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.079928651 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.080680168 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.100006236 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.081092695 seconds)
  done (took 1.609789741 seconds)
done (took 2.41835792 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.317490569 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.187217238 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.101136114 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.187394084 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.084517241 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.191943253 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.179331286 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.092771007 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.202738259 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.083989755 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.183327382 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.082353845 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.102500734 seconds)
  done (took 2.834770734 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.101305733 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.109068531 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.10198755 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.120325505 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.085193098 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.101668122 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.121246384 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.11368084 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.10141131 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.115875957 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.087544643 seconds)
  done (took 1.970513802 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.100086669 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.107062172 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.099858337 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.119736111 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.086517817 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.099248528 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.11866379 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.109985514 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.100255501 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.114814133 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.086888466 seconds)
  done (took 1.958292801 seconds)
done (took 7.572807221 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.075883366 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 10.420349479 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.166775221 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.211297437 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.355401046 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.239832208 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.565800155 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.155335514 seconds)
  done (took 14.153374752 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.123979798 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.151008263 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.089575628 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.090261573 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.091336038 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.113539475 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.091595902 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.087571404 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.109879636 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.091320982 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.094268665 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.110662824 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.09347665 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.091957178 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.087873065 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.111863352 seconds)
  done (took 2.501999979 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.142191264 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.139479202 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.09666745 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.097760908 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.111918771 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.098649774 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.100600914 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.115300838 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.09323537 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.093142707 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.099889729 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.116284682 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.095363529 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.092521072 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.117553212 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.117450741 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.092276438 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.116482107 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.115086624 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.095724461 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.11587112 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.095119592 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.113077009 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.099762237 seconds)
  done (took 3.466721196 seconds)
done (took 20.9390498 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.145966663 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.099739575 seconds)
  done (took 1.064494724 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.137720329 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.15753181 seconds)
  done (took 1.117755616 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.109879219 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.088259268 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.136277565 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.101276272 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.088898856 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.107145746 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.113561015 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.088825654 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.108226503 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.090078481 seconds)
  done (took 1.855689355 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.093328985 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.094145736 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.123039843 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.134475686 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.096546121 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.109208805 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.095016516 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.092405654 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.11340934 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.08935754 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.094318204 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.124666709 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.094368962 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.123542411 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.096103921 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.094060661 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.116587048 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.093726071 seconds)
  done (took 2.70469531 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.090131499 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.090250332 seconds)
  done (took 1.007850281 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.092516533 seconds)
    (2/7) benchmarking "second"...
    done (took 0.088175506 seconds)
    (3/7) benchmarking "month"...
    done (took 0.090966196 seconds)
    (4/7) benchmarking "year"...
    done (took 0.108823817 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.088286636 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.087314758 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.106631208 seconds)
  done (took 1.491555986 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.482569494 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.259779452 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.356993748 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.107681304 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.14513911 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.466063639 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.144531508 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.102409305 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.100388551 seconds)
  done (took 3.028260656 seconds)
done (took 13.095186513 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.090031367 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.221575621 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.628385715 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.111984945 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.08785848 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.161276214 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.285726688 seconds)
done (took 2.416292618 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.33799308 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.144237825 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.084142054 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.091470432 seconds)
  done (took 1.484622373 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.082561428 seconds)
    (2/2) benchmarking "read"...
    done (took 0.096948963 seconds)
  done (took 1.013329545 seconds)
done (took 3.331031583 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.088676148 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.087296117 seconds)
    (3/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.136919158 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.087303795 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.087577981 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.086002838 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.106170983 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.087774135 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.087244423 seconds)
    (10/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.087135189 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.108740626 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.086385284 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.08650035 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.103946645 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.08838034 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.087412158 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.087467151 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.109407206 seconds)
    (19/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.090882052 seconds)
    (20/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.089523941 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.107464594 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.091405712 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.089243321 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.08860646 seconds)
  done (took 3.125395296 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.106132021 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.089255597 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.110621084 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.096022 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.096448753 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.112150497 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.095814123 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.093545602 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.094442827 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.112498068 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.094527603 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.093899526 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.112402213 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.095905665 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.088713281 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.11296249 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.095931125 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.088130982 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.11128142 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.094974195 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.093112287 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.112462305 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.093328935 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.090559577 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.109961079 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.093679877 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.089858833 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.109830972 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.09390863 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.091299789 seconds)
  done (took 3.80922017 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.096956514 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.085321009 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.085957733 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.113825049 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.085157862 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.088152664 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.104732721 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.088795246 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.088717378 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.085915194 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.112417553 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.091533771 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.088245382 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.109744788 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.093498442 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.093984328 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.099296014 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.10878965 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.089244526 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.091374501 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.113716758 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.087956056 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.089192383 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.088021739 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.110714832 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.087705916 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.088673438 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.107862839 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.090686541 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.089073664 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.092555275 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.113711949 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.090787199 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.100794743 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.113344552 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.092691384 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.097021611 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.106483748 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.093717887 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.087791197 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.086332932 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.109836914 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.091197293 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.096558974 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.109465297 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.093308043 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.0883868 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.092657598 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.111231512 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.095273797 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.087921496 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.10752386 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.095159211 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.093972742 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.09321331 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.10781395 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.093510103 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.088115327 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.111655732 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.092711785 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.088273783 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.088460522 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.116006722 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.093477212 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.106489914 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.118489657 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.089671584 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.094124471 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.11131512 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.098087914 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.090280948 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.116442952 seconds)
  done (took 7.840560725 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.100601884 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.096379591 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.08933543 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.11309638 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.090731178 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.088196106 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.113768999 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.089055183 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.090273483 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.112923353 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.090784228 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.08961778 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.089498266 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.107756234 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.089892934 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.088983955 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.112569335 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.090977121 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.088484143 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.1071706 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.090301351 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.093572183 seconds)
  done (took 2.961239756 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.23577867 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.095524346 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.136406067 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.120126588 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.106154679 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.120177422 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.095064188 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.094833704 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.110737276 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.09926455 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.098650565 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.111682714 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.107529841 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.09821798 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.116052143 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.099167731 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.092275686 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.11793023 seconds)
  done (took 2.897536312 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.102283674 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.090841881 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.127691395 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.091766752 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.090281544 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.089796964 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.115566946 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.10913027 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.089859217 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.111396831 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.098330935 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.092648698 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.108268341 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.09128508 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.090293298 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.109938746 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.091840815 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.090456088 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.115982735 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.097354419 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.096080725 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.116835893 seconds)
  done (took 3.06104437 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.103933437 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.090754454 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.125554644 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.094911684 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.089986585 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.088982149 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.113988361 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.090334979 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.097047104 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.108741705 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.091676759 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.09021925 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.123109764 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.091881373 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.095661367 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.109605236 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.091971467 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.090774407 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.109387332 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.091919833 seconds)
  done (took 2.833780327 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.167502705 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.123825438 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.10701282 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.114702419 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.125408272 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.105992115 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.113746018 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.125945123 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.107091483 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.134777862 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.10821211 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.107387212 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.132684189 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.112583824 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.105321603 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.133159163 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.115303805 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.132852852 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.106378213 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.106100738 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.136850426 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.106685792 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.132990593 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.107949687 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.105075581 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.123866953 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.10772526 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.110912856 seconds)
  done (took 4.165565004 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.091335785 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.089953407 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.088071637 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.107533672 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.089136874 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.087952038 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.088729965 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.108358976 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.090062533 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.08816552 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.10829815 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.091338968 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.088355713 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.087932601 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.107106249 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.089912269 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.089300314 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.107341296 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.091119668 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.089638644 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.088543455 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.108376264 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.089821554 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.089083915 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.087958521 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.109373064 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.089805161 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.088487095 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.109781099 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.096414628 seconds)
  done (took 3.687024218 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.102471342 seconds)
    (2/2) benchmarking "in"...
    done (took 0.099199647 seconds)
  done (took 1.052447475 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.097660395 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.103674208 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.088854065 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.112133915 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.096121055 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.090017506 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.120215443 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.097365822 seconds)
  done (took 1.658440848 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.138824066 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.159245448 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.094777002 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.099785662 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.161712637 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.149187414 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.131889753 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.093600627 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.106431054 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.083629368 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.132566436 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.102588823 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.090639922 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.085496577 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.111831673 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.097562455 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.090359085 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.121561905 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.099904574 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.091524442 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.116756819 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.098697383 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.091719971 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.119225678 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.086327809 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.092249315 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.113207679 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.10295931 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.085946998 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.111456431 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.088910852 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.090607209 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.112116239 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.094716538 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.091771085 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.160323974 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.097722787 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.086578783 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.110747283 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.096047175 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.121941983 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.114030107 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.097675239 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.092658865 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.118359607 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.100147643 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.098942608 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.115663248 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.089093803 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.090771634 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.11481746 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.0932896 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.095766022 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.094968324 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.117030625 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.100636256 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.09326798 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.106492893 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.088670891 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.085774322 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.108440522 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.087195605 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.092516303 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.11249551 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.092059338 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.0898421 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.109837219 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.090633444 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.091944099 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.110944346 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.091222255 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.105812625 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.113039706 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.099999777 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.096882443 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.115304067 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.094316833 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.096332051 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.106819403 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.093350506 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.094394759 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.118565447 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.113130275 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.086714855 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.085386896 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.115567204 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.093164234 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.094622902 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.102358695 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.099905545 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.092141268 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.110435928 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.085985556 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.089750764 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.105209938 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.094800488 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.084267041 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.091120535 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.109610942 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.095312467 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.094587307 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.107964727 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.093727644 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.094506225 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.116160458 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.090543528 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.15257231 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.089550331 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.086692347 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.091620914 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.116407211 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.084118639 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.089871461 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.110006651 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.088991254 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.086811108 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.117302186 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.095189905 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.092158768 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.114640118 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.0940682 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.092454402 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.110571742 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.092227775 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.087184268 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.093759329 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.11824404 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.093489066 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.091932797 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.114523257 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.094141747 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.090803556 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.113864213 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.089151969 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.095389669 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.105487956 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.091282266 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.091430422 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.095506499 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.110584357 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.088086873 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.089589142 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.112265487 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.092614174 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.092601259 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.111125379 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.087081952 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.082906019 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.113609826 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.090312813 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.091626086 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.124571497 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.091462451 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.093492425 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.110162091 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.105881446 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.094299585 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.120885632 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.100290032 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.102767251 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.101824243 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.108585911 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.094640228 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.098314461 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.1187146 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.094666749 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.09743252 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.117504347 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.104680015 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.089796173 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.095820195 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.105366535 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.088736976 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.095752881 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.115064226 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.096335913 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.087189091 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.15528833 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.104799269 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.096111541 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.1102921 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.091729299 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.094866061 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.112721744 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.096480161 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.096676894 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.116716422 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.091211507 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.089874144 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.095738443 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.11039727 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.095725738 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.088931766 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.114314272 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.086796528 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.094800339 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.109568014 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.103004375 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.099409869 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.122123006 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.103552558 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.098326247 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.094923078 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.129319569 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.094037075 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.101047817 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.111402999 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.102164948 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.10419157 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.120167639 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.097730932 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.092969869 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.107867527 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.093380271 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.098241883 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.111722617 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.092528612 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.092800526 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.08559233 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.106667341 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.096889659 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.093589723 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.108574844 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.092290167 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.091698085 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.112551933 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.091779331 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.08483636 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.11596947 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.097520218 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.086555119 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.110015536 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.089184028 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.09125629 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.118462013 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.086289699 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.088116915 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.093675178 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.120179036 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.093658956 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.091532909 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.115231903 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.09725303 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.096541521 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.118996445 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.096745119 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.101333098 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.112642251 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.098633543 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.091730238 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.093688187 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.10904918 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.097508862 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.091615611 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.114203277 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.095683084 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.097978401 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.123573092 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.105802361 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.096544264 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.123617041 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.105549183 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.102977282 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.093641343 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.12331631 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.092020318 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.087387425 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.115202987 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.091665803 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.099261859 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.114967744 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.104161743 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.091757129 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.114528413 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.102581722 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.096470666 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.121099808 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.105171608 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.105624853 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.111505781 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.089954128 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.090442793 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.112195251 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.090704647 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.089626519 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.092808311 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.119297173 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.096016048 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.093610577 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.107527999 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.092128919 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.097786532 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.112912496 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.101645958 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.098252686 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.117563748 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.090261173 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.096378094 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.088552378 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.116732236 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.086179403 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.091401711 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.114318659 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.093809117 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.091973419 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.119299905 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.095209829 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.098625925 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.116933153 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.105643668 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.097355843 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.124229244 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.099763785 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.09665412 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.115131429 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.095971213 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.105934263 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.097911713 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.127917822 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.099037976 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.088473657 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.112596269 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.100978128 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.092634664 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.117607943 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.088875821 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.095226759 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.118790147 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.098843667 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.092115246 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.099543854 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.121360507 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.097962169 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.096648363 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.108292427 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.09175734 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.095161258 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.114779855 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.097282245 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.094409575 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.110404842 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.101890373 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.103647991 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.117997546 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.099788733 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.092951462 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.09794366 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.125382847 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.098877428 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.097182594 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.117605336 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.09657552 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.088112873 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.094886404 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.118179105 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.093135478 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.09703102 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.111330252 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.096993489 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.089480609 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.11864725 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.09340768 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.086942269 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.106209343 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.090660029 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.098098891 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.104865212 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.097457545 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.096701757 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.089150242 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.109888032 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.096875813 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.088025122 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.120069492 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.099546573 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.089717856 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.121564549 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.095331099 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.08955292 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.115413705 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.09906017 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.087442039 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.089665639 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.110493252 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.099509992 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.09088907 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.117197216 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.093138927 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.097194823 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.113561453 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.099738235 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.09678196 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.118384102 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.089709461 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.098848279 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.094720403 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.116067688 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.090502333 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.089800316 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.107872428 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.09311861 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.099301861 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.110034857 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.101570451 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.098547916 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.109804991 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.091545182 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.098096532 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.090001483 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.118786579 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.089042133 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.093730461 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.10649103 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.095171322 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.091281777 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.121059625 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.090048139 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.08654477 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.11822729 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.097795394 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.096560752 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.113977971 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.100296317 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.086202503 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.085686371 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.115656063 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.09050121 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.102082192 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.114866868 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.092087509 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.090406417 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.114156789 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.095203302 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.099666318 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.10608124 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.090887961 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.092495505 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.112925033 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.091677077 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.088734308 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.096469291 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.112070943 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.095593285 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.090777657 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.108846131 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.091930389 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.099029195 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.1118812 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.089847104 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.08990689 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.120013067 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.093468012 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.089625767 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.086001592 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.118654376 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.095648532 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.11810243 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.092756571 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.093800895 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.090066418 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.115769615 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.100677688 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.09114331 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.114462114 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.091871113 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.098463299 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.118395186 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.089264622 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.090782099 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.122059176 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.098724718 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.094277069 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.114214103 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.093568993 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.099795393 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.100949316 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.116443746 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.086954743 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.088104781 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.112400834 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.08791192 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.097498565 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.120629593 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.092499925 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.090637331 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.116842023 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.097863731 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.095943155 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.094778776 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.108440081 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.102169515 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.089878825 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.116205627 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.088104348 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.088747572 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.115980391 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.10002654 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.092155585 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.092531914 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.114798596 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.095912989 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.088207672 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.111146267 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.097536564 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.096191004 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.118125715 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.094085396 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.091229446 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.114847236 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.104244881 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.094087084 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.091036444 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.121336494 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.098926615 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.093005189 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.114173002 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.096655803 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.098865019 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.114805481 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.099599052 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.091431128 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.11378991 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.102049812 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.099544699 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.123342635 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.093490423 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.088352363 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.117062746 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.092661443 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.087355741 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.117396014 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.101121165 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.100269695 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.11250751 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.092738277 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.102832902 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.09754212 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.114700103 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.091418814 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.091183758 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.119230395 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.092318725 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.097272361 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.110239842 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.10116706 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.09999065 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.119446281 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.103577771 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.087531349 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.118663536 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.098306445 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.10086071 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.094117613 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.110352276 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.088977815 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.096668492 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.121559618 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.101327708 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.097569843 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.096893021 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.11929135 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.095220534 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.093385972 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.11279106 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.103325578 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.09833782 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.115092266 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.099079183 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.093768613 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.115777815 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.096073087 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.099325118 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.119551077 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.095496793 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.104075493 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.098823992 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.113573215 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.091998819 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.094742454 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.116439334 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.095198049 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.098361903 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.110731084 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.089599123 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.100113176 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.119995938 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.096008978 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.100779145 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.099853643 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.114456368 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.098171954 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.100257237 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.119385129 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.095995849 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.094058909 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.117330613 seconds)
  done (took 61.375573507 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.142181032 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.101731975 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.116486031 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.09770478 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.112572636 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.118411729 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.097329741 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.097308943 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.118732183 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.106585999 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.097044507 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.114972519 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.113881386 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.115835183 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.133927276 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.106485789 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.114810578 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.100425868 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.097052267 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.097076579 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.132108505 seconds)
  done (took 3.232681737 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.115524965 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.109749673 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.128409061 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.111550622 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.102849617 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.128748506 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.108143941 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.128875453 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.111891077 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.105052653 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.130038602 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.106949483 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.124071249 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.106485236 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.104983943 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.125690919 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.111615251 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.103431667 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.128623532 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.109634695 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.124059287 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.110286596 seconds)
  done (took 3.43582352 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.127106293 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.099626078 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.093597642 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.117963005 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.101344518 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.096289536 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.118949197 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.097641016 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.105798143 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.091351275 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.108350011 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.092143555 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.096726077 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.120041053 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.092668615 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.097732899 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.124480604 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.101662509 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.101286119 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.11649914 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.088836669 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.097555424 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.097068234 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.107529842 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.1025282 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.100888928 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.116805239 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.101156832 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.087968049 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.099445581 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.117762272 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.092555813 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.088145916 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.107733777 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.090044063 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.100051339 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.09800276 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.117797987 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.09786396 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.088405007 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.118086578 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.102955149 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.088707065 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.096456354 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.117569052 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.093224199 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.099106803 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.116423678 seconds)
  done (took 5.83749377 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.127324633 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.162963297 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.102023375 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.135220535 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.133410987 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.107100746 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.100182519 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.136382804 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.098772839 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.122181292 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.113776291 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.110492845 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.124580552 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.105735537 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.101967779 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.124323316 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.104170411 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.100840802 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.126973156 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.102494902 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.105594936 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.123750481 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.111127079 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.131979893 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.337824266 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.100366339 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.120325334 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.105693437 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.109679756 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.126135957 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.106025251 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.104673541 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.131837967 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.104671616 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.100158341 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.12257311 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.113649616 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.121612959 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.103008936 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.100138629 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.100878127 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.124149074 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.10302082 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.13143145 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.103492269 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.102254017 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.121221865 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.100764631 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.110600496 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.121993157 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.108587581 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.111280211 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.122926272 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.101826807 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.103130893 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.131830838 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.101903786 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.099239919 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.124856937 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.109969824 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.098731649 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.12703427 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.110673427 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.100475416 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.127262437 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.111425276 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.123339811 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.104448049 seconds)
  done (took 9.003464239 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.131891884 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.103645565 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.132713625 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.11364575 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.104805308 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.12603311 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.104860109 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.104650187 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.126346272 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.110457014 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.123917104 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.197539179 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.123373858 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.110031248 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.103597415 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.124868413 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.10634119 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.104514176 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.126288016 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.105482056 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.10460871 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.13360854 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.104762424 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.131799195 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.11783276 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.101576489 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.125328409 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.106866591 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.112263731 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.125790112 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.116431146 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.124376724 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.106464238 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.112412792 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.136869532 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.105696698 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.098986498 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.126260663 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.106234407 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.10427253 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.123185827 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.113206177 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.104577517 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.124638761 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.104558865 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.104410335 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.135559894 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.11516628 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.130986596 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.110985416 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.103507764 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.133359613 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.104663676 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.124529052 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.114262117 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.118023468 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.134324818 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.112960012 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.124481145 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.114824173 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.112629988 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.140877611 seconds)
  done (took 8.210001068 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.099421973 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.100035578 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.098134311 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.118035302 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.100328579 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.098063869 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.097492214 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.120211354 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.098985054 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.097798451 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.119249936 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.098699106 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.098183101 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097475476 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.119631952 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.09966938 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.097975092 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.118253441 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.099716867 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.098607854 seconds)
  done (took 2.99275334 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.108393368 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.114213055 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.119760473 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.108295515 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.101127438 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.127092018 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.103241881 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.10073452 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.09913279 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.122520633 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.109759787 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.107311708 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.121126095 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.10779505 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.127813641 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.108299963 seconds)
  done (took 2.707348398 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.119028905 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.116006395 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.187935928 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.10264075 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.121776765 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.108118022 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.101021731 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.101637499 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.123083624 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.105782356 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.103363857 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.125383206 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.101824702 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.10111534 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.123187314 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.104997873 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.099992555 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.125843289 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.102250225 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.163357599 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.12611617 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.102519197 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.100206749 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.126413593 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.101476662 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.105327113 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.128405062 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.102843706 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.10185533 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.123203056 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.102562497 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.106227937 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.121531991 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.108092349 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.101786373 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.12286977 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.101861651 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.10200292 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.123124789 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.102638363 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.102574205 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.102165698 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.12261416 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.104059542 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.098616561 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.12269929 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.101029817 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.106764496 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.122986435 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.104534244 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.100841847 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.127568412 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.107735892 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.108659209 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.1278731 seconds)
  done (took 7.134494932 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.113308818 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.101051307 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.131238841 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.100941715 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.101734007 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.10108732 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.124081816 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.104310082 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.101952944 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.121227038 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.103535752 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.10190817 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.12225463 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.104283151 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.103170381 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.101783879 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.120316383 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.10322575 seconds)
  done (took 2.885007719 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.106979828 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.101559558 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.1037389 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.121515374 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.101625323 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.100493653 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.120800647 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.1005378 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.100411738 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.099999622 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.122924671 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.101290254 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099840512 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.122715722 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.102132659 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.101083468 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.120797775 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.100996097 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.101099454 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.098740942 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.12296829 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.101263289 seconds)
  done (took 3.282577842 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.111098094 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.180982449 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.107415907 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.189689636 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.097929945 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.096788703 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.128745074 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.098357757 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.111944812 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.118323854 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.096531176 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.09658092 seconds)
  done (took 2.364467571 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.12936266 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.137669583 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.122283205 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.102005255 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109245784 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.127928117 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106578302 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.104619375 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.136166443 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117267575 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.125792435 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114138449 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113110311 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.134339054 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.110844516 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.129933842 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106611056 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106531207 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.121333538 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.122559893 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.105702671 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.135285832 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108299524 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.104467201 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.127346517 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.113861378 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.134285937 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119301834 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.104784208 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.135206176 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11071017 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.104151997 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.135739593 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117168768 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.123769636 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113990719 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105433053 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.141231418 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109687348 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.135181416 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.102727037 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110338144 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.135030545 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.111723908 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112767356 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.127815716 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11103765 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.126175403 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107552621 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.125737561 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.131855831 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11466253 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.130340594 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115021285 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113604606 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.148348844 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.118660958 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.135158416 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110854021 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.137964039 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115721876 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110800186 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.135731182 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118994278 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.131647306 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.115978958 seconds)
  done (took 8.855422666 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.141670453 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.102388773 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.127338442 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.120239876 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11356163 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108967842 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108820236 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.12826266 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107339961 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.10269987 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.169422659 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107560223 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114942396 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.135730654 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106172679 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.12843149 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108553289 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114511354 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.124444133 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.128235651 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.106034187 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.136720853 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114781545 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.136079162 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117605157 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.130544574 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108012266 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107268077 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.126809085 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107706997 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.111708494 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.127699654 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116062024 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.102991141 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.136651597 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107732654 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106037958 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.133775705 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107015059 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.13106311 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.115903957 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121138557 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.127916435 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108106969 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.138296834 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107942678 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106664441 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.124351692 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108288009 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.103362657 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.14019535 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117785515 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.138573703 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115892622 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106691737 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.128620724 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108839905 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106190902 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.127604014 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112675903 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114443328 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.129057481 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.128818996 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.129475532 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109774021 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.114060212 seconds)
  done (took 8.8233266 seconds)
done (took 168.067107409 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.146692536 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.184077489 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.143225763 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.177637811 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.093887314 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.126562714 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.146983273 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.145279415 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.091774581 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.116198528 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.092761514 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.094770063 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.183598192 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.096410696 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.091776627 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.116756653 seconds)
  done (took 2.981446205 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.189478427 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.303049856 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.107132414 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.117715819 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.099661836 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.097696486 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.118229965 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.100644296 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.097273357 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.124981482 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.098404726 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.093841485 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.125336667 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.09516264 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.0978281 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.09781912 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.125962393 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.098307513 seconds)
  done (took 3.131245283 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.117983812 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.142663792 seconds)
  done (took 1.209367166 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.127894899 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.209362886 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.277680152 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.16707732 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.119173552 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.137269873 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.146001619 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.131579496 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.18651354 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.132440377 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.110532608 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.095503221 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.144986723 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.103150241 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.134252588 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.096138206 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.126199743 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.132599765 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.112855534 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.100778173 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.14152046 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.102156713 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.103191352 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.133794608 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.177146837 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.131813985 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.101851527 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.10079525 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.121412912 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.11229865 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.102798494 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.136727869 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.111266591 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.177499393 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.101207138 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.174336024 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.104537894 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.120786326 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.111703324 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.097884733 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.124482022 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.102111736 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.111502759 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.118382293 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.101092454 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.103612261 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.123983961 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.101402584 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.126171738 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.106725245 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.105921469 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.126132211 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.150620341 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.127822489 seconds)
  done (took 7.831088151 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.849925656 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.139159384 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.098684895 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.998541511 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.148350194 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.113703592 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.842566633 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.143889587 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.253738365 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.87265076 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.115399632 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.111306116 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.253801831 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.25558912 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.255943251 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.375145813 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.689730376 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.135428073 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.127283391 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.161212636 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.108063836 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.14643036 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.119786985 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.517581053 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.100465736 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.098484408 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.129521091 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.112466559 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.174230605 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.099454112 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.124776782 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.174385089 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.289060288 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.204037545 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.099817552 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.121798145 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.098958906 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.182508743 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.265528394 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.211792281 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.191102178 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.098113316 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.099091668 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.128703889 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.119785054 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.095647349 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.177141517 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.188586248 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.190106026 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.103528919 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.110998288 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.132437315 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.106532429 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.175618424 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.096949014 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.354896877 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.38079535 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.100017288 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.106543138 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.137362596 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.263015351 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.099653227 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.229820578 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.149049274 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.209652637 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.098171018 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.836533072 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.182172698 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.098549141 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.127890338 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.107331921 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.104468372 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.130297597 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.166128548 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.501086945 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.111155301 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.126766037 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.099313692 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.229867657 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.099194229 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.119770365 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.158317961 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.12255913 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.108839979 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.113189901 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.133922239 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.185880821 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.245570961 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.13487803 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.107740829 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.127738683 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.113991181 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.100980815 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.23114275 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.222022045 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.172839227 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.227023473 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.10853296 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.179614618 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.180937691 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.108270852 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.188872362 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.106754853 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.137636983 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.109382473 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.218841148 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.155356329 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.102277379 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.10502908 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.132633899 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.134753268 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.125725377 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.110271134 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.186455178 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.552967328 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.160141253 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.119176878 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.104880092 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.109240349 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.177520294 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.106521517 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.25779302 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.132151475 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.180971646 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.108059072 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.096386094 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.130357779 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.158112441 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.13441655 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.108177531 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.129737291 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.110013688 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.277382272 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.218539443 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.112794183 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.245007813 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.197307043 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.108240666 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.191391869 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.106935225 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.186441868 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.130072666 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.109072097 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.101534301 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.823780091 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.136122671 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.108557927 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.104847095 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.205501481 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.09856161 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.124041137 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.100063647 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.097137799 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.811554593 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.124564338 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.098856937 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.102369121 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.128311788 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.109985113 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.107362301 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.126817957 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.155344299 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.259706835 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.113488304 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.106368715 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.122857599 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.153857412 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.123630559 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.101917968 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.099861717 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.124344171 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.109822311 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.10441938 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.126019878 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.189148488 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.153279128 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.224987643 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.62949036 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.122736711 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.100938243 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.235492202 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.121753921 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.323541433 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.109373494 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.229746627 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.184236231 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.097688018 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.356610347 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.185491931 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.207411905 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.103143735 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.189338888 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.097677686 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.130674631 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.156013554 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.122046269 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.108439035 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.173416813 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.11578829 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.136148955 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.273833967 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.100430956 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.250071116 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.097391461 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.187312222 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.102311037 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.13032744 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.321637106 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.100953759 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.138467061 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.155390463 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.127632263 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.102530477 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.670289926 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.100977746 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.132301654 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.109510367 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.229408368 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.183469611 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.108759934 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.132651498 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.114532205 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.179604889 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.229448487 seconds)
  done (took 47.417565015 seconds)
done (took 63.514170956 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.349163644 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.288996535 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.454817645 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.205514582 seconds)
  done (took 2.338057038 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.245475365 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.161425983 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.212074435 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.120303748 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.219018557 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.097467955 seconds)
  done (took 2.03327996 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.779684147 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.505610431 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.361404125 seconds)
  done (took 2.628171607 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 2.270382492 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.345809888 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.335753553 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.392448459 seconds)
  done (took 4.441171932 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.267091061 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.129159174 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.121971037 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.203489849 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.240474806 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.223205443 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.158590151 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.160355477 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.151711287 seconds)
  done (took 2.690618932 seconds)
done (took 15.099352112 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.199708753 seconds)
    (2/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.32960464 seconds)
    (3/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.137206936 seconds)
    (4/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.311693819 seconds)
    (5/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.301892369 seconds)
    (6/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.131737317 seconds)
    (7/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.131333344 seconds)
    (8/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.324111094 seconds)
    (9/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.109352479 seconds)
    (10/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.135561435 seconds)
    (11/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.18629366 seconds)
    (12/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.124390705 seconds)
    (13/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.151014634 seconds)
    (14/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.224301738 seconds)
    (15/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.316148469 seconds)
    (16/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.190655199 seconds)
    (17/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.082244086 seconds)
    (18/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.203782205 seconds)
    (19/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.159735904 seconds)
    (20/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.295622994 seconds)
    (21/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.169236492 seconds)
    (22/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.190125382 seconds)
    (23/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.220884567 seconds)
    (24/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.124997034 seconds)
    (25/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.21355951 seconds)
    (26/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.209335045 seconds)
    (27/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.101619843 seconds)
    (28/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.221122683 seconds)
    (29/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.131091103 seconds)
    (30/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.156356576 seconds)
    (31/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.252122532 seconds)
    (32/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.227685903 seconds)
    (33/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.143540593 seconds)
    (34/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.204338772 seconds)
    (35/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.108318732 seconds)
    (36/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.171763303 seconds)
    (37/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.100894392 seconds)
    (38/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.107647725 seconds)
    (39/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.145991942 seconds)
    (40/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.165143537 seconds)
    (41/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.196838524 seconds)
    (42/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.209726812 seconds)
    (43/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.109952607 seconds)
    (44/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.159488214 seconds)
    (45/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.178117834 seconds)
    (46/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.103734086 seconds)
    (47/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.101074709 seconds)
    (48/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.100104988 seconds)
    (49/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.077651128 seconds)
    (50/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.080789543 seconds)
    (51/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.193194207 seconds)
    (52/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.08326093 seconds)
    (53/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.076981387 seconds)
    (54/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.100526186 seconds)
    (55/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.196030105 seconds)
    (56/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.161594719 seconds)
    (57/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.101431524 seconds)
    (58/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.10642062 seconds)
    (59/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.083456263 seconds)
    (60/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.078009867 seconds)
    (61/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.174236702 seconds)
    (62/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.191203058 seconds)
    (63/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.18482628 seconds)
    (64/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.24563286 seconds)
    (65/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.137652143 seconds)
    (66/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.076642754 seconds)
    (67/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.123574308 seconds)
    (68/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.078373328 seconds)
    (69/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.120981131 seconds)
    (70/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.19159775 seconds)
    (71/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.110459212 seconds)
    (72/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.100626946 seconds)
    (73/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.173460366 seconds)
    (74/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.250084459 seconds)
    (75/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.080671036 seconds)
    (76/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.160050374 seconds)
    (77/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.108594568 seconds)
    (78/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.135702952 seconds)
    (79/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.194643182 seconds)
    (80/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.16244621 seconds)
    (81/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.07720721 seconds)
    (82/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.125736995 seconds)
    (83/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.136993894 seconds)
    (84/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.211361013 seconds)
    (85/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.143841602 seconds)
    (86/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.232816123 seconds)
    (87/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.169908005 seconds)
    (88/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.081658795 seconds)
    (89/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.130237202 seconds)
    (90/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.12234995 seconds)
    (91/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.088417268 seconds)
    (92/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.193800752 seconds)
    (93/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.083635757 seconds)
    (94/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.107681448 seconds)
    (95/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.078591351 seconds)
    (96/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.195744078 seconds)
    (97/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.115715476 seconds)
    (98/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.137747035 seconds)
    (99/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.151826755 seconds)
    (100/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.101513167 seconds)
    (101/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.108144206 seconds)
    (102/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.077196967 seconds)
    (103/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.150890679 seconds)
    (104/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.183755719 seconds)
    (105/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.130978052 seconds)
    (106/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.103826412 seconds)
    (107/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.082287104 seconds)
    (108/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.111014938 seconds)
    (109/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.126418013 seconds)
    (110/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.078381723 seconds)
    (111/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.14332891 seconds)
    (112/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.086048767 seconds)
    (113/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.164221607 seconds)
    (114/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.083635464 seconds)
    (115/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.078585584 seconds)
    (116/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.077341132 seconds)
    (117/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.195635055 seconds)
    (118/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.08235324 seconds)
    (119/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.07772821 seconds)
    (120/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.129332758 seconds)
    (121/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.085529543 seconds)
    (122/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.108876322 seconds)
    (123/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.077872692 seconds)
    (124/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.107141153 seconds)
    (125/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.107715461 seconds)
    (126/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.082583072 seconds)
    (127/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.101947881 seconds)
    (128/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.081987845 seconds)
    (129/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.131741265 seconds)
    (130/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.083043305 seconds)
    (131/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.083491846 seconds)
    (132/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.083075389 seconds)
    (133/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.160486377 seconds)
    (134/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.107554942 seconds)
    (135/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.078001779 seconds)
    (136/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.082853032 seconds)
    (137/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.077666193 seconds)
    (138/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.107304609 seconds)
    (139/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.079833067 seconds)
    (140/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.081896863 seconds)
    (141/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.122250432 seconds)
    (142/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.14559354 seconds)
    (143/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.112869127 seconds)
    (144/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.082696767 seconds)
    (145/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.098553619 seconds)
    (146/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.190398869 seconds)
    (147/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.082692227 seconds)
    (148/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.078347483 seconds)
    (149/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.082780734 seconds)
    (150/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.134346393 seconds)
    (151/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.169906609 seconds)
    (152/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.07839952 seconds)
    (153/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.079327196 seconds)
    (154/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.127257049 seconds)
    (155/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.079944114 seconds)
    (156/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.077972715 seconds)
    (157/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.101224806 seconds)
    (158/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.107478113 seconds)
    (159/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.111756331 seconds)
    (160/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.101395822 seconds)
    (161/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.078239375 seconds)
    (162/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.102208331 seconds)
    (163/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.103404845 seconds)
    (164/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.099313803 seconds)
    (165/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.08428369 seconds)
    (166/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.102742648 seconds)
    (167/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.080394787 seconds)
    (168/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.079061444 seconds)
    (169/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.079269094 seconds)
    (170/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.108280037 seconds)
    (171/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.103648421 seconds)
    (172/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.109301504 seconds)
    (173/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.123315414 seconds)
    (174/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.13189556 seconds)
    (175/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.112418301 seconds)
    (176/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.1017263 seconds)
    (177/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.121205901 seconds)
    (178/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.08440331 seconds)
    (179/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.129112016 seconds)
    (180/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.079257956 seconds)
    (181/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.12487163 seconds)
    (182/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.080326385 seconds)
    (183/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.117233617 seconds)
    (184/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.099158407 seconds)
    (185/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.102934627 seconds)
    (186/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.079904123 seconds)
    (187/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.123255735 seconds)
    (188/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.102359261 seconds)
    (189/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.12845614 seconds)
    (190/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.103153013 seconds)
    (191/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.101550671 seconds)
    (192/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.135901289 seconds)
  done (took 26.48635227 seconds)
done (took 27.477633766 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.178838677 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.102676234 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.133972839 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.109647905 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.200151489 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.116683422 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.12357339 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.135094703 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.120864515 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.108889568 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.12404451 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.122163905 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.107856085 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.203122607 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.109861368 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.124234504 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.102069473 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.120133689 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.122320221 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.150854532 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.174622251 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.127232103 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.118647772 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.099982489 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.201825079 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.10140385 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.132863354 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.110091332 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.12133389 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.133823232 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.111010945 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.100180594 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.149021541 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.125760718 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.100539039 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.109404481 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.126202309 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.086221443 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.108634493 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.135320238 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.122617144 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.110749962 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.133660568 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.102857733 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.110748122 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.133368257 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.101370202 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.11333574 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.098032149 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.135861163 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.103475297 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.12432484 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.133729775 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.099745092 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.09944568 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.126984447 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.120515827 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.100573957 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.145913701 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.101818342 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.102078682 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.099998707 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.136721581 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.101592788 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.108737935 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.125786413 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.11182837 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.111089897 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.133346453 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.104336218 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.101449921 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.132774871 seconds)
done (took 9.808854611 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.107344802 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.145922543 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.198094355 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.210231513 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.128302159 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.114967584 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.141782679 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.125430444 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.113084626 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.146222846 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.138135005 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.156296781 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.183262264 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.140555792 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.117073988 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.112603194 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.138482096 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.110740654 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.206690543 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.126593409 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.124689576 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.142839178 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.127248677 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.141606433 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.107731333 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.135563317 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.133336621 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.113622887 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.104618734 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.137042996 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.127306915 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.10469501 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.132037965 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.124846648 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.122727338 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.138917552 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.117132262 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.113435005 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.130431201 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.106497873 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.11230282 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.145674533 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.106200815 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.115565583 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.138534323 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.120276671 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.111510958 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.142721646 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.107920919 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.112790838 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.130009473 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.131851375 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.116398449 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.146333525 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.117603044 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.117056628 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.143984225 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.118783188 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.107474351 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.142269974 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.106308619 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.105464882 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.132454269 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.128313918 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.107335849 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.144475813 seconds)
  done (took 9.584854276 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.125576365 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.134271332 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.140941473 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.117021811 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.109418147 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.124618869 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.100873806 seconds)
  done (took 1.891199059 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.102152205 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.184622406 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.209402926 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.208505075 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.17851439 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.219825841 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.148602725 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.102712032 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.136099912 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.135504506 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.185174112 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.236838603 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.110678521 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.141082682 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.18636043 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.125759742 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.18777988 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.126215974 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.115186644 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.210076453 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.1176379 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.130591414 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.139381792 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.101035245 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.205406236 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.102398193 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.261160305 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.119472667 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.13591016 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.115789459 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.115561513 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.203160496 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.180079493 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.141955181 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.109169982 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.209827993 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.179290213 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.141067616 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.194647956 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.131356581 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.180026222 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.141223457 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.117289947 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.115780114 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.141556785 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.170688617 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.14685001 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.116491164 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.114591455 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.214236369 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.110991973 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.208576723 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.11176639 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.140014941 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.11289156 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.117355957 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.148729864 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.116570277 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.214701977 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.119007558 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.208283697 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.18458393 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.207293626 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.211377381 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.125515575 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.210598838 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.17713426 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.139076213 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.11170956 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.115773681 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.214726837 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.113670419 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.139021343 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.175291539 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.144973624 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.186205359 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.212451398 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.112453031 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.140006916 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.106719683 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.112913832 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.100574007 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.201298043 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.113967141 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.13924137 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.119594438 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.113276962 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.142894734 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.106574658 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.14899921 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.116154107 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.112905611 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.14454117 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.117375395 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.117107452 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.214769745 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.111074827 seconds)
  done (took 15.661465791 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.104062886 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.102999034 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.107357042 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.129484375 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.103679494 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.102933768 seconds)
  done (took 1.713620098 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.140274034 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.115450633 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.149504968 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.118612615 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.159287765 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.215334992 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.22057037 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.110731769 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.158105894 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.126483879 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.213835415 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.191503647 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.216198248 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.118622746 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.220618596 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.117630895 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.221299076 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.113643393 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.151474187 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.115017706 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.115654464 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.145668185 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.115047237 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.208472707 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.118069349 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.117261936 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.137628407 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.124625365 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.122872745 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.13858668 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.120994731 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.141428355 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.111433423 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.110417573 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.221479298 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.108747723 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.138047169 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.121087551 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.119355165 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.143863552 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.1959154 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.14001068 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.124009766 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.119308364 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.137573147 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.110160458 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.118570563 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.136923229 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.196839159 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.146999408 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.120580183 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.116272553 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.144931233 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.120336833 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.108642577 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.137328568 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.119961936 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.222624638 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.119233347 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.134706012 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.117813559 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.117849452 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.136585426 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.123866936 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.117230073 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.144891123 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.110158061 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.117143345 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.139850107 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.119389766 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.119537001 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.141918387 seconds)
  done (took 11.21622558 seconds)
done (took 41.097786773 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.634438111 seconds)
  done (took 2.691015427 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.897334826 seconds)
  done (took 1.955237875 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 18.506924575 seconds)
  done (took 19.598093281 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.654690138 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.705868705 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.222200641 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.1457788 seconds)
  done (took 3.788168858 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 3.040786159 seconds)
  done (took 4.123808041 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.291873994 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.269884062 seconds)
  done (took 1.628383245 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.738128176 seconds)
  done (took 1.818149069 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.515167368 seconds)
  done (took 2.581624287 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.54212295 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.168137839 seconds)
  done (took 1.792253678 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.60888338 seconds)
  done (took 1.689566453 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 20.074167211 seconds)
  done (took 21.159920057 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.254103016 seconds)
  done (took 1.340589363 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.283809239 seconds)
  done (took 1.370209215 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.809407561 seconds)
  done (took 4.898766853 seconds)
done (took 71.500991305 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.113749259 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.116061526 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.114909313 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.140933026 seconds)
  done (took 1.563592987 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.122499332 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.116961477 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.119513191 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.143079729 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.122467238 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.114844275 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.143086806 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.118575822 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.114714575 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.144828042 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.119147898 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.114289789 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.144894535 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.116629881 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.114301977 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.144656001 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.12089617 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.116756662 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.142635717 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.118977413 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.117054686 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.142361826 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.121437729 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.118726396 seconds)
  done (took 4.101862671 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.113772587 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.107991536 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.109066938 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.131389894 seconds)
  done (took 1.55595251 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.125030463 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.127712494 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.150783648 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.125412767 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.128048139 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.152401785 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.117036112 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.111506539 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.140307776 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.124779399 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.131848992 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.154387004 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.127438649 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.117693319 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.153107483 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.110463934 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.115700791 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.15345757 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.123299545 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.123268163 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.143784604 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.124186909 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.119925375 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.151956492 seconds)
  done (took 4.243481725 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.189060991 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.128987662 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.173562122 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.159699701 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.17509258 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.115279604 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.14225984 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.14799452 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.123876828 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.117753856 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.145325161 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.161048572 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.147779056 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.119855311 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.11684054 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.148669746 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.128988106 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.120882348 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.188588064 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.120396063 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.147130996 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.130855527 seconds)
  done (took 4.243518288 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.120683995 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.107308673 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.103565251 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.134852204 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.119659419 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.10970643 seconds)
  done (took 1.791836206 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.107714492 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.101784243 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.102053046 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.128406821 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.106080525 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.101747469 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.099902995 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.130420594 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.102979434 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.100889526 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.126939478 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.101414557 seconds)
  done (took 2.405815049 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.330113349 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.107725489 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.133514783 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.112666958 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.112425783 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.103751826 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.145295356 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.106793926 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.265806704 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.102210176 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.131252742 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.192938285 seconds)
  done (took 2.942006704 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197769452 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.142929284 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.248776918 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.368677883 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186027033 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.158105942 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.292443172 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.18941337 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.174514263 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.16449723 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179679023 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188383187 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.150716167 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211929034 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135433916 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.184998621 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158922942 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.229744722 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165270966 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206274027 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.181932052 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.169624228 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.211860161 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.171365068 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.13838294 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154984983 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.143235672 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.12537056 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188325609 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159609583 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194932181 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145262789 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.166776633 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212523075 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224427081 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195734734 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.271058678 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.156174437 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.169621766 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.214782951 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.254949377 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139357036 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.211027302 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148172885 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.153694225 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180677773 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17714217 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.178621868 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.158245281 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140840955 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20246028 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172909564 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.19946829 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.161422532 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.279903933 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158852389 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.139326301 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190650089 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183777919 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.221887806 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200531257 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.121026472 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.20347445 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212681252 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206154659 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.165574549 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.159383335 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.150183194 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161483704 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.22716297 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201708622 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15790665 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.224683677 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126984162 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196624466 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.191494149 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151545269 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224473368 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165844412 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.144531595 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146483302 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156762922 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125834566 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.18397159 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.145488603 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.213819315 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158017745 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.337196761 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179502309 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.180372042 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.155394958 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.184907225 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.185691371 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.146443834 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.100271242 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16553348 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.159162979 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179359983 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127066529 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.151794283 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16538312 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.124400634 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176849913 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.12182209 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191040244 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.134346116 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186003771 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166499121 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.127620863 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.201531653 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.171385971 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.160995492 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190218607 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189026266 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154902167 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.130586922 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23923844 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16405745 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.161798661 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.170878436 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.218950053 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.173399312 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132857407 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182701007 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190010374 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.166251492 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194176009 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16263493 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.132098673 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.161581102 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167625325 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.183230337 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.15246369 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123048955 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.188862464 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213149792 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.124285006 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.134915453 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204762279 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.158261659 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122960272 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134167346 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158628696 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.140460533 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.143755246 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.164857652 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148414093 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191006271 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.160611243 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180649394 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130889676 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193603224 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127509851 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.193437194 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.145455068 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.143566892 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.170518451 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.220955377 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.125397461 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206546751 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.158545989 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211045838 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199674173 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12713693 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.208906535 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.125083418 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.117833326 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184162821 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.191530907 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.159845095 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.212134472 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205852062 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.163072323 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.188704941 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145400756 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19123834 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.177287326 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182202652 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.139715195 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.195637661 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189890834 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.119399605 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.120236021 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.151502515 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13503188 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126954431 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.161716198 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171408853 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187435805 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.202466689 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.165135209 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163172117 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.186221076 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.151040044 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156430945 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.199446882 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135380417 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.213548752 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184151793 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203582535 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.163933195 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158369456 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.1174158 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.151869128 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.13060373 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.18640463 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135219494 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.130558639 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16616908 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.213095503 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168636134 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172175669 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.218607593 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16230404 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.225513876 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.119293288 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.185296825 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166046704 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191182263 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.181797281 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136396574 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.185535665 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.186435288 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166034933 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.217152354 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16414102 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201843881 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189287904 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.189977295 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.127782258 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.173602104 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158317799 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163211913 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.159246741 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.170905696 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128832684 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17593102 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.136758586 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137196382 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205677939 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166380851 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178046157 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.182050049 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165755116 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.152047288 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13783791 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.19764119 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143658965 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.104252463 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194496748 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217725181 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147231364 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178620388 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168951441 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.154013707 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.318370723 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.2124028 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17174686 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.161664015 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134998984 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.194289108 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.157261754 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186726344 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.180638867 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168328391 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227695745 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.167541014 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.138332697 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157435859 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.145244387 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.175313272 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.136170569 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.17687105 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.159957348 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.170681395 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177923895 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163339927 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.166345359 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202328127 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.142439228 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.174810416 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136986404 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.24725955 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163524744 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198507671 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.188128448 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.162491769 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207851042 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.122189668 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123939534 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.159663293 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.182971205 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155450712 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173491435 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.195544635 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212142997 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172074804 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189070923 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.136399321 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.152987875 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.164888551 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172989843 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.213798729 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132843246 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.134848135 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213636697 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.125184227 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.155913861 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158331509 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.301489811 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.146128341 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198343266 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.106216083 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.29532937 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.128283723 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.156958594 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.160836712 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194224057 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.131251034 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.17937439 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20017821 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.137312988 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.188533124 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132809396 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.208903646 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213012517 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160881487 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198613615 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.141976821 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.187306093 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155900117 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199342485 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142413607 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.173457989 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.154493837 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.218789204 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.20344064 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.130372427 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164810387 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195405324 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.168327441 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196941452 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.136854326 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20849438 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124764398 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188829027 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13373088 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.151329285 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155857446 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.194532984 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128969791 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201945717 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16533016 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159496392 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.124955486 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171071278 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162855737 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163060721 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.127855918 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206332773 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.127070349 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202543956 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202061063 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154656234 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.164745773 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.170519937 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.129256488 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13497627 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16837996 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129095156 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.170950676 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.207046935 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.128398198 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200238271 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158332238 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190770164 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179915382 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141750432 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 1.325378709 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.154583742 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187940711 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.176915768 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.21876689 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.147461909 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199810371 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.168113496 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173587627 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160910161 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171678491 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.218885857 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185579497 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.165325796 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128509745 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168909954 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13510572 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.159633451 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.149906805 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192141188 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138572123 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.132846516 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.192381087 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141757201 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.173076422 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.13829236 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.224231625 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.146696372 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.208305113 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.212463919 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.136161077 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199886884 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169889189 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154970369 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.160048855 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196603568 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.141535439 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176293354 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.133088745 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.134279566 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236319468 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.123406947 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.185814406 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169249564 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.195746439 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167198506 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.161838286 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172047676 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167251259 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173509937 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.154126472 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.149806316 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.193038151 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.131632379 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.123365508 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.196377159 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181186171 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.162016895 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.165251102 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.174258112 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194463361 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.151175349 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131431919 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.297945041 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157833899 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.220659042 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.134501917 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.163424259 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143305291 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181891442 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.161967805 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196837939 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.128734737 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126981342 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.172519816 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.157753149 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.168628387 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.166258133 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200100366 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157090446 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212063331 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.131937106 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.281559069 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13968699 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.19667311 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.115556522 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.126016455 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166964663 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132818109 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167050178 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.183508921 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237280962 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.188582033 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.145728836 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.131716107 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.154923821 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128905834 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.188112117 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149122955 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19322279 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145207329 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.102357996 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168481008 seconds)
  done (took 84.741912513 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.161291801 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.152501622 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.168531093 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.22164631 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.193065087 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.354096893 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.227299742 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.264242953 seconds)
  done (took 2.923401172 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.118530358 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.157505849 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.139237505 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.142954664 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.109023548 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.442545636 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.13056752 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.146586456 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.160490933 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.149293331 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.134578545 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.504315839 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.141016821 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.117296212 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.146319815 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.107197539 seconds)
  done (took 4.022635443 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.907383775 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.555809571 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.246553172 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.27383747 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.257778783 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.199778708 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.788007209 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.688001769 seconds)
  done (took 13.1038461 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.153249479 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.141612067 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.416626844 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.249482186 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.203321782 seconds)
  done (took 2.352733248 seconds)
done (took 131.071848689 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.121523667 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.120675922 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.121112681 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.151219085 seconds)
  done (took 1.692034938 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.176819298 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.090574811 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.092145881 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.117398055 seconds)
  done (took 1.663917014 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.431401213 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.08971545 seconds)
  done (took 1.736524368 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.147615104 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.139712952 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.172752419 seconds)
  done (took 1.662057952 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.137333539 seconds)
  done (took 1.327630337 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.126253257 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.11478163 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.236402549 seconds)
  done (took 1.672617681 seconds)
done (took 10.947410351 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.118136335 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.921567348 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.431598284 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.130929499 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.70909298 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.425263286 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.423390597 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.172502425 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.173040148 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.135555338 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.131071396 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.704097207 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.436181651 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.87805768 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.393476222 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.90596092 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.693028636 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.10976588 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.143944762 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.110155194 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.398344026 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.134910744 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.110264628 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.108474019 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.716646493 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.418614802 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.107321919 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.911308127 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.108638688 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.110685014 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.426096599 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.10976639 seconds)
  done (took 20.991652078 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.116037673 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.164715673 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.144325057 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.110353737 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.111129285 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.137280344 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.12007904 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.121175581 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.20129247 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.108037414 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.158004612 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.108459214 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.11372806 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.137811979 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.134086833 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.108754432 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.137919368 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.112650953 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.1168037 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.13791012 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.131824801 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.107253382 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.110233366 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.139768329 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.10810038 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.129167494 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.139612025 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.120667632 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.135174083 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.114163407 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.113861635 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.109222754 seconds)
  done (took 5.259568829 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.155651959 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.173530467 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.146260215 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.146655435 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.185153047 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.110321405 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.221110127 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.147922059 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.202224427 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.109630569 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.129376467 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.13554116 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.149561526 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.108526468 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.162894374 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.108394608 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.110240718 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.139060726 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.116701584 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.110546989 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.159242078 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.109410981 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.109740046 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.139632895 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.109115104 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.130372602 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.137915358 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.121282195 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.107785891 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.14133125 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.115116828 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.108996842 seconds)
  done (took 5.563882919 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.123196452 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.124267348 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.130099119 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.164280831 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.118205809 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.120824437 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.152363299 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.118346392 seconds)
  done (took 2.259301865 seconds)
done (took 35.269377575 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.135268226 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.128426574 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.128226603 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.1538228 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.18727391 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.146546568 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.126376698 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.116535041 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.152170868 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.130848073 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.108332491 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.115936331 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.158885512 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.1197072 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.218177685 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.124395975 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.223170629 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.189955148 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.146371331 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.126199897 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.117369659 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.22512055 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.121356284 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.117812038 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.222728031 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.111563313 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.213806448 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.119255029 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.11858331 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.141399768 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.1895688 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.150640037 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.117231264 seconds)
  done (took 6.095750743 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.205545204 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.118587319 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.148362095 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.117730492 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.118640827 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.145130481 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.208686514 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.145785851 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.119866161 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.116636338 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.116337501 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.221324147 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.123410629 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.141588024 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.122293999 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.108400711 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.238958217 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.119232793 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.108055187 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.091751978 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.14481984 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.116432992 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.250746534 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.114556577 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.115643518 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.14678153 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.121562033 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.122253321 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.118590741 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.150594481 seconds)
  done (took 5.448522765 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.123652014 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.131790418 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.134719171 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.214248938 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.145632608 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.159749303 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.138134739 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.131502489 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.169610986 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.111969472 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.126224159 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.177044551 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.127995562 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.121356466 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.145125124 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.130825688 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.132079441 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.14191064 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.120589372 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.128251772 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.160105246 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.130206737 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.134584504 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.148303609 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.111120853 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.118362706 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.120357638 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.157952439 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.119427185 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.12510846 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.144276671 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.115543519 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.112630733 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.176109818 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.115241184 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.123218318 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.166841133 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.125266882 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.123614048 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.173999778 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.114925523 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.112264362 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.166760561 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.164692412 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.112606994 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.156090461 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.123750857 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.125105801 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.14051598 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.131098972 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.152965345 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.142753311 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.134525807 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.110070861 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.140964177 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.12128439 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.111823951 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.143340702 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.127887224 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.114535564 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.134815729 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.152068967 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.123040156 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.112867715 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.15418323 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.111778948 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.11080463 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.145781613 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.139762997 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.119149686 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.176397849 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.113808241 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.123401054 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.152726853 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.124673295 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.123174656 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.110994908 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.153252179 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.123478699 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.116747876 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.15451282 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.115036009 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.115332626 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.158940845 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.134388616 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.125711652 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.153318249 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.12623547 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.115440943 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.142401263 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.130531951 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.113561838 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.116210004 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.156601888 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.112274795 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.115440584 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.155692817 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.123988014 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.109404755 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.167910059 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.116829546 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.111436484 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.166486855 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.116157155 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.116767159 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.121077637 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.183400202 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.111796611 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.122249974 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.155942525 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.111807253 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.118481873 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.14508978 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.11193791 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.129801974 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.158090724 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.120186393 seconds)
  done (took 16.857653428 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.31735497 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.272387799 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.213763173 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.308446788 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.123883878 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.238294798 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.300451267 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.303345369 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.11197548 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.17977356 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.162680477 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.272504479 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.142706745 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.141371122 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.305579692 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.358153355 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.172057356 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.150327234 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.179237994 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.126693003 seconds)
  done (took 5.609093986 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.133297546 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.146452252 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.16480147 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.140704517 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.12270136 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.159918452 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.113422551 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.133588397 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.154700802 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.123564419 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.114203102 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.158782851 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.126039734 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.128254477 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.157885062 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.146460382 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.118839321 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.147481284 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.135518626 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.116688244 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.130975525 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.139433638 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.121007193 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.165076237 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.132041215 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.1233435 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.141684904 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.119521953 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.119167753 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.149501043 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.117487519 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.131355063 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.148346691 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.106114215 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.124681441 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.12667561 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.149005168 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.116443031 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.117196505 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.144158908 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.129557798 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.125763128 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.12018019 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.127662202 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.131499107 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.108551667 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.125132345 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.156175606 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.107319998 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.131265832 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.155228469 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.127374916 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.118760475 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.164270875 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.119652022 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.129170242 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.154308078 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.130051101 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.117292139 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.140257469 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.112171787 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.116688334 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.120233679 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.157737962 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.124206091 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.131187306 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.159040209 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.113010677 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.115954803 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.147033186 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.116594328 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.126008159 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.163874348 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.124295629 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.119187671 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.155776293 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.122279262 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.094901078 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.121077479 seconds)
  done (took 11.66241398 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.138312876 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.122450959 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.130461043 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.179007517 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.126259395 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.118395115 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.153410332 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.132290253 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.126735348 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.162856031 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.128564109 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.125853213 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.164874485 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.123859243 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.121843743 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.160091505 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.126800452 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.150220859 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.161575976 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.140916237 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.127568433 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.149641609 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.126536751 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.123040614 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.171918463 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.125133681 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.138400218 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.15902326 seconds)
  done (took 5.156006591 seconds)
done (took 52.035587472 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.36642775 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.574585307 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.333860231 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.334264467 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.364644649 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.368618413 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.338736701 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.334904489 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.886652984 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.306391515 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.334884543 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.356531937 seconds)
done (took 30.131691867 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.331810239 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.900042138 seconds)
    (2/2) benchmarking "String"...
    done (took 1.625304524 seconds)
  done (took 4.749411834 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.327563405 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.325143686 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.573498453 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.326794475 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.324826561 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.327534608 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.331125883 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.338399225 seconds)
  done (took 16.772451806 seconds)
done (took 27.406661302 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.401621966 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.522188022 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.581229993 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.327567855 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.328822735 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.342912968 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.345295292 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.358786126 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.337949049 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.332815108 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.744619128 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.61259871 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.34451106 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.703255651 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.328454776 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.332962096 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.348786456 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.564985555 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.332584121 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.361050113 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.306922798 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.306601748 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.366809436 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.32854595 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.336228868 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.330129253 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.385319889 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.335862404 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.522358821 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.330140914 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.358373386 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.327381718 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.385443011 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.336684422 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.32934122 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.3410658 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.510549219 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.339529926 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.314298537 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.360003873 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.519166322 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.342944958 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.328903297 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.340244208 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.332454543 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.379878529 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.32077016 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.442349754 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.354677718 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.342615146 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.409760814 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.707202824 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.336334048 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.33607528 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.34670874 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.563660822 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.349188815 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.393920141 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.355887176 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.335999388 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.329708893 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.336823553 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.360739438 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.335937606 seconds)
  done (took 152.134115633 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.330466669 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.335263062 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.334629545 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.337109636 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.333989236 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.334457436 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.330168107 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.330830798 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.337581312 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.359897887 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.331020154 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.329846077 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.336633048 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.284520671 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.340673454 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.353094174 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.33580847 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.332395731 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.342759029 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.330751334 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.33486284 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.338152385 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.333256967 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.330933662 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.333422143 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.417623191 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.3667167 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.338497251 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.345524415 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.332366073 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.379226267 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.34122395 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.972761039 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.207191276 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.341318655 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.352630956 seconds)
  done (took 84.97742573 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.332086312 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.331871774 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.333676043 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.366732996 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.332558626 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.934638703 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.939401696 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.318360239 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.347955008 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.764051571 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.578387104 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.333402634 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.42425864 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.346919781 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.334330907 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.347977742 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.361035699 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.334950008 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.334517816 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.934216602 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.350213207 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.534462076 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.517849811 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.351915593 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.367687956 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.729617978 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.334147582 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.368803242 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.444947592 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.67018905 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.38632701 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.333697954 seconds)
    (33/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.333646505 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.690185029 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.445582558 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.336666533 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.36944381 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.335610891 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.617818875 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.336221485 seconds)
    (41/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.334155761 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.334942875 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.338062973 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.012508041 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.340318066 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.938364155 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.340706521 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.310284566 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.336344159 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.335166663 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.419042289 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 11.072202203 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.338969395 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.335278879 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.33699731 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.335967457 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.336934781 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.370585333 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.437705714 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.435068396 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.339024876 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.340088935 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.370836101 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.336760297 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.488725724 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.337976239 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.314237443 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.398584061 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.437221025 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.940632823 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.341317353 seconds)
    (72/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.336893823 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.432795543 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.456206872 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.336197923 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.337213137 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.336787129 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.338686948 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.448486531 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.336903492 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 6.033015437 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.518102119 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.353870746 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.778648245 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.44010651 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.337640227 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.686422579 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.342135546 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.337459323 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.076379959 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.434647544 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.337693832 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.336344149 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.337389393 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 6.036020289 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.943063595 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.614020569 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.34172065 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.992586136 seconds)
    (100/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.34305941 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.3375131 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 5.215926814 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.921487506 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 5.004800516 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.343205383 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.450693498 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.519310382 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.35749302 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.339672129 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.775944294 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.344604998 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.399141626 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.339305389 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.741448504 seconds)
  done (took 390.17796854 seconds)
done (took 628.514856239 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.225031681 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.178356675 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.323451237 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.186777587 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.170756061 seconds)
  done (took 12.320910711 seconds)
done (took 13.557431999 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.536694354 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.537911761 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.40316777 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.543033224 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.373679622 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.557082303 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.522397718 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.361563062 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.457018575 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.425772577 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.453396718 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.39454724 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.376784119 seconds)
  done (took 20.181548149 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.635527945 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.349500076 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.404575635 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.630678574 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.383385443 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.625354731 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.663798077 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.349798712 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.491108244 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.3930882 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.36206566 seconds)
  done (took 19.526458918 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.626134924 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.352351126 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.407326193 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.619525195 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.387248206 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.626512426 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.663460398 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.351609067 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.509039374 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.36392779 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.361186967 seconds)
  done (took 19.50717837 seconds)
done (took 60.452654637 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.379620976 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.443528072 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.378290624 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.361384123 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.359024122 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.35819828 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.360729844 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.35804013 seconds)
  done (took 12.237230308 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.358380547 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.359161176 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.357158975 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.357185747 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.357794777 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.358579424 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.357559156 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.358940481 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.358032117 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.358729124 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.359303693 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.359370913 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.359372014 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.357928989 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.357932397 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.358510064 seconds)
  done (took 22.97459896 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.36048849 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.356744508 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.357714465 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.356588616 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.357424141 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.359630037 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.359721697 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.35873243 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.358217747 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.356987333 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.36112768 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.35900525 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.358743847 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.359582801 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.359204294 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.360204052 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.359000597 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.359113342 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.363031019 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.35907201 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.358477469 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.359341658 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.359554184 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.358298887 seconds)
  done (took 33.8573486 seconds)
done (took 70.308158705 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.359635988 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.35076103 seconds)
  done (took 5.951386878 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.420645703 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.417798688 seconds)
  done (took 4.079783806 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.362154813 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.360858752 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.361373409 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.360662941 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.358999463 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.360597202 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.360984529 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.360465151 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.361190864 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.358154841 seconds)
  done (took 14.848511388 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.361438989 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.361252187 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.363428225 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.361392756 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.361576063 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.360778696 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.360708551 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.361260848 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.362082458 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.360983107 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.361229246 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.361623839 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.362398182 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.360683016 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.361198196 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.360743709 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.361169989 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.359471982 seconds)
  done (took 25.746489447 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.374436977 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.380759226 seconds)
  done (took 3.9989968 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.489079649 seconds)
    (2/7) benchmarking "second"...
    done (took 1.402259144 seconds)
    (3/7) benchmarking "month"...
    done (took 1.467746749 seconds)
    (4/7) benchmarking "year"...
    done (took 1.458319279 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.403708324 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.382852238 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.403355329 seconds)
  done (took 11.250447286 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.363285988 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.567586625 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.696338912 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.977441398 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.363212663 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.365304038 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.258116072 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.367766686 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.368708586 seconds)
  done (took 15.571682106 seconds)
done (took 82.687988873 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.366066262 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.377808415 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.372795246 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.368977006 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.657520811 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.382428895 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.356013576 seconds)
done (took 17.126052552 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.33137525 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.338913309 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.335836614 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.362544241 seconds)
  done (took 10.612766802 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.348635922 seconds)
    (2/2) benchmarking "read"...
    done (took 1.676226911 seconds)
  done (took 5.269199406 seconds)
done (took 17.126605051 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.363652817 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.364744704 seconds)
    (3/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.363341683 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.364616115 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.363972317 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.365455827 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.365856587 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.362513782 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.365284244 seconds)
    (10/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.363871647 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.366067147 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.364837435 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.364963821 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.364725253 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.364036558 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.366167324 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.364712324 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.364155775 seconds)
    (19/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.364235853 seconds)
    (20/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.366523966 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.365017311 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.365274719 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.365057823 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.364798272 seconds)
  done (took 33.998647906 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.364665962 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.365991339 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.367454591 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.366385259 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.365031017 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.365211893 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.365830959 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.365143984 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.365060366 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.365499015 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.365736542 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.364987089 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.366702786 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.365320396 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.367004109 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.366400848 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.367064048 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.365953119 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.366340034 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.367142976 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.36648586 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.367643728 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.366796076 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.366566606 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.365555767 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.366499951 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.36660059 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.366168295 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.367115037 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.366952916 seconds)
  done (took 42.231113928 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.368019217 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.36801873 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.367948941 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.366958138 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.368046947 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.367152722 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.367759696 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.367557535 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.368059181 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.366906319 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.368533451 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.368304606 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.368211891 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.367345084 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.368875605 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.369201301 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.367874059 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.368050044 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.36806619 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.367495546 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.369301584 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.368642192 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.367516117 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.367879116 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.36732464 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.369276448 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.369932589 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.368390458 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.370268674 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.370275621 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.368793714 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.368198428 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.370605769 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.369481417 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.369745447 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.370726229 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.370929699 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.370453223 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.370168623 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.371030956 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.370066827 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.370515993 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.371593663 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.370161474 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.370377392 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.371010792 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.368624656 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.369448212 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.371173887 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.37056775 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.370132109 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.37142741 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.370208174 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.369417962 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.37131421 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.369825269 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.370374997 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.371777426 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.370940094 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.370723087 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.371752002 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.371164828 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.370773669 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.370904263 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.370492754 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.370857833 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.372440124 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.372203651 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.370371757 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.379577145 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.372872355 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.371210984 seconds)
  done (took 99.871996662 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.371477078 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.371600997 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.371522347 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.368933784 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.371192469 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.372844151 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.371266155 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.37102567 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.371187365 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.372056991 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.372573401 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.373649366 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.374456406 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.372116273 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.372532176 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.372123603 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.372921784 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.371723282 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.372104625 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.371911955 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.372162418 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.372276233 seconds)
  done (took 31.435104544 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.373038265 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.372759999 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.373995733 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.375041598 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.373997243 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.375131083 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.371314812 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.373923819 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.375581299 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.373174143 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.373117488 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.371248196 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.373598398 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.373456443 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.373565491 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.375983679 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.373951732 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.375782273 seconds)
  done (took 25.981792908 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.375287722 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.373110103 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.373224225 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.374371732 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.373270411 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.372379294 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.373573528 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.374157075 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.374931924 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.374369008 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.376257637 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.374859482 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.375458324 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.374190733 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.373955475 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.373144366 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.375267934 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.374125884 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.373910556 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.373982829 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.375185536 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.375600363 seconds)
  done (took 31.488891904 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.374926293 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.374164593 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.375639652 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.374366414 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.375293561 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.375578141 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.376427121 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.376440506 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.376935135 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.376148214 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.374088893 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.376807847 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.377244016 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.376415285 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.376576964 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.376233497 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.377118209 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.37510242 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.375739188 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.376943973 seconds)
  done (took 28.774257101 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.378071632 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.375195571 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.377340323 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.375649855 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.375106357 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.376383072 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.377316478 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.378200489 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.376960102 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.377607736 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.377470831 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.376725809 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.375768381 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.376736341 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.377876335 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.378701964 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.377138894 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.37742559 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.379427392 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.37917352 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.377253273 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.376971816 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.377578659 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.376746361 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.377132231 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.379300742 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.378861727 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.379155099 seconds)
  done (took 39.824615559 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.378734796 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.377867661 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.378988657 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.377517016 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.377861155 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.378093554 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.37847676 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.378933736 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.378202184 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.378415223 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.379495443 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.377784408 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.380223319 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.379221034 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.379246306 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.379853341 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.378861323 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.378809622 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.379616883 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.37906058 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.380213053 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.378550325 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.380456817 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.378324472 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.379299894 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.380822318 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.380650648 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.379109461 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.379500248 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.378278084 seconds)
  done (took 42.628120171 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.399528624 seconds)
    (2/2) benchmarking "in"...
    done (took 1.398237923 seconds)
  done (took 4.054926716 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.379504791 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.379513284 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.378578967 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.380958714 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.378994074 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.38063344 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.381372474 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.38065306 seconds)
  done (took 12.298134225 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.372061352 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.382062495 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.381327039 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.382569354 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.382305556 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.372658525 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.379972137 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.386738796 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.375326902 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.37266104 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.375363652 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.37610357 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.3783632 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.375507984 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.376598665 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.37780037 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.384788067 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.382874611 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.382917009 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.382606882 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.383967753 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.377115098 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.378726713 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.385917066 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.374566129 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.382577136 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.383345339 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.386838952 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.376339429 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.380244649 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.380186073 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.385017374 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.382569892 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.383033677 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.384755872 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.383172482 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.384736907 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.381479872 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.384063623 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.388051265 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.382692412 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.381801721 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.376702208 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.381741597 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.382007495 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.388795962 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.385436234 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.383307688 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.375590799 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.378940693 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.38662805 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.376488767 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.385386353 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.381190884 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.38382393 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.385875351 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.391114059 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.378116308 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.380431452 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.385189649 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.391938935 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.38764073 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.383634079 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.389636475 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.38195081 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.385318651 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.39006019 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.393665918 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.384048622 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.3859136 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.386685242 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.394374296 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.391419233 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.389463012 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.386250323 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.386104145 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.378214433 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.389317744 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.387213468 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.389017681 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.391797819 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.386468694 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.38223219 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.384651601 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.381344866 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.39054088 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.385847503 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.387555432 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.379375734 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.388602395 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.394388311 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.386512094 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.377750323 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.381371798 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.383070592 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.389391778 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.377962903 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.384264718 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.390845388 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.387558721 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.38788836 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.382157381 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.384810923 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.392572628 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.388219752 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.386829756 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.395008019 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.381717979 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.392234008 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.395163407 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.387373139 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.379597727 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.385252535 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.390165425 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.38161132 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.384764269 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.392585332 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.385063466 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.394337774 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.387785253 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.38518468 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.391426232 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.395253312 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.388115489 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.382210565 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.394351697 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.387903282 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.387145255 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.395836025 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.388818527 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.388504337 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.386774927 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.395854042 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.383621674 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.392992275 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.382779241 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.392081525 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.389658584 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.390349039 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.38709364 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.390891993 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.386849991 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.389157899 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.394614818 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.397199323 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.3871803 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.396754834 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.390538227 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.389210988 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.392388081 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.396387802 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.390035074 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.385272899 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.396897631 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.383721344 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.392864169 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.384979831 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.393463183 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.391054261 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.391129668 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.391544059 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.382543946 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.386395497 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.393556769 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.390195569 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.389924983 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.394937505 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.391479073 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.39225252 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.383226349 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.393708758 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.383661763 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.385812246 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.393939552 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.392235636 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.39115073 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.390704054 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.397359256 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.391964237 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.392749772 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.384508902 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.387999016 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.397810825 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.394261334 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.400661629 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.391414834 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.392466858 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.386152717 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.387714175 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.394207927 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.386072117 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.39656627 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.396834607 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.399388091 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.388628313 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.396118503 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.38463851 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.395671472 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.389842913 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.401251565 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.392211588 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.394161735 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.386341625 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.395861342 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.38798146 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.397177343 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.385451805 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.395329788 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.394976249 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.39416205 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.393318643 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.387819425 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.391510659 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.395773359 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.394059645 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.394446278 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.387386804 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.397398418 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.385882962 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.389107407 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.398100361 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.394591304 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.396690843 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.403070247 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.392861477 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.397916286 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.39563143 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.390964031 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.397961943 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.39270248 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.3953687 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.399851752 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.397117393 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.39145488 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.400803308 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.398181201 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.390297779 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.396264345 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.403136066 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.396788018 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.389181382 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.398982105 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.397489935 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.3961225 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.396258739 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.389207501 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.399343019 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.398317448 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.407662003 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.390024512 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.402438068 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.390315972 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.400569506 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.392840184 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.396842987 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.396866608 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.398944474 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.404878239 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.398505363 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.389776876 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.400517014 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.398452805 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.396825821 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.38936296 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.399516126 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.399469926 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.398184392 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.395267905 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.395751935 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.399084497 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.389920026 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.398979703 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.390424422 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.406816521 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.413041874 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.399173483 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.401356835 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.399581895 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.399452126 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.400571298 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.392477626 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.393224468 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.395761259 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.394095167 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.392994048 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.402478746 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.392092684 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.401634577 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.396297711 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.402091143 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.402089929 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.400097983 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.392285894 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.404092503 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.397449702 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.39949065 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.391706263 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.400307008 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.392983389 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.400183327 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.400784148 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.39510735 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.405833549 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.403467999 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.396654539 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.396575663 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.396441232 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.39341733 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.396826148 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.40589792 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.393115378 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.404267689 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.394117454 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.398273627 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.396493235 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.405078743 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.410686507 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.395066546 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.403767524 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.401449742 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.391792333 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.395892491 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.402951774 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.40499372 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.412052173 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.393939293 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.402623002 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.401974948 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.401591582 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.401484115 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.402510807 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.402507067 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.401060401 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.40592016 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.406165829 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.397344647 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.404660039 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.410722543 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.40260592 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.402440898 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.394123646 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.401935787 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.412847879 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.398767864 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.400582621 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.399250225 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.404820984 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.402697841 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.402798454 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.405502936 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.403438213 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.407769445 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.406969638 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.404181601 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.403279811 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.407075153 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.414395017 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.407137907 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.41584235 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.39818772 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.40809256 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.404763033 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.398119401 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.400362808 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.399818788 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.408046512 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.397077917 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.40986517 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.403860664 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.399735838 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.405493206 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.411129102 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.397829924 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.402150077 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.411372435 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.396735004 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.40623689 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.404697697 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.396353048 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.405912723 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.403207637 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.396194382 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.399462757 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.401307698 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.409436684 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.39811701 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.408508163 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.399197067 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.408577814 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.406081629 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.405404199 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.404490512 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.407005563 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.39839445 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.406976092 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.405520506 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.415617881 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.399714645 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.406140877 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.400569169 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.411239147 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.417303164 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.401150681 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.410594718 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.408504004 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.400731649 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.404823676 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.409589358 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.401037034 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.410238579 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.398144817 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.401144663 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.403572937 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.408154318 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.409985286 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.408093037 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.401138433 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.401334238 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.408563267 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.407844358 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.406370631 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.402747393 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.412114082 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.400206719 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.40053191 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.409323773 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.402222754 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.411989766 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.400557094 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.403199173 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.404037909 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.410602615 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.407841937 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.407184844 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.40020641 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.401761494 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.414081229 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.412608153 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.405082962 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.404650958 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.410406476 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.402382809 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.405756007 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.406470019 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.404373964 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.40406144 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.413389003 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.404320505 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.404498045 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.404776252 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.411158695 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.410886689 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.411752248 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.403930638 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.417393105 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.418387897 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.416514477 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.402616473 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.406236717 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.405469432 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.412573399 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.409991572 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.405398799 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.417190778 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.417551398 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.414137891 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.409884449 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.41171838 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.401937572 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.411182036 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.411534304 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.405940613 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.418074321 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.406521283 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.41645477 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.410208662 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.411169926 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.403606397 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.40416888 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.404714098 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.40681236 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.41217968 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.409380703 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.414996284 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.409165491 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.416565317 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.409875551 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.412009282 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.411475263 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.402610775 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.412220894 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.404921758 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.412712578 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.414557716 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.40655329 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.412980669 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.411489236 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.405646684 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.407456718 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.417553157 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.412808049 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.406216609 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.410065874 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.416101902 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.423733743 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.411949414 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.405561083 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.410599828 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.416634492 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.412794981 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.413275786 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.407607396 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.420071572 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.425702049 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.407926204 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.410785014 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.41675964 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.423065486 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.413187739 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.413720898 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.412229034 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.412548486 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.417900604 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.412773497 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.417677355 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.419120541 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.409555687 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.416313121 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.407885667 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.410089805 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.416009044 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.426363614 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.41456058 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.408286683 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.423230155 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.426117578 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.411910901 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.424930312 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.421754962 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.414447869 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.419501414 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.406825271 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.418481401 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.412909194 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.419331555 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.416400234 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.416002534 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.416018935 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.408849653 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.415597317 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.421294417 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.42624136 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.416113828 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.409682625 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.411237607 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.419654003 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.415762508 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.416777527 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.417495216 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.41750203 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.416932772 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.410884875 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.425195871 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.431192997 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.422202969 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.41760679 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.417381346 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.417862664 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.419311625 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.412400441 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.419465815 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.41655211 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.416927042 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.41585233 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.425681278 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.418031912 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.412415985 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.41276014 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.412087995 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.420609596 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.424576538 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.43529304 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.419305232 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.422063819 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.419620522 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.417769562 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.413255518 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.421935555 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.418644871 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.411830985 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.41292847 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.421701624 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.419011651 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.418197793 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.410903722 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.421907761 seconds)
  done (took 835.361895942 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.418292893 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.417812912 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.418492999 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.420142318 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.418420546 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.418295263 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.418567405 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.418244889 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.418493187 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.420182167 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.418079741 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.420456856 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.419230343 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.419714953 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.419533027 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.419218093 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.418798053 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.420203541 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.418587775 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.420306221 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.420643327 seconds)
  done (took 31.094215102 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.419053262 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.419433243 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.419157267 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.419116098 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.419493498 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.420535165 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.420400078 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.420269313 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.423045244 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.421323676 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.420690755 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.420721716 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.421070679 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.419434669 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.420393283 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.421505599 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.420788135 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.421792053 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.421862749 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.422533564 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.420901593 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.422607157 seconds)
  done (took 32.549701342 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.421644515 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.422813003 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.413843911 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.425742913 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.422514694 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.420946284 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.4226927 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.420469451 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.420889417 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.414579004 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.414396794 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.415590838 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.416680291 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.424042436 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.418570378 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.427057574 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.422405588 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.424711594 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.42225299 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.424417602 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.425033854 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.434219502 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.421972289 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.414419372 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.425204283 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.421224205 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.421169246 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.423552319 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.413202604 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.424133573 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.423490288 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.415951588 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.424170118 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.423862855 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.416405278 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.423903417 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.423295574 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.421290062 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.421151218 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.416422324 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.42639538 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.41814139 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.422748997 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.431307839 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.419699842 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.412905639 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.421948641 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.419561415 seconds)
  done (took 69.51818347 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.418778835 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.419305269 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.417765018 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.420549212 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.418904869 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.419361939 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.418580978 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.419341396 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.418951327 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.4184995 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.419374878 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.419521478 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.417622259 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.418521621 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.4183237 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.418189782 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.418187017 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.416993733 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.416818563 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.418595952 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.41924759 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.417823414 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.418440537 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.419718059 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.418817367 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.417496084 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.415873791 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.416219049 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.41758448 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.41593376 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.416990187 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.417873923 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.417063612 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.415758249 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.416044286 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.416600255 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.418242682 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.416861546 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.418217453 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.415733506 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.416853697 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.415894877 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.415603073 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.416701103 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.417277873 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.417472437 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.416894066 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.415227257 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.416220264 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.415492796 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.416134961 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.416603105 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.417476239 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.416226562 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.414671124 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.416318039 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.41606702 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.415334919 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.416722617 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.416781653 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.416271517 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.416837897 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.415710855 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.416599463 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.417306216 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.417004151 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.415858237 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.416305844 seconds)
  done (took 97.670890787 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.416946465 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.417723687 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.417143677 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.418514716 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.417170632 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.420026477 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.417498909 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.417739113 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.418265055 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.418182301 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.417213189 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.418581354 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.417744763 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.419007251 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.417429489 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.419343517 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.417863709 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.41775627 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.418199795 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.417487365 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.41912648 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.418358394 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.417328617 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.420262988 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.420595164 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.417753148 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.419470475 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.419556175 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.41940623 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.418307984 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.418758547 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.418494803 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.419115315 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.41938175 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.420278335 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.418907333 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.420050469 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.419214164 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.420373907 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.419361245 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.420109793 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.419198641 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.419114047 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.420041164 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.420787889 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.420525023 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.419289731 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.42253354 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.420308508 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.420953685 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.42094841 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.420187573 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.421040745 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.421232511 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.420923629 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.421774065 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.420428942 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.420637444 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.4199177 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.421556904 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.421327503 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.421416629 seconds)
  done (took 89.28897631 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.421177735 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.4218824 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.421286175 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.421515445 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.419485399 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.422010412 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.422095184 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.421215952 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.421601945 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.420802501 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.422152551 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.422558658 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.424520552 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.42325509 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.421945491 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.423181271 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.423222566 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.421271556 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.421022025 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.422518253 seconds)
  done (took 29.730483709 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.422179891 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.422130396 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.422299883 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.421718161 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.422249699 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.4239239 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.42319145 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.422050004 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.421685906 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.421893346 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.423104619 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.424118363 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.422237505 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.424146473 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.421960723 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.422629057 seconds)
  done (took 24.053518859 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.423416353 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.423560005 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.423866566 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.423162692 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.423165174 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.423757771 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.422445924 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.420958633 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.423210548 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.425201925 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.422488725 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.423358968 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.423621317 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.424103835 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.424068327 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.425272755 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.423769858 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.425123696 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.426201526 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.425070034 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.4243105 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.425206613 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.425539321 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.426933595 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.425057533 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.425819621 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.423194326 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.424199883 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.425068735 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.424447923 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.425429759 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.425211428 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.424252702 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.425470231 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.42404074 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.425979996 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.42437263 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.427040529 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.42553517 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.425889258 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.424298318 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.425469743 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.42504467 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.427467955 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.426208548 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.424843325 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.425225328 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.425636448 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.426178376 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.424621249 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.425171064 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.426730607 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.426143513 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.426223592 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.427645945 seconds)
  done (took 79.660929509 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.425669553 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.425864566 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.42673195 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.425666596 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.426267201 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.424596406 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.426848337 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.427680536 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.425211494 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.425530989 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.423323299 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.426830383 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.425982423 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.425474846 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.424799924 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.424705567 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.427021447 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.426203704 seconds)
  done (took 26.959897155 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.426595877 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.426036493 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.426041969 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.426711255 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.427116261 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.427778136 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.425936542 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.425925403 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.427992774 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.426324445 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.426853513 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.42647053 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.427105987 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.42631905 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.4267817 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.424771683 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.427436095 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.426025261 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.42643277 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.427108008 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.424832478 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.426087079 seconds)
  done (took 32.676348735 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.415402533 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.416139454 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.415613258 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.43059452 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.424472607 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.415884062 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.416397458 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.416087636 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.431982741 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.440025209 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.43584147 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.423662156 seconds)
  done (took 18.376656566 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.426909047 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.426364945 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.425400597 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.426431435 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.429561655 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.426119272 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.426378462 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.427405878 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.428269426 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.426965404 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.426889914 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.428847038 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.427950108 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.428529162 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.428344171 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.428218881 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.426665382 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.426746062 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.427424189 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.427560334 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.426645715 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.426881955 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.427490516 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.42812683 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.427233116 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.429199752 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.427806525 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.427958737 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.428172593 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.428540881 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.426919995 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.427881647 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.42904275 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.427833626 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.427922799 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.426788056 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.42838931 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.427476547 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.427812568 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.428480841 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.427327073 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.426973109 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.42875463 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.428028 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.428444294 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.428046095 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.427704848 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.426977685 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.427578777 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.428101087 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.428761527 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.427855872 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.427811618 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.429058219 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.428010409 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.427658337 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.427481974 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.427500619 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.427116586 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.426749264 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.429232397 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.426230475 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.427767843 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.427157144 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.428378793 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.427580286 seconds)
  done (took 95.52308529 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.428893189 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.428549887 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.428018666 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.428456785 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.427639185 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.427184329 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.427890356 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.428261821 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.428372266 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.427610501 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.427570364 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.428246039 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.429881218 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.428694619 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.430107111 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.42887216 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.427810777 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.428232949 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.428312633 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.428550663 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.430250926 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.42992633 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.428080982 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.429575316 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.428996879 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.429527259 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.428923863 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.428939301 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.429112327 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.429793737 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.428796602 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.430960775 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.429241689 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.429584374 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.429354529 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.431281241 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.429666148 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.430438396 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.430314501 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.430449012 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.429379233 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.430572155 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.430317912 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.431805622 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.430061693 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.432160503 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.430822113 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.430197674 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.430422998 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.429049627 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.433242908 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.431256707 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.431517078 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.431129962 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.430685176 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.431529943 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.432130171 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.43261385 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.430894052 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.429282092 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.4330175 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.431191254 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.431840867 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.433966179 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.431603506 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.431147811 seconds)
  done (took 95.670106949 seconds)
done (took 1951.967905611 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.588128762 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.541819906 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.420883114 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.433054795 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.422699906 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.420337234 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.433737541 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.422894895 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.421730351 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.422234862 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.422272395 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.613919796 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.45477249 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.42239714 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.421708507 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.520057419 seconds)
  done (took 28.682802605 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.452871078 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.430543849 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.546125678 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.427718297 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.452648366 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.62290938 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.485713167 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.434287978 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.603403502 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.444326812 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.418047913 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.450072083 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.427362202 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.418410665 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.447552568 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.626788432 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.692048591 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.423916895 seconds)
  done (took 31.106125553 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.887138375 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.440839875 seconds)
  done (took 5.630214527 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.449809541 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.431132852 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.428202992 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.425710117 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.419756101 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.419280855 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.426795761 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.420351735 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.444692541 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.562201055 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.432183075 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.439929904 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.427541407 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.430879757 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.435807037 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.474375208 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.586042385 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.437715868 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.437324376 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.433808034 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.427109736 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.522516001 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.471158392 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.439589368 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.558912306 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.431558435 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.435117799 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.434521869 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.546621951 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.43839702 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.42912721 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.429575486 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.430552694 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.396626787 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.971660601 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.438003232 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.452331108 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.44273175 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.438210361 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.567582614 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.43259175 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.436187255 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.420755982 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.985441713 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.541164811 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.553894987 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.425188903 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.435170057 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.431305657 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.496126013 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.429565702 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.431457605 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.48845642 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.263602108 seconds)
  done (took 90.740440124 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.424303599 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.425082334 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.607032945 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.448275392 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.423788292 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.451856549 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.430059891 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.718721422 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.441903612 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.425312733 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.752525208 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.076435657 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.428430434 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.488494799 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.461105431 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.491587892 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.440165952 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.424438817 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.439716008 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.42526873 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.012822182 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.436513548 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.426029955 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.51283702 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.464328948 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.968485757 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.423646739 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.423465706 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.429616937 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.42521614 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.021690879 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.427946552 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.472494308 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.424733198 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.71562677 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.819246499 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.77842954 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.430441809 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.431258222 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.434888142 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.45610853 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.95758768 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.799693419 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.426833606 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.423889607 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.956195463 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.423036235 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.428415828 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.429340444 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.694391102 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.425176566 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.425463768 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.426487775 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.427489437 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.424479913 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.507221505 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.501806143 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.966371149 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.425044743 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.42423136 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.431890214 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.423894431 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.424705791 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.422811852 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.428743765 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.80605059 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.691100474 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.429294059 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.797959689 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.008372559 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.428435026 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.095340888 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.430458303 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.454264139 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.470357285 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.424121077 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.423288793 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.961785395 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.423672907 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.422886896 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.774557142 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.427345117 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.741863721 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.441382973 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.423530294 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.032438856 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.431262337 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.474063167 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.424558133 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.442078031 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.424784702 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.426003032 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.716714588 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.480861219 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.424956238 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.424685183 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.455522543 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.424163169 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.440493621 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.434782023 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.076638579 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.43499417 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.423647464 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.448797476 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.424902452 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.42421327 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.424530015 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.427411757 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.71754017 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.423806092 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.430235712 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.426174868 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.434460359 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.425943941 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.516820224 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.433069577 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.731779703 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.424719938 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.42450359 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.425771821 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.425696533 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.490533966 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.424230564 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.445101921 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.425666555 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.721126929 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.44128695 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.438681508 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.424928122 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.425528229 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.435668172 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.424819481 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.477769446 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.429546391 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.326042137 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.440589663 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.438380988 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.424520377 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.432002576 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.423655381 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.438314579 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.426596644 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.721299495 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.710158882 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.671494853 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.435240543 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.426115154 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.283249705 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.428457132 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.606869961 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.442778508 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.424703783 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.703309819 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.6615068 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.4269376 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.424580051 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.427222412 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.703163924 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.426776086 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.765849358 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.038308818 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.42749616 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.437415042 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.320890601 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.240954776 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.425527672 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.428276569 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.730737086 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.44673539 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.424036637 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.42420773 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.426631612 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.425689534 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.429733563 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.431022093 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.424275803 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.427031045 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.720065731 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.619376279 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.442475208 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.425060216 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.948382985 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.446138895 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.426095047 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.431057207 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.427930102 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.425207214 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.489856086 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.425502129 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.474578509 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.424727598 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.436305171 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.972258426 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.425784968 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.430929722 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.618866427 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.208633626 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.429405595 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.42589545 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.430558172 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.492554796 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.983680626 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.46918413 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.724067715 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.437328471 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.465800077 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.427040304 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.439015113 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.983474502 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.43079154 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.439743148 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.159053903 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.431815656 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 4.906223543 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.425867012 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.426971229 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.082246959 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.432313008 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.427694822 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.440471796 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.432088526 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.769127104 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.433988581 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.437650982 seconds)
  done (took 520.514938732 seconds)
done (took 677.973388075 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.425984771 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.434397397 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.412079269 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.432681152 seconds)
  done (took 11.01033382 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.423294452 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.435907379 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.418835129 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.434176479 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.419827436 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.438937898 seconds)
  done (took 9.87689723 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.474175937 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.450449865 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.433022971 seconds)
  done (took 8.664631724 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.645162972 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.421365716 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.778688248 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.440958961 seconds)
  done (took 9.591999102 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.443288519 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.442602338 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.443577135 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.44488388 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.446411026 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.446035342 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.446530751 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.444395124 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.446368264 seconds)
  done (took 14.307924981 seconds)
done (took 54.756804245 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.548512619 seconds)
    (2/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.413345093 seconds)
    (3/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.507915153 seconds)
    (4/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.407120042 seconds)
    (5/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.415275917 seconds)
    (6/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.497358689 seconds)
    (7/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.572593999 seconds)
    (8/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.669649885 seconds)
    (9/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.471513189 seconds)
    (10/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.463442723 seconds)
    (11/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.503957433 seconds)
    (12/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.539743392 seconds)
    (13/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.448764658 seconds)
    (14/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.550044867 seconds)
    (15/192) benchmarking ("map", abs, Int64, true)...
    done (took 1.63928982 seconds)
    (16/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.617544075 seconds)
    (17/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.413993512 seconds)
    (18/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.583988866 seconds)
    (19/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.542551229 seconds)
    (20/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.531608551 seconds)
    (21/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.416024071 seconds)
    (22/192) benchmarking ("map", identity, Float64, false)...
    done (took 1.511361031 seconds)
    (23/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.540285815 seconds)
    (24/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.512336984 seconds)
    (25/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.421194852 seconds)
    (26/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.411327077 seconds)
    (27/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.415231088 seconds)
    (28/192) benchmarking ("map", abs, Bool, false)...
    done (took 1.467628841 seconds)
    (29/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.464910105 seconds)
    (30/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.434743197 seconds)
    (31/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.272202617 seconds)
    (32/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.415685268 seconds)
    (33/192) benchmarking ("map", identity, Int64, true)...
    done (took 1.646281815 seconds)
    (34/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.425680749 seconds)
    (35/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.549557773 seconds)
    (36/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.651753649 seconds)
    (37/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.537340114 seconds)
    (38/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.46725133 seconds)
    (39/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.515231255 seconds)
    (40/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.424615093 seconds)
    (41/192) benchmarking ("map", abs, Int8, true)...
    done (took 1.548024806 seconds)
    (42/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.169212068 seconds)
    (43/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.504917166 seconds)
    (44/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.582093403 seconds)
    (45/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.784536329 seconds)
    (46/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.504789001 seconds)
    (47/192) benchmarking ("map", abs, Int8, false)...
    done (took 1.462132314 seconds)
    (48/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.541476397 seconds)
    (49/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.397776934 seconds)
    (50/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.573832284 seconds)
    (51/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.58117091 seconds)
    (52/192) benchmarking ("map", identity, Float64, true)...
    done (took 1.650880116 seconds)
    (53/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.416812669 seconds)
    (54/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.576387553 seconds)
    (55/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.415608663 seconds)
    (56/192) benchmarking ("map", abs, Float32, false)...
    done (took 1.515885734 seconds)
    (57/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.442812097 seconds)
    (58/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.410628136 seconds)
    (59/192) benchmarking ("map", abs, Float32, true)...
    done (took 1.621223438 seconds)
    (60/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.621033609 seconds)
    (61/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.418028828 seconds)
    (62/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.417067677 seconds)
    (63/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.580088815 seconds)
    (64/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.115243228 seconds)
    (65/192) benchmarking ("map", identity, BigInt, false)...
    done (took 1.531799337 seconds)
    (66/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.418151624 seconds)
    (67/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.494699369 seconds)
    (68/192) benchmarking ("map", abs, Int64, false)...
    done (took 1.514791112 seconds)
    (69/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.529048611 seconds)
    (70/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.531149503 seconds)
    (71/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.467321625 seconds)
    (72/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.552534215 seconds)
    (73/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.438250397 seconds)
    (74/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.552247172 seconds)
    (75/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.413826354 seconds)
    (76/192) benchmarking ("map", identity, Bool, false)...
    done (took 1.468214586 seconds)
    (77/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.473815998 seconds)
    (78/192) benchmarking ("map", identity, Int8, false)...
    done (took 1.458739001 seconds)
    (79/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.58152497 seconds)
    (80/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.693121083 seconds)
    (81/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.156473294 seconds)
    (82/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.548003745 seconds)
    (83/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.686750666 seconds)
    (84/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.228113644 seconds)
    (85/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.527367674 seconds)
    (86/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.413201024 seconds)
    (87/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.202746627 seconds)
    (88/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.605931842 seconds)
    (89/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.547579571 seconds)
    (90/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.525790289 seconds)
    (91/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.380528597 seconds)
    (92/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.10711695 seconds)
    (93/192) benchmarking ("map", identity, Int8, true)...
    done (took 1.555509102 seconds)
    (94/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.472060802 seconds)
    (95/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.236202009 seconds)
    (96/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.304359719 seconds)
    (97/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.439435593 seconds)
    (98/192) benchmarking ("map", abs, Float64, false)...
    done (took 1.533983662 seconds)
    (99/192) benchmarking ("perf_sum", Float32, true)...
    done (took 1.516219017 seconds)
    (100/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.55152731 seconds)
    (101/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.473418714 seconds)
    (102/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.41840418 seconds)
    (103/192) benchmarking ("perf_sum", Int64, true)...
    done (took 1.5134265 seconds)
    (104/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.268677832 seconds)
    (105/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.480779588 seconds)
    (106/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.543957584 seconds)
    (107/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.273800389 seconds)
    (108/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.592924323 seconds)
    (109/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.444530654 seconds)
    (110/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.414793535 seconds)
    (111/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.691754328 seconds)
    (112/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.419336668 seconds)
    (113/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.452281119 seconds)
    (114/192) benchmarking ("map", identity, Bool, true)...
    done (took 1.568767431 seconds)
    (115/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.424690559 seconds)
    (116/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.168915558 seconds)
    (117/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.422716199 seconds)
    (118/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.588474693 seconds)
    (119/192) benchmarking ("map", identity, Int64, false)...
    done (took 1.51266284 seconds)
    (120/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.550421779 seconds)
    (121/192) benchmarking ("map", identity, BigInt, true)...
    done (took 1.689139459 seconds)
    (122/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.472388062 seconds)
    (123/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.106116505 seconds)
    (124/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.479968356 seconds)
    (125/192) benchmarking ("map", abs, Bool, true)...
    done (took 1.548317382 seconds)
    (126/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.42346728 seconds)
    (127/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.689580692 seconds)
    (128/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.174640467 seconds)
    (129/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.473486952 seconds)
    (130/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.613572104 seconds)
    (131/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.623541468 seconds)
    (132/192) benchmarking ("map", abs, Float64, true)...
    done (took 1.651903234 seconds)
    (133/192) benchmarking ("map", identity, Float32, false)...
    done (took 1.505987774 seconds)
    (134/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.524030458 seconds)
    (135/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.424945606 seconds)
    (136/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.442622173 seconds)
    (137/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.414853522 seconds)
    (138/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.443224726 seconds)
    (139/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.617337905 seconds)
    (140/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.42055105 seconds)
    (141/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.569013163 seconds)
    (142/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.528707244 seconds)
    (143/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.50503749 seconds)
    (144/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.224702795 seconds)
    (145/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.518951143 seconds)
    (146/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.590104234 seconds)
    (147/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.422357967 seconds)
    (148/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.41535974 seconds)
    (149/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.293222269 seconds)
    (150/192) benchmarking ("perf_sum", Int64, false)...
    done (took 1.508605404 seconds)
    (151/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.61721194 seconds)
    (152/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.566100188 seconds)
    (153/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.416203785 seconds)
    (154/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.71695483 seconds)
    (155/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.24597509 seconds)
    (156/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.421771116 seconds)
    (157/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.536055966 seconds)
    (158/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.125305462 seconds)
    (159/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.593333837 seconds)
    (160/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.543005483 seconds)
    (161/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.558783223 seconds)
    (162/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.416616147 seconds)
    (163/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.594467494 seconds)
    (164/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.501474115 seconds)
    (165/192) benchmarking ("map", identity, Float32, true)...
    done (took 1.606357673 seconds)
    (166/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.424337515 seconds)
    (167/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.311041305 seconds)
    (168/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.535383144 seconds)
    (169/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.195204532 seconds)
    (170/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.48093158 seconds)
    (171/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.567430135 seconds)
    (172/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.474188467 seconds)
    (173/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.564247021 seconds)
    (174/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.476294339 seconds)
    (175/192) benchmarking ("perf_sum", Float32, false)...
    done (took 1.501637866 seconds)
    (176/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.440678966 seconds)
    (177/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.617365111 seconds)
    (178/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.710886176 seconds)
    (179/192) benchmarking ("perf_sum", Float64, true)...
    done (took 1.525187163 seconds)
    (180/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.250169493 seconds)
    (181/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.589546994 seconds)
    (182/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.433110418 seconds)
    (183/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.466616582 seconds)
    (184/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.559920255 seconds)
    (185/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.242193319 seconds)
    (186/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.422786665 seconds)
    (187/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.644505875 seconds)
    (188/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.440255056 seconds)
    (189/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.491945539 seconds)
    (190/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.447617171 seconds)
    (191/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.601745306 seconds)
    (192/192) benchmarking ("perf_sum", Float64, false)...
    done (took 1.517127032 seconds)
  done (took 359.601631517 seconds)
done (took 360.908862176 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.469695619 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.534917861 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.448575822 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.448203238 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.449953575 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.447630081 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.467772416 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.450564506 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.460386389 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.461192733 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.446936003 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.456477155 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.465183472 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.459457665 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.484321124 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.450711305 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.447354016 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.459685063 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.464035641 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.466029458 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.452109556 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.450427921 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.476243116 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.450601793 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.457425099 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.458814058 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.456742161 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.44332853 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.45655039 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.463869464 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.443695239 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.457284954 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.465699896 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.460759096 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.453308554 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.458900122 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.451746112 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.538041947 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.469719592 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.460902383 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.457642819 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.466882665 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.457490769 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.458007075 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.460953041 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.478614264 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.460765229 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.466898775 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.443404207 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.44250002 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.473904189 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.46411518 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.459694704 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.45540272 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.447555907 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.4696278 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.461393214 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.473579406 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.458323048 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.454750031 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.486813425 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.472527978 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.463537764 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.460713078 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.458673136 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.46821725 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.461429861 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.46907325 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.459509281 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.455593592 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.454657595 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.460623158 seconds)
done (took 114.566927709 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.57700544 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.449467597 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.610093148 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.460812408 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.614434734 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.570505979 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.458317685 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.460083616 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.460041257 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.253619128 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.460475551 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.459838709 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.452831803 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.460558465 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.571613659 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.460499751 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.459694254 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.153608073 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.461339519 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.589886011 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.451389896 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.461234216 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.460835358 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.257382836 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.451435789 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.445018323 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.593808536 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.461611427 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.158312148 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.445350707 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.446866426 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.156705375 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.593688229 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.479523539 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.472604256 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.47085967 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.617428212 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.462877404 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.577523632 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.577219459 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.614306901 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.50056713 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.447751614 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.453343143 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.464391591 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.464273774 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.46150523 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.490274275 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.451146682 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.463829335 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.160169695 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.474475652 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.472507725 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.464553013 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.461614649 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.482898249 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.463253413 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.463131173 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.595130422 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.464269209 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.578495941 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.258969265 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.259336161 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.463020858 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.449595842 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.464124117 seconds)
  done (took 116.596076726 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.52252797 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.530059009 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.565027066 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.461819152 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.503872212 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.564086846 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.460289209 seconds)
  done (took 11.931277538 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.460894739 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.464908013 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.50337332 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.501027535 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.464570971 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.628676971 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.463852287 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.466762035 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.464725481 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.50841181 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.464358181 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.465184445 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.472643583 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.455342729 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.502378335 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.466626931 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.573215171 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.458162602 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.465600965 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.607087232 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.464157547 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.475400939 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.505910154 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.468637978 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.466372828 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.463712638 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.240140543 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.466003878 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.46555065 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.46699326 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.46539315 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.516821809 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.459453033 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.448950471 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.461017321 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.564190645 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.461148869 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.453299192 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.453946037 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.446988689 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.45582052 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.454027389 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.454486345 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.452483404 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.449929587 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.467382629 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.451901808 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.452161909 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.450194571 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.452470688 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.494429859 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.452738098 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.451085508 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.451342943 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.495581394 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.460600148 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.452147738 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.450927267 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.450181334 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.449288876 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.593007595 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.487943814 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.44916768 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.486272232 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.447672977 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.446919138 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.446304085 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.446314358 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.526585494 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.44996505 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.481420095 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.443629376 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.617589765 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.457920121 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.444833565 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.438275945 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.439826599 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.438681605 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.428685085 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.436206906 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.438201434 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.432883385 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.436024175 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.437933789 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.436118292 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.587233807 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.535756684 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.435732017 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.443236902 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.436458457 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.433268477 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.47715048 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.433060455 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.433859332 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.473777899 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.541071809 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.477174225 seconds)
  done (took 148.846008325 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.431113313 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.43313594 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.423806488 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.445796235 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.423759996 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.424009985 seconds)
  done (took 9.879179766 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.422570473 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.431439828 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.428984629 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.429017936 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.428378372 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.430945929 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.427287972 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.417559916 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.427065107 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.425948553 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.425846341 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.42654196 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.429430021 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.423539867 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.423282772 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.423016515 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.423287334 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.421999114 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.423049326 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.42423313 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.40792771 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.42025612 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.421841478 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.41198636 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.424571499 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.419830804 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.434850979 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.419134326 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.417635294 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.415984467 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.422256 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.419232571 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.410881038 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.414079741 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.420265209 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.409168121 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.41874395 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.417199012 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.417326695 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.416738803 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.417834468 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.414854105 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.413304927 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.414128682 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.406525639 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.408714154 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.416874291 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.429238749 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.412684982 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.413360068 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.412258928 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.412686569 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.411511198 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.411875925 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.405988296 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.404244216 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.414398296 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.410128964 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.410968352 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.402828362 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.412557192 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.411213607 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.402584679 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.411548357 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.409487401 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.41146611 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.400754997 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.410970114 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.410928935 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.407968566 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.408583827 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.407664413 seconds)
  done (took 104.325192971 seconds)
done (took 392.897363524 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.84581188 seconds)
  done (took 4.127095181 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.39283263 seconds)
  done (took 3.67222732 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 21.213626739 seconds)
  done (took 22.49636264 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.435744828 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.468887086 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.416000222 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.387615661 seconds)
  done (took 10.985053391 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 3.991610652 seconds)
  done (took 5.266025669 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.404480972 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.39469687 seconds)
  done (took 6.072011774 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.588010931 seconds)
  done (took 3.861573292 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.615218417 seconds)
  done (took 3.888826786 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.382615612 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.378349877 seconds)
  done (took 6.040663177 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.36027899 seconds)
  done (took 3.630352347 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 19.737368726 seconds)
  done (took 21.008477812 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.400111605 seconds)
  done (took 3.669708038 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.411050629 seconds)
  done (took 3.679515254 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 4.885961479 seconds)
  done (took 6.154434254 seconds)
done (took 105.834170662 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.375324588 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.377455858 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.377466146 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.376094629 seconds)
  done (took 10.773715927 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.454908184 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.454116557 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.461651867 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.447869095 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.449153731 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.457504271 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.415944356 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.415615747 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.446021236 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.443000129 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.456907031 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.448361711 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.45679994 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.416573108 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.440682235 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.457078544 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.443703731 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.463788759 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.416903457 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.448394966 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.392899979 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.447091671 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.442221128 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.391616401 seconds)
  done (took 35.836269967 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.875301699 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.449596113 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.534148179 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.432280784 seconds)
  done (took 7.557856111 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.495164672 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.496517678 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.52013356 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.547377503 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.596015282 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.506770517 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.417131367 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.411989399 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.399211888 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.495825421 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.581216962 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.4937383 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.70928006 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.390307356 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.708524689 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.390539496 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.390756425 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.495064728 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.543230514 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.571741833 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.390585957 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.495132304 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.498025484 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.493522205 seconds)
  done (took 37.305460506 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.398442759 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.405942912 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.391630945 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.407171149 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.390317046 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.390068437 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.390672787 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.396398281 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.389135465 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.390232026 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.391700066 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.404510903 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.389253224 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.390219816 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.397151577 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.391354153 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.392152116 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.397348263 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.398278619 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.390377872 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.389891715 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.397663142 seconds)
  done (took 31.946026094 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.374353589 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.375378311 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.725176517 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.63023011 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.375016345 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.37735789 seconds)
  done (took 14.122907058 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.447756185 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.588417573 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.381297807 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.722176278 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.806198467 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.381715532 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.384179428 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.619432245 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.914327328 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.910505752 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.44232021 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.452316059 seconds)
  done (took 20.316962177 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.378363629 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.381151276 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.383239921 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.396676838 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.434731887 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.390680757 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.389044735 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.376579981 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.439898314 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.444419947 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.391994997 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.435897562 seconds)
  done (took 22.110678634 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.467290884 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.387014466 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.397242174 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.395329126 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.385918002 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.387988895 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.398829889 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.079962265 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.393302428 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.662283938 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.398765304 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.474419149 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.632400994 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.389960574 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.392687356 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.35819695 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.618217105 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.886438515 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.388051006 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.387926342 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.44126674 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.393747156 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.404511555 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.602693649 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.389017315 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.38835533 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.650093938 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.387253136 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.675438451 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.655676586 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.655640959 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.395097239 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.664401057 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.02253324 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.493490724 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.595083811 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.397084573 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.391572624 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.374737616 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.400330849 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.403172445 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.394865303 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.65045643 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.396242681 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.390433369 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.390655779 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.094918108 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.396778054 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.389553204 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.392243009 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.652694984 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.479261636 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.395332482 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.390500961 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.421460379 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.388467236 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.395866463 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.507866476 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.029136626 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.390972394 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.395910753 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.399197269 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.395450983 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.387752166 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.050824832 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.395296162 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.393875069 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.3903574 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.38419554 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.385252113 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.411625197 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.385932697 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.403735716 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.383893814 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.169401076 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.397824371 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.392444433 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.935381114 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.387734014 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.39091449 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.608190521 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.384295487 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.384558823 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.384431635 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.385239528 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.114497872 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.394216574 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.353272466 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.44403939 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.078445597 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.593096087 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.403657183 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.413773011 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.605248385 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.354176887 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.386106721 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.39055399 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.388227931 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.406996443 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.080663811 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.383538448 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.392396355 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.632385109 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.596408207 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.391380424 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.369328503 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.85718466 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.384984882 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.417686624 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.393715912 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.599209988 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.013965062 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.656035773 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.401670461 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.419453692 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.387605709 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.183088715 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.399292744 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.397574342 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.401086074 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.669683742 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.218440926 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.391851554 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.460821018 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.38567639 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.38796673 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.387253133 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.388386341 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.387973203 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.573532272 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.394660399 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.655674824 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.39398485 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.387132881 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.395015659 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.393976531 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.395265788 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.606856786 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.399180968 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.668119072 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.388389788 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.388566446 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.389514014 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.605603764 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.387976825 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.398387377 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.727742004 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.39135379 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.39805253 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.656959216 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.426593444 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.501135508 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.419217804 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.390330286 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.643091224 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.393982083 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.39625553 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.388220642 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.391715131 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.392692329 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.396895934 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.39254122 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.021498769 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.365923851 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.395622317 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.389971362 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.405992369 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.462918494 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.397661423 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.598635511 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.389632573 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.383785615 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.39581075 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.398034429 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.615832043 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.652525021 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.406075532 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.564611813 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.861705603 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.022138295 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.403259925 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.390660251 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.390722082 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.389796489 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.391705692 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.390157571 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.389914492 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.599018106 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.655994171 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.41011705 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.026424811 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.392614776 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.390632407 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.421882392 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.652718356 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.406373039 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.392167133 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.402151658 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.408950093 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.402041918 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.65970044 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.617529823 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.407241299 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.391730729 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.909613845 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.398545046 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.393110341 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.391567834 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.418745893 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.391249562 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.239014325 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.731718698 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.397632793 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.654741967 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.399029584 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.431491082 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.392409543 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.401293407 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.402303759 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.404627882 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.405938185 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.600424139 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.393293979 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.398816984 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.033085033 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.189256662 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.969999187 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.393838206 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.397805579 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.398767403 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.093610375 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.393493048 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.392653193 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.637666374 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.096751697 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.393111437 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.865809389 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.406195531 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.149446264 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.659224586 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.62409596 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.393982209 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.404437955 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.66568835 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.611729827 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.422067039 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.403360386 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.399580076 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.365350426 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.941286249 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.406279354 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.574572978 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.092242533 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.405754283 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.402426987 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.452251286 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.403082465 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.782391921 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.393205397 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.393894783 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.395495485 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.401553781 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.232198976 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.4019216 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.39571773 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.056915287 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.395795604 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.873895525 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.394698729 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.60610056 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.658591058 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.643374962 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.403283537 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.397895474 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.640173301 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.660659833 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.403136502 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.398114664 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.984721303 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.257185035 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.403498769 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.397753893 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.193942881 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.404693623 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.690259013 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.414773533 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.403480969 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.407210829 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.397127479 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.397238774 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.396908328 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.405405666 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.372052744 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.89818263 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.395458059 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.407098784 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.404780893 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.403094395 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.643417313 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.413854745 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.034993192 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.630679445 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.395120313 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.446132079 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.402970853 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.39935965 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.374575949 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.397441915 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.396803182 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.450687169 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.618097645 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.414729065 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.373610247 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.433359217 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.608182187 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.398390424 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.396917791 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.62408301 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.398358262 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.410464849 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.200756232 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.428913806 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.399046309 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.407326399 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.412021205 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.435309549 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.471586465 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.607538632 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.661227848 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.66913225 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.78672269 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.39846114 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.405963757 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.413449165 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.480029211 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.40237157 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.406120136 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.400083279 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.034183333 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.200814697 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.041940672 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.671832803 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.40738733 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.411607638 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.399532271 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.641744232 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.39953522 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.677368963 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.401026306 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.399802205 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.421105373 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.399099446 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.416597015 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.615770868 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.674412242 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.400652394 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.401189628 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.407155591 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.401789372 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.667570232 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.618760226 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.906816674 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.962833219 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.406291291 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.406804298 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.108157544 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.676950287 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.403246273 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.403048249 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.401821194 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.425070178 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.409077159 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.414435428 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.402715994 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.632700898 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.666196103 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.0450781 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.665037506 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.58840381 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.321274669 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.412328231 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.654281379 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.238801771 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.612330193 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.045641304 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.152054557 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.65929504 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.476792277 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.611525785 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.402987962 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.641511373 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.406432665 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.408191678 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.404599326 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.402429525 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.404334956 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.667439026 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.049919016 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.660073655 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.409817863 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.403706834 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.438432892 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.612319281 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.622499112 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.13903446 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.626570605 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.669894522 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.421986649 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.405888584 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.050291626 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.677331784 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.411411168 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.411919129 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.625509699 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.40520358 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.442759137 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.279698314 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.405119734 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.964095088 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 1.622266114 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.425263235 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.412274215 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.156707466 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.053263006 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.414959584 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.916276248 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.410537542 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.405989364 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.704599215 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.413059596 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.409363418 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.691954495 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.411419281 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.407668153 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.624336451 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.040904627 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.163814429 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.435625458 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.413533303 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.413958695 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.407918805 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.412791007 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.406209468 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.417421791 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.792524693 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.406323593 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.408095124 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.420535728 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.411541082 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.414395714 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.412146611 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.406185041 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.414334794 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.403115833 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.3827468 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.419572322 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.531069434 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.957734536 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.409150359 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.021618812 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.740659302 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.653915473 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.408021925 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.382482574 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.414137309 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.410165877 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.409636938 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.408749138 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.421984605 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.968846539 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.41454387 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.681591331 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.420677601 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.620409193 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.619167226 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.408919799 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.625610104 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.412679141 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.434785221 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.379521039 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.408808032 seconds)
  done (took 992.631056572 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.402004802 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.405854988 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.416181963 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.402445503 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.431280523 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.466620716 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.426384673 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.477169412 seconds)
  done (took 20.713680451 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.41525443 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.408621775 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.413983017 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.409786046 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.410569446 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.88120563 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.413198014 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.409452449 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.422761474 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.414989502 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.417871514 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.031653687 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.416086437 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.409357183 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.413403992 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.416021291 seconds)
  done (took 32.992375825 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.15020054 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.446938704 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.983077017 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.406401529 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.449020857 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.409281916 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.556937563 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.401324515 seconds)
  done (took 26.092617972 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.414478973 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.414391488 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.41472865 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.413295171 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.414060339 seconds)
  done (took 8.360072523 seconds)
done (took 1262.028250217 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.417424826 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.416859988 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.417364739 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.416923726 seconds)
  done (took 6.956704247 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.382141479 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.381065974 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.383603526 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.395647058 seconds)
  done (took 9.831192128 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.103157683 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.92482995 seconds)
  done (took 5.316886837 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.964425839 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.960960479 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.962953913 seconds)
  done (took 7.176528834 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.695179472 seconds)
  done (took 2.98437504 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.389354142 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.408891365 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.137727173 seconds)
  done (took 8.225360662 seconds)
done (took 41.780850851 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.408848612 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 3.164316506 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.560355577 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.409715482 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.564983826 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.560740313 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.652336578 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.40385419 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.406626508 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.418289939 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.409894979 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.563959827 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.640098848 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 3.166409122 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.640170705 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 3.166660286 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.563961804 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.404407085 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.419320604 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.416810125 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.653929963 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.407448232 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.404169927 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.402555811 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.569864174 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.551969486 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.403597424 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 3.167200593 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.405614922 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.427897613 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.554204444 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.414454532 seconds)
  done (took 83.594578679 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.403880156 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.412155052 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.412249043 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.405435543 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.422559009 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.418812648 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.406781777 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.405347624 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.412084027 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.408946059 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.404823359 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.421431205 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.423425612 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.405063235 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.422368882 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.406763335 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.422412277 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.424661388 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.412120711 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.410890048 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.412337172 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.409610412 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.412184155 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.433590931 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.41458504 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.412899407 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.425575713 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.409961076 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.411151468 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.411871359 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.41254575 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.430226167 seconds)
  done (took 78.551144341 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.405078684 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.411883001 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.41971962 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.411707069 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.436129167 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.41861545 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.412728518 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.415087697 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.412618141 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.412220554 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.41219427 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.41283259 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.426404051 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.413132242 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.414871589 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.411906643 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.413770813 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.413458262 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.414209253 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.424782692 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.416065769 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.414085255 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.413807842 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.413353714 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.441668537 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.417116642 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.415622066 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.416511644 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.422229028 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.414661358 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.414023264 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.413957608 seconds)
  done (took 78.619489539 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.646838824 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.424221316 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.427848413 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.418699881 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.426913591 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.422870604 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.418715972 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.6532903 seconds)
  done (took 15.134169455 seconds)
done (took 257.188742761 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.418454521 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.90859025 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.452909171 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.419415724 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.434562183 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.446135161 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.636895507 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.446662441 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.639185285 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.44079655 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.431671555 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.420899751 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.221341642 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.574137654 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.232947644 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.347027052 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.292523529 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.424511274 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 1.970148371 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.704931185 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.452606218 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.412365234 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.237179814 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.305217429 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.399357255 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.501777706 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.517008958 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.64950377 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.584264251 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.500432026 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 1.92092994 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.432028826 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.437824699 seconds)
  done (took 65.511557259 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.417546754 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.426647437 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.42709133 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.427683461 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.428004485 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.427717706 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.417018618 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.426717537 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.426752382 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.427535044 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.427424048 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.427318611 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.428404021 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.427310513 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.426874721 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.40220986 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.417876278 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.427407392 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.417397217 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.400157955 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.427247936 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.42874167 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.428279561 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.426957203 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.428393522 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.428371099 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.428029407 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.428243896 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.428205579 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.429287728 seconds)
  done (took 44.03478698 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.427807376 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.967107362 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.144067339 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.432690132 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.420715666 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.424154402 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.702398338 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.436065431 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.424794477 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.424503157 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.877501597 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.437938767 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.452905435 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.150204547 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.430274448 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.431498996 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.430337611 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.420150197 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.972605725 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.436307061 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.700686558 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.436990045 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.704451127 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.435322824 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.423445068 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.422485371 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.426451275 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.244651437 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.447082919 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.879080994 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.192417393 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.702944932 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.181329154 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.199002914 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.200920718 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.439540501 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.430034278 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.884735859 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.430659151 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.42264363 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.699534987 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.429891486 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.154195795 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.112097161 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.444976041 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.432398794 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.277264958 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.888868693 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.666964746 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.433168557 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.187012267 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.432520562 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.433464945 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.424407176 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.660688543 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.430263907 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.423988137 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.268248072 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.433476138 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.703326476 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.43958831 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.423391355 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.971719837 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.429196934 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.972254329 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.431577774 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.431642881 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.425194517 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.158617919 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.433295035 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.125329801 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.447305941 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.433404205 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.883320659 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.97489537 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.33378246 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.431666151 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.977931656 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.220032664 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.724449407 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.435012384 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.222325025 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.728267596 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.434659771 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.437031075 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.43572926 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.433247193 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.499709297 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.700780366 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.047386538 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.125563364 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.283132163 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.713760733 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.438601581 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.426456226 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.273299419 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.441330823 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.436203737 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.156565215 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.132969783 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.449415231 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.434530045 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.112021726 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.45120507 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.708271871 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.437983022 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.191341862 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.434355171 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.50022425 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.436225508 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.433390396 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.430650731 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.70862014 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.435625172 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.43657733 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.109144385 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.914522734 seconds)
  done (took 198.383722351 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.421814127 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.420657703 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.424474229 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.422602484 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.421503805 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.430334231 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.420740334 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.421585233 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.426936474 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.42072952 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.424668064 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.430631485 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.429690384 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.422891306 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.432591926 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.422115254 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.423839461 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.439474046 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.422964354 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.421980981 seconds)
  done (took 45.807424597 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.437585789 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.973413589 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.942138239 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.445469938 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.437876732 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.429367965 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.484795451 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.444239345 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.437186457 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.721658281 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.599890986 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.446945089 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.438411839 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.438786039 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.948956422 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.412345866 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.721084803 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.978164436 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.439532246 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.979148175 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.416393939 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.440968135 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.427782619 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.979425272 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.741680789 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.714006697 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.492555878 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.983670718 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.444184355 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.439046358 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.975863438 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.440983708 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.431831942 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.964461921 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.440259615 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.452443456 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.439682734 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.487552701 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.491382037 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.726354414 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.987868552 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.726630325 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.457319154 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.595334821 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.441849442 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.413454235 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.994256249 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.448502729 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.413556895 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.441056356 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.447621112 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.959248893 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.437399454 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.965884937 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.441596718 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.441284746 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.979724264 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.966291536 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.956380262 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.598447548 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.437722876 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.71245606 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.441666859 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.992346547 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.442221057 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.442464746 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.441346235 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.602678654 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.985084862 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.71251424 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.73369826 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.732111351 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.446141316 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.500938322 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.448218333 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.729897545 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.506349378 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.830360835 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.729263885 seconds)
  done (took 129.377338337 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.696564578 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.552376476 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.811941609 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 1.999659126 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 1.930423465 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.576274342 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.554354256 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.679459488 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.454415302 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.544702428 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.069902048 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.550635983 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.18547213 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.501209051 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.546511214 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.558752355 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.825923097 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.37115037 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.054288613 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.051949443 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.442589347 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.535635783 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 1.963370253 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.635767022 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.444404567 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.011998924 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.337292057 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 1.945099296 seconds)
  done (took 54.142109222 seconds)
done (took 538.553004591 seconds)
SAVING RESULT...
DONE!
