cset: moving following pidspec: 19487
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.317722265 seconds)
loading group "string"... done (took 0.568229894 seconds)
loading group "linalg"... done (took 8.055303893 seconds)
loading group "parallel"... done (took 0.180834693 seconds)
loading group "find"... done (took 1.237113982 seconds)
loading group "tuple"... done (took 1.988561775 seconds)
loading group "dates"... done (took 1.284825878 seconds)
loading group "micro"... done (took 0.196606776 seconds)
loading group "io"... done (took 0.932803166 seconds)
loading group "scalar"... done (took 39.161236329 seconds)
loading group "sparse"... done (took 11.854621909 seconds)
loading group "broadcast"... done (took 0.967099477 seconds)
loading group "union"... done (took 13.701848923 seconds)
loading group "simd"... done (took 4.76826654 seconds)
loading group "random"... done (took 9.203745217 seconds)
loading group "problem"... done (took 1.597838177 seconds)
loading group "array"... done (took 21.278514257 seconds)
loading group "misc"... done (took 1.733664631 seconds)
loading group "sort"... done (took 3.335104538 seconds)
loading group "collection"... done (took 17.914916322 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.535555694 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.125806922 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.136426824 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.120681486 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.149941086 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.120316254 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.125906991 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.087893732 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.879260942 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.150249309 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.114072871 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.433331197 seconds)
done (took 5.363498087 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.174679958 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.087160233 seconds)
    (2/2) benchmarking "String"...
    done (took 0.078819703 seconds)
  done (took 1.218951679 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.066025519 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.126801269 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.066893087 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.067840217 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.067457632 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.067382804 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.067399734 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.067225719 seconds)
  done (took 1.584608987 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.072722741 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.06876316 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.066195103 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.068327397 seconds)
  done (took 1.330851372 seconds)
done (took 5.438430459 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.789387736 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.210288779 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.190087992 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.40298266 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.135271226 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.178419747 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.656648971 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.333707631 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.201203374 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.094148914 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.111973869 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.361239144 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.125924027 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.643041867 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.080984677 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.096880905 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.141947247 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.448743502 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.071577802 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.085318095 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.093002341 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.131564821 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.0916351 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.076517992 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.151272765 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.070532666 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.143099747 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.083835529 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.069206465 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.220024958 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.175340464 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.673372296 seconds)
  done (took 10.430586836 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.101224605 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.099383485 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.069335317 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.126362065 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.101553335 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.072551391 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.077535584 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.069744353 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.09188615 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.12931888 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.091400502 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.108069198 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.068569157 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.072169385 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.085540427 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.200946806 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.080237676 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.08221098 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.068720391 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.080534769 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.1080313 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.077989191 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.080220166 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.079818455 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.133180829 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.170612171 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.097373231 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.098182211 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.067531645 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.082061367 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.116914414 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.129701171 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.068560335 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.067611314 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.126546337 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.095498561 seconds)
  done (took 4.575575644 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.098724136 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.153711293 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.09290122 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.142824864 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.067065751 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.115319257 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.068407904 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.085851968 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.241796295 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.408591062 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.629362243 seconds)
    (11/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.151767345 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.119792171 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.10637434 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.074063265 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.07028532 seconds)
    (16/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.067002793 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.069663502 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.267229949 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.101776394 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.116547546 seconds)
    (21/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.096421438 seconds)
    (22/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.086189258 seconds)
    (23/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.072967926 seconds)
    (24/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.072108837 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.074762117 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.066021764 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.070966035 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.090963348 seconds)
    (29/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.066457472 seconds)
    (30/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.078067307 seconds)
    (31/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.334253884 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.129383563 seconds)
    (33/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.070627716 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.831808345 seconds)
    (35/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.167794901 seconds)
    (36/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.069474436 seconds)
    (37/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.107394735 seconds)
    (38/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.163460579 seconds)
    (39/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.09347575 seconds)
    (40/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.140859164 seconds)
    (41/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067869189 seconds)
    (42/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.064217262 seconds)
    (43/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.297321898 seconds)
    (44/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.067197787 seconds)
    (45/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.074391292 seconds)
    (46/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.071425921 seconds)
    (47/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.087430235 seconds)
    (48/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.112055404 seconds)
    (49/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.122423035 seconds)
    (50/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.066916931 seconds)
    (51/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.068504594 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.17003211 seconds)
    (53/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.067499164 seconds)
    (54/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.084208781 seconds)
    (55/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.256283625 seconds)
    (56/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.15283596 seconds)
    (57/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.069350923 seconds)
    (58/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.297069154 seconds)
    (59/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.096745949 seconds)
    (60/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.074469863 seconds)
    (61/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.067556955 seconds)
    (62/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.201284604 seconds)
    (63/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.117197921 seconds)
    (64/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.069152243 seconds)
    (65/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.068407735 seconds)
    (66/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.069915319 seconds)
    (67/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.069071576 seconds)
    (68/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.382430424 seconds)
    (69/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.069412516 seconds)
    (70/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.925983605 seconds)
    (71/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.071495726 seconds)
    (72/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.079569196 seconds)
    (73/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.073030801 seconds)
    (74/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.074546933 seconds)
    (75/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.081896265 seconds)
    (76/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.082413769 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.095318208 seconds)
    (78/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.069259321 seconds)
    (79/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.076539483 seconds)
    (80/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.071920772 seconds)
    (81/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.068405235 seconds)
    (82/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.06924413 seconds)
    (83/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.095854681 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.397437254 seconds)
    (85/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.067789728 seconds)
    (86/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.072728014 seconds)
    (87/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.064315324 seconds)
    (88/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.065614226 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.094774917 seconds)
    (90/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.099382004 seconds)
    (91/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.067048854 seconds)
    (92/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.066160762 seconds)
    (93/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.102361962 seconds)
    (94/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.070960131 seconds)
    (95/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.066561629 seconds)
    (96/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.068564678 seconds)
    (97/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.065288348 seconds)
    (98/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.119392724 seconds)
    (99/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.070729498 seconds)
    (100/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.113335545 seconds)
    (101/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.169591799 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.071072479 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.097848844 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.070145428 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.102031023 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.077211767 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.071466472 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.466511127 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.066005497 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.07291913 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.06650243 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.06855779 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.069041885 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.083296038 seconds)
  done (took 21.943481637 seconds)
done (took 39.103198895 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.240932065 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.08280376 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.083459868 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.083712982 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.083722647 seconds)
  done (took 1.717993642 seconds)
done (took 2.841096279 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.125752982 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.099869068 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.064740625 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.097319532 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064839723 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.100696545 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.103559979 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.083629308 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.099999939 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.065246846 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.097843042 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.065112346 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064944663 seconds)
  done (took 2.275066541 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082270438 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.083006535 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.069115941 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.082010355 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063105226 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.082443691 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.081345767 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.089410101 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.081523915 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.073291763 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064464015 seconds)
  done (took 1.970040317 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082607983 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.083277495 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.069675831 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.083321614 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064313168 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.086760668 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.083010717 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.087441751 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.083327808 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.074278405 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063198841 seconds)
  done (took 1.975772261 seconds)
done (took 7.333613348 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.076009532 seconds)
  done (took 1.181575844 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.5312818 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.57262323 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.078545101 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.100598661 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.192438466 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.108673728 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.234867835 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.083313759 seconds)
  done (took 8.17872489 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.094834642 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.071007385 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.068880378 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.080617594 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.069160698 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.069376233 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.071243526 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.069252765 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.070907785 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.069528027 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.070216894 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.069803649 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.070581821 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.070295167 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.070208173 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.070600371 seconds)
  done (took 2.342985994 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.096794657 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.095375225 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.073447613 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.075342993 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.073105011 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.072069393 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.07482244 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.074383574 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.071693345 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.072999188 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.075710528 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.073411836 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.07340601 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.064299582 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.074197992 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.07686556 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.071802188 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.074403712 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.075372484 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.076484058 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.077930877 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.066371551 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.075244202 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.074382306 seconds)
  done (took 3.026788793 seconds)
done (took 15.84539667 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.1155809 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.077587373 seconds)
  done (took 1.303807083 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.078304547 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.079317129 seconds)
  done (took 1.2779741 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.076722444 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.062782907 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.083652283 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.073945185 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.063812008 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.063002631 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.082307618 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.06351617 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.063333294 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.063891646 seconds)
  done (took 1.81809115 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.064970278 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.072511255 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.069449536 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.078958093 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.070224631 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.064806958 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.069032106 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.065577612 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.073700334 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.063734002 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.068650834 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.083551343 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.068686875 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.084911871 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.068712049 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.068587772 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.070597254 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.06739061 seconds)
  done (took 2.396165949 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.063348939 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.064320891 seconds)
  done (took 1.253987791 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.066492331 seconds)
    (2/7) benchmarking "second"...
    done (took 0.063526706 seconds)
    (3/7) benchmarking "month"...
    done (took 0.066345526 seconds)
    (4/7) benchmarking "year"...
    done (took 0.065652268 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.063913244 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.062812561 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.063752536 seconds)
  done (took 1.575384254 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.396509274 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.122842075 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.320777171 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.070603693 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.080194513 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.251022792 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.06493066 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.069697845 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.069641724 seconds)
  done (took 2.61214691 seconds)
done (took 13.364168626 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.080585798 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.085834166 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.09756405 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.410487416 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.093077642 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.068042246 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.113848182 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.182720823 seconds)
done (took 2.268441714 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.22426827 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.851271058 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.471384977 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.207473699 seconds)
  done (took 2.656992782 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.346165511 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.081312634 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.077247355 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.066878184 seconds)
  done (took 1.706985137 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.067947179 seconds)
    (2/2) benchmarking "read"...
    done (took 0.185378615 seconds)
  done (took 1.387641326 seconds)
done (took 7.110526111 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.065003194 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.065218226 seconds)
    (3/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.089181134 seconds)
    (4/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.064210041 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.06545827 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.06547454 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.064907593 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.064896651 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.065195464 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.064707023 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.064594181 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.065048356 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065015343 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065471029 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065176843 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064624513 seconds)
    (17/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.065384869 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.065059381 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064921611 seconds)
    (20/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.065348155 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065294961 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.064635629 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.064684089 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.065017705 seconds)
  done (took 2.753381841 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.081439864 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.066966455 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.068439624 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.068375634 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.069340903 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.068455474 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.068996011 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.067018177 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.068902881 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.067050863 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069331293 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.069011944 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.066410673 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.069108926 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066784291 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.069102312 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.068464064 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067648438 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06711086 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.069864496 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.068947983 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067162299 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.068989229 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.068572916 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.069371655 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069068906 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.066921547 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.067160703 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.068481406 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.069108394 seconds)
  done (took 3.203714901 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.065376416 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.060825297 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.061668013 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.069781954 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.061688429 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.061993564 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.061012299 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.061856715 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.061911064 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.06173912 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.062589634 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.061268065 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.061841269 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.061930564 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.062355341 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.065513783 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.078944141 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.061859585 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.061468784 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.062380313 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.065447815 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.061201791 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.061357121 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.061078222 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.061116161 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.060715539 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.061697917 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.06405296 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.061797127 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.061533548 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.065135864 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.065652693 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.061520691 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.066503213 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.065979524 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.061217903 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.065187746 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.061234633 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.061922174 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.06100218 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.060935395 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.061286195 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.061307436 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.070398792 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.061470237 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.062713631 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.061764546 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.06250671 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.061925362 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.064292022 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.061899462 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.06274003 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.063282877 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.062524763 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.066631736 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.060900284 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.062548051 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.061079537 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.062022784 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.061211239 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.060815927 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.060967335 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.064588656 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.062013215 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.078469305 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.069847176 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.061094463 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.062498183 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.06203632 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.064517328 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.06254864 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.076839297 seconds)
  done (took 5.706603813 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.085119225 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.08713616 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.066738708 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.066319507 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.062105689 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.061806626 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.070138415 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.062120889 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06665875 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.080758497 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.061883294 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.066537596 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066368041 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.066191102 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.062335775 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.066793586 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.070444492 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.062489192 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.062205055 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.065613979 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.062382278 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.069936539 seconds)
  done (took 2.649618129 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.148844318 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.067900376 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.105661345 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.072478672 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.070538703 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.072553271 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.068028638 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.068406747 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068441349 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068691176 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068619413 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067974105 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.070435883 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068395494 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068792997 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.069809691 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.070257015 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.070019352 seconds)
  done (took 2.514469461 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.077836914 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.067751717 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.086311248 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.067178875 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.067369918 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.067046003 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.07130107 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.07217757 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.066991322 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.067577425 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.072215256 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067151935 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.066936842 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067651975 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066895675 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.067868735 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.067027721 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067291237 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.071899239 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.071408759 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.07130009 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.071660519 seconds)
  done (took 2.691701848 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078397394 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.075806197 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.082838104 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.068653042 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.062089938 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.061884216 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.068455679 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.067964255 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.068453347 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.066434622 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066980045 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.062070865 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.069724085 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.067009979 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.069567699 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066776739 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.0663965 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.066814203 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066383998 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.062107135 seconds)
  done (took 2.516345246 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.083692085 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.064750702 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.065372196 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.071214646 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.065182476 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.064908844 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.071309206 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.065000979 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.065115115 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.085870482 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.065191895 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.065883497 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.07165454 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.069026514 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.065089636 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.071804905 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.071400576 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.071789304 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.065208366 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.067683839 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.086046531 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.065375872 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.071173327 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.064986313 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.065026718 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.064964518 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.065264363 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.069101276 seconds)
  done (took 3.091725975 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.065218782 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.064458097 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.064729434 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.065673608 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.066375124 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.06578828 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.066239445 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.066717602 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.066295876 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.066369998 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.066071314 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.065993918 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.065493622 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.064855419 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.065129342 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.065073402 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064908419 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.065589928 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065203209 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065535857 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.064542765 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064955622 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.06456437 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.064932435 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065283954 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.064451231 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064831766 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.065098495 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.064722968 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.065180952 seconds)
  done (took 3.116589335 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.074798757 seconds)
    (2/2) benchmarking "in"...
    done (took 0.073491076 seconds)
  done (took 1.306704699 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.063264239 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.078271987 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.060812601 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.072112759 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.070486447 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.065421277 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.071543554 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070777326 seconds)
  done (took 1.706303479 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.085316528 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.074744456 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.063987579 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.075617127 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.074729281 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.08471798 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.126260337 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.064618893 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.074469081 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.065311061 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.082541399 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.065788547 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.074489157 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.06924028 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.074723038 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.077812181 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.062003407 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.068713223 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.065776238 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.062323503 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.064551154 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.077453575 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.073589132 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.063328939 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.071008898 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.094002184 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.082378627 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.06490038 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.072430998 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.078156529 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.075744945 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.062374773 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.065230053 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.065687521 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.063286865 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.076153849 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.082344626 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.071061472 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.076424497 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.064699252 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.072072733 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.062376605 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.072450614 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.074285636 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.079936882 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.064223348 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.063895752 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.061398668 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.064868813 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.070181506 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.06173942 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068072966 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.061163379 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.075837489 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.071193652 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.078930516 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.062795996 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.069608635 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.070196484 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.070582289 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.075088901 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.069973295 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.073318604 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.063231625 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.07998431 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.073375411 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.075443247 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.06220542 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.060855087 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.062136449 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.077871035 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.092113647 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.073301558 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.064094713 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.064016578 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.062016954 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.071554405 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.065601306 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.072920615 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.075474653 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.063422559 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.067784884 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.075841342 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068135481 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.070340908 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.070004615 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.062296268 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.066762417 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.064777678 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.083255487 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.062404853 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.061742726 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.064742706 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.078584724 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.070406191 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.062903755 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.064645303 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.077251498 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.061041652 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.063737677 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.064285093 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069646283 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.076518176 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.067426391 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.068166538 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.077024167 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.07226216 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068711512 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.069754693 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.060440909 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.064457883 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.064937409 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.073764406 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.059748999 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.069131295 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.066984811 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.062575419 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.073865544 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.060701597 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.06283672 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.074554734 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.073648282 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.060973587 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.059677009 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.068870471 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.061873295 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.064039625 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.075744407 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.060721727 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.060473161 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.060675776 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.069999608 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.06169699 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.069942469 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.065960845 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.069193378 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.185379874 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.06340064 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.069327364 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.076981007 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.067736144 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.070164845 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.075063454 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.070649962 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.062996908 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.076394766 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.070636701 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.066012469 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.073206417 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.067770319 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.062365311 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.065627903 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.071011506 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.062662901 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.070816058 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.066058688 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.070057395 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.063721864 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.062397615 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.068789844 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.064207831 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.065847863 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068615192 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.062660044 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.078849273 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.070168534 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.061371183 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.061397727 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.069924023 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.065194373 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.063011512 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.066345367 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.070362499 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.064094023 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.061951314 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.063099974 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.070173631 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.071203033 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.066373767 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.064508027 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.073844353 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.080841245 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.06338947 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.070719372 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.063482046 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.064535479 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.064472512 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.078376888 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.074054856 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.067944448 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.070267439 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.061229589 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073338489 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.076816038 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.06772923 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.063887457 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.068115638 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.069463082 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.07695674 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.069153119 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.064543952 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.063992585 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.071333727 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067984793 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.072015589 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.063313201 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.066097074 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.068664254 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.062612338 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.069759185 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.064010768 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.078108054 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.070856964 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.061783412 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.066165691 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.062339055 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.074971454 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.062024279 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.065906466 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.067939917 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.066194756 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.064389641 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.072319163 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.062332976 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.077905335 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.078078127 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.070775517 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.067734204 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.064880701 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.077545685 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.069768775 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.071878985 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.070820709 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.07353453 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.079072992 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.066296627 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.070388817 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.07827343 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.063125852 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.061142452 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.072811835 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.062022783 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.062469658 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.062418145 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.065149095 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.070309907 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.070094386 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.073524581 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.061177873 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.070590319 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.062273353 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.066941962 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.062037287 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.072423594 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.070128187 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.067105219 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074980558 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.062781837 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.062794123 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.069838069 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.062146816 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.062718949 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.063133309 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069371672 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.062898724 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.068148266 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.065225106 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.067987081 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.064922908 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.060145881 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.068318453 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.062317005 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.067481866 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.070965289 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.061660112 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068529992 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.068836033 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.189794102 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.070774428 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.068452658 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.066731813 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.07112006 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069959308 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.069356092 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.070711541 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.062874176 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.0756225 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.063036644 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.076140888 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.068593547 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.061206473 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.069204663 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.070724326 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.06828745 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.063854328 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.064246156 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.069210907 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.063159055 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.070547033 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.076026488 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.064643826 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.079032724 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.074235207 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069148532 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.070476221 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.068747996 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.069459422 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.066053938 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.068561563 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.06446905 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.06936858 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.063724824 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.072157387 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.070449222 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.068463206 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070282081 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.064100402 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.06923874 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.064180404 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.061209941 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.066090421 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.066241015 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.063946664 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.076230732 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.063883887 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.066593699 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.062909553 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.064645536 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.063673859 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.061457019 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.07059028 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.071735044 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.064208038 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074462145 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.066541541 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.069985022 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.079597591 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.061166862 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.06252512 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.061995278 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.065368078 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.076464808 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.064092559 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.077225082 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.069098529 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.066392622 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.061478162 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.064381537 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.062460281 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.061347324 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.061834375 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072164155 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.06590724 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.063249986 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.063929474 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.070793902 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.064614144 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.07654478 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.063498883 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.067728794 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.06394131 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.061708215 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.066470345 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.066066715 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.070587101 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.064294819 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.065249618 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.061366613 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.063181656 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.067947232 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.069434635 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.06352773 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.069093058 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075891539 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.06334786 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.070188648 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.066598976 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.061650369 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.070504073 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.063357344 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.063227835 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.066538725 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.07145778 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.07079804 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.064160021 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.078066494 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.063202754 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069713159 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.06340544 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.061548339 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.06534105 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.063175116 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.063204787 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.06623802 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.064824558 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.076621182 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.061790293 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.069541715 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068462687 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.066973125 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.073110085 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.063554604 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.068611539 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067815468 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.064477233 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.068680028 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.07556578 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.065672045 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.069653312 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.063370694 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.068430976 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.071810631 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.065058941 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.073678521 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.067942692 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.062397498 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.067724777 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.063665926 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.062500461 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.061933915 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.061634706 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.072170976 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.194504541 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.067050935 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.067251747 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.062317298 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.06853435 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.066619563 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.076765441 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.070704194 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.071002894 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.061774084 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.061081645 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.064043638 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.064931591 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.0692878 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.070588282 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073646751 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.070671817 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.067502432 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.063483509 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.077451592 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073637599 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.071632722 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.065015843 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.071224121 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.064263403 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.070348246 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.068047612 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.068663889 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.064967985 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.071211693 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.070440211 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.067887656 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075805664 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.072396225 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.064520135 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.069993809 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.069853337 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.069085423 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.062371963 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.065829669 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.072205743 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073658369 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.070758865 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.063540563 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.078761462 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.064688661 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.068922118 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066202974 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.063517588 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.072145061 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.062508477 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.070771649 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.064751842 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.064824797 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.062179195 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.066469596 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.065488002 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.071311938 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.066360865 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.062518312 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079648351 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.078282855 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.07007512 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.063564538 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.062571093 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.062170507 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.062428429 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.066802472 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.065045556 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.070020722 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.078802759 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.066419203 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.066402645 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.061886034 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.064055532 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071210317 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.07158208 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.061902533 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.062186052 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.066487205 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.070187042 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.075221103 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.062928863 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.063834131 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.071502672 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.070933516 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.06228219 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066456398 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.061118453 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.071748611 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.080605596 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.064143574 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069704403 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.073477812 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.076322975 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.06391021 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.062074301 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.063688979 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.069813486 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.069626941 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.064404171 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.064390009 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.082852662 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.070717292 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.066220986 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.062399905 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.070681993 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.066319706 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.07695577 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.064332712 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.064314517 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.072760726 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.070394173 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.070394024 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.073426033 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.077520884 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.069761016 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.069658118 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.063005036 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.084856547 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.062404409 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.066156933 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.064273093 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.06339951 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.06678128 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.068902635 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.064903525 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.079625997 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.07633813 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.064843401 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.059829826 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.065036681 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.064921524 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.060896001 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.063033701 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.061460487 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.060770032 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.061244065 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.061897521 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.068660303 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.07103032 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.066713945 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.062506481 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.19704965 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.062077678 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.073806361 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.071075016 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070307634 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.061364155 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.063955838 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.064072304 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.072207879 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.066005364 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.06490653 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.070111437 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.069054471 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.06937326 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.061543007 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.074887152 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.063323209 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.069438506 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.065901 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.063633801 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.063838643 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.071437245 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067984996 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064654179 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.070207505 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.070862547 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065143161 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.061799761 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.062634223 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.074896093 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.063601462 seconds)
  done (took 42.321439647 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.099526082 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.062887543 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.061991763 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.061759742 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.071368698 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.062803081 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.061984156 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.063052062 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.062665031 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.064965383 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.061918416 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.061963276 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.069412225 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.076859245 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.072282045 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066296208 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.062088005 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.063270733 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.062296379 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.063212149 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.069529443 seconds)
  done (took 2.658641676 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.069174126 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.077133316 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.073782001 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.079005245 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070827749 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.067155989 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.074932294 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067385014 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.075122499 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072258042 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.075032656 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067009713 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.072174913 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.072725631 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.07256242 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.067240875 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.075343175 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.072082727 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.067883314 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.075484655 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.068557618 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.075631026 seconds)
  done (took 2.835214655 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.063646085 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.06257033 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.069386201 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.060950126 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.062798364 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.06166288 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.065627603 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.061641919 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.064815839 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.065831085 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.065601242 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.065673837 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.06944479 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.061703167 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.066457187 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.061477341 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.106506692 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.065485543 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.063260967 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.063899924 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.061876105 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.070057286 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.061533029 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.061975699 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.065295713 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.065653224 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.06435154 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.061322491 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.062761387 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.065463441 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.0627413 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.061230791 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.069928039 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.068920358 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.064985295 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.065087596 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.062561678 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.062898691 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.061823429 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.061461571 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.069176463 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.061971892 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.063452489 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.06968981 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.063926065 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.061165623 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.069994575 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.063173932 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.061599875 seconds)
  done (took 4.444983733 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.073702964 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.109195934 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.067559373 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.090480712 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.075751437 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.069055636 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.068056628 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.092036827 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.063191528 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.064452637 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.077347517 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.077805046 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.065433223 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.067363389 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.067783971 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.064934236 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.066092461 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064482854 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.068333793 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.064770556 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.068547627 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.069498692 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.076350927 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.07643187 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.066459561 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064804865 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.065302596 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.066534584 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.076077798 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.069179154 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.066722752 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.067218617 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.076483546 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.070150878 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.064538481 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.064773731 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.077083367 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.065560078 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.065022632 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.063331505 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.065145911 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.066489626 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.069197181 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.077446854 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.06534114 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.069794908 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065237222 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.062832578 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.076329509 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.064704258 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.069193116 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.077685706 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.066666897 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.065187794 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.066675278 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.076601833 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.065257169 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.063877878 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.065312063 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.076118792 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.063312944 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.066152226 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.076604113 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.065009642 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.068666779 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.077527888 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.070082995 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.065953161 seconds)
  done (took 6.151250309 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.071996733 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.093538074 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.078095497 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.078525149 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.072491836 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.072946633 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.073382337 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.07283547 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.073070982 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.076739942 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.07335219 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.113405757 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.068846422 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.075126772 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.073005567 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.072972463 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.072934014 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.072853827 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.072921857 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.073249304 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.072709954 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.078825235 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.072954729 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.078853991 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.075978346 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.068860555 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.073052992 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.072696289 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.079400906 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.072944234 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.076274704 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.072688818 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.072622738 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.079280948 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.07584811 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.072618888 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.062729528 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.072542499 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.07299275 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.072758921 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.068937264 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.079064106 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.072886523 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.06882032 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.072749163 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.072719007 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.078810499 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.076016719 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.074631679 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.076563542 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.073322523 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.079060655 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.072559958 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.072978881 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.078925966 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.081851585 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.079152744 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.079176058 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.072769028 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.078900355 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.079272495 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.081812978 seconds)
  done (took 5.955056082 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.077251525 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.069740266 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.08058263 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.061593831 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.061576311 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.071493386 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.061482288 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.062056208 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.070148465 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.069821359 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071947921 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.071829883 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.077410473 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.072093913 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.071997089 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.074059136 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.071823003 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.07182919 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.070082553 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.071931408 seconds)
  done (took 2.687491763 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.076063404 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.080769248 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.067427233 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.071697222 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.067058952 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.071776655 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.066590163 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067485798 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068032077 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067855813 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.073380848 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.073529948 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068397489 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.072174145 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.073154149 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.072181019 seconds)
  done (took 2.402876633 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.082983142 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.070406903 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.076818056 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.063326698 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.067205142 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.062423717 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.062949161 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.061730026 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.062607708 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.076072659 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.063327136 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.075046296 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.063162224 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.06268191 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.063216958 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.069251387 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.062746612 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.063397383 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.063418109 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.076521781 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.070275829 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.064429948 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.067258178 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.063806993 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.068836033 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.070841893 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.065167448 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.067050578 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.063337801 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.063869 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.069108807 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.070227707 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.062968798 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.06397864 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.062325791 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.063699497 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.063141267 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.064329409 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.068694193 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.063093618 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.07998223 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.068032819 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.063481677 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.064325724 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.062379146 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.063518098 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.062368375 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.069266166 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.063647672 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.068858444 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.062972494 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.065596835 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.06403476 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.070595742 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.065758323 seconds)
  done (took 4.926320472 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.077996089 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.06706189 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061533535 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.061278072 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.067020066 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.068187555 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.067693933 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.067610377 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068491131 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.061837761 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.068121663 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.067344967 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068316573 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.067680812 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.06807085 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067602736 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061868908 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.067416628 seconds)
  done (took 2.483253896 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.072408738 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.066629425 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.071262444 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.066782091 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.066550686 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.066483977 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.062301449 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.062080056 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.061990457 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.067395254 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06680606 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.066799534 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06223924 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.066618456 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.066942459 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067203484 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.067146274 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.062125972 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.066668008 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.062264904 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.066369984 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.062022227 seconds)
  done (took 2.718433273 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.094807321 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.083136936 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.139298325 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.079297738 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.086744468 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.071935865 seconds)
  done (took 1.826594833 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091650052 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097464026 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.066560441 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.06682384 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072401591 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07005464 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070185144 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070497321 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074662045 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075505209 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070446484 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075237264 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074843721 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076931806 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072969567 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072938891 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070775762 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070840185 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067071428 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082408444 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.0710411 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075303628 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07083556 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070336998 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070465602 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076899013 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074821558 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075559291 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070335498 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074942731 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073036328 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070476398 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075016033 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075430858 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.06725527 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074797889 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071006191 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079854026 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07283839 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076909528 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.067042124 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072809818 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074792211 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074191411 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074963875 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070628851 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074385237 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070482361 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070926667 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.085080122 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072931461 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076459348 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072838006 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075261578 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074881529 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081391452 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075302367 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076676759 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072904753 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07523041 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076810689 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07309693 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076636707 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075418843 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072654142 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076746731 seconds)
  done (took 6.171612759 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.103260864 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.0678269 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070673872 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076163225 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076627025 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070955365 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07058288 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071597147 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070752677 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068737462 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.105700023 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07119598 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077530634 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077316162 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071121907 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07123152 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071029937 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077658291 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068112898 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082222222 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070870237 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077167659 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077124811 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07711551 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07576789 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.0730122 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071797228 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070504853 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07060835 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070740993 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074665114 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070769619 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07733896 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.067888919 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077275147 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070643062 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070636268 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074538562 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070761802 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073256093 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077306058 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080499471 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070782045 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070443226 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075819625 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070804528 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070692651 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067832978 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070407387 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067230089 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.0750575 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07496548 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075003552 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076412936 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070396354 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070704981 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070129094 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070184892 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070404505 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072780219 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078593191 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070482363 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.08129609 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070282176 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070738615 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076691436 seconds)
  done (took 6.172440775 seconds)
done (took 126.148140595 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.208168343 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.184273482 seconds)
  done (took 1.653787189 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.073528075 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.10418729 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.083257039 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.133035929 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.071677034 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.10529541 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.104041021 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.083844487 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.071214858 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.071074744 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.071385075 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.073999726 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.137599801 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.071989026 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.071378879 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.073977303 seconds)
  done (took 2.679865781 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.104239867 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.214674445 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.108165981 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.069263684 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.104164332 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.076636602 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.069796517 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.082290599 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.075949932 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.07138112 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.077474363 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.075526586 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.071299173 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.07518069 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.076367333 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.077694278 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.073841471 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.077048011 seconds)
  done (took 2.862899457 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.103132236 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.093842335 seconds)
  done (took 1.480676361 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.171868326 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.133148625 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.201447171 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.343167544 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.151499617 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.431244034 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.138436305 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.138075552 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.112681814 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.134743042 seconds)
  done (took 3.235669356 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.103695867 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.200330336 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.298345771 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.120286187 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.076061714 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.111840379 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.122129357 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.082100388 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.081178862 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.08087309 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.080705226 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.07835955 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.10048136 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.076862562 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.075959296 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.078174343 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.103703581 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.07494343 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.07631512 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.077249192 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.104255142 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.070021882 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.076721517 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.074954347 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.078694674 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.079102329 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.071457976 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.069929127 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.076400652 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.075639843 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.078985443 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.108684355 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.078501214 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.105082364 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.074279677 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.106130099 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.078153233 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.074508885 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.075435025 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.074218562 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.077547812 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.077713928 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.078921174 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.078113014 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.071256877 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.078382986 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.071276898 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.070320558 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.080576798 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.07152648 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.079964116 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.078970896 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.104866771 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.070875206 seconds)
  done (took 6.129595593 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.107983865 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.107167286 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070943766 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.112924816 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.104170482 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070699598 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.105740234 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.099353889 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.107671018 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070759638 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.069520303 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.071517396 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.079791895 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.081361534 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.115941568 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.107633666 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.072899673 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.071070861 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.107868237 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.10740338 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.06984068 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.102031358 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.097968623 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.107303898 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.069486239 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.071135294 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.069516597 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.070926017 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.076052953 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.077754865 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.07018806 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.079005123 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.083645911 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.077389817 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068610292 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.069903913 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.069542283 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.078601745 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.078934459 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.079103937 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.076735962 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068807486 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.069192211 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.070182502 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.070409224 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068797211 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.077262646 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.078469695 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.077103029 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069334522 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070521153 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.069876704 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.069700736 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.078399193 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.07604867 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.079705529 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078414074 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.069439202 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069245481 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.071993291 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079174193 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.078227606 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.077635047 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069777691 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078136973 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.06944642 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.079945644 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.082324177 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.069867044 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.07096895 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.069837689 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069452913 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.070108103 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.078828818 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.076207711 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.07020699 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.069491582 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069564738 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.078522103 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.07707809 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.069324384 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.075955863 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068481034 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068969916 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070328451 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069968711 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.075758715 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.078136756 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.071072668 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068895379 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069535512 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068988919 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.068210744 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.075863449 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.077741346 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.077351396 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.076837843 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070042925 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.077231105 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.077343181 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.07012491 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.07711744 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.068443925 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070339214 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069732999 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.076299653 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.075038398 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.077236906 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068521273 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.068180056 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.074687968 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.077106677 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.068248036 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.074063538 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.076435584 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.075094817 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.067462336 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.078050186 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068307169 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.076734166 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068061555 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.209380917 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070412373 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.078031261 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.070325354 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.069554769 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.069805615 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.078277782 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070751593 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.06924024 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.07030797 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069419099 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.077515345 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.080470249 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071518119 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.076726478 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.076748491 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070981858 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.076921476 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069496598 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.078305755 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069860978 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070153907 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068182528 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.080534513 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.069468469 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.069492668 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.07020547 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.078324908 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069753461 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.078405058 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.076710105 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068753915 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.080029035 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.078956692 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.075657619 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.078935082 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070799717 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.069280282 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068973501 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069547486 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.076202158 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.077606426 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070963836 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.069580617 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.076350044 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.07892383 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.068931891 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.077278376 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.076850852 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.077472824 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.070007125 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.070106833 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.080496255 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.079494841 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.077279246 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.077182777 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.077930105 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.070441716 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.077012857 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.077498372 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069711665 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.082475233 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.06971448 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.081350302 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.077813937 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.07621998 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.077845926 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.079001989 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.079146523 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.079117026 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.081341223 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068982123 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.069281611 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.07752387 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.069885358 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069595132 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.077218497 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.0706307 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.07049314 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.081590521 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.070087428 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.07909667 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.068698627 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.07784059 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068871175 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.07077268 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081978679 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.069572656 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.070472799 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.077421484 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.069822511 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.076597106 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.078956564 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.076927573 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.069387753 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070273118 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.078492706 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.077767635 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068842268 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.072259453 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070791847 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.076585902 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.0764151 seconds)
  done (took 18.429898315 seconds)
done (took 37.766960873 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.207736061 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.156150019 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.187358467 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.115635778 seconds)
  done (took 2.053385181 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.107091042 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.098320155 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.086929033 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.065827057 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.093226182 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.065620621 seconds)
  done (took 1.834861809 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.295408916 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.20184625 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.181355669 seconds)
  done (took 1.996401148 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.207592852 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.195903849 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.460551077 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.28339609 seconds)
  done (took 2.558817821 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.139060552 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.081515055 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.064504382 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.082420877 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.122894599 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.148739666 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.092534047 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.117000443 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.075785595 seconds)
  done (took 2.295216324 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.147900767 seconds)
done (took 12.22510119 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.13153299 seconds)
    (2/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.128258074 seconds)
    (3/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.101334987 seconds)
    (4/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.15833004 seconds)
    (5/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.20741721 seconds)
    (6/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.123660072 seconds)
    (7/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.126086392 seconds)
    (8/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.072304431 seconds)
    (9/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.075556244 seconds)
    (10/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.098678769 seconds)
    (11/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.068761031 seconds)
    (12/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.080000909 seconds)
    (13/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.067087806 seconds)
    (14/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.070772675 seconds)
    (15/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.092180686 seconds)
    (16/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.21575913 seconds)
    (17/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.203712068 seconds)
    (18/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.244086917 seconds)
    (19/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.076412189 seconds)
    (20/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.426290558 seconds)
    (21/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.099524021 seconds)
    (22/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.197693101 seconds)
    (23/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.175575984 seconds)
    (24/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.210693506 seconds)
    (25/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.090990573 seconds)
    (26/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.091290642 seconds)
    (27/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.222881001 seconds)
    (28/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.077137401 seconds)
    (29/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.141425127 seconds)
    (30/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.183109155 seconds)
    (31/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.084884503 seconds)
    (32/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.074985941 seconds)
    (33/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.207971921 seconds)
    (34/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.164854064 seconds)
    (35/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.142062374 seconds)
    (36/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.156477601 seconds)
    (37/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.149495625 seconds)
    (38/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.165851373 seconds)
    (39/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.072612923 seconds)
    (40/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.076980203 seconds)
    (41/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.072111025 seconds)
    (42/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.203532003 seconds)
    (43/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.070220329 seconds)
    (44/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.075833513 seconds)
    (45/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.131904804 seconds)
    (46/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.077791521 seconds)
    (47/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.090755733 seconds)
    (48/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.073383047 seconds)
    (49/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.065867466 seconds)
    (50/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.179868122 seconds)
    (51/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.064567044 seconds)
    (52/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.074679505 seconds)
    (53/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.228929758 seconds)
    (54/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.227375583 seconds)
    (55/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.091852934 seconds)
    (56/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.165583162 seconds)
    (57/309) benchmarking ("sort", Bool, false)...
    done (took 0.159743756 seconds)
    (58/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.073107676 seconds)
    (59/309) benchmarking ("sort", Int8, false)...
    done (took 0.167561642 seconds)
    (60/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.221590631 seconds)
    (61/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.08708343 seconds)
    (62/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.064630946 seconds)
    (63/309) benchmarking ("sort", Int64, false)...
    done (took 0.066522326 seconds)
    (64/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.074778663 seconds)
    (65/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.065541419 seconds)
    (66/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.077728183 seconds)
    (67/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.083186078 seconds)
    (68/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.072315468 seconds)
    (69/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.064971507 seconds)
    (70/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.073936866 seconds)
    (71/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.133515155 seconds)
    (72/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.12483133 seconds)
    (73/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.064028812 seconds)
    (74/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.175791969 seconds)
    (75/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.065731475 seconds)
    (76/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.190498069 seconds)
    (77/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.073165934 seconds)
    (78/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.071079052 seconds)
    (79/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.065957597 seconds)
    (80/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.074035303 seconds)
    (81/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.235129432 seconds)
    (82/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.162254742 seconds)
    (83/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.07562603 seconds)
    (84/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.115307805 seconds)
    (85/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.103699343 seconds)
    (86/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.090563383 seconds)
    (87/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.096151127 seconds)
    (88/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.084864925 seconds)
    (89/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.164310567 seconds)
    (90/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.07667269 seconds)
    (91/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.168094565 seconds)
    (92/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.065720826 seconds)
    (93/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.065590826 seconds)
    (94/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.134358167 seconds)
    (95/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.071845337 seconds)
    (96/309) benchmarking ("sort", Float32, false)...
    done (took 0.129860329 seconds)
    (97/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.167702759 seconds)
    (98/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.077365221 seconds)
    (99/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.08719922 seconds)
    (100/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.073549588 seconds)
    (101/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.06807529 seconds)
    (102/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.139527742 seconds)
    (103/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.06970965 seconds)
    (104/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.128306209 seconds)
    (105/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.064311992 seconds)
    (106/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.065191628 seconds)
    (107/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.070928292 seconds)
    (108/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.073129273 seconds)
    (109/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.064087709 seconds)
    (110/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.06481451 seconds)
    (111/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.19174416 seconds)
    (112/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.064831072 seconds)
    (113/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.072669184 seconds)
    (114/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.178233673 seconds)
    (115/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.191682289 seconds)
    (116/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.065774628 seconds)
    (117/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.073024536 seconds)
    (118/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.085969745 seconds)
    (119/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.135605837 seconds)
    (120/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.077198531 seconds)
    (121/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.078296914 seconds)
    (122/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.072916595 seconds)
    (123/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.067115038 seconds)
    (124/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.12902992 seconds)
    (125/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.173088347 seconds)
    (126/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.084402334 seconds)
    (127/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.074026972 seconds)
    (128/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.211998404 seconds)
    (129/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.071620589 seconds)
    (130/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.080684625 seconds)
    (131/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.073115132 seconds)
    (132/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.076051102 seconds)
    (133/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.064342885 seconds)
    (134/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.064923427 seconds)
    (135/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.122517745 seconds)
    (136/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.122889371 seconds)
    (137/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.223878974 seconds)
    (138/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.070686696 seconds)
    (139/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.067679185 seconds)
    (140/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.096200802 seconds)
    (141/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.064149691 seconds)
    (142/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.067139048 seconds)
    (143/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.064594773 seconds)
    (144/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.07327308 seconds)
    (145/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.065779068 seconds)
    (146/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.072468036 seconds)
    (147/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.074239614 seconds)
    (148/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.098537824 seconds)
    (149/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.084953618 seconds)
    (150/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.086915009 seconds)
    (151/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.071734065 seconds)
    (152/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.165622972 seconds)
    (153/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.205082617 seconds)
    (154/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.072502045 seconds)
    (155/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.084531962 seconds)
    (156/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.071657746 seconds)
    (157/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.064292283 seconds)
    (158/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.134513028 seconds)
    (159/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.071128289 seconds)
    (160/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.165921432 seconds)
    (161/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.065540359 seconds)
    (162/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.063106987 seconds)
    (163/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.063982499 seconds)
    (164/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.063316647 seconds)
    (165/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.070249753 seconds)
    (166/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.072127977 seconds)
    (167/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.172005992 seconds)
    (168/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.085852688 seconds)
    (169/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.068371387 seconds)
    (170/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.070087744 seconds)
    (171/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.071846714 seconds)
    (172/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.132045559 seconds)
    (173/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.11542377 seconds)
    (174/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.063065198 seconds)
    (175/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.136588506 seconds)
    (176/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.064178322 seconds)
    (177/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.071756289 seconds)
    (178/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.065665772 seconds)
    (179/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.068055706 seconds)
    (180/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.121536664 seconds)
    (181/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.064880449 seconds)
    (182/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.076110165 seconds)
    (183/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.074208015 seconds)
    (184/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.084364327 seconds)
    (185/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.071015054 seconds)
    (186/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.076447496 seconds)
    (187/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.166215741 seconds)
    (188/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.085037646 seconds)
    (189/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.067729094 seconds)
    (190/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.164048696 seconds)
    (191/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.063971554 seconds)
    (192/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.064193212 seconds)
    (193/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.113864736 seconds)
    (194/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.063399887 seconds)
    (195/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.139017922 seconds)
    (196/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.06394508 seconds)
    (197/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.07203756 seconds)
    (198/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.064465706 seconds)
    (199/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.114101162 seconds)
    (200/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.085605824 seconds)
    (201/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.077631701 seconds)
    (202/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.064246358 seconds)
    (203/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.102376738 seconds)
    (204/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.076872004 seconds)
    (205/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.073932271 seconds)
    (206/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.064520206 seconds)
    (207/309) benchmarking ("sort", Float64, false)...
    done (took 0.127327274 seconds)
    (208/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.064050612 seconds)
    (209/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.332839855 seconds)
    (210/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.093513205 seconds)
    (211/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.068612585 seconds)
    (212/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.076992691 seconds)
    (213/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.135757344 seconds)
    (214/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.07687761 seconds)
    (215/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.068954532 seconds)
    (216/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.069237196 seconds)
    (217/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.070007163 seconds)
    (218/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.068870388 seconds)
    (219/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.069195363 seconds)
    (220/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.073558406 seconds)
    (221/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.076049092 seconds)
    (222/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.126803266 seconds)
    (223/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.069480414 seconds)
    (224/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.079681965 seconds)
    (225/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.077696816 seconds)
    (226/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.092261137 seconds)
    (227/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.111638306 seconds)
    (228/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.140051516 seconds)
    (229/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.069524256 seconds)
    (230/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.071309456 seconds)
    (231/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.074268454 seconds)
    (232/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.075905768 seconds)
    (233/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.067239998 seconds)
    (234/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.075774837 seconds)
    (235/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.079415332 seconds)
    (236/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.222131259 seconds)
    (237/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.066739318 seconds)
    (238/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.120558714 seconds)
    (239/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.094138362 seconds)
    (240/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.06686939 seconds)
    (241/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.067916889 seconds)
    (242/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.083172609 seconds)
    (243/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.078263215 seconds)
    (244/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.06713498 seconds)
    (245/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.09261347 seconds)
    (246/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.066674693 seconds)
    (247/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.067877076 seconds)
    (248/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.069162531 seconds)
    (249/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.218065838 seconds)
    (250/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.065563556 seconds)
    (251/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.069289674 seconds)
    (252/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.067414038 seconds)
    (253/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.066512423 seconds)
    (254/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.066360229 seconds)
    (255/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.068708637 seconds)
    (256/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.066162952 seconds)
    (257/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.066357315 seconds)
    (258/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.133195479 seconds)
    (259/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.067211224 seconds)
    (260/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.066092877 seconds)
    (261/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.075480845 seconds)
    (262/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.06630625 seconds)
    (263/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.066041212 seconds)
    (264/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.073112592 seconds)
    (265/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.07946368 seconds)
    (266/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.069713032 seconds)
    (267/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.067340192 seconds)
    (268/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.172334644 seconds)
    (269/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.066839008 seconds)
    (270/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.067461376 seconds)
    (271/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.137274972 seconds)
    (272/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.066728316 seconds)
    (273/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.066717223 seconds)
    (274/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.067922708 seconds)
    (275/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.066340756 seconds)
    (276/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.093452027 seconds)
    (277/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.066271419 seconds)
    (278/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.066674254 seconds)
    (279/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.066977565 seconds)
    (280/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.066787904 seconds)
    (281/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.066894822 seconds)
    (282/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.066719311 seconds)
    (283/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.127597243 seconds)
    (284/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.066313936 seconds)
    (285/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.066567271 seconds)
    (286/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.12684102 seconds)
    (287/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.075311985 seconds)
    (288/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.067343234 seconds)
    (289/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.129607531 seconds)
    (290/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.068453612 seconds)
    (291/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.113287531 seconds)
    (292/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.07349684 seconds)
    (293/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.066641236 seconds)
    (294/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.129500867 seconds)
    (295/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.079142562 seconds)
    (296/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.073850603 seconds)
    (297/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.067099266 seconds)
    (298/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.078252339 seconds)
    (299/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.092112011 seconds)
    (300/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.066619757 seconds)
    (301/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.066458108 seconds)
    (302/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.067543127 seconds)
    (303/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.067013374 seconds)
    (304/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.079753769 seconds)
    (305/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.068675811 seconds)
    (306/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.091110295 seconds)
    (307/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.06723317 seconds)
    (308/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.066185488 seconds)
    (309/309) benchmarking ("sort", BigInt, false)...
    done (took 0.241489418 seconds)
  done (took 32.578344547 seconds)
done (took 33.907405625 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.088899301 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.10113751 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.075465665 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.09555361 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.083546604 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.097662329 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.075993432 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.081073738 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.083313251 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.082210129 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.080955327 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.073932705 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.077382815 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.076838464 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.074511013 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.098197895 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.08123503 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.075116267 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.075493144 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.066877778 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.075510577 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.067121847 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.066459017 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.073049218 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.07897077 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.074593513 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.076838066 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.076282559 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.067400814 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.067872596 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.07190674 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.076171813 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.066821978 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.079386517 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.076387752 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.074915047 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.07689453 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.079071634 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.066436327 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.067168458 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.076768625 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.066955281 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.075362276 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.074109923 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.072024701 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.073563712 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.07532142 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.079903751 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.097726028 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.07137298 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.077123254 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.07778444 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.078713361 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.0724845 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.07254825 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.075101397 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.073360107 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.097879351 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.07608107 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.071612997 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.076932068 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.076398185 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.073316937 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.075370854 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.075605536 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.078247086 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.079197761 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.073583137 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.077333094 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.07398769 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.066969215 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.075010119 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.071871096 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.067710758 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.078370468 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.080359349 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.066446028 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.071750125 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.075350399 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.075371837 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.067069261 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.071303666 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.066611106 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.072123313 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.071656805 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.075867414 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.071900477 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.074103133 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.06622663 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.075089353 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.0741528 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.074978653 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.066405437 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.079522983 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.066679688 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.073177548 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.066807321 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.066827612 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.065956983 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.072093836 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.066494101 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.07099434 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.075307536 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.065859939 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.071382857 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.079761207 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.066461753 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.073878001 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.066074164 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.066619252 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.077989368 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.076728108 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.066542879 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.071113456 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.06602486 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.072206836 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.066195224 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.066409398 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.066373456 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.066561817 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.070863262 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.06666913 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.070745383 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.072079243 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.078723873 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.066202726 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.07129884 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.070973349 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.066681678 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.073493592 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.066563427 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.066675529 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.066523854 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.080009234 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.071141698 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.06693601 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.072285871 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.070872112 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.074716089 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.065629954 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.075480513 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.072927231 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.070976366 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.072718869 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.065810195 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.077123519 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.07087698 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.07057249 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.065567848 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.066321126 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.065298824 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.066097207 seconds)
done (took 12.720498377 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.07048882 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.118017043 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.092770523 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.093855451 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.083315085 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.067882285 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.074620951 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.09184369 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.069528667 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.097339379 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.089472251 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.089470326 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.109762435 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.066345878 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.06716785 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.068802837 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.068965905 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.07898466 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.094635327 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.088869322 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.106223389 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.067247422 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.086718085 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.087748764 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.084252623 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.088779454 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.069421759 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.068656837 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.07026015 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.090620054 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.092273119 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.070600317 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.068639189 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.090447569 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.085076434 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.080512413 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.067969451 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.076193898 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.067952206 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.067360791 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.06883712 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.088311577 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.075692708 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.075896031 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.068153911 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.074942666 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.068961824 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.082861809 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.087672401 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.076226714 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.082992064 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.09108842 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.071148334 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.084394279 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.066662073 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.083084401 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.076199525 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.068059339 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.067958889 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.072493445 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.068059181 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.069870546 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.078625965 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.076039736 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.071712836 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.082213098 seconds)
  done (took 6.692869598 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.08474376 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.094683974 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.08404581 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.084005472 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.06697719 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.067712975 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.067811375 seconds)
  done (took 2.036021924 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.067629842 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.087731159 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.091297893 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.090993991 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.083754013 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.095044164 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.075926249 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.067691005 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.096425776 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.066926686 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.087871061 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.097976561 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.071303199 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.079221969 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.092667644 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.068102953 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.092037127 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.067778043 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.068225462 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.091772029 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.072287443 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.094324639 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.078929025 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.067883085 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.080268784 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.068632818 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.10057022 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.076296275 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.069255867 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.069325666 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.069113901 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.094603182 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.080216112 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.081818689 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.069256758 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.082807896 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.081457772 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.071222042 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.078758534 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.077142126 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.081097211 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.069237986 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.067177532 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.069352106 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.071206091 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.079320384 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.066874022 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.069317563 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.068777926 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.087304357 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.066693171 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.080481144 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.071615746 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.073259051 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.073569662 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.072690067 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.076064413 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.069812908 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.087060065 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.068835994 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.08491017 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.084118199 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.081254187 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.083974384 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.067687939 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.080507964 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.080945862 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.068873689 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.06989926 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.069703875 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.084247065 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.071552546 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.069854335 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.079689037 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.06758066 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.091770255 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.091885883 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.067652924 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.080821268 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.0687846 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.069808065 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.079623912 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.09181867 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.073552882 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.068994077 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.072109333 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070018848 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.070985836 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.067008836 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.071822349 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.069137749 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.073996683 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.06925531 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.071832891 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.070447296 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.083998262 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.067525657 seconds)
  done (took 8.931879664 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.070435496 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.068741869 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.070028919 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.068943137 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.068535948 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.068348964 seconds)
  done (took 1.93156998 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.091227242 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.068539149 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.080961779 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.068974586 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.10423984 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.083945691 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.083983324 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.077833899 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.082554082 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.080980478 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.084030573 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.087099274 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.088442225 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.070955511 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.083982226 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.07015563 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.083584388 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.072647699 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.080088239 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.071457822 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.081656217 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.070744143 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.071203 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.088237725 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.072594717 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.069868345 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.078040167 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.080692001 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.079731176 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.077954449 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.070835518 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.072175588 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.076653165 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.078471799 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.083892644 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.076157853 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.068432902 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.075073312 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.07118197 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.072046059 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.08643435 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.071047581 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.070864606 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.074963134 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.077881796 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.076264563 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.074727022 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.077335405 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.083282918 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.07732729 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.074974092 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.069372517 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.071882549 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.074599269 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.076536151 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.077588254 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.074464167 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.083441804 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.070671248 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.076265975 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.068506576 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.072509837 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.077738231 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.07175861 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.075729147 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.074829973 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.07671711 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.071199452 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.071688841 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.068602363 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.075676513 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.068560873 seconds)
  done (took 7.010169317 seconds)
done (took 28.105914038 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.514047804 seconds)
  done (took 1.98389369 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.62244433 seconds)
  done (took 2.11812771 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.547587993 seconds)
  done (took 8.042505836 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.40088556 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.472096167 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.746285052 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.134483632 seconds)
  done (took 3.285807932 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.697007638 seconds)
  done (took 2.205024257 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.235153523 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.226275519 seconds)
  done (took 1.974616807 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.347909472 seconds)
  done (took 1.844716404 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.061037221 seconds)
  done (took 2.559782784 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.237260166 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.160684172 seconds)
  done (took 1.901561088 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.445651018 seconds)
  done (took 1.947713163 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.231865547 seconds)
  done (took 5.735940438 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.216648115 seconds)
  done (took 1.759680375 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.233427854 seconds)
  done (took 1.740078192 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.730553997 seconds)
  done (took 3.238842568 seconds)
done (took 41.846608719 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.082977147 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.085287788 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.08515513 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.081360388 seconds)
  done (took 1.822844806 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.074888097 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.071224976 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.074900272 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.070873974 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.074796265 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.070954735 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.072490873 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.073506117 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.071003559 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.071348787 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.071278059 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.071048291 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.073805975 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.072405773 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.069472124 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.073879509 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.074575906 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.07099473 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.073568429 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.071465212 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.069005892 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.07376525 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.073585185 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.070101158 seconds)
  done (took 3.243063277 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.078193027 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.072970229 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.075620266 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.071995375 seconds)
  done (took 1.811644662 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.077578932 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.087744524 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.086481699 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.077462574 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.088915357 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.084264287 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.067498067 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.067153761 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.068674518 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.077288491 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.066896267 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.093001615 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.08684644 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.077476753 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.0792694 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.063809834 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.065792724 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.085292351 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.07778389 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.07794912 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.068593688 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.077318481 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.066509517 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.087033739 seconds)
  done (took 3.36600469 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.085741844 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.066392503 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.085397744 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.091732289 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.093111063 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.066538185 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.084500601 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.094140581 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.141561436 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.066327668 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.072480992 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.066573216 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.105134132 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.06633827 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.085612969 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.109334319 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.112583182 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.069961344 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.09883695 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.066794106 seconds)
  done (took 3.248969175 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.082949433 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.069494148 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.070651243 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.066081935 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.076213908 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.072795001 seconds)
  done (took 1.960866356 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.068625702 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.068039524 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.06759462 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.067235553 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.072407382 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.067507478 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.066347651 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.068403548 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.068320169 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.068063598 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.067005605 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.066615181 seconds)
  done (took 2.33544399 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.209345698 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.070049602 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.070806331 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.067257876 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.07507789 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.067207346 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.082437573 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.069276988 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.085346474 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.067040425 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.067567732 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.069406209 seconds)
  done (took 2.514440734 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190001199 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.074054183 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.219891327 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144129463 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101706782 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.108461097 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110645861 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107114621 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.131994422 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.096492175 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152920037 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158293348 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.103899635 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125411153 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.087142782 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.119490276 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143744437 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151912494 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099469795 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152541938 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133916338 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.118692608 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.139683283 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.096114649 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.100732231 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115592036 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.071324394 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.076592466 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157041768 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122114414 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1346458 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104277821 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.0891108 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169531442 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.155243127 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131067588 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140995802 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.081571465 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.117718202 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.126804579 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191085419 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.086817953 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150468482 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102584836 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.077721061 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121805281 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109549181 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.113237514 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.100660932 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.086369423 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.274266966 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171619195 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.126601849 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083471233 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115189529 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103624399 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.107960291 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.112582799 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167629579 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147675997 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117259886 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.069150293 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105770938 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140429656 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.123709814 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.103685339 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.117980068 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089096172 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12352161 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.146912226 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123687104 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13213984 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.111850443 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084441821 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11261064 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.129964335 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119537594 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158629754 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114334036 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.07102662 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114981801 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094538655 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078670713 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.141973445 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.073569311 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162539451 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.095550093 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.120455136 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.124492231 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104886393 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104409214 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148592287 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133152132 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.100491007 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.083461742 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099068416 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.114034344 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135860998 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.084061607 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.1033892 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109553726 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.077238103 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126669008 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.073369484 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111578326 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.092037219 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113175631 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1173174 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.076819234 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.261644271 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102289295 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.099369311 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122793906 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145878123 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.084643846 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.078008768 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.153913081 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11263052 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.099163799 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.133707571 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.146386208 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.116795221 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093465679 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.136575748 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162271873 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.086850819 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149795281 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098563151 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.080833617 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.101908767 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114600522 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.108258168 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.117831517 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078344313 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.112314138 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152860577 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.072184575 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.093228201 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122762007 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078673465 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.07768737 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100247028 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099413224 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.093490346 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.097685627 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.100159829 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129273112 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11389729 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099774818 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117236414 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.093432477 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.154947426 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.084994979 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.097748302 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.10025531 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.070961359 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.124703695 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144239767 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.076550515 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149489977 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.115545293 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110705116 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111531796 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080982518 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.129376635 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076148358 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.070097734 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.131251409 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.106223024 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103121161 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.290260637 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110575978 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.117547998 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.111385046 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123275349 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121655603 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.120650468 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102594148 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.085985593 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.108102308 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122341465 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.070895097 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.088375747 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.079674675 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098603792 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.090296425 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.081367176 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13025276 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115218929 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.10562627 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107832999 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092408057 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138621142 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.076780014 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117558496 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.115651211 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.091762371 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.143418599 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141464197 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122444348 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.096855319 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.128580322 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.071197957 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.073208715 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.086250214 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.11722184 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.081457452 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.080847533 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.107915258 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139491605 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118697802 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128606898 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116744504 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110850782 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.146580039 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.071573097 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.116229783 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135475534 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112000853 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.100078936 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088173527 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.093913765 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.132996 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098737413 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168759995 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107144157 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11590422 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144709824 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.096450688 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.075942761 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.098860545 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.273544392 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099615842 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134697967 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.095438501 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084097043 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102805023 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.075728591 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093306016 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117916452 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111036528 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127130203 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.106259677 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121143912 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075123265 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.106309458 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113787751 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11491533 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.082136255 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11083518 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155117131 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.093190448 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109880875 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141214746 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.076506068 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.133599003 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16112702 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134714119 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.08178618 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10046294 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.113083254 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.119706475 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111972761 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.130243432 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099957077 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.127816989 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105028571 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.08182799 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083411153 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.091908621 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.099123582 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.108799009 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.099856889 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.10682859 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.092240174 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124989894 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.098318713 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.104588438 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.110599045 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.096890095 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.092816109 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092571952 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161619429 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109271669 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157369146 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.094998003 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.134452449 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148165541 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.072536222 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.075886793 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.077110934 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128530914 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.228412068 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120400159 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.107607988 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110452909 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113851318 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130184728 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.092961737 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.069412909 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103262825 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124775462 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116800628 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.092485479 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.099748345 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1477427 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.113740402 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.076426796 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107470149 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110088897 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099483978 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16182539 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.07889403 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104721026 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075061496 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.077241945 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.119282788 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142054463 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.083882724 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.099360636 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112685573 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.105825812 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.119718442 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094463936 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.10661666 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.124621657 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137774276 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119470422 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.086651997 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105941955 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.121448185 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143643322 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099304075 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.096502045 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162791188 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14062693 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.148911979 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.084774679 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107569077 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107515103 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103324233 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126980766 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.081522587 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150261716 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078877488 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.125821582 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.096881074 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.086186513 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120869122 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.107086402 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.084309895 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.283691192 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111832703 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080313218 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078142523 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106488481 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11013821 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097520757 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.072554109 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129794876 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.071803088 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124410924 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.154534931 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.07728338 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098712266 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.091386858 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079333334 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.0988325 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.096932756 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082903942 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.095442642 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157605219 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.084405258 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136753367 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.125179208 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106145883 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.129027574 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099713959 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.63937258 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.077231647 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140693094 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10994946 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164437895 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.095202755 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110869722 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.104795963 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114653364 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133089314 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097521609 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.174075938 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.122249661 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.109737761 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.076884161 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097807028 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.098624812 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.085883928 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.102569346 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106823221 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107912455 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.090977862 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.109617698 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115383897 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.079717047 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.092603916 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143880066 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110271497 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13328021 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.13012184 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.08179749 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110251625 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125025668 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.077031885 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.262404369 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141782855 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10070628 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.096887119 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.080219589 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.096386681 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157393006 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.074412189 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146037012 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110499095 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.103615239 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105956488 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.105243532 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120317717 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098659318 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111952868 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089117613 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.104324578 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105986105 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.117504982 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.076755358 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.099525706 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105888754 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.093435048 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093619797 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.095610809 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140477751 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.070552676 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094473306 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109333867 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135136478 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15939491 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.101882262 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.081252063 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113032718 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11322179 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.106484734 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11228149 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.078960059 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.07900163 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.079911637 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.097561354 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.119662156 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.106481546 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11357687 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103941289 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150361993 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.081620048 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.222396167 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.092739439 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.099618326 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.086448266 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.077820495 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092366111 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092521685 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099546217 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106713745 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159595322 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.090814202 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.08659746 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.088781714 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.073009938 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08056032 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.118720313 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104035596 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.257313007 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099825492 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.080237052 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.098846827 seconds)
  done (took 56.21838589 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.102239431 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.076850398 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.096739946 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.143288707 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.120511761 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.198646043 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.150237682 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.187668817 seconds)
  done (took 2.691359268 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.068299998 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.093575924 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.101228337 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.082059902 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.066910112 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.068426899 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.227360494 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.08064386 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.066484966 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.090529299 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.076769544 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.068701199 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.452482498 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.06628846 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.067351477 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.076259831 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.067411103 seconds)
  done (took 3.426947271 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.373495162 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.602141844 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.35674283 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.075850872 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.84610112 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.091540865 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.14188412 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.138801969 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.080730091 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.532198179 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.370660967 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.131971692 seconds)
  done (took 18.361028558 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.081004941 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.075214946 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.089493189 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.089197927 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.077523402 seconds)
  done (took 2.030102352 seconds)
done (took 104.557243989 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.080443997 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.537240893 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.068710036 seconds)
  done (took 2.250219305 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.090498756 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.088286886 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.087960803 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.085727774 seconds)
  done (took 1.97910591 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.074119488 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.076485952 seconds)
  done (took 1.769175315 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.228859278 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.173389371 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.096427558 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.082941382 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.079873129 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.080410586 seconds)
  done (took 1.864318572 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.072460018 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.071899827 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.072277178 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.07636795 seconds)
  done (took 1.909586459 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.067781445 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.066337459 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.071129751 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.071008127 seconds)
  done (took 1.893493731 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.083499988 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.084375416 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.07924355 seconds)
  done (took 1.864072567 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.100914179 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.09381483 seconds)
  done (took 1.812861987 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.080727172 seconds)
  done (took 1.699997314 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.089484115 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.099277302 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.130752129 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.113654682 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.138179369 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.117689062 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.084060527 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.088485636 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.07837172 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.085473094 seconds)
  done (took 2.64360183 seconds)
done (took 21.879939004 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.077972544 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.368329871 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.359043459 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.090302193 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.672362695 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.356863739 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.992632533 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.092021583 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.107530647 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068922339 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.086589975 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.649558229 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.987416667 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.33163513 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.97224204 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.33031497 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.652606309 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068818669 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.06786585 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068564609 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.978053192 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068736624 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068786278 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068997676 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.650851276 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.374542176 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.070417499 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.331236149 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.069407549 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.07350974 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.358540617 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.070289267 seconds)
  done (took 16.185176651 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.070194484 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.121126982 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.072434705 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.084988331 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.071003535 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.069963298 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.072213716 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.069446469 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.117456429 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.06951484 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.086691624 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.068357565 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.07371568 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.070073391 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.089538039 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068842237 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.071653344 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069989245 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.069432691 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.070217739 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.088332327 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068898952 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.070661918 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.06978767 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.070192748 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.082835567 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.071412042 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.069458269 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.06986696 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.074023939 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.074951005 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.071068765 seconds)
  done (took 4.070645557 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.115517134 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.125043533 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074041159 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.105779906 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.116894838 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.070744114 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.145421078 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.093462386 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.120423261 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.069320746 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.086710397 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.069226006 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.103779876 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.070512296 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.090601821 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.06977007 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.073027214 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.070100799 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.069317709 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.070727923 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.088906028 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.069405965 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.070226339 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069967797 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.070370965 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.08452266 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.07117127 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.069453944 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.06985806 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.074363654 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.076040137 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.071216155 seconds)
  done (took 4.334168431 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.070148411 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.07279761 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.080969046 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.081691864 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.067648438 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.070027883 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.071168224 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.067916898 seconds)
  done (took 2.222638354 seconds)
done (took 28.437771343 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.077689589 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.068076941 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.070999995 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.08666002 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.073719941 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.079233492 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.065224824 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.074880324 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.071545492 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.072391843 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.073313947 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.06762947 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.070363294 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.065422979 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.072797367 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.069111337 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.080716341 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.070666903 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.079865518 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.080730016 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.069431737 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.072592036 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.075133826 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.080305604 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.080397053 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.080593428 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.076182172 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.072883018 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.068195923 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.070889819 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.070382285 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.078427186 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.080848192 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.080930985 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.067605859 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.067283238 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.071878649 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.069492203 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.081514879 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.076277867 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.069448435 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.076863606 seconds)
  done (took 4.719403206 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.083767601 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.088462798 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.081662314 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.07940353 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.089599294 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.081734911 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.085527896 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.077626236 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.077788639 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.085947284 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.073897592 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.080855218 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.078560747 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.072654271 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.077294195 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.074508312 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.079761064 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.073898625 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.077106286 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.078368419 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.086706806 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.073228819 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.087377808 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.079446423 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.07493705 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.080282663 seconds)
  done (took 3.727997098 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.073006247 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.084740254 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.092048626 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.142328149 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.110634689 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.079794397 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.081356181 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.091450759 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.09619597 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.068327391 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.073072912 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.092271127 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.092495798 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.073990983 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.110373918 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.08380899 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.083510385 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.070125266 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.075046509 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.096468574 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.088585775 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.085162343 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.093573318 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.084761988 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.068056916 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.070537059 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.072869556 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.083840892 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.070849765 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.079161376 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.070988834 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.072292109 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.069540931 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.078746606 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.071111715 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.067395908 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.092101419 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.078906118 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.080630536 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.068631302 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.077403563 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.068974241 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.092880003 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.127729647 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.067345167 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.072034458 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.07142456 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.079460466 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.067441482 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.094841076 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.07995571 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.067945666 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.068666298 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.067571604 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.067155473 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.070271219 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.069418202 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.070384169 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.077595478 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.074625538 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.08915641 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.072877692 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.085045225 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.0675712 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.078356868 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.067285855 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.069442131 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.066968077 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.096078505 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.06964321 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.112094645 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.069053957 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.066574019 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.079192737 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.078459025 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.073946624 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.067614876 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.084969604 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.079311216 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.072062509 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.076116562 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.071089644 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.071533743 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.09800657 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.067923998 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.067335633 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.066677435 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.071297008 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.071223228 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.068442169 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.079609897 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.067451771 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.071781341 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.088294499 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.067789471 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.068712264 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.071453111 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.070418402 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.067525484 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.078419244 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.071669658 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.068978066 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.078252187 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.068646577 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.071198937 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.08083565 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.074700668 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.066982473 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.070025574 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.071564069 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.069277932 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.069601319 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.07133602 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.069828139 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.07483884 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.074766308 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.073690295 seconds)
  done (took 10.73271409 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.161960646 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.15452381 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.070309142 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.146972428 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.076489725 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.080077225 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.150363607 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.094530757 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.068395295 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.070218108 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.068293654 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.109262336 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.105002186 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.115800252 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.08091123 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.068962267 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.093518616 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.114434273 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.152981105 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.146906728 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.09050172 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.076301743 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.070935567 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.070031649 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.070239169 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.077974366 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.084961786 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.076926055 seconds)
  done (took 4.428814859 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.077658724 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.102732678 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.072913392 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.090632427 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.08739748 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.068684604 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.070090323 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.06987716 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.084377708 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.077557574 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.068888278 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.073756245 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.072523409 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.071918177 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.069080668 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.075141309 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.075789464 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.067912449 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.072396005 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.073994919 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.078655918 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.092739926 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.072609288 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.068769435 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.071095086 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.068577278 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.076925719 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.080445035 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.068786199 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.104976793 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.066592485 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.073637496 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.083001913 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.069242143 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.06815265 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.06889909 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.068928324 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.068765606 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.070151287 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.067401771 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.06725166 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.072509047 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.067584692 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.076621152 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.081133341 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.070537509 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.070712744 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.071471519 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.071723172 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.06654542 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.071502656 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.071986234 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.071935063 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.076434859 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.073026879 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.07143146 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.069843523 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.09464721 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.074687618 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.068198016 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.067683295 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.067912712 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.071191992 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.077838637 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.084152634 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.070747748 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.067532545 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.068565572 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.081371507 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.081763058 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.068149198 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.073111587 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.066267996 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.070853097 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.071082486 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.071233785 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.069397938 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.070994405 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.068452136 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.0687077 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.069510497 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.06924128 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.067821815 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.071319092 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.067328699 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.067632298 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.068941472 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.070094607 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.077119637 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.067725505 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.072445846 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.069778624 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.067555308 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.071954651 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.07691371 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.072121298 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.079209555 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.07947985 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.068939611 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.067494977 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.081914541 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.071377299 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.068129719 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.073952237 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.073248308 seconds)
  done (took 9.369454706 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.090128314 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.068870662 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.084807693 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.09097092 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.078001386 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.074748011 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.078485237 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.068373809 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.08470082 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.073017602 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.076326471 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.067245326 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.079588204 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.078739993 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.069073927 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.079371176 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.071679788 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.085554962 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.082923995 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.067413606 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.077793078 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.080611858 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.080729512 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.083314827 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.082113687 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.083202434 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.080295062 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.078006553 seconds)
  done (took 3.885106266 seconds)
done (took 38.494893039 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.728799727 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.879638352 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.707403811 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.907151991 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.884996102 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.725594155 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.899981672 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.703665788 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.893523213 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.748554881 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.940332031 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 5.223646894 seconds)
done (took 65.029564296 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.7509767 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.863887372 seconds)
    (2/2) benchmarking "String"...
    done (took 1.958530476 seconds)
  done (took 5.468425356 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.896537705 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.378916315 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.938666808 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.705087245 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.71258335 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.958652964 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.466582539 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.145701566 seconds)
  done (took 29.953975877 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.885054409 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.928236039 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.395769349 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.429411572 seconds)
  done (took 15.324934688 seconds)
done (took 62.129594085 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.732001699 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.720721863 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.71412659 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.707208024 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.7962518 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.71606754 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 7.142728769 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.718973003 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.706538426 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.717539373 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.709860945 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.136585807 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.72125298 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 7.102462291 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.709914392 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.708507015 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.783538029 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.256050388 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.864129255 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.726321752 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.708131444 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.72147312 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.713594137 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.70939394 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.756419563 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.707951161 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.117465766 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.715882212 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.549938078 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.712581434 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.766977163 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.269693571 seconds)
  done (took 202.488069923 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.706704596 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.725624498 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.820559855 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.739382996 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.141306402 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.8996522 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.805495735 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.197128585 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.71292132 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.735919816 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.923999345 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.711168309 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.95157877 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.656377952 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.743744048 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.731614079 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.951965636 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.962444994 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.750202539 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.852654369 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.711412758 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.809596903 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.742094148 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.917067022 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.719016146 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.71875656 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.729451825 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.721836063 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.896005491 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.919114333 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.721785815 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.754279563 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.913339852 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.577903381 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.716823441 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.73685069 seconds)
  done (took 167.676532369 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.892329723 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.710313007 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.708210541 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.709658735 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.715666107 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.710363059 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.83138518 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.833754619 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.376931824 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.331272889 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.764378685 seconds)
    (11/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.707965779 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.477951025 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.711061878 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.773849434 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.721327892 seconds)
    (16/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.711354372 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.70952647 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.724274101 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.734691231 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.711286203 seconds)
    (21/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.708614101 seconds)
    (22/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.711117529 seconds)
    (23/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.830539708 seconds)
    (24/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.725670745 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.721267108 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.710653306 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.71472176 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.095920936 seconds)
    (29/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.70884994 seconds)
    (30/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.707950075 seconds)
    (31/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.873004814 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.713727297 seconds)
    (33/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.714841861 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.95025621 seconds)
    (35/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.711034971 seconds)
    (36/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.710793837 seconds)
    (37/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.53271771 seconds)
    (38/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.226152162 seconds)
    (39/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.79059874 seconds)
    (40/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.712014001 seconds)
    (41/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.71474385 seconds)
    (42/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.709500543 seconds)
    (43/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.927941283 seconds)
    (44/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.709472528 seconds)
    (45/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.710182793 seconds)
    (46/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.71003172 seconds)
    (47/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.71000511 seconds)
    (48/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.82356183 seconds)
    (49/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.713868995 seconds)
    (50/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.831933749 seconds)
    (51/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.712855708 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.187717077 seconds)
    (53/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.710718879 seconds)
    (54/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.71144729 seconds)
    (55/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.127166724 seconds)
    (56/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.298259139 seconds)
    (57/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.71278205 seconds)
    (58/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.712361438 seconds)
    (59/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.711002512 seconds)
    (60/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.711138734 seconds)
    (61/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.71579879 seconds)
    (62/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.158765657 seconds)
    (63/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.782793063 seconds)
    (64/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.712202852 seconds)
    (65/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.710782756 seconds)
    (66/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.715612697 seconds)
    (67/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.710476982 seconds)
    (68/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.95960184 seconds)
    (69/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.713268501 seconds)
    (70/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.816847183 seconds)
    (71/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.726823955 seconds)
    (72/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.848286112 seconds)
    (73/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.833083998 seconds)
    (74/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.715061975 seconds)
    (75/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.776040346 seconds)
    (76/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.802983895 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.712967726 seconds)
    (78/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.71030104 seconds)
    (79/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.710801358 seconds)
    (80/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.711601383 seconds)
    (81/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.790265671 seconds)
    (82/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.711194227 seconds)
    (83/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.793164915 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.722038588 seconds)
    (85/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.712427261 seconds)
    (86/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.765876611 seconds)
    (87/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.712436033 seconds)
    (88/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.780024472 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.712329726 seconds)
    (90/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.545857443 seconds)
    (91/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.714931343 seconds)
    (92/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.710664047 seconds)
    (93/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.951808463 seconds)
    (94/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.775224402 seconds)
    (95/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.712443501 seconds)
    (96/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.71334855 seconds)
    (97/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.712931247 seconds)
    (98/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.796740305 seconds)
    (99/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.836025882 seconds)
    (100/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.430731288 seconds)
    (101/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.715687774 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.088575597 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.790776334 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.714258554 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.832194757 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.715066447 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.791882076 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.719449958 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.7147296 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.747196745 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.713541387 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.726248096 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.715524756 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.085759432 seconds)
  done (took 393.286720004 seconds)
done (took 767.046422919 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.324548188 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.294572845 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.385872021 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.312036089 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.285716586 seconds)
  done (took 13.256345086 seconds)
done (took 14.908802891 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.789072489 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.796319241 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.73191377 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.794310448 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.728254659 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.794757696 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.777010928 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.734604072 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.761954683 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.73577515 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.764031034 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.735880284 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.72150186 seconds)
  done (took 24.519670354 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.943247434 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.944896835 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.781866622 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.947452518 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.752745207 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.936003553 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.866581872 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.860716012 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.857649 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.724890371 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.723919211 seconds)
  done (took 21.994785313 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.937876707 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.958906807 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.786132348 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.940167453 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.757472766 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.947464678 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.869173418 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.857650718 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.855751177 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.72641878 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.723053211 seconds)
  done (took 22.015261107 seconds)
done (took 70.182117568 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.71854182 seconds)
  done (took 3.37383319 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.739017277 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.892592248 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.719900351 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.719417498 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.718489768 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.71809491 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.719151005 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.719806577 seconds)
  done (took 15.603493077 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.718016396 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.7158221 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.718079361 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.717724578 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.716536184 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.717975746 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.718218724 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.718070319 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.718221949 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.718303628 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.718024981 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.717106137 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.717798729 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.71771792 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.718809386 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.718131361 seconds)
  done (took 29.141633803 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.721099333 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.717268835 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.718173332 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.719855193 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.718343966 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.718862599 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.719353358 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.719806836 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.718865708 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.71864336 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.718986589 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.719178027 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.720413286 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.721510758 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.721452761 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.721439534 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.721092241 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.721387642 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.725366451 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.720998225 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.720090668 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.721049336 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.721446552 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.720988731 seconds)
  done (took 42.945357308 seconds)
done (took 92.719368861 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.440000067 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.564185496 seconds)
  done (took 9.663107148 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.724434622 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.721008201 seconds)
  done (took 5.179882979 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.721213496 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.721007467 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.72102641 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.721810726 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.721709043 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.722135703 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.720698209 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.722071089 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.722324537 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.722217341 seconds)
  done (took 18.875458622 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.723685568 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.722681783 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.721562607 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.722069142 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.72289325 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.723022747 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.722755244 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.722519041 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.723099848 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.721997674 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.722709695 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.724176423 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.723091598 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.722538544 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.722710791 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.722433581 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.723863036 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.725874661 seconds)
  done (took 32.675610911 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.724332561 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.723338207 seconds)
  done (took 5.109781975 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.724099775 seconds)
    (2/7) benchmarking "second"...
    done (took 1.724962155 seconds)
    (3/7) benchmarking "month"...
    done (took 1.725752383 seconds)
    (4/7) benchmarking "year"...
    done (took 1.724823611 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.724917641 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.724731407 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.724412597 seconds)
  done (took 13.735283244 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.725844852 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.879522697 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.936977832 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.336801689 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.726221548 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.7282919 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.654828513 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.726707814 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.72930345 seconds)
  done (took 19.108261151 seconds)
done (took 106.006133283 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.585787712 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.72561722 seconds)
  (3/8) benchmarking "parseint"...
  done (took 2.99845128 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.78226884 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.790734264 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.016746514 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.731814525 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.003277498 seconds)
done (took 42.296554171 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.760361151 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 3.481433611 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 3.530917202 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.760935606 seconds)
  done (took 15.435810825 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.728049005 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.228855894 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.749247076 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.558250148 seconds)
  done (took 21.935238169 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.08748417 seconds)
    (2/2) benchmarking "read"...
    done (took 2.073850254 seconds)
  done (took 5.830818317 seconds)
done (took 51.625081009 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.727155 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.728937332 seconds)
    (3/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.728017329 seconds)
    (4/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.728397293 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.728553476 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.726820682 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.72809799 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.727648794 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.728023632 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.72892564 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.728103186 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.727849878 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.727620962 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.728318743 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.729069714 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.729042333 seconds)
    (17/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.728901815 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.728388798 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.729015002 seconds)
    (20/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.729052194 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.728743952 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.729853839 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.728393654 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.729125227 seconds)
  done (took 43.149394986 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.729444479 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.730875011 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.72839112 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.729018929 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.728893454 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.729579882 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.729393249 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.730906342 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.729856398 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.73071019 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.728357467 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.730993234 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.728962784 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.729936405 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.729549056 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.730204732 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.729655118 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.730600755 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.729979178 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.729960399 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.730243091 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.729225884 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.730549532 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.731166481 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.73153454 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.730639669 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.731710347 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.730637494 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.731539213 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.730923168 seconds)
  done (took 53.571211289 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.73094001 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.730761461 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.730643086 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.73112941 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.729792724 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.730735149 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.731499161 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.729984807 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.730980788 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.730739056 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.730472863 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.731119453 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.731746335 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.730746321 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.731479935 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.731287272 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.73236304 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.731250379 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.730445147 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.731962041 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.731408954 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.73120951 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.730910287 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.732205807 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.730083594 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.730996074 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.731907447 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.730968457 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.731886754 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.732023313 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.731677091 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.732526829 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.732056044 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.732573281 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.73276598 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.730894975 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.731791033 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.731996241 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.731439323 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.732436343 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.732453111 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.732278568 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.732609625 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.732988172 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.733011258 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.7332673 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.733173453 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.733810546 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.733143856 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.732793517 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.732816143 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.734285876 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.733435134 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.73300743 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.732495372 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.732743183 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.733578113 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.73251111 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.73249696 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.733218312 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.733903723 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.73389021 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.733943818 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.733765882 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.73320433 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.733992594 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.733135588 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.733371969 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.7332845 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.732901167 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.733193144 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.733797794 seconds)
  done (took 126.3881146 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.733038105 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.734676942 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.733759263 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.734568977 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.733568617 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.73391401 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.734875512 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.733536044 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.734162872 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.734510622 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.734345046 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.734652858 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.734345382 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.734046601 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.735060997 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.734753372 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.734097652 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.735242455 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.734502759 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.735043941 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.734466987 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.734976304 seconds)
  done (took 39.828885353 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.734597636 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.734793582 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.734292494 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.734882761 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.735847982 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.734808134 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.734065404 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.735663731 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.735243521 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.734683535 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.735730195 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.736514724 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.735590551 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.735549715 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.736777 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.73568474 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.73621375 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.735902028 seconds)
  done (took 32.911607164 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.736573756 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.737032331 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.735981966 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.736638466 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.737807965 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.736172195 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.736901559 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.736190547 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.735654435 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.735515157 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.73604782 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.736739694 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.736367836 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.736530284 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.73732899 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.736177887 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.736973841 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.736918835 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.735907903 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.736940764 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.737719538 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.737064603 seconds)
  done (took 39.880415376 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.736391755 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.737209228 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.737280269 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.73633367 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.736094875 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.736194188 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.737286283 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.737469949 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.737320256 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.737426008 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.738034397 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.737380696 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.737731947 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.737747457 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.738355726 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.738083566 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.737683326 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.737995842 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.737585219 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.736442583 seconds)
  done (took 36.42138138 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.740896136 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.740726886 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.740058398 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.741519211 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.741540859 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.740697108 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.740515446 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.740612909 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.741267143 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.740622246 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.741621229 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.740939675 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.740938176 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.742578167 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.743635351 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.742967736 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.743172439 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.743093645 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.743613154 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.741202592 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.741562789 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.740119356 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.741234186 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.740932164 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.740960101 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.741104423 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.741153661 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.744420123 seconds)
  done (took 50.439358856 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.739037681 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.739038739 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.739181492 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.739206203 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.739132162 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.739306751 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.739236403 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.739536383 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.739786004 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.740496877 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.740056668 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.738794175 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.738944645 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.739875796 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.740014467 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.740049749 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.74092184 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.740271992 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.740337691 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.739868603 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.739425715 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.740050365 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.740704554 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.74023318 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.740283734 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.740465198 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.740989141 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.740213112 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.741028859 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.740171891 seconds)
  done (took 53.874950219 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.761825944 seconds)
    (2/2) benchmarking "in"...
    done (took 1.761556783 seconds)
  done (took 5.201717274 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.740586874 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.740704252 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.73915074 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.741581825 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.74241459 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.741526747 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.742841573 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.741327798 seconds)
  done (took 15.608314549 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.739229117 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.73950296 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.737765982 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.737870512 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.738931366 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.739006075 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.744981861 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.738871767 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.742206236 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.739320974 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.746730063 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.747263974 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.741883252 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.741284925 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.740082344 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.741507541 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.738637153 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.738160115 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.739259322 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.739425565 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.739384806 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.74215797 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.742791961 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.738591216 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.741208827 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.751167639 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.743740899 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.740343421 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.74166727 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.744402854 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.741384879 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.739620517 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.738527909 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.740260903 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.738997225 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.741121741 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.748114249 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.742391306 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.746078927 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.740765572 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.739970052 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.740087464 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.743697728 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.742612071 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.742476466 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.740340012 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.74161077 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.738886404 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.740779603 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.745232955 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.749028356 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.741255562 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.74152304 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.744729792 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.744539543 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.748088311 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.740957573 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.744499531 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.751597695 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.752291563 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.753492925 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.74930891 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.744477071 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.741354462 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.751447542 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.7681958 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.749687804 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.741756445 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.74208084 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.741902561 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.749040539 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.753917688 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.753318471 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.741622457 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.741999627 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.741586627 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.743116013 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.741496013 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.749615734 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.744892023 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.741431778 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.741327352 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.752511468 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.766752458 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.743384108 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.743093653 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.742702686 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.742169945 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.74415332 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.754991584 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.742694977 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.740930948 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.7433052 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.7435024 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.743888568 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.743196034 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.74261153 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.746038681 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.742940337 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.743223775 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.74379082 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.746897744 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.755346243 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.743754868 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.743641385 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.750706653 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.743351521 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.743948063 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.75145514 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.742492303 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.74406602 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.745195165 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.751462023 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.7437008 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.747732446 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.754401679 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.74340867 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.747604264 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.743969212 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.744331714 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.753765175 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.77268353 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.744413807 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.743076519 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.74941466 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.756084275 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.74446198 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.748185243 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.743378928 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.743972761 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.744278159 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.746918976 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.743806331 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.746664147 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.745518932 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.74676595 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.745675649 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.744989473 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.744128945 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.746878208 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.746339342 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.746765662 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.74738598 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.747925256 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.745093457 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.747636946 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.751438074 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.745605538 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.747661167 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.74688217 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.745577309 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.745369691 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.748860589 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.746509734 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.746823168 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.745063995 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.74742342 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.74473667 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.745531114 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.746074582 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.746804039 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.748118505 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.751110125 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.746315496 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.752133252 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.747866159 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.74586843 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.746214063 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.746474733 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.747124916 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.746384167 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.746525133 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.7512813 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.75574415 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.747223235 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.746405749 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.750459916 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.747701439 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.74759936 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.746761564 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.750543284 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.757455676 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.746836239 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.75497185 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.748589372 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.746619857 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.746892427 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.749231813 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.749434693 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.748083744 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.750484512 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.755355254 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.760582748 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.758264267 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.749536582 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.752472181 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.748901454 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.752142701 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.751853376 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.748572963 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.746655171 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.747932445 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.74908037 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.74867396 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.750288383 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.748958322 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.74787205 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.748073664 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.747882018 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.74806988 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.74793542 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.750490128 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.750936381 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.748033578 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.748225591 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.749116701 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.750594125 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.749582733 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.747708602 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.750046848 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.749139145 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.750240136 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.754804871 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.74911384 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.751044279 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.751219291 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.751382394 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.748850241 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.749536805 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.752116754 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.750835771 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.756998772 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.749898983 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.752990646 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.757373439 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.749853273 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.749622194 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.754117488 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.749910072 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.750218225 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.753555921 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.757742956 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.749738334 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.749888897 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.749885573 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.752084575 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.750882963 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.757134481 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.749283541 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.75149977 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.750724626 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.752537018 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.750191357 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.753119076 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.752536166 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.753404186 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.75347759 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.750263311 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.750537364 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.75274981 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.749901309 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.74998097 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.750203869 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.754153811 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.759278192 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.755911614 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.752082566 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.752861856 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.752313898 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.755436806 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.752975966 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.751559091 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.752910375 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.762586736 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.759158966 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.758032367 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.754080526 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.750876312 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.758036031 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.753345368 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.757188823 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.753959736 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.753691743 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.75460106 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.754919662 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.751669802 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.754543533 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.752239461 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.755752786 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.754390487 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.757267338 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.751506449 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.752957392 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.75187291 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.752999102 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.751489377 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.752998352 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.752054612 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.755725681 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.755810387 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.75326135 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.753747822 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.759198065 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.754523799 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.755420636 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.753782415 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.75362677 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.751999652 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.754329546 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.753301624 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.756405198 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.764800235 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.757987615 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.765734094 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.756101465 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.761507948 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.752869424 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.757762764 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.760964838 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.752812433 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.753308278 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.753892884 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.754657225 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.761115125 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.753551716 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.755042747 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.757435337 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.75466718 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.754117862 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.753201713 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.753588153 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.753697474 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.75436081 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.763145267 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.755548316 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.759912722 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.75765894 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.753430951 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.755886286 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.754755576 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.752900487 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.759628434 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.754604978 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.756869282 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.755759299 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.756025018 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.754750385 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.755547353 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.755535393 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.754682197 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.754333879 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.763840301 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.757321223 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.759584171 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.755367742 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.764635651 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.755256604 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.763619848 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.756719414 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.756965329 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.755582162 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.754481679 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.757167765 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.755676722 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.758136184 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.755280744 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.75730873 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.759808052 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.756053591 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.759015206 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.7586493 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.757075178 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.758309125 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.767075383 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.781335548 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.759059964 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.760796105 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.75574125 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.758334102 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.761053933 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.756021023 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.75694382 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.759934533 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.768619284 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.765658197 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.758907838 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.756755135 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.759096581 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.757669885 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.75749562 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.756766853 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.758434823 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.756975802 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.758559516 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.757814313 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.761721088 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.757384549 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.758840104 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.758940384 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.759205493 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.768447154 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.75773496 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.760602676 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.758512553 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.757784171 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.759957173 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.760104089 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.757992765 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.759293572 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.75787627 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.759010567 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.764615129 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.765601237 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.761237186 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.758509596 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.757212952 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.759510859 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.75933059 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.757348938 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.759001982 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.759088577 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.760893108 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.758299363 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.758940063 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.757813213 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.75798714 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.758846822 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.758087461 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.762706896 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.76852537 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.760406162 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.758789466 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.759688464 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.758233431 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.75834815 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.760067826 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.767233814 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.76269302 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.770719377 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.768794438 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.763082046 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.760383917 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.762227071 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.768383 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.758958854 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.761580567 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.759246452 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.762845632 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.759825786 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.76550729 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.759275535 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.767139145 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.760214544 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.760045622 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.767685511 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.762897003 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.76017402 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.76270554 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.767087928 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.761222475 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.759838844 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.760039511 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.761657809 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.768447351 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.763746464 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.761592048 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.763431066 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.758928444 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.763273715 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.765192376 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.760267766 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.762866379 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.760890465 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.762782189 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.761979578 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.760092073 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.760790357 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.760020914 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.761191557 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.764590648 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.76873716 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.760579475 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.765228795 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.763082318 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.763890886 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.761613955 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.760555682 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.761188671 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.760777616 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.760227584 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.761280085 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.762776955 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.765585597 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.761822441 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.762195521 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.766585921 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.761845051 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.76502316 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.773432495 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.769386933 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.761166455 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.762146574 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.762597949 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.766549037 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.763474583 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.76338112 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.764504935 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.767499734 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.762766187 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.761948863 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.761335819 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.766700274 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.780413922 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.763013031 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.764981406 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.764166086 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.766971615 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.762523009 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.762923859 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.762884713 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.765847016 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.767060595 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.771231167 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.762911701 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.770305883 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.76465908 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.764182245 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.767882749 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.767320992 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.771790731 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.766129623 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.763794139 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.762558096 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.768602075 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.780996303 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.763689181 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.774261874 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.79558945 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.766364388 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.764640434 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.762576291 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.764939038 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.763166808 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.766170844 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.764167685 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.764478984 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.763799764 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.763671602 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.764214947 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.772130001 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.767173365 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.76357349 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.763787702 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.764904242 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.766054965 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.765408722 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.765619434 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.765179976 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.765726265 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.765145114 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.765333564 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.768583902 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.777747144 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.776803865 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.764788787 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.764756671 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.764643514 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.770317569 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.76808357 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.77545092 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.772622512 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.766222625 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.765134828 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.768712141 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.765869542 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.76611501 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.768764247 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.766867222 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.767395154 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.765074796 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.778523548 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.775544137 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.770730686 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.766831676 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.766601429 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.766510911 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.768565308 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.766046561 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.765781544 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.768869143 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.766089802 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.770623426 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.766238079 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.766368791 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.770313248 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.774400949 seconds)
  done (took 1047.697367749 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.766724381 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.766078862 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.765717966 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.767102927 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.766257469 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.7662416 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.767841008 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.767073032 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.766878822 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.766521396 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.766493668 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.766822781 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.767604587 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.766971418 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.767502002 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.766476777 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.767264335 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.767131852 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.767405352 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.766881347 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.76796922 seconds)
  done (took 38.80899161 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.766179806 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.768118103 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.767312633 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.767746638 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.767430749 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.768074144 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.767863368 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.768585667 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.768754358 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.768587204 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.768161522 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.768329151 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.768794376 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.767357728 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.768780297 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.768783114 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.768775039 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.768783941 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.767247562 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.768640653 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.767198082 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.769200361 seconds)
  done (took 40.604838876 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.768676068 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.769033673 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.769477893 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.767727884 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.768497755 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.768433174 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.769363072 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.769811324 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.768443662 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.769265009 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.769605161 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.770342257 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.77693421 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.778136791 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.771923479 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.769719866 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.914565298 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.769644061 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.768982606 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.770385146 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.770186502 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.775448864 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.7696411 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.770921988 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.768264151 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.770831949 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.770167442 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.769653015 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.770142241 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.771306883 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.774684004 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.769415466 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.770336856 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.771593721 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.770075809 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.77100872 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.772803508 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.770356847 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.767534822 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.769495924 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.779284722 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.79418816 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.769632898 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.776949961 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.769421637 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.768925343 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.774241759 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.79544885 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.769427358 seconds)
  done (took 88.667921095 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.769649281 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.769854217 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.770268975 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.770360604 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.767923446 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.768706303 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.769505731 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.770132963 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.771934743 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.767936236 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.769422377 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.76967204 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.76852891 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.768366393 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.769086709 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.768851582 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.767561994 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.767584262 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.767943806 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.769306842 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.768566035 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.769433561 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.769800017 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.76955657 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.769141862 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.769168239 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.768081549 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.769076623 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.769313678 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.769705497 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.768761456 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.763812586 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.764071169 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.765603537 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.76468147 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.76384184 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.764114878 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.763506232 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.762685452 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.762447691 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.762543896 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.763313072 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.764004878 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.762361515 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.761586373 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.76321256 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.762630469 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.761625607 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.762137565 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.760579536 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.761027213 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.761795247 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.761692603 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.761903516 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.760638699 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.76204123 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.76148141 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.762029644 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.760905672 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.762061991 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.761414269 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.760464658 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.760467116 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.76066168 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.76185879 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.76163617 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.761576691 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.761664622 seconds)
  done (took 121.756269814 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.761361085 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.761788765 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.761273464 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.762635624 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.761365323 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.762786796 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.762906537 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.763174294 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.762025122 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.762966668 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.762769122 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.761831168 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.762913462 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.762850883 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.761167995 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.762825023 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.762174052 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.763332587 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.763504243 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.761583432 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.761153669 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.762247215 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.762360013 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.763134805 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.763756629 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.76359515 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.764093061 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.762685873 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.763299865 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.762647182 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.764380558 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.763103777 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.764259404 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.763533926 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.763727974 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.764038318 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.76213829 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.76367945 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.763280609 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.763279143 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.762532922 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.764453166 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.762690575 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.763327443 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.763241907 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.763296951 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.763878823 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.764002517 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.763455135 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.763033798 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.763390875 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.762999362 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.763266201 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.762977166 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.762769343 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.762330726 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.763828883 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.762216989 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.763711548 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.763130834 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.764048967 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.761894138 seconds)
  done (took 111.002517386 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.762806839 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.763243124 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.761132686 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.762088167 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.760623311 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.762859424 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.764095629 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.758202704 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.759393373 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.759015871 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.758615405 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.759342407 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.760150314 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.755861834 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.755624922 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.756046918 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.755325295 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.755678497 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.755898792 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.75409995 seconds)
  done (took 36.880654442 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.754963384 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.755380834 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.75534574 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.754846568 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.754241925 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.755638927 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.755429068 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.756037922 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.755860842 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.755414122 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.756368012 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.754891308 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.754911752 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.755108366 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.75469173 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.761649697 seconds)
  done (took 29.783209969 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.754737401 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.755311242 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.756521489 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.75522087 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.755472071 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.755315869 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.75682253 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.755638958 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.756788826 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.754267923 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.755017465 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.754328572 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.756295461 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.754604347 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.755221987 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.756149498 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.754079648 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.75553805 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.754921864 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.7550218 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.759289477 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.755377314 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.755437418 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.755924855 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.75466446 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.755699182 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.75559944 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.755738712 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.755140372 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.755646797 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.754840534 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.756995962 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.754632096 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.756306163 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.756572273 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.755963587 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.755863022 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.757070511 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.756986942 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.755708369 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.756171702 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.756437671 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.756862016 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.755942941 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.756059348 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.756056333 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.754316522 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.755625251 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.75660935 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.754551666 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.754692185 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.753975301 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.756585106 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.753963186 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.756402712 seconds)
  done (took 98.255735219 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.752082912 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.753489638 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.753686179 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.753704071 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.752885589 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.752379623 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.751603026 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.751876382 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.753362038 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.753047325 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.752573306 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.751897836 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.752855924 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.752395789 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.752353121 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.752744331 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.751709089 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.75221351 seconds)
  done (took 33.238145261 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.752943535 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.752954931 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.753451176 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.751939408 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.750957544 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.751154972 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.755003803 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.749766318 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.749335593 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.750121786 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.74881218 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.748494701 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.749445709 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.748529743 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.7501947 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.748060682 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.748656977 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.749099148 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.748710425 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.748885991 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.748910391 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.749021129 seconds)
  done (took 40.19328732 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.749171298 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.748037349 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.763889312 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.769933538 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.770306048 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.782672982 seconds)
  done (took 12.268095731 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.749386383 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.748549661 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.748951737 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.749772556 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.749721327 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.749719892 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.750454491 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.749034517 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.748888748 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.749828688 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.749359651 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.750491085 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.750036279 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.747925969 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.74818531 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.748890095 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.74801298 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.749355644 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.749473207 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.74818962 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.748717794 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.74701604 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.748431148 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.749949746 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.747714825 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.749515483 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.748188944 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.748044473 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.74756812 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.749190957 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.747844695 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.748288038 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.747399206 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.747960315 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.747890438 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.748024686 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.747906917 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.747327717 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.747767526 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.748308894 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.747785466 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.746018913 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.747453878 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.746980769 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.746950271 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.747103653 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.747422606 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.746532644 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.746582282 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.747608099 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.747125927 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.746789519 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.748167469 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.747627748 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.747443227 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.747690596 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.747040238 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.747729308 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.748350883 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.749260031 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.746857912 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.746712416 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.747150234 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.74789399 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.74655277 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.746280633 seconds)
  done (took 117.063591781 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.747403536 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.746763867 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.748205809 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.744913638 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.74664237 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.745529019 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.746234539 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.745859917 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.747209497 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.745011151 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.746076968 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.744573213 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.745432307 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.744526924 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.744802869 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.744825116 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.745189136 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.746898477 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.746373102 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.748789229 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.745591667 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.745853068 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.747315196 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.745904524 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.745485787 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.748445282 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.744742285 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.744647886 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.743869647 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.743533227 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.744858355 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.746611421 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.744835998 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.744585062 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.743821164 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.744033867 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.745299724 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.744243712 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.743822214 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.744853183 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.744375787 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.744418848 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.744406316 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.743172597 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.744489975 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.743810069 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.743884167 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.744040857 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.74463066 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.743120547 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.744036794 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.744073902 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.743461804 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.744256004 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.744190139 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.74339639 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.741535361 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.742875982 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.742913033 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.743596237 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.744333828 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.74317724 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.743308825 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.743531631 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.74272459 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.743981885 seconds)
  done (took 116.843128788 seconds)
done (took 2432.008020965 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.756839651 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.762522039 seconds)
  done (took 15.197673404 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.906752254 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.857652047 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.741586017 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.781632609 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.743523035 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.768886791 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.763545078 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.742835183 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.743317703 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.742526215 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.742134785 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.929921375 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.747251424 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.743319878 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.741637696 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.836058107 seconds)
  done (took 50.213794659 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.747964529 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.747084582 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.756170078 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.748900703 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.745676118 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.75754468 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.777885378 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.749317686 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.779123975 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.757392175 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.813461224 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.756711692 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.745338589 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.793964943 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.759314145 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.759623559 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.835521692 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.822264496 seconds)
  done (took 33.532880502 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.821223852 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.758522228 seconds)
  done (took 10.264131825 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.757194166 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.798819199 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.830356253 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.740947979 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.745892884 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.754512494 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.769257385 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.796051266 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.768440754 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.783608638 seconds)
  done (took 69.425253146 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.750449776 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.747638599 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.744560911 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.744207187 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.742395504 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.746990962 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.744593554 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.741383249 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.408892735 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.780754391 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.752846647 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.749054011 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.744960854 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.746786067 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.743484663 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.766293868 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.855916177 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.741631848 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.74277965 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.749505197 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.745089868 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.803154071 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.75950657 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.748169881 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.774778686 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.407923377 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.753940217 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.752890596 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.866716915 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.745822069 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.745582496 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.931352439 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.747696547 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.211930979 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.0170062 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.751507187 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.758879182 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.754196019 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.742696784 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.858942214 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.745218292 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.751215616 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.698357649 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.994272031 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.841222716 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.790345432 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.04888983 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.760535162 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.743541332 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.772214451 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.749196665 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.74451667 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.757477299 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.261137271 seconds)
  done (took 125.961469841 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.745567319 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.086169718 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.906349967 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.739506462 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.024040151 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.948367668 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.743026485 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.786483629 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.743367429 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.968675565 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.990830523 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.8466883 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.741908078 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.744655651 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.740015263 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.740552813 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.896300883 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.81212388 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.745559021 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.742158338 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.769020668 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.981038921 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.868706588 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.745274083 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.77056328 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.94969548 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.862857039 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.842520934 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.532458257 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.741553238 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.802831269 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.744940148 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.74487649 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.742515342 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.901795475 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.851314059 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.822946103 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.745212876 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.74329189 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.743200389 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.40047243 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.941956756 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.839538866 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.872976628 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.994510121 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.946842154 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.520236774 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.743765467 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.474285433 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.910324973 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.969946036 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.971897887 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.862223696 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.745177218 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.076550437 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.743183859 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.743642573 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.991095284 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.963679714 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.838665078 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.747246937 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.742338917 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.742316246 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.983317148 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.745472741 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.837068331 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.749020221 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.74695485 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.840595437 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.842529633 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.974783837 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.960375919 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.77618543 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.087274277 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.242569056 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.988085582 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.807765356 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.99243975 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.74550723 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.742954129 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.823671866 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.579497828 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.996423681 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.984905243 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.987371606 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.777107015 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.460778775 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.742499613 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.969584337 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.965814996 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.005083121 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.99698796 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.979010091 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.051137253 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.742839435 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.744328119 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.036139636 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.867393269 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.748085304 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.085778898 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.9729649 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.276740797 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.770141042 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.044538507 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.872805661 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.746724271 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.369841704 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.744681843 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.972422739 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.783366363 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.746761509 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.74468501 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.962290687 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.736557953 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.745155031 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.399965219 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.804445757 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.749255665 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.976121262 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.748702288 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.011828135 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.746761884 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.977167873 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.834058256 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.774248261 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.918554874 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.995014538 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.748243732 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.984299178 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.988105397 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.860358079 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.967469326 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.450125756 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.747308802 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.029399899 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.74762402 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.747261071 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.915669903 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.747833665 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.889832993 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.748337791 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.038429086 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.769444299 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.97299337 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.748915033 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.000567735 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.777413759 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.795601344 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.750316548 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.871260497 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.749124171 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.579677746 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.902606464 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 7.167410815 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.746039391 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.308773682 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.74683035 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.892954288 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.971997066 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.767199688 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.817998229 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.409936694 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.746579322 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.826537302 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.770347939 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.133710136 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.747302669 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.99707326 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.7492805 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.749978325 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.746085876 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.981645984 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.92925635 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.747525371 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.747850982 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.649221588 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.750007075 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.750541929 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.930415151 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.124228101 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.747125071 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.951707204 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.750792599 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.874855052 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.750301138 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.817262246 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.079581408 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.748833842 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.748378978 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.750383896 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.747134389 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.74853059 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.956959341 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.772940849 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.240500698 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.882902736 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.021660404 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.056183358 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.988392449 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.790056788 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.751683843 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.001327504 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.751415207 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.810535374 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.750929 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.768299806 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.973917052 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.752978362 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.037261201 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.018317676 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.592408557 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.795586845 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.755421401 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.749690282 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.748072618 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.897449656 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.835178374 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.7524755 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.754226987 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.863068816 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.87425922 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.958272218 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.750492223 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.798756416 seconds)
  done (took 876.705871662 seconds)
done (took 1182.980021274 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.749153675 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.752473524 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.754019653 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.750847024 seconds)
  done (took 28.692882046 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.759688695 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.75135444 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.751440771 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.751128562 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.751328691 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.751271432 seconds)
  done (took 12.201320408 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.748616824 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.751868003 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.751164427 seconds)
  done (took 20.939303394 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.821154577 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.136978466 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.882385403 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.165070153 seconds)
  done (took 9.692131701 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.752157767 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.751082723 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.751641121 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.752184036 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.760553326 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.761533024 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.752958232 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.756373875 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.761675838 seconds)
  done (took 17.488280545 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.019658872 seconds)
done (took 94.720387516 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.760825815 seconds)
    (2/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.548806847 seconds)
    (3/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.769375118 seconds)
    (4/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.876509673 seconds)
    (5/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.108687013 seconds)
    (6/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.880310608 seconds)
    (7/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.752653934 seconds)
    (8/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.90175946 seconds)
    (9/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.772927879 seconds)
    (10/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.763007615 seconds)
    (11/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.884009567 seconds)
    (12/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.752514782 seconds)
    (13/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.794312234 seconds)
    (14/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 2.092287434 seconds)
    (15/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.51442566 seconds)
    (16/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.755410593 seconds)
    (17/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.162983988 seconds)
    (18/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.072453182 seconds)
    (19/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.772911747 seconds)
    (20/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.933648652 seconds)
    (21/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.07021404 seconds)
    (22/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.92136095 seconds)
    (23/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.755005777 seconds)
    (24/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.972303621 seconds)
    (25/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.75685813 seconds)
    (26/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.764749557 seconds)
    (27/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.050525521 seconds)
    (28/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.91562706 seconds)
    (29/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.888240971 seconds)
    (30/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.752069031 seconds)
    (31/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.065478299 seconds)
    (32/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.778953819 seconds)
    (33/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.184939286 seconds)
    (34/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.850945123 seconds)
    (35/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.274701242 seconds)
    (36/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.755012708 seconds)
    (37/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.754006328 seconds)
    (38/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.83633692 seconds)
    (39/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.843576755 seconds)
    (40/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.75710633 seconds)
    (41/309) benchmarking ("perf_sum", Float64, true)...
    done (took 2.143846839 seconds)
    (42/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.232082421 seconds)
    (43/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.828867874 seconds)
    (44/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.763996693 seconds)
    (45/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.907657675 seconds)
    (46/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.937208147 seconds)
    (47/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.698879195 seconds)
    (48/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.940540387 seconds)
    (49/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.129962472 seconds)
    (50/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.768096049 seconds)
    (51/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.872316158 seconds)
    (52/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.787311151 seconds)
    (53/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.14318519 seconds)
    (54/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.103338348 seconds)
    (55/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.770916432 seconds)
    (56/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 3.370657226 seconds)
    (57/309) benchmarking ("sort", Bool, false)...
    done (took 1.983505346 seconds)
    (58/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.084579843 seconds)
    (59/309) benchmarking ("sort", Int8, false)...
    done (took 4.635631351 seconds)
    (60/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.766885105 seconds)
    (61/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 4.064897024 seconds)
    (62/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.774707047 seconds)
    (63/309) benchmarking ("sort", Int64, false)...
    done (took 5.452800508 seconds)
    (64/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.765863523 seconds)
    (65/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 3.728898884 seconds)
    (66/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.019458745 seconds)
    (67/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.02095763 seconds)
    (68/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.899665289 seconds)
    (69/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.928551821 seconds)
    (70/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.784495268 seconds)
    (71/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.276133205 seconds)
    (72/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.847926872 seconds)
    (73/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.856701115 seconds)
    (74/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.97969698 seconds)
    (75/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.057524475 seconds)
    (76/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.097999247 seconds)
    (77/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.902017036 seconds)
    (78/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.850561561 seconds)
    (79/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 1.984078855 seconds)
    (80/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.767690308 seconds)
    (81/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 8.331426464 seconds)
    (82/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.977162207 seconds)
    (83/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.785064803 seconds)
    (84/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.897886945 seconds)
    (85/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.602622148 seconds)
    (86/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.770043165 seconds)
    (87/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.190892372 seconds)
    (88/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.690225109 seconds)
    (89/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.010512011 seconds)
    (90/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.084224675 seconds)
    (91/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 1.991888635 seconds)
    (92/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.769700354 seconds)
    (93/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.867178611 seconds)
    (94/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.962403429 seconds)
    (95/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.908549935 seconds)
    (96/309) benchmarking ("sort", Float32, false)...
    done (took 5.499574668 seconds)
    (97/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.886362586 seconds)
    (98/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.768641409 seconds)
    (99/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.719891894 seconds)
    (100/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.792722741 seconds)
    (101/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.825149647 seconds)
    (102/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.014024301 seconds)
    (103/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.850503246 seconds)
    (104/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.766522529 seconds)
    (105/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.010088435 seconds)
    (106/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.093961512 seconds)
    (107/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.790681277 seconds)
    (108/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.769048691 seconds)
    (109/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.918175311 seconds)
    (110/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.902543751 seconds)
    (111/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.087730644 seconds)
    (112/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.773248532 seconds)
    (113/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 8.234270732 seconds)
    (114/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 7.950062507 seconds)
    (115/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.517832703 seconds)
    (116/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.117143242 seconds)
    (117/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.798948011 seconds)
    (118/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 2.885474789 seconds)
    (119/309) benchmarking ("map", abs, Float32, true)...
    done (took 1.967755329 seconds)
    (120/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.456299134 seconds)
    (121/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.333849826 seconds)
    (122/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.877557016 seconds)
    (123/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.900398833 seconds)
    (124/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.767637635 seconds)
    (125/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.987389898 seconds)
    (126/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.778724678 seconds)
    (127/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.896133956 seconds)
    (128/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.2058157 seconds)
    (129/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.861619808 seconds)
    (130/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.982069989 seconds)
    (131/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.789407344 seconds)
    (132/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.056665011 seconds)
    (133/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.772204274 seconds)
    (134/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 8.334392741 seconds)
    (135/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.963733288 seconds)
    (136/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.886107955 seconds)
    (137/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.772843923 seconds)
    (138/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 2.558021534 seconds)
    (139/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.92966839 seconds)
    (140/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.163181753 seconds)
    (141/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.772214336 seconds)
    (142/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.155662366 seconds)
    (143/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.036362147 seconds)
    (144/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.803340762 seconds)
    (145/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.768765829 seconds)
    (146/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.118690309 seconds)
    (147/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.847189377 seconds)
    (148/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.444491385 seconds)
    (149/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.073084979 seconds)
    (150/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.115240624 seconds)
    (151/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.027635808 seconds)
    (152/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.962267239 seconds)
    (153/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.776333973 seconds)
    (154/309) benchmarking ("perf_sum", Int8, true)...
    done (took 2.442353681 seconds)
    (155/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.139134131 seconds)
    (156/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.798457626 seconds)
    (157/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.950560429 seconds)
    (158/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.014014417 seconds)
    (159/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.151348242 seconds)
    (160/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.651557266 seconds)
    (161/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.783831954 seconds)
    (162/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.898650991 seconds)
    (163/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.154562928 seconds)
    (164/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.92778079 seconds)
    (165/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.771241119 seconds)
    (166/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.791831813 seconds)
    (167/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.770566835 seconds)
    (168/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.699233357 seconds)
    (169/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.856851546 seconds)
    (170/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.780157307 seconds)
    (171/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.848742085 seconds)
    (172/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.218236286 seconds)
    (173/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.773991686 seconds)
    (174/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 3.157465636 seconds)
    (175/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.796808465 seconds)
    (176/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.018085417 seconds)
    (177/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.798756983 seconds)
    (178/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.770387657 seconds)
    (179/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 2.068506297 seconds)
    (180/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.872269273 seconds)
    (181/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.773375966 seconds)
    (182/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.153672887 seconds)
    (183/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.779678131 seconds)
    (184/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 2.990125652 seconds)
    (185/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.007449362 seconds)
    (186/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.944484354 seconds)
    (187/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.777549407 seconds)
    (188/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.812114057 seconds)
    (189/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.857580475 seconds)
    (190/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.883316452 seconds)
    (191/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.954971487 seconds)
    (192/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.950788617 seconds)
    (193/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.744427072 seconds)
    (194/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.038360711 seconds)
    (195/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.774502255 seconds)
    (196/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.453992491 seconds)
    (197/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.797327047 seconds)
    (198/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.768979366 seconds)
    (199/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.864439165 seconds)
    (200/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.815599456 seconds)
    (201/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.678157323 seconds)
    (202/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.963999782 seconds)
    (203/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.76185049 seconds)
    (204/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.270959835 seconds)
    (205/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.781068354 seconds)
    (206/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.497760144 seconds)
    (207/309) benchmarking ("sort", Float64, false)...
    done (took 5.567642873 seconds)
    (208/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.882821765 seconds)
    (209/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.779022626 seconds)
    (210/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.828712061 seconds)
    (211/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.137953766 seconds)
    (212/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.839429272 seconds)
    (213/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.795179247 seconds)
    (214/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.793744365 seconds)
    (215/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.901594986 seconds)
    (216/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.862708361 seconds)
    (217/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.166320708 seconds)
    (218/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.116848684 seconds)
    (219/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.09128234 seconds)
    (220/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.795688666 seconds)
    (221/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.00590297 seconds)
    (222/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.901214957 seconds)
    (223/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.964420636 seconds)
    (224/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.423077089 seconds)
    (225/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.991402218 seconds)
    (226/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.573504055 seconds)
    (227/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.898726563 seconds)
    (228/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.771805761 seconds)
    (229/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.779130845 seconds)
    (230/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 3.288848049 seconds)
    (231/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.805517783 seconds)
    (232/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.793848411 seconds)
    (233/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.117454023 seconds)
    (234/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.806064864 seconds)
    (235/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.258117078 seconds)
    (236/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.134201894 seconds)
    (237/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.856575402 seconds)
    (238/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.776343556 seconds)
    (239/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 3.159081798 seconds)
    (240/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.202032546 seconds)
    (241/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.567259105 seconds)
    (242/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.622805884 seconds)
    (243/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.920745159 seconds)
    (244/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.118030009 seconds)
    (245/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.448507801 seconds)
    (246/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.117541333 seconds)
    (247/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.775784876 seconds)
    (248/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.317632825 seconds)
    (249/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.847006758 seconds)
    (250/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.876614691 seconds)
    (251/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.851055094 seconds)
    (252/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.773265462 seconds)
    (253/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.507947615 seconds)
    (254/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.102084894 seconds)
    (255/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.781589135 seconds)
    (256/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.144890592 seconds)
    (257/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.990651701 seconds)
    (258/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.775138593 seconds)
    (259/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.148434238 seconds)
    (260/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.863056757 seconds)
    (261/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.107130175 seconds)
    (262/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.887372996 seconds)
    (263/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.914612139 seconds)
    (264/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.789621079 seconds)
    (265/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.018656465 seconds)
    (266/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.939187912 seconds)
    (267/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.976439164 seconds)
    (268/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.897386926 seconds)
    (269/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.946222652 seconds)
    (270/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.068647793 seconds)
    (271/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.922454257 seconds)
    (272/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.403068043 seconds)
    (273/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.778450585 seconds)
    (274/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.854768513 seconds)
    (275/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.94312865 seconds)
    (276/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.79899859 seconds)
    (277/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.147701538 seconds)
    (278/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.927225363 seconds)
    (279/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.171737825 seconds)
    (280/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.778293497 seconds)
    (281/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.98159672 seconds)
    (282/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.708019276 seconds)
    (283/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.880045915 seconds)
    (284/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.123455649 seconds)
    (285/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.965851919 seconds)
    (286/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.879362133 seconds)
    (287/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.564193576 seconds)
    (288/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.990935953 seconds)
    (289/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.813551047 seconds)
    (290/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.775509306 seconds)
    (291/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 2.547108024 seconds)
    (292/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.793973954 seconds)
    (293/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.028372321 seconds)
    (294/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.797896435 seconds)
    (295/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.881920527 seconds)
    (296/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 3.070496978 seconds)
    (297/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.878632715 seconds)
    (298/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.457203361 seconds)
    (299/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.780842172 seconds)
    (300/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.610535583 seconds)
    (301/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.086528101 seconds)
    (302/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.108144469 seconds)
    (303/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.895313589 seconds)
    (304/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.676330026 seconds)
    (305/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.81545935 seconds)
    (306/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.596207486 seconds)
    (307/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.867475883 seconds)
    (308/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.99355051 seconds)
    (309/309) benchmarking ("sort", BigInt, false)...
    done (took 6.77901068 seconds)
  done (took 975.6563473 seconds)
done (took 977.408727073 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.80428039 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.79818102 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.78013002 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.801546826 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.893261096 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.825763112 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.793498813 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.784239481 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.830209295 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.829257996 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.778961993 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.824856348 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.780749837 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.780650191 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.779951349 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.795932176 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.090796457 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.813404528 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.799400827 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.791923702 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.800106706 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.779326421 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.830553984 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.826010449 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.784504064 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.786245969 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.784018894 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.800324243 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.893642408 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.785697415 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.783308063 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.793455988 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.089524934 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.811918698 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.778288848 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.801139305 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.793590714 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.792664733 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.785712371 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.814311844 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.176866091 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.825017809 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.781356529 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.781191707 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.781630624 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.788569999 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.782553445 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.791195008 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.795665589 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.796872121 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.171251841 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.842692554 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.787902109 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.781223294 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.795198849 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.782814153 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.786756578 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.797871532 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.800769262 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.79863298 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.076344212 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.822045743 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.786347532 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.800672141 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.791966065 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.207205804 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.823368858 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.789840656 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.178658824 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.833597457 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.207285139 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.83739055 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.78694518 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.798988896 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.816600534 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.091213238 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.812527549 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.783245646 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.792845183 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.781924736 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.795134689 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.795707883 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.788663403 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.784818712 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.799436353 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.830525824 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.796141604 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.783640953 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.796365379 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.80299771 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.79353314 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.795406013 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.787441096 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.782166095 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.796334622 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.788733687 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.787582893 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.787429579 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.78902471 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.798312643 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.176885822 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.845323251 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.78056778 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.781968038 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.783812838 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.799693031 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.175906617 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.828383553 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.807774202 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.834114801 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.786821327 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.079328779 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.81956621 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.801753536 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.797585955 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.78810527 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.783267835 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.078527745 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.20673975 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.844270094 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.786281263 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.784453913 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.802611996 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.787625244 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.783108375 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.094667236 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.821133488 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.802909817 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.909300921 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.798668103 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.819266674 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.784245786 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.790436391 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.835606938 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.803067459 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.820164784 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.788330409 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.80206509 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.804781366 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.78318385 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.798649301 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.7993323 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.785891922 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.79522192 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.784428371 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.836551856 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.801319147 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.800869835 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.808741275 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.910466774 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.784065857 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.080247774 seconds)
done (took 280.945529663 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.86989122 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.783054824 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.877721114 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.787357526 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.876222712 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.861507118 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.784830315 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.786755412 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.78549803 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.270980496 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.784748786 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.791474087 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.787248653 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.784422432 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.857547487 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.786148176 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.786008905 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.219911118 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.786412433 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.864660257 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.78548104 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.786674782 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.787698975 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.274520463 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.787985075 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.786825584 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.86700124 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.786690962 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.221213954 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.786237446 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.785873976 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.222337029 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.867518333 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.814789192 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.79411818 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.792277217 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.876651043 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.797198985 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.855592771 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.85792246 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.883270548 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.819324685 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.785405118 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.786262226 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.790298691 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.788525566 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.787275863 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.819730226 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.787316948 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.793252675 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.221839831 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.792105012 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.795296912 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.788364294 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.787631587 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.814603456 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.788062697 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.788244354 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.867522298 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.788849626 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.856125727 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.274276476 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.274014058 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.789068878 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.788001166 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.787799683 seconds)
  done (took 179.630072398 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.854290251 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.865261263 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.853475488 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.793255643 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.837128867 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.856098801 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.792913627 seconds)
  done (took 14.574131172 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.794780249 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.788484982 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.837797193 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.838275859 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.789241769 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.944784979 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.788892601 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.799832294 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.792613913 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.816177793 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.789969001 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.788469012 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.79639927 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.786717279 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.838382069 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.801060353 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.904192697 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.791677193 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.789514103 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.937407995 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.794442188 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.796145029 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.814569605 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.801590056 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.79035631 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.796728301 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.368191542 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.790467702 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.791364888 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.790533402 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.788514814 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.831803397 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.790271953 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.78879107 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.790313184 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.904721658 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.791889169 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.789745588 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.790823548 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.790174964 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.790505466 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.790228278 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.790673402 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.790255011 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.791328039 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.814545126 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.789807769 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.790641638 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.790696388 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.791704464 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.816594783 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.79010241 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.789697971 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.795476714 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.833349636 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.799292408 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.79202077 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.792673883 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.792207753 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.793172213 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.940375285 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.843467115 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.791440497 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.840347624 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.790025276 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.790922981 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.791076828 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.790174425 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.878043233 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.79159753 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.840269069 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.792574936 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.95065636 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.815752874 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.793314422 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.796153456 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.795500559 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.793285696 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.791115698 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.800365843 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.794154126 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.795069251 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.79927404 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.796479427 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.791426858 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.904843891 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.933705411 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.792850104 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.793317087 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.799713546 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.791658904 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.836887759 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.79333371 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.793162996 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.850563966 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.90831626 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.821171307 seconds)
  done (took 198.068772908 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.798841297 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.801076392 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.794056373 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.80906912 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.79552619 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.793497294 seconds)
  done (took 12.518772215 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.796262296 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.797432393 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.793324421 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.79399222 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.793992232 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.793978827 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.79383316 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.794896619 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.800068111 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.793248982 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.793817743 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.793182886 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.794427663 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.793935217 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.795891995 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.793255516 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.794388725 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.794397271 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.794059319 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.794377743 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.047146863 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.794706412 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.795437969 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.798873141 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.799861898 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.7941799 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.809292584 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.795228112 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.795277343 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.803260014 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.800425499 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.795380385 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.798913318 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.801925761 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.79891646 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.799655145 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.798630582 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.795557313 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.795429106 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.795827352 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.794083656 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.795449044 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.794245322 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.795291533 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.797605589 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.80258908 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.800806334 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.810061909 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.794748567 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.796166114 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.795555517 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.794830847 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.797782981 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.795635371 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.799915672 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.802104477 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.800349706 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.79543648 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.79674634 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.799045492 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.800809558 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.796822095 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.797922224 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.801128158 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.80218061 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.796362971 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.799635787 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.799494881 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.795901045 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.796790138 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.796867879 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.795744152 seconds)
  done (took 132.37313718 seconds)
done (took 538.901439432 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.034298698 seconds)
  done (took 8.763004949 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.965927713 seconds)
  done (took 8.755115246 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.312985682 seconds)
  done (took 10.044199096 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.828181021 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.831394313 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.810200649 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.799425659 seconds)
  done (took 29.023186862 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.037130461 seconds)
  done (took 8.766620969 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.819539007 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.794825316 seconds)
  done (took 15.413038393 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.883592614 seconds)
  done (took 8.613326157 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.11398344 seconds)
  done (took 8.852068473 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.815306199 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.830298189 seconds)
  done (took 15.398741149 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.799862259 seconds)
  done (took 8.529822946 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 8.01373922 seconds)
  done (took 9.849811548 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.817426543 seconds)
  done (took 8.621408028 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.821066023 seconds)
  done (took 8.551794763 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 6.887708858 seconds)
  done (took 8.617981251 seconds)
done (took 159.528659902 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.799822187 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.799891535 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.7995162 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.797693365 seconds)
  done (took 28.927684077 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.83168011 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.831089285 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.832167716 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.840526345 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.833493782 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.829638242 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.822964612 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.824530685 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.841020914 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.833034421 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.8338766 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.834954297 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.831204313 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.828663485 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.834660632 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.833984067 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.842687726 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.83417217 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.824791952 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.833748008 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.799047936 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.842744454 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.834530576 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.800553438 seconds)
  done (took 45.661912617 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.990457424 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.869943307 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.951963944 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.850967317 seconds)
  done (took 9.394543353 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.850600468 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.852935923 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.86332345 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.902350098 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.925312595 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.862127224 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.824163985 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.821212848 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.806356181 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.852330626 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.927450314 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.846758345 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.938426528 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.801270156 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.982373488 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.800849716 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.799946142 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.852005526 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.903316654 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.915479616 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.799100927 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.851109119 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.854812481 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.847919112 seconds)
  done (took 46.414582971 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.800634448 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.80761405 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.808253542 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.800853514 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.801540137 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.801680409 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.81019855 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.802393532 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.822682461 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.803427838 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.801413414 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.803545702 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.809747213 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.802395624 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.801976291 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.814998554 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.815463168 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.802212421 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.805001946 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.80850554 seconds)
  done (took 37.858031974 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.798892431 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.646596314 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.144880586 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.052939685 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.798897368 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.802507798 seconds)
  done (took 30.978196627 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.81475779 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.809434645 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.803175366 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.860095818 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.940877946 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.808761812 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.800782371 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.813176139 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.847293214 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.868292593 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.821939406 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.830399565 seconds)
  done (took 23.755091874 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.802267916 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.802712795 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.80181565 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.813027557 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.81215711 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.809136545 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.809939742 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.802944318 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.815157835 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.819344324 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.811510538 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.813426392 seconds)
  done (took 43.454088731 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.880348901 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.676030774 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.255012536 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.259269766 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.325925055 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.007139303 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.801379188 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.88887106 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.802369486 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.072422727 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.19038026 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.011415358 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.044518245 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.744891487 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.807981477 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.283666053 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.094163906 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.018587501 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.829537013 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.456612689 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.913092464 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.3085304 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.504852342 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.915241062 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.005746165 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.925330599 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.060939187 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.756949485 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.850361728 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.806062632 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.808067359 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.80372033 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.075011036 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.922845884 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.872851318 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.808298916 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.21562454 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.50762177 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.809821378 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.510205335 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.381530121 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.928746164 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.805131136 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.803836486 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.731877809 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.313630838 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.893732875 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.806592133 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.503243149 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.803156241 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.808766788 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.879893451 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.807766831 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.61103 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.488587422 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.071537655 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.804623511 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.806482656 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.365382804 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.840222905 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.422770602 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.738937702 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.897190585 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.508951184 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.265681853 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.961910936 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.805157784 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.805839705 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.73030875 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.508385918 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.921720021 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.940589319 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.821890553 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.445418994 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.103395583 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.269947994 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.864374729 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.0751988 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.729942731 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.737826919 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.022633664 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.755321867 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.733807737 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.636758688 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.732893183 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.016919674 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.837497226 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.400991595 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.837791631 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.887281282 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.811772246 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.821804089 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.80901704 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.022326086 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.701025254 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.806661469 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.148089631 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.067354087 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.823257606 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.889812717 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.733279355 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.807729343 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.051747832 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.00963721 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.044108477 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.300430047 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.897404695 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.738536177 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.821369239 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.725825071 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.816813229 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.081606929 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.869649518 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.841773825 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.927529633 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.755462068 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.05136826 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.93878187 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.906151452 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.219230691 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.051275241 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.144277751 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.049730866 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.870162008 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.812271404 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.806430643 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.521939244 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.421269448 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.024198809 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.821688922 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.296606045 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.816059842 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.809740619 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.742576233 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.465503106 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.217799214 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 4.893996421 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.021841108 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.755211251 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.084665306 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.734435565 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.944891757 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.802592648 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.022765944 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.460012317 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.896458985 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.059664866 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.041949256 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.039826447 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.817339283 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.82368457 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.900267543 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.825479768 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.218282623 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.054567143 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.810086549 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.809673974 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.526339503 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.864952896 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.809868353 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.811632607 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.360554221 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.085938246 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.833410601 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.811381285 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.683583617 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.821413318 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.871277216 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.813001792 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.814743694 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.329385845 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.313275184 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.814261246 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.465835234 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.02589654 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.813373786 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.463665964 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.989912946 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.824072129 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.083848372 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.878832577 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.737295482 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.50970365 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.509452765 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.809116206 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.737380368 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.812057365 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.813031378 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.815623989 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.996289304 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.091889567 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.866438234 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.52408171 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.919490227 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.81567224 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.812386029 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.812013876 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.301445443 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.855707991 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.318504077 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.947276647 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.939405841 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.822433385 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.737893065 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.813326168 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.813378519 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.811577265 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.756310599 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.858848215 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.521346163 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.016737009 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.060054723 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.216051982 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.821279862 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.516639889 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.931503351 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.828386207 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.169607468 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.373448649 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.914343755 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.873175355 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.818128139 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.520872392 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.55269121 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.373877298 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.113884655 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.133690492 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.164712928 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.164153255 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.133106853 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.896654006 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.039268501 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.333477185 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.869204052 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.900780169 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.751080835 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.828447794 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.465560613 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.174166142 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.822245972 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.03014973 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.103776418 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.234152702 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.952403816 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.016510282 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.842304371 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.610969689 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.836085226 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.348457662 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.830883554 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.303642701 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.022857944 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.89560547 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.17214168 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.907197345 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.813193253 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.146427273 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.852578348 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.517753708 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.166532852 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.203986908 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.341073796 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.043829709 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.815917784 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.254050896 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.18017254 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.993942316 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.930490279 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.742739391 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.819942323 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.820472412 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.827835892 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.784644461 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.659328732 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.056687952 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.820341214 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.041571348 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.920861994 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.186995773 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.723316508 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.818774721 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.81463016 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.062666646 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.47140856 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.966654922 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.0905134 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.387571067 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.818340675 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.743295297 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.740189194 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.516738096 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.822176359 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.780045199 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.021093582 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.915778649 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.498117873 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.194438702 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.123122348 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.058161475 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.826862253 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.092382604 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.093534491 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.308028279 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.835853624 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.912469663 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.177513399 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.510671543 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.031270422 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.042567737 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.347313948 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.034286484 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.260053372 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.784543921 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.816647739 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.022856216 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.031305008 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.242445252 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.995777761 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.526634483 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.823666255 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.173165006 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.880427889 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.236635475 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.007082813 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.902157322 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.823432773 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.892424548 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.821002494 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.822995734 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.822674844 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.826646399 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.238423301 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.939017349 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.829712048 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.893629747 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.860551207 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.394841012 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.826087018 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.093168519 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.177233436 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.159344338 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.883239418 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.819445597 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.818654082 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.745079125 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.946163987 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.257390821 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.090675878 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.939276332 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.950990555 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.838890317 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.180543016 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.067183758 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.127416018 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.093563439 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.70209488 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.434334148 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.935170579 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.035666684 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.824030332 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.023597066 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.032336093 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.115603099 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.373791314 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.948212605 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.007523395 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.091730801 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.177177541 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.82037765 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.40016653 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.836154784 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.207991532 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.849140364 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.246424117 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.078759666 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.823772705 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.939790808 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.823907371 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.023119755 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.270476355 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.530512537 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.169858388 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.67886595 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.823686494 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.099085667 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.157097982 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.127345423 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.896298041 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.828328526 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.512201793 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.953143853 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.655418505 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.038323442 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.821180809 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.024348131 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.530613073 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.824951559 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.098984414 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.129442775 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.821506131 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.714228196 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.824592043 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.824606549 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.035688908 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.03090814 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.063960293 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.824596301 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.828600233 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.629154185 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.104035039 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.884173821 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.749195573 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.825355774 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.86787586 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.047697731 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.839465128 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.337441158 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.522687469 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.096600027 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.725148129 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.838549193 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.214241032 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.203552989 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.16351504 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.351873371 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.044605376 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.37359956 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.823890043 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.19653223 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.825825711 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.209465928 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.199629842 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.826023872 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.317293102 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.931552238 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.099863669 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.152517748 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.839062862 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.588632373 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.858297968 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.03784757 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.179584673 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.754203677 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.829254076 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.872901871 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.826247193 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.809744416 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.834884028 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.746746807 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.250085432 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.66345396 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.381454451 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.828030177 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.938084505 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.249105018 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.341490634 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.929675574 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.843089003 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.834322353 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.526574972 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.112523993 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.067927767 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.31269183 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.913168477 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.827165016 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.825612433 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.74429889 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.008508725 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.012502572 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.104798254 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.136036402 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.932364629 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.827285925 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.034001013 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.028024114 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.25622347 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.960994228 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.927322432 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.935528409 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.763732047 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.531586142 seconds)
  done (took 1635.986020226 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.832863798 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.860913421 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.95408245 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.853181918 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.898628242 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.932090436 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.957667027 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.852419101 seconds)
  done (took 56.901105492 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.826148557 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.999754871 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.830966277 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.827960637 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.846433199 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.826896597 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.981487463 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.837466793 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.831873602 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.83157229 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.826668446 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.826474651 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.099318742 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.846426729 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.828509553 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 7.368187454 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.832599129 seconds)
  done (took 74.118359361 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.830117316 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.230182278 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.861216299 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.830794065 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.665400145 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.844843326 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.931256195 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.836362137 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.835641861 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.875222368 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.126693507 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.887783367 seconds)
  done (took 89.517623105 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.844368721 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.830470398 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.830464015 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.831127168 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.829617083 seconds)
  done (took 10.936791945 seconds)
done (took 2135.653472626 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.059254779 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.018375976 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.072607282 seconds)
  done (took 5.852279231 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.970957686 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.021933894 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.133681751 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.140707019 seconds)
  done (took 10.032467507 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.135321522 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.196269859 seconds)
  done (took 6.094723594 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.151386824 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.854924057 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.243764685 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.83350725 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.83429661 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.832606909 seconds)
  done (took 22.267500964 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.831281275 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.831774757 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.831560318 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.831530371 seconds)
  done (took 9.08873336 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.831104609 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.500472215 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.831372925 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.84358027 seconds)
  done (took 20.768761222 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.978609801 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.947288635 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.975027071 seconds)
  done (took 7.663206622 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 2.052001551 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.938033824 seconds)
  done (took 6.752757497 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.966520378 seconds)
  done (took 3.729950208 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.858974468 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.100192293 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.316385597 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.340116527 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.407046454 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.656782359 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.161168878 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.057253945 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.266854546 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.299728986 seconds)
  done (took 24.227633969 seconds)
done (took 131.54970313 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.18060527 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.864052202 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.033141685 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.194105969 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.076006697 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.033834755 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.050626437 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.185418304 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.879989624 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.859883586 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.194662733 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.072039283 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.99834172 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.851190592 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.002390471 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.850404552 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.065898537 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.20436226 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.881301692 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.118553227 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.065611375 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.835425097 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.031568455 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.854728218 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.070146009 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.988854139 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.383007516 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.855729332 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.019090032 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.396950264 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.99380008 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.250057846 seconds)
  done (took 167.106580124 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.835027892 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.834465709 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.833388357 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.832931504 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.304949486 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.835704968 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.834475663 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.833801415 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.281407112 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.27465699 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.834641347 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.291797633 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.835450161 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.834558636 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.834643835 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.83416088 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.457543481 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.835134048 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.835560777 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.834372372 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.835682285 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.140507093 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.835491224 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.146591362 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.448638401 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.836216721 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.834501267 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.835152503 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.834715231 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.833787593 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.835209362 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.834006313 seconds)
  done (took 208.146809792 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.786994458 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.836887575 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.834978447 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.836684857 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.83746294 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.838431396 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.837001597 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.836256131 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.61568097 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.604288424 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.836506584 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.836626559 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.840257967 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.835432113 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.836005639 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.837280213 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.83598714 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.838410276 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.83723018 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.837640344 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.840002739 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.452458672 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.837412736 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.468905048 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.837077874 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.837943279 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.837625078 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.835506082 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.836834067 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.838127087 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.837069223 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.837662942 seconds)
  done (took 219.299947099 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.078289894 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.836733533 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.839216714 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.826706073 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.837153923 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.838164823 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.812174933 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.088429593 seconds)
  done (took 18.926106985 seconds)
done (took 615.250520695 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.179472989 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.027166619 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.015790865 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.862167709 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.109759568 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.90463386 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.857475162 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.925546342 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.671289991 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.934978878 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.492286861 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.881673198 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.586373609 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.887446721 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.98137807 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.918845735 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.442568376 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.553233631 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.037296778 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.945900065 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.03409318 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.750954084 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.943266487 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.696681258 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.614603691 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.802593754 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.860181939 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.449020301 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.87074471 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.015602475 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.5100021 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.109947468 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.874906699 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.857840454 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.914565997 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.894711238 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.045680823 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.870750873 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.983002538 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.549303579 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.924032664 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.580349032 seconds)
  done (took 101.136908072 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.851905628 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.843888281 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.845651195 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.844414767 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.854254147 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.84584752 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.845517672 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.846206216 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.845983144 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.845030377 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.844811731 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.853067073 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.845682082 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.853681482 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.845201727 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.845719094 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.845561716 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.854772319 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.844985296 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.846186688 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.845816185 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.845880219 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.841008528 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.8459721 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.845956365 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.846712079 seconds)
  done (took 49.802467695 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.840912183 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.992633052 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.084616297 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.86113988 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.841435275 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.844481603 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.85880244 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.848019193 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.843169785 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.842489751 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.945158326 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.848096132 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.858601831 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.082325168 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.857870119 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.841559254 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.842276524 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.84247198 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.001719734 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.859302344 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.862212043 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.847760938 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.86054414 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.856254828 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.844752737 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.842511574 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.845945694 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.280987066 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.852131784 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.946072095 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.889427142 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.867753809 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.224010737 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.094579284 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.899010294 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.852749322 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.842396044 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.949780455 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.849145166 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.841848423 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.860359695 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.848197753 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.083298689 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.362078056 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.859031852 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.842795032 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.2923251 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.960530111 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.885316831 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.853700478 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.086155025 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.860952056 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.843881057 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.843926798 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.88040232 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.851103687 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.843118442 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.155233332 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.856093343 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.860915259 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.848791566 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.844880195 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.00597731 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.853601806 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.994302465 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.853774205 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.850080165 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.844369088 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.087839523 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.861616732 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.374273364 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.860102428 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.844055779 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.948169698 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.000993283 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.318235188 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.857757989 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.006399553 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.241142953 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.87135457 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.855697648 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.274597339 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.873130715 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.854919722 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.846587756 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.846727478 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.846219012 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.887346851 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.861422873 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.28715289 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.374632468 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.176237607 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.873205127 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.861421104 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.845493111 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.155341826 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.8549693 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.845267725 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.080230072 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.38137972 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.86061616 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.853158742 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.353232292 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.864501354 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.864468493 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.855423526 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.09280715 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.862491343 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.888761597 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.846824184 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.852535455 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.849353679 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.865031192 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.853494601 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.846593844 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.346663621 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.969872553 seconds)
  done (took 229.067691261 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.846824757 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.850722407 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.845852055 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.850484056 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.845959716 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.847439572 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.844891186 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.844346187 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.846113331 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.844657857 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.84405294 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.845668956 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.847871241 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.849406814 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.852648653 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.848390365 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.448360915 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.84616768 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.848519937 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.846174128 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.488098603 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.849809652 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.845702752 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.846107921 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.845669918 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.847633966 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.846470891 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.847997689 seconds)
  done (took 166.74273182 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.847389119 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.960715114 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.868668023 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.875890236 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.855135532 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.847850773 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.946064328 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.866366851 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.85357271 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.84718353 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.847318333 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.908794609 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.859291922 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.94690524 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.880719281 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.955309305 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.953685756 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.855608264 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.848181458 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.847752631 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.876410917 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.856628858 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.908663998 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.974353201 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.869148907 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.962816749 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.870628486 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.849456749 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.848930407 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.962031766 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.869707854 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.91047651 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.880129301 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.867045208 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.969144552 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.967045376 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.955413821 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.956636458 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.857313525 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.849741954 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.849932318 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.850619274 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.962111347 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.870298419 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.851035241 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.965120731 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.869671664 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.850129613 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.849498066 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.85065062 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.862680342 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.868881959 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.915054342 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.98244367 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.885642947 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.874452698 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.948306162 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.974555318 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.851316396 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.947854306 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.859080603 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.964073144 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.871124003 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.851389001 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.851989915 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.853805288 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.879146792 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.956587673 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.956340697 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.859188912 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.948182266 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.888027731 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.858296948 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.8512135 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.85270706 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.965367782 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.970540466 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.887680254 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.887226399 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.880939771 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.860818171 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.851643908 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.852843196 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.868278386 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.856266739 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.965308576 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.969105606 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.859422229 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.851432717 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.851610218 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.852734453 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.876449822 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.973721467 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.889310288 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.957089189 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.918486779 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.927723161 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.867224998 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.866367112 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.857384097 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.913558636 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.867596084 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.864550813 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.137801686 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.911804458 seconds)
  done (took 200.757715914 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.225635388 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.903375208 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.908210281 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.159045515 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.209226889 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.761728553 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.896653836 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.90021547 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.923419737 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.083424257 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.975009229 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.917542802 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.886904855 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.874034411 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.897547556 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.922563016 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.909732939 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.242846894 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.119944677 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.042991899 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.889342507 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.204806958 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.212325772 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.491195049 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.948734432 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.301792419 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.455312362 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.030450198 seconds)
  done (took 61.084782501 seconds)
done (took 810.361038011 seconds)
SAVING RESULT...
DONE!
