cset: moving following pidspec: 30474
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.91060504 seconds)
loading group "string"... done (took 0.5488964 seconds)
loading group "linalg"... done (took 8.836544441 seconds)
loading group "parallel"... done (took 0.168086644 seconds)
loading group "find"... done (took 1.419866009 seconds)
loading group "tuple"... done (took 2.073326632 seconds)
loading group "dates"... done (took 1.361796132 seconds)
loading group "micro"... done (took 0.21673829 seconds)
loading group "io"... done (took 0.625102889 seconds)
loading group "scalar"... done (took 42.536105705 seconds)
loading group "sparse"... done (took 13.260320438 seconds)
loading group "broadcast"... done (took 1.065534314 seconds)
loading group "union"... done (took 14.474634715 seconds)
loading group "simd"... done (took 4.968552372 seconds)
loading group "random"... done (took 10.039293207 seconds)
loading group "problem"... done (took 2.157182178 seconds)
loading group "array"... done (took 25.540245914 seconds)
loading group "misc"... done (took 1.087007453 seconds)
loading group "sort"... done (took 3.646333064 seconds)
loading group "collection"... done (took 21.732519149 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.656360463 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.13802048 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.150147086 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.197293101 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.207587407 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.148135751 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.164504602 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.563697161 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.025328459 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.216021561 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.14607001 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.550175024 seconds)
done (took 5.891681815 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.238488036 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.43689164 seconds)
    (2/2) benchmarking "String"...
    done (took 0.129237999 seconds)
  done (took 1.235787742 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.076512424 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.180956183 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.11196042 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.095809229 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.111878024 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.111351873 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.110742514 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.09541009 seconds)
  done (took 1.492415065 seconds)
done (took 3.719080972 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.486006526 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.838608169 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.529614468 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.129913277 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.158490952 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.149930131 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.319552983 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.165606853 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.121303511 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.113996446 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.170783415 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.356978468 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.487428447 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.949132665 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.098092549 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.132055946 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.098813713 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.684014717 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.081302519 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.134539757 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.53147869 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.112788577 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.123713906 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.141423417 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.205033311 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.11682168 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.178241291 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.110989865 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.668707744 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.103276278 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.185858213 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.099947652 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.161209297 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.250531209 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.096211082 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.094127677 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.676366166 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.189994356 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.114395266 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.095923273 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.677243083 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.081010396 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.193767792 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.109334902 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.114795467 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.190430993 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.115908611 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.078963263 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.103144769 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.101319663 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.15861881 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.460234189 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.107299161 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.146032621 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.110264352 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.689201642 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.097005344 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.156908371 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.140612447 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.098510937 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.097371568 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.112451259 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.156639879 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.112079383 seconds)
  done (took 19.646670911 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.118281564 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.140606855 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.094324535 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.140534819 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.142074561 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.096942904 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.082906026 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.094793734 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.126745968 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.18673781 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.13679522 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.127633244 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.092119999 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.07971586 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.118309697 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.250038425 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.122849821 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.106055144 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.098118704 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.089808326 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.141327526 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.111890374 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.092480531 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.110805916 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.170185964 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.205732108 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.123024815 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.123166795 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.078841006 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.115133052 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.142797018 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.161609305 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.076034651 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.094143095 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.182966998 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.120582132 seconds)
  done (took 5.184474236 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.197786646 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.116001063 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.190974949 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.178568519 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.146719383 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.181059544 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.117345488 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.252807406 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.195906082 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.186327692 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.130005734 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.097803601 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.095549463 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.080660915 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.094457585 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.68945357 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.179449085 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.149871565 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.106751671 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.105496887 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.09732139 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.374223457 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.100486397 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.081566766 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.101836978 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.071782706 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.174662858 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.103181221 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.299631228 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.119392999 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.108380283 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.131697545 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.199720708 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.130887385 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.123593813 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.103299801 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.09811388 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.219655377 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.108544664 seconds)
    (40/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.132411419 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.077705595 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.126885864 seconds)
    (43/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.080986963 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.135116791 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.100605923 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.110523004 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.225816881 seconds)
    (48/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.133728256 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.098687458 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.101781939 seconds)
    (51/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.129337576 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.086374366 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.199631377 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.095609281 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.097346859 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.350648457 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.117379588 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.085257239 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.10009949 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.293213594 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.134576918 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.082350622 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.094563056 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.08591383 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.095799891 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.400376943 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.089945527 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.00220265 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.09828806 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.156958332 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.100133072 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.105225553 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.085804893 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.102042148 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.100855686 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.098404265 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.078095568 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.098359418 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.077470846 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.101757445 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.114967311 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.084106198 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.096987714 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.146865589 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.115022958 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.119311345 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.109328115 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.100352417 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.094702781 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.112834414 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.097587599 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.081864307 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.145468325 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.104345168 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.113780978 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.09899402 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.127315108 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.096649316 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.187062888 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.082876096 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.123913495 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.100045448 seconds)
    (103/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.083018049 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.127397002 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.120094307 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.079909021 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.101247394 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.078106587 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.09790283 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.14771915 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.096745594 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.079299748 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.101049391 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.092429059 seconds)
  done (took 23.783596199 seconds)
done (took 49.286076447 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.461568487 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.094549113 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.11356189 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.113753897 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.111289526 seconds)
  done (took 1.641113434 seconds)
done (took 2.36157437 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.354477649 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.176923413 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.120101346 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.178077681 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.104854543 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.186954756 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.165902656 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.11838828 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.19728327 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.101451616 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.175786336 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.10074381 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.104478623 seconds)
  done (took 2.835384356 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.093546692 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.118768391 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.081064357 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.110337128 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.074783577 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.108777047 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.090954654 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.130083946 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.091455054 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.102175734 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.07466025 seconds)
  done (took 1.793449293 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.090586208 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.114296212 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.081114049 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.106916673 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.07479416 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.10666303 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.08977431 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.116118153 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.090781414 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.103318874 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.075573389 seconds)
  done (took 1.768759323 seconds)
done (took 7.111799135 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.046163134 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 8.246245818 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.117552373 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.165110613 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.337662241 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.211311156 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.521937503 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.131207554 seconds)
  done (took 11.68332354 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.12798767 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.101006448 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.096476993 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.080126838 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.096656683 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.078865175 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.097158175 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.082393671 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.095397415 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.082308118 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.098881503 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.083286125 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.096553554 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.080322612 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.098356485 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.08180498 seconds)
  done (took 2.257069204 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.116416111 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.115307877 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.103521525 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.107929705 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.08342153 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.101517709 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.086376669 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.102533971 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.083228434 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.10016354 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.107009998 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.088808015 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.104904642 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.098676111 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.086159168 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.107523333 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.083471994 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.103430605 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.103918816 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.086376972 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.107263689 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.085320066 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.105309825 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.105615209 seconds)
  done (took 3.204537289 seconds)
done (took 17.865915626 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.170184964 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.084997944 seconds)
  done (took 0.978557205 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.100618852 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.118965121 seconds)
  done (took 0.949980688 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.105949439 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.097105113 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.13626265 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.115325983 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.081738891 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.097288781 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.130007398 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.080953197 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.098065013 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.082583287 seconds)
  done (took 1.756990657 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.085000086 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.101404733 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.08912671 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.119072475 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.109079166 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.083631366 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.10326987 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.084814639 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.103677908 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.079041092 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.10591922 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.118064902 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.088302263 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.118557006 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.103294951 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.088127247 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.107419429 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.103154192 seconds)
  done (took 2.522895546 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.080074946 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.082097887 seconds)
  done (took 0.892721316 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.083617 seconds)
    (2/7) benchmarking "second"...
    done (took 0.095829133 seconds)
    (3/7) benchmarking "month"...
    done (took 0.083378194 seconds)
    (4/7) benchmarking "year"...
    done (took 0.099272691 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.079283441 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.096232252 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.080748916 seconds)
  done (took 1.352208486 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.525245209 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.23858978 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.335085305 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.11665966 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.136918345 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.489364658 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.154742542 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.095582042 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.112369757 seconds)
  done (took 2.978835739 seconds)
done (took 12.159864174 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.091274457 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.18952846 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.548915541 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.118742332 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.078371647 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.161302123 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.262950395 seconds)
done (took 2.18598682 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.35450589 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.123504411 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.088861101 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.07854854 seconds)
  done (took 1.37673693 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.079269501 seconds)
    (2/2) benchmarking "read"...
    done (took 0.103351386 seconds)
  done (took 0.921539957 seconds)
done (took 3.041541884 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078935974 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.078643319 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.092377567 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.078862601 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.093953218 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.076688202 seconds)
    (7/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.130237842 seconds)
    (8/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.094269093 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.077963711 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.078187214 seconds)
    (11/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.097064187 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.078125192 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.09642789 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.078575597 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.093577792 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.075861625 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.094709826 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.076069728 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.09338725 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.07650067 seconds)
    (21/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.075683234 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.095398245 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.075830034 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.093385041 seconds)
  done (took 2.85292297 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.099363022 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.096613593 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.084528615 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.101820636 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.101437163 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.084390526 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.102313639 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.079013455 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.102069408 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.080961993 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.099729133 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.100750532 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.081356096 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.100132478 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080690218 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.100732628 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.084594743 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.096521778 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.081140014 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.100068163 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.102575824 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.078784218 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.100497112 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.084450592 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.100048344 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.083160269 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.099777065 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.079884144 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.102395637 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.100257818 seconds)
  done (took 3.529619991 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.087288206 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.075101877 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.093356673 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.105350349 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.075727629 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.079607374 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.092998505 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.077057857 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.094890327 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.075897996 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.095991617 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.075901845 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.094592917 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.077969849 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.095542793 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.082763763 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.113082867 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.076192985 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.093950062 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.077425004 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.099665356 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.076868542 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.096877658 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.076530293 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.076645253 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.093702226 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.077088724 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.092906854 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.077652773 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.093339454 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.082591273 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.100693397 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.075946733 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.107017517 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.084074409 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.093278169 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.084778048 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.09405653 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.076691034 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.094543408 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.075967425 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.094474189 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.077456653 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.104976099 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.08030215 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.095183087 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.076452183 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.078706394 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.095088295 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.080310026 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.093729599 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.076726445 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.095548407 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.078354605 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.099998165 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.076421908 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.09610826 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.076390353 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.094986705 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.076923849 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.093296128 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.076331165 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.099767041 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.07728439 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.118231251 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.087410807 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.094463344 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.078806819 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.098540469 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.084818859 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.096736979 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.095072207 seconds)
  done (took 7.06493093 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.081606025 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.105298828 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.078309173 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.096244217 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.075252882 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.095170282 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.08430772 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.09456305 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.079271589 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.113762193 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.077307693 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.09659905 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.079195241 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.098698371 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.077418211 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.096293095 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.087575089 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.092695093 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.077278402 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.097685462 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.077436127 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.101706627 seconds)
  done (took 2.712426668 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.222914042 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.103656772 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.142751077 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.114818728 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.09693899 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.112037162 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.101913897 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.085190503 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.101560352 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.087244091 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.10436537 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.101540198 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.09606222 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.104967285 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.104738858 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.0883732 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.101699098 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.105676455 seconds)
  done (took 2.722474058 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.092945267 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.100852155 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.10532508 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.097635058 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.080251845 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.100941009 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.103621366 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.095970467 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.099893695 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.080485099 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.108376703 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.082487135 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.099454223 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.080596879 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099810195 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.080638684 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.099512407 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.098131801 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.091096748 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.10356497 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.086799033 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.108898358 seconds)
  done (took 2.845013175 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.096814673 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.099711128 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.111182507 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.101641696 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.094033583 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.078675869 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.104972954 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.080222866 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.106881504 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.081862273 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.098432993 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.078583229 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.105060542 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.08006755 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.104111264 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.080639195 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.100407161 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.080983093 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.100024989 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.076600119 seconds)
  done (took 2.612443588 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.123719731 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.114134008 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.096046572 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.12552919 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.114255993 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.096481638 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.124515036 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.114735571 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.09673137 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.127701718 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.114472987 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.096903967 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.124991767 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.120858211 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.096411943 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.126073013 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.126403123 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.108612856 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.114478892 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.114602469 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.110718165 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.11396091 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.126229715 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.096393597 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.117074288 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.097982268 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.115150189 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.121513835 seconds)
  done (took 3.931135864 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080186084 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.079241823 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.095715015 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.077395839 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.094526104 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.076768679 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.095571059 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.077802189 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.096878279 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.078308435 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.079604888 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.098121685 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.080290179 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.096546485 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.080128208 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.097118285 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.07933933 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.09526361 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.077137408 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.095224115 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.07992685 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.079781806 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.097572284 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.077926172 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.095728447 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.080003324 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.094581178 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.077380624 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.097564764 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.077887397 seconds)
  done (took 3.34237938 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.088461077 seconds)
    (2/2) benchmarking "in"...
    done (took 0.10412087 seconds)
  done (took 0.949659771 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.07829946 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.11526728 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.0775548 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.102131988 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.086468824 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.098984684 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.089801008 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.103519071 seconds)
  done (took 1.506276434 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.105230633 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.118261608 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.086715446 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.111419037 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.099073574 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.117541536 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.167401479 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.105093337 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.088410531 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.099568157 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.100008533 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.098855079 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.090836118 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.104964297 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.090736688 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.114360047 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.079259128 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.109080283 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.088557849 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.101211549 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.086637071 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.116217488 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.110659776 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.089076772 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.10233444 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.092965376 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.113198144 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.110404253 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.085909425 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.110963122 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.088379059 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.092443708 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.086067563 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.103667126 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.079489365 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.116878254 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.098476068 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.105199195 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.108823437 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.086700106 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.108318823 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.076655031 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.109799909 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.088568018 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.112408376 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.085869936 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.104642839 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.07648455 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.099695016 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.084829295 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.094542668 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.084534618 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.093757287 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.091158158 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.109696752 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.117193745 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.083542971 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.103888968 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.085742132 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.103085121 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.088781609 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.103422299 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.092071213 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.102705026 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.090958481 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.110545411 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.106749883 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.076067627 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.092817388 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.079769499 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.109034038 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.106787798 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.110938319 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.086181645 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.104957765 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.079109936 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.105687183 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.086717902 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.107561391 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.110671343 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.085746931 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.106950015 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.09222805 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.102703754 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.085095512 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.106870513 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.083385692 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.101571792 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.081874658 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.120304418 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.101905576 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.080010717 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.099829947 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.092601378 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.103662716 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.085022693 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.100678453 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.091423469 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.093687172 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.087492883 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.105044055 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.088930904 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.112171983 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.087193769 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.105764691 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.108497685 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.092865781 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.105586452 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.085123651 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.095613411 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.087540272 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.101410677 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.089771247 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.093758196 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.08732978 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.103558961 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.087071315 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.110174971 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.083754947 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.104135425 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.09287644 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.111467989 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.083661643 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.096702059 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.085543926 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.104676626 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.10865623 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.093104091 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.102119989 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.07716186 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.094350328 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.0896402 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.103497684 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.088608326 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.104790766 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.086974015 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.101981491 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.079905882 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.104257985 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.092698379 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.103307273 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.106125334 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.091321386 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.106810261 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.08510834 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.109522123 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.084146685 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.099967367 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.091103922 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.103516563 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.076466514 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.108325707 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.085510957 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.102249657 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.08650327 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.109193964 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.105283555 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.086820365 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.10147416 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.086771056 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.105027868 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.081804163 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.104298059 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.084520773 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.11309608 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.085747819 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.095521015 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.079535279 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.106414387 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.082307738 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.103431429 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.082720606 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.103675534 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.088132821 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.098748649 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.084264268 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.103485805 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.098239797 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.113173475 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.086158358 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.108796831 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.111518847 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.08579163 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.106632321 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.085779827 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.106222729 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.087478233 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.109167345 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.088661877 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.105807189 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.086086681 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.096429406 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.088165448 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.110173601 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.082006964 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.097401768 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.081206205 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.104385779 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.092919783 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.104674405 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.105623923 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.083677544 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.106410062 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.091712581 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.103885527 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.08597893 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.099609818 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.086422767 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.109694113 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.088046276 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.106468731 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.09431884 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.106263805 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.078610016 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.109527858 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.083741614 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.108968115 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.077853596 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.101492183 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.082700721 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.105971885 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.084458488 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.103163131 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.075658813 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.110422578 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.091873325 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.106279279 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.100947288 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.086301246 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.11455629 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.085439495 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.107458081 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.086548126 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.108037892 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.119454376 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.082265355 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.104565506 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.094794084 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.104679827 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.076298795 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.108629016 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.085184276 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.099801722 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.085077737 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.10219176 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.088515395 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.107245512 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.08767878 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.094100467 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.086005004 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.102596521 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.083093566 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.096053265 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.092358444 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.106406632 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.086031814 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.114073255 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.088122304 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.10621564 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.107041775 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.086015357 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.105838785 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.087832449 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.109113912 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.087406531 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.103531008 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.08293477 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.105968582 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.082921297 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.099216095 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.085577973 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.105242845 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.088774972 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.10706482 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.085752409 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.110920695 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.08627217 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.106543629 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.124224453 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.084142323 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.101325269 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.087454616 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.108477737 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.104146716 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.0864809 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.077483507 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.11082291 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.104965809 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.093173391 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.10465629 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.078863672 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.105770167 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.086207021 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.106193408 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.088040364 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.106414387 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.085387677 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.104369284 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.086347542 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.114984522 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.084222315 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.11266074 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.107719619 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.089678535 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.104838048 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.088473748 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.104105014 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.082086198 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.104955909 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.088242194 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.106067223 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.085782317 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.108015785 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.086959469 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.104956324 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.084833894 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.106985733 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.087645602 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.108197392 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.076537353 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.100509963 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.083643947 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.10578396 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.109372 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.088384802 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.104063252 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.084768202 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.106977527 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.085005624 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.078480659 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.11001096 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.108229718 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.088027517 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.114053307 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.083512316 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.105519538 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.097681906 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.09547899 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.084140714 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.099284696 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.083921228 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.112062578 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.088245571 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.111216118 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.087092577 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.101715499 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.080248174 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.107337712 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.084775823 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.096295974 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.080776894 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.108810405 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.084191964 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.104060132 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.08792229 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.108631263 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.087491664 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.109753374 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.104298154 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.087054805 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.106325327 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.079404405 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.102295684 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.083084517 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.105427664 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.088911462 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.102280116 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.080497808 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.105183522 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.086669771 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.106314054 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.087526818 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.104715073 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.09271372 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.105847852 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.087433601 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.111083514 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.078178222 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.106763228 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.086176607 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.105646649 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.083014222 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.106527228 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.088147381 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.107485306 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.110420761 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.087113794 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.108178496 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.087257231 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.099436448 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.087039817 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.10618824 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.087810716 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.102178663 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.090154806 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.113140189 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.081317649 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.106344757 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.089143474 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.103719238 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.089445632 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.107890895 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.087755553 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.110401527 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.089349164 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.106904421 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.090586243 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.107309466 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.108455655 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.09013915 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.104681792 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.092269501 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.101978013 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.094469834 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.107462479 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.087967487 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.104669978 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.083763173 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.105148535 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.08683526 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.105389707 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.093686074 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.10781884 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.083627719 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.102060265 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.081110662 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.106442258 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.110612005 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.094302876 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.106150598 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.089228515 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.097997564 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.08028809 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.107195952 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.084341214 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.104523851 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.090651679 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.111392571 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.087865028 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.104172224 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.085788204 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.111354276 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.0922036 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.110868382 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.102677949 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.090463385 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.107110796 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.088072634 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.104225313 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.087109116 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.107983608 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.089659036 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.105403613 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.083454491 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.115410217 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.092456066 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.108780918 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.104629305 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.090985919 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.105032374 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.079354163 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.108221665 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.088177305 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.109429865 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.087918284 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.106501568 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.09839573 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.101800364 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.086523982 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.112413622 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.086123356 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.112052101 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.097905052 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.088561728 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.10713734 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.088955889 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.096880236 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.084213973 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.102160591 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.089219459 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.10189297 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.07895517 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.116838153 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.09234064 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.106973453 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.086167968 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.104825902 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.079038685 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.09891315 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.084604515 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.108218397 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.087090515 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.114659231 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.084142903 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.10269592 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.078190806 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.106214709 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.088697664 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.109551073 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.079367837 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.097879362 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.083760916 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.107428827 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.114110434 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.086531598 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.106428494 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.089922981 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.105906778 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.082134047 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.111800316 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.080331699 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.108030934 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.099404484 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.107550794 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.090623748 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.109737684 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.113222485 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.089220362 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.097763073 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.089150121 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.106534166 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.089891842 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.108002191 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.09006699 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.122692527 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.088161909 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.10400887 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.085872538 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.107538608 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.083323825 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.115071236 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.109556468 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.089217458 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.10908606 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.087208674 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.109981092 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.094862441 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.109597909 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.088182659 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.109776059 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.086186382 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.107800651 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.08513267 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.1062604 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.089747025 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.109551816 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.087349407 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.109929656 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.103647312 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.09937726 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.113838026 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.090766556 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.099498646 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.084401234 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.102697522 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.080074116 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.108977378 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.083296254 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.104709895 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.086149377 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.105892654 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.090993994 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.108709258 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.088900306 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.109694668 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.088184837 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.097599079 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.091399902 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.108101174 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.091202743 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.10175482 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.088459638 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.109353848 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.09239253 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.113597529 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.105198363 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.089227314 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.106265526 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.091450849 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.097596095 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.091211028 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.106604709 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.087511964 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.103712861 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.089519982 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.108832895 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.090212408 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.109178198 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.091400932 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.107602027 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.093100214 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.110823606 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.081537161 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.100740402 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.091981741 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.101709892 seconds)
  done (took 58.70081065 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.151745456 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.08727665 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.09874346 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.079102986 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.126467948 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.079806136 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.098022059 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.0805221 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.100273448 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.113111218 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.080273725 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.097720571 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.101587815 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.127198841 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.124333192 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.112966211 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.079099164 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.099439405 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.079098196 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.099835873 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.119466703 seconds)
  done (took 2.941384359 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.104446049 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.117682154 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.115241448 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.101457937 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.111334307 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.116791906 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.116378156 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.098430619 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.120765959 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.111320305 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.10091026 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.117864056 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.110630817 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.092236199 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.111785371 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.114121748 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.120997416 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.090475577 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.11842879 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.115616727 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.095629462 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.115720359 seconds)
  done (took 3.221777624 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.092538579 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.086266753 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.113074665 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.080498488 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.107309652 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.081340975 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.112726849 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.083421903 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.113685157 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.107407711 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.086486787 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.086686771 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.11270804 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.080762676 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.106791317 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.083732769 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.112792177 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.087587012 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.108887802 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.082102773 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.127837099 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.10202394 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.082353466 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.10471943 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.097413107 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.108036284 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.087605342 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.106462029 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.085444347 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.106790593 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.084484509 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.109411338 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.090557173 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.104777059 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.085176279 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.106388531 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.087718366 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.101294719 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.08458737 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.110273105 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.082276405 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.108257745 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.094231823 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.105212158 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.083736912 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.108624738 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.087017541 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.101165771 seconds)
  done (took 5.477816425 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.120726186 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.157045907 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.092989354 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.154970366 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.124902228 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.12392573 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.092475626 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.148076754 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.105470388 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.087016848 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.125375303 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.122632011 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.088817488 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.117317864 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.11112591 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.087996529 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.111957629 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.092969565 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.116141712 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.112803995 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.098290212 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.111089185 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.122926256 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.100402286 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.112877202 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.106337411 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.087844156 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.115590361 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.119057099 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.095521206 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.113502811 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.116192794 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.110296859 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.116070993 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.090925157 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.112333381 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.124027938 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.089302989 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.111824194 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.10542361 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.091565797 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.116277564 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.091909781 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.124739164 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.108094505 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.090840803 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.110673305 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.090476085 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.125517394 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.113101843 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.098383479 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.12227866 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.11216668 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.088391774 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.11486557 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.125955418 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.088120271 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.108031449 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.111364457 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.099918976 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.107223501 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.098727796 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.128089145 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.112928608 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.117414269 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.102036181 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.110198888 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.113263277 seconds)
  done (took 8.430510929 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.096177282 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.132559305 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.125816171 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.104785506 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.114411011 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.112908035 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.094730494 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.112802324 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.093142003 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.120645245 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.112586278 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.164275704 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.086594127 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.119370463 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.11261883 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.09387117 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.113524133 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.092322228 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.113689519 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.112304942 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.093633979 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.124786521 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.112642937 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.104148583 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.127243292 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.10632877 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.092804068 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.11472856 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.123262329 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.09355222 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.128155413 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.113242447 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.112856394 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.105504407 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.127192632 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.112931712 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.084573348 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.112842948 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.093663382 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.114969228 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.10635224 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.104130109 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.113948344 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.105680951 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.093981631 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.113722236 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.124181398 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.107214242 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.120964066 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.119756985 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.094163304 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.125100851 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.113370336 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.094400335 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.125848172 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.133296018 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.125097194 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.12403696 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.093975129 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.12459657 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.125165709 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.133047826 seconds)
  done (took 7.763682595 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.085439834 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.084198019 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.103602792 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.082549035 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.104981938 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.08260588 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.104848547 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.084295045 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.104606114 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.084536973 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103571056 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.08238486 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.082170915 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.104853669 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.082240915 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.102606447 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.083075875 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.101378309 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.08544064 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.101652914 seconds)
  done (took 2.668059188 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.0935906 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.125118501 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.08584317 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.113728448 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.08809169 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.114494095 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.106858687 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.089618687 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.105551773 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.088427865 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.118538475 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.117431853 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.087066979 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.112751061 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.097361111 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.114324716 seconds)
  done (took 2.47599376 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.107298319 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.119399682 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.130560628 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.090675549 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.104014787 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.093334894 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.105342814 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.082840341 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.102401991 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.094047395 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.111444797 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.096219187 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.105727825 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.08240608 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.106809519 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.091253226 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.102855215 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.08884939 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.106387901 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.131186653 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.090633416 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.10794186 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.087300157 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.108185867 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.088196022 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.114928935 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.111802038 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.083660036 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.104152781 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.087035775 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.108396701 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.094869123 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.103627183 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.09062781 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.104432912 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.083089099 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.106166643 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.086288021 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.112344302 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.08514991 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.105035258 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.107788403 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.086324973 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.107031253 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.082438321 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.105886356 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.082269487 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.112526142 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.08854012 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.108163114 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.086299145 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.113327164 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.093809107 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.118315833 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.116563163 seconds)
  done (took 6.34895671 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.100436991 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.110080616 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.090835531 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.103982497 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.08923698 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.114793559 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.090526255 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.108585318 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.088201979 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.103766054 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.088161305 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.111495754 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.086859853 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.111728409 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.108210904 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.090502032 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.100267647 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.088574829 seconds)
  done (took 2.608696559 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.091808688 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.105357636 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.094106748 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.105811056 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.08663988 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.1078593 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.081974407 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.104350182 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.085109516 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.105291509 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.086586003 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.108309045 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.085055993 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.08743985 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.107275375 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.085506642 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.108935281 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.083340049 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.107434744 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.080717014 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.109697755 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.082994082 seconds)
  done (took 2.929312271 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.104156762 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.139012939 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.099777253 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.150648247 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.112106577 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.089547753 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.121756945 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.110821373 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.10947156 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.10958812 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.089962294 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.109732059 seconds)
  done (took 2.175073575 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112113805 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.146569702 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.083627802 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110792443 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.120054982 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.091522372 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.111212345 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091953655 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.125211467 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.125542029 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.112120405 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.104131012 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.12510916 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.122588715 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119986553 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.100245449 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11214296 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090570938 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107962384 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.133117972 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.111857829 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.10397308 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.112120662 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091742019 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.113080115 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.122906075 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.123104523 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.104959541 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.112824954 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.12411848 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.098982616 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.112803664 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.124773852 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.126029486 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.089739328 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.124706828 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.111828562 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113159485 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121875636 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.123195465 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.088237735 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.12084471 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.12423748 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118491409 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.104770563 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.112250926 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11887914 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.09202231 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.113167867 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.141297963 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.120793268 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.102531139 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120000006 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.124511145 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.124335862 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.139672625 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.104800169 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.124146663 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.120734126 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.124970058 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.123591503 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.099551585 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123629878 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.12629739 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119382558 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.102940576 seconds)
  done (took 8.379478709 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.127307222 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.106072024 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.112057609 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105752276 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.124809913 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.111779753 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.091526117 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.112394282 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.111688589 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.088710726 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.159669752 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.111635834 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.102405355 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.124161518 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.111430909 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.091158271 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113938883 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.122750469 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087671917 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.141077137 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113589485 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.123667491 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.123664802 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.103228525 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.125776692 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120522028 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.111468855 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.09306001 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11189994 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.092592366 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.120880811 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.111352 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.103170105 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.105898918 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.122042436 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.092444702 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.112980853 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118350986 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.093068271 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120880944 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.123571687 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.133680837 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092373612 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.112273861 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.126973776 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.091796615 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.111803235 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087350475 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113187512 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108175571 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.105718795 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.125344568 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.12603637 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.123113643 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.091899354 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.113403097 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.111892347 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092930961 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112571471 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.099831894 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.124038448 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112316852 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.140997275 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.112936901 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.092283394 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123051604 seconds)
  done (took 8.225645395 seconds)
done (took 157.151795448 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.105571708 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.143667787 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.100902656 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.1702694 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.086237344 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.14215714 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.118952967 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.124755716 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.085697573 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.109102437 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.086361215 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.112062618 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.151764127 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.108446309 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.086848968 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.111299467 seconds)
  done (took 2.683429549 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.183359887 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.291732277 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.105714602 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.113776564 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.092668969 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.11133031 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.112615886 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.093883532 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.108979629 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.100133509 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.110091171 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.090562113 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.121874873 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.088647236 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.110922787 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.088130893 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.1210583 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.1092924 seconds)
  done (took 2.999004422 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.119385625 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.152967896 seconds)
  done (took 1.116499394 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.123879087 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.188305438 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.312191772 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.16525168 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.116359561 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.130714908 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.165097545 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.127815265 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.197862205 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.130236328 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.131257655 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.094496334 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.13849692 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.120007108 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.098152755 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.114436531 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.119849408 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.117527937 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.094426836 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.116793948 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.139105087 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.095564318 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.121330068 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.11632439 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.186725169 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.107806632 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.117129871 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.114972808 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.096439592 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.116463943 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.100600171 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.13033556 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.129585489 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.169923859 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.121202201 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.166702858 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.124726109 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.114377253 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.095516634 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.11321351 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.097570087 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.119707724 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.13011397 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.094212632 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.354347536 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.122237628 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.096057757 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.114834002 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.10166266 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.124205464 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.12250905 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.099592766 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.188999285 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.122532487 seconds)
  done (took 8.011088885 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.857772024 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.133635213 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.11525062 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.958844367 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.120924491 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.129663443 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.829648583 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.138106827 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.242121509 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.85138735 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.131883233 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.127121821 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.214701043 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.281936354 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.148778099 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.341949626 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.71079633 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.127980782 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.119122495 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.156764077 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.121869873 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.142258063 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.133499701 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.42278948 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.09211799 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.114297496 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.123678816 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.104685431 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.166854416 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.11476098 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.115038323 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.188899512 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.271146657 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.208006091 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.092200646 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.112917453 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.090539568 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.197196026 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.273354977 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.202249554 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.176451539 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.109795415 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.089824412 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.126319035 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.133309625 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.087506296 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.190961442 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.180486031 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.179828537 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.117906019 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.125249226 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.100991975 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.126189224 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.167193495 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.111735396 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.344979276 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.346146325 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.091666234 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.122284051 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.110162566 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.275452519 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.113827153 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.231733585 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.119692457 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.220821658 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.112864812 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.789521939 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.195650431 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.090843179 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.123222179 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.098350727 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.119713149 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.124565629 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.173639832 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.382881799 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.106343412 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.117422651 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.113028563 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.219806438 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.113390997 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.092046183 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.169821777 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.116246861 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.1215745 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.107980746 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.127029412 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.177133224 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.278650846 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.106263648 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.123411011 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.117589941 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.104405766 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.11502679 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.219671895 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.223864038 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.165396268 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.243648976 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.105183332 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.193563666 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.173089837 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.125758049 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.178689355 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.121036864 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.109877629 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.127237494 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.221227998 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.148367233 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.092235523 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.119728274 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.119761061 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.151503127 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.095438347 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.121342943 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.177199804 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.450363699 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.195212694 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.088347994 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.117749152 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.100446112 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.191286767 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.099418608 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.268842412 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.123487163 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.175385743 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.12120457 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.089929487 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.122153065 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.172222586 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.129183762 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.100898528 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.128383993 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.12265307 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.256889023 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.228558265 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.128819934 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.220893935 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.180408621 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.123477158 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.181024815 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.123614171 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.176299696 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.12481665 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.102709223 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.117191127 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.804951364 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.12645311 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.100215744 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.120052832 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.196966892 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.092301666 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.115236303 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.091266431 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.110471739 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.795975249 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.117045325 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.088791492 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.115674782 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.100980407 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.124298361 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.120199255 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.096605431 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.190137346 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.241210896 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.105351308 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.121684146 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.09186128 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.190356096 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.093806887 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.114231748 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.091479982 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.113697369 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.101720238 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.119074273 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.092896894 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.201405442 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.165839402 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.226460369 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.513345406 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.116065802 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.091982036 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.239381559 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.114831692 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.312503925 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.098863149 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.233636798 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.19563064 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.090099934 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.343751053 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.175760091 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.199883313 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.117638296 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.178989968 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.110421799 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.09849319 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.16765684 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.114530056 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.120215905 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.166025265 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.129921196 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.106573657 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.155387145 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.114528766 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.236687165 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.087959338 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.20051865 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.09396902 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.127369844 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.314785798 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.091277774 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.135831694 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.16863249 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.118926868 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.09169045 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.624022429 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.091581142 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.125080232 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.124553842 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.230111051 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.175282286 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.122178204 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.099988846 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.127650041 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.169251492 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.239975976 seconds)
  done (took 45.200174557 seconds)
done (took 60.847081063 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.30831037 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.270614279 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.309713578 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.223882828 seconds)
  done (took 2.062239645 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.184295836 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.157791259 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.15140112 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.089524059 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.158823604 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.110964141 seconds)
  done (took 1.723246092 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.493546517 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.404769164 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.348586947 seconds)
  done (took 2.117381384 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.266237969 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.283367708 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.365991761 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.416756009 seconds)
  done (took 2.311319401 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.209033732 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.129402206 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.104101665 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.142367726 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.175103768 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.181034312 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.147477662 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.156296431 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.133142048 seconds)
  done (took 2.298425476 seconds)
done (took 11.38761665 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.317205289 seconds)
    (2/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.270973272 seconds)
    (3/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.288160283 seconds)
    (4/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.141188015 seconds)
    (5/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.129221891 seconds)
    (6/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.253348959 seconds)
    (7/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.248566088 seconds)
    (8/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.280110763 seconds)
    (9/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.188079819 seconds)
    (10/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.130658595 seconds)
    (11/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.120939646 seconds)
    (12/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.125768946 seconds)
    (13/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.106775778 seconds)
    (14/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.211519079 seconds)
    (15/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.282367245 seconds)
    (16/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.118457932 seconds)
    (17/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.14635334 seconds)
    (18/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.124042139 seconds)
    (19/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.301747857 seconds)
    (20/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.199523309 seconds)
    (21/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.168125002 seconds)
    (22/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.078552065 seconds)
    (23/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.219744091 seconds)
    (24/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.145263579 seconds)
    (25/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.210504595 seconds)
    (26/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.206815812 seconds)
    (27/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.133311603 seconds)
    (28/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.121747525 seconds)
    (29/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.125652618 seconds)
    (30/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.078656713 seconds)
    (31/286) benchmarking ("sort", Int64, true)...
    done (took 0.206326634 seconds)
    (32/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.209098255 seconds)
    (33/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.102848073 seconds)
    (34/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.196329622 seconds)
    (35/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.320911926 seconds)
    (36/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.095825024 seconds)
    (37/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.212691333 seconds)
    (38/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.132101307 seconds)
    (39/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.212938378 seconds)
    (40/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.102365269 seconds)
    (41/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.120777525 seconds)
    (42/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.170007787 seconds)
    (43/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.148900703 seconds)
    (44/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.106815325 seconds)
    (45/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.205033288 seconds)
    (46/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.143567639 seconds)
    (47/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.097383284 seconds)
    (48/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.193999699 seconds)
    (49/286) benchmarking ("sort", Float64, false)...
    done (took 0.175881449 seconds)
    (50/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.16222783 seconds)
    (51/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.140744711 seconds)
    (52/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.150990812 seconds)
    (53/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.115744254 seconds)
    (54/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.096685974 seconds)
    (55/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.122290204 seconds)
    (56/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.093311283 seconds)
    (57/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.164592335 seconds)
    (58/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.125683511 seconds)
    (59/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.092350327 seconds)
    (60/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.100383944 seconds)
    (61/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.105344237 seconds)
    (62/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.12281609 seconds)
    (63/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.078632148 seconds)
    (64/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.115693077 seconds)
    (65/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.096575419 seconds)
    (66/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.164517943 seconds)
    (67/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.095782141 seconds)
    (68/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.117644516 seconds)
    (69/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.228165571 seconds)
    (70/286) benchmarking ("sort", Float32, false)...
    done (took 0.178561605 seconds)
    (71/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.107421732 seconds)
    (72/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.127282481 seconds)
    (73/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.097061491 seconds)
    (74/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.198324602 seconds)
    (75/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.127469435 seconds)
    (76/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.096509096 seconds)
    (77/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.166175759 seconds)
    (78/286) benchmarking ("sort", Int64, false)...
    done (took 0.112788196 seconds)
    (79/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.103866532 seconds)
    (80/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.193728723 seconds)
    (81/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.128883989 seconds)
    (82/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.143006464 seconds)
    (83/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.16037652 seconds)
    (84/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.078680188 seconds)
    (85/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.20171098 seconds)
    (86/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.131116593 seconds)
    (87/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.090976555 seconds)
    (88/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.117891039 seconds)
    (89/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.076996909 seconds)
    (90/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.205344272 seconds)
    (91/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.192547181 seconds)
    (92/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.157684213 seconds)
    (93/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.079277151 seconds)
    (94/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.099074406 seconds)
    (95/286) benchmarking ("sort", BigInt, true)...
    done (took 0.218019897 seconds)
    (96/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.078901377 seconds)
    (97/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.119500926 seconds)
    (98/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.168823441 seconds)
    (99/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.167029955 seconds)
    (100/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.10786919 seconds)
    (101/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.121676816 seconds)
    (102/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.100012681 seconds)
    (103/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.097319752 seconds)
    (104/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.119982062 seconds)
    (105/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.096496357 seconds)
    (106/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.101945772 seconds)
    (107/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.115099543 seconds)
    (108/286) benchmarking ("sort", Float64, true)...
    done (took 0.20910741 seconds)
    (109/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.133301532 seconds)
    (110/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.167818325 seconds)
    (111/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.096840073 seconds)
    (112/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.101168108 seconds)
    (113/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.098264003 seconds)
    (114/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.127804584 seconds)
    (115/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.117908769 seconds)
    (116/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.078108416 seconds)
    (117/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.17384886 seconds)
    (118/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.096193743 seconds)
    (119/286) benchmarking ("sort", Bool, false)...
    done (took 0.192732526 seconds)
    (120/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.127680035 seconds)
    (121/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.077148512 seconds)
    (122/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.144660024 seconds)
    (123/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.101258221 seconds)
    (124/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.102510913 seconds)
    (125/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.129234628 seconds)
    (126/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.078511435 seconds)
    (127/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.11958478 seconds)
    (128/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.103744151 seconds)
    (129/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.119048418 seconds)
    (130/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.096607538 seconds)
    (131/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.101045713 seconds)
    (132/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.156077758 seconds)
    (133/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.078047569 seconds)
    (134/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.15877538 seconds)
    (135/286) benchmarking ("sort", BigInt, false)...
    done (took 0.232684392 seconds)
    (136/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.077029764 seconds)
    (137/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.202984524 seconds)
    (138/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.126461161 seconds)
    (139/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.142945043 seconds)
    (140/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.172737149 seconds)
    (141/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.101963562 seconds)
    (142/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.103596369 seconds)
    (143/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.119967623 seconds)
    (144/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.094857519 seconds)
    (145/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.115068998 seconds)
    (146/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.098820314 seconds)
    (147/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.119926838 seconds)
    (148/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.077410495 seconds)
    (149/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.109822337 seconds)
    (150/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.09706546 seconds)
    (151/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.121619996 seconds)
    (152/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.13994984 seconds)
    (153/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.091979551 seconds)
    (154/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.126910065 seconds)
    (155/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.215523569 seconds)
    (156/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.104885739 seconds)
    (157/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.112054312 seconds)
    (158/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.079160919 seconds)
    (159/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.125309853 seconds)
    (160/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.078258073 seconds)
    (161/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.077951366 seconds)
    (162/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.129029145 seconds)
    (163/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.078424044 seconds)
    (164/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.132364558 seconds)
    (165/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.119016356 seconds)
    (166/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.103985617 seconds)
    (167/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.129585433 seconds)
    (168/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.107976803 seconds)
    (169/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.201042092 seconds)
    (170/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.144886544 seconds)
    (171/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.101415367 seconds)
    (172/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.16576552 seconds)
    (173/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.118768994 seconds)
    (174/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.107448702 seconds)
    (175/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.129120754 seconds)
    (176/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.078945785 seconds)
    (177/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.190842506 seconds)
    (178/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.127967971 seconds)
    (179/286) benchmarking ("sort", Int8, true)...
    done (took 0.208137595 seconds)
    (180/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.106906689 seconds)
    (181/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.118954201 seconds)
    (182/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.110656535 seconds)
    (183/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.120831046 seconds)
    (184/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.140007154 seconds)
    (185/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.107220347 seconds)
    (186/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.198489446 seconds)
    (187/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.077189499 seconds)
    (188/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.10147697 seconds)
    (189/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.095997261 seconds)
    (190/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.120542814 seconds)
    (191/286) benchmarking ("sort", Bool, true)...
    done (took 0.207394658 seconds)
    (192/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.118713918 seconds)
    (193/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.09181825 seconds)
    (194/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.140125622 seconds)
    (195/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.08651546 seconds)
    (196/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.121165151 seconds)
    (197/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.078412551 seconds)
    (198/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.192893407 seconds)
    (199/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.094844079 seconds)
    (200/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.131465804 seconds)
    (201/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.117565632 seconds)
    (202/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.078634817 seconds)
    (203/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.120499836 seconds)
    (204/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.120214567 seconds)
    (205/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.130890506 seconds)
    (206/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.10503504 seconds)
    (207/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.179343858 seconds)
    (208/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.101840569 seconds)
    (209/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.080291505 seconds)
    (210/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.108784189 seconds)
    (211/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.078276262 seconds)
    (212/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.077633476 seconds)
    (213/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.102242763 seconds)
    (214/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.079723182 seconds)
    (215/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.160406399 seconds)
    (216/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.116508823 seconds)
    (217/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.098052098 seconds)
    (218/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.116653768 seconds)
    (219/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.099071232 seconds)
    (220/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.100343668 seconds)
    (221/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.078253142 seconds)
    (222/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.116508801 seconds)
    (223/286) benchmarking ("sort", Int8, false)...
    done (took 0.200863823 seconds)
    (224/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.127837062 seconds)
    (225/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.11779278 seconds)
    (226/286) benchmarking ("sort", Float32, true)...
    done (took 0.212576742 seconds)
    (227/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.135786708 seconds)
    (228/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.089485979 seconds)
    (229/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.142001715 seconds)
    (230/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.079366941 seconds)
    (231/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.101523414 seconds)
    (232/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.121601453 seconds)
    (233/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.114648104 seconds)
    (234/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.096741115 seconds)
    (235/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.11483872 seconds)
    (236/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.107687344 seconds)
    (237/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.132260016 seconds)
    (238/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.094174642 seconds)
    (239/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.120975682 seconds)
    (240/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.086909366 seconds)
    (241/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.109438116 seconds)
    (242/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.096166569 seconds)
    (243/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.194849606 seconds)
    (244/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.129967044 seconds)
    (245/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.095197561 seconds)
    (246/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.122802114 seconds)
    (247/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.141070148 seconds)
    (248/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.098231183 seconds)
    (249/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.118153816 seconds)
    (250/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.103775787 seconds)
    (251/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.100872377 seconds)
    (252/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.110445114 seconds)
    (253/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.114348523 seconds)
    (254/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.097139127 seconds)
    (255/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.101281542 seconds)
    (256/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.08063945 seconds)
    (257/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.117880506 seconds)
    (258/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.09864882 seconds)
    (259/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.101964325 seconds)
    (260/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.094811645 seconds)
    (261/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.119094026 seconds)
    (262/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.078781615 seconds)
    (263/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.121138979 seconds)
    (264/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.080315068 seconds)
    (265/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.124765786 seconds)
    (266/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.097883882 seconds)
    (267/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.115095601 seconds)
    (268/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.078323837 seconds)
    (269/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.116420982 seconds)
    (270/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.106283341 seconds)
    (271/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.102922041 seconds)
    (272/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.111591723 seconds)
    (273/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.118375329 seconds)
    (274/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.220143308 seconds)
    (275/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.097856179 seconds)
    (276/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.121277888 seconds)
    (277/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.079230494 seconds)
    (278/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.124066811 seconds)
    (279/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.078203882 seconds)
    (280/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.120660767 seconds)
    (281/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.078850857 seconds)
    (282/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.115805013 seconds)
    (283/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.09344329 seconds)
    (284/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.1286468 seconds)
    (285/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.078346663 seconds)
    (286/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.121980067 seconds)
  done (took 38.474742971 seconds)
done (took 39.356406121 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.104770942 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.157294801 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.103017292 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.145051953 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.127740111 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.108067243 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.125212732 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.102933797 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.129230446 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.130256997 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.106536987 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.109428357 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.102436496 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.126117024 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.103543167 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.147453384 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.129192319 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.098305183 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.11772394 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.095190378 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.117799504 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.095699855 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.119836528 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.086005025 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.12620433 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.124478319 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.098722727 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.127484356 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.096351644 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.114906931 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.09453528 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.139683893 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.093736354 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.127159799 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.097419131 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.118492967 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.102740788 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.125311499 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.096935243 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.11922354 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.0991728 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.120648953 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.120764083 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.099807144 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.119440192 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.094902352 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.117065803 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.106340529 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.147036187 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.095202528 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.123343792 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.101510271 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.128703114 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.122887246 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.0933776 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.117674584 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.096176525 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.145380329 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.094781642 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.118748459 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.099050954 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.123162537 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.093976095 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.118428372 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.094431233 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.129737235 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.123986563 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.095056738 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.124630816 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.098448948 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.113645993 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.096221618 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.117439836 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.092837242 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.124212243 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.102570514 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.113904182 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.096545965 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.122038677 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.097830678 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.11852003 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.093437306 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.121177045 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.096232541 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.116766451 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.086654152 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.116534941 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.097306462 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.11852681 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.095633661 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.121697105 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.097473483 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.121661439 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.125152456 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.095958094 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.119507349 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.095787334 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.119877759 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.097233267 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.117346288 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.090672999 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.117128027 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.100123403 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.116714409 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.09703349 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.12885599 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.09401114 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.122455012 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.095606515 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.11969981 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.130477129 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.102205905 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.119419928 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.096616894 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.115322828 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.098871959 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.116872722 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.09313161 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.117071197 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.096331624 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.120400185 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.095583502 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.118448205 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.098216893 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.129102337 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.114919838 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.094161521 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.116871207 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.09628172 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.12159764 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.097167739 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.116788438 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.095332628 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.113233774 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.093952443 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.116660785 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.099288752 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.117308583 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.095398035 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.119371988 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.09523295 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.123167131 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.096730043 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.120797104 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.094690183 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.111940455 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.096755831 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.1168996 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.097674746 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.119408372 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.095456231 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.115307327 seconds)
done (took 17.75623121 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.103647985 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.189107158 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.151767873 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.155760001 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.153170064 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.11372305 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.130538093 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.151738204 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.127251126 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.124862105 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.149196582 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.142107599 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.155762491 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.103725983 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.138002582 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.12660775 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.101933086 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.13664544 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.160807799 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.121857616 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.153781955 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.127749209 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.1473072 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.123586833 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.125962298 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.156115908 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.105971677 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.127708392 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.129535517 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.110527461 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.143258081 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.129430656 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.104947442 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.138147254 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.109556536 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.125224556 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.138048179 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.098672491 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.126415095 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.12565911 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.115787077 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.137226239 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.098356105 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.135266928 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.127259347 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.106337861 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.126012692 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.124679645 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.103260341 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.120495501 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.107624915 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.147748981 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.125392248 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.105178621 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.128275955 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.125845391 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.105087566 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.130059725 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.128114361 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.106288805 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.126082439 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.105127351 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.131514189 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.143172332 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.101362938 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.130137742 seconds)
  done (took 9.354424521 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.118517641 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.15737597 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.134195962 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.110511643 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.12979397 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.09087822 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.116387964 seconds)
  done (took 1.793336287 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.092740661 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.147063971 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.125912546 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.149834736 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.139456593 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.129829145 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.136881213 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.118543599 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.117194948 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.129920548 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.145498195 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.148273276 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.119170448 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.129909618 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.128423629 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.116868791 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.152921204 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.094214202 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.124972363 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.126900172 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.123178321 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.11514808 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.132487536 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.11856032 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.115443685 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.119096118 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.186751137 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.105098812 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.117301108 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.099729123 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.124348132 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.190753971 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.139453364 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.103887245 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.115694763 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.12152166 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.139888652 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.123079855 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.11944951 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.122988119 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.114655643 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.125383988 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.125737655 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.100137988 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.125734128 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.108112772 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.130822573 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.126415708 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.099416926 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.147331568 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.105193569 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.140142369 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.094942221 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.123095132 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.128264273 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.100184016 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.132214158 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.099101123 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.146353296 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.125891925 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.121079911 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.144832346 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.139469718 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.120467097 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.135978148 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.140102569 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.116012485 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.124248586 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.101580682 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.125888663 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.119679664 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.123029508 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.129064681 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.108379596 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.127678718 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.120917035 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.146968503 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.122666344 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.106845491 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.122157631 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.09659914 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.118891878 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.109899264 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.121982453 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.096400338 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.137364755 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.131354498 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.099992827 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.122765534 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.116831185 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.125060502 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.130634145 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.10583175 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.121761363 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.133840875 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.122894157 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.129761324 seconds)
  done (took 12.966103151 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.096023031 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.094738343 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.125902075 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.119940077 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.09633858 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.120099876 seconds)
  done (took 1.598182287 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.125649923 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.122758938 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.109994868 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.127327785 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.162869409 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.118760662 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.144789172 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.129112757 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.114888082 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.134831714 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.14225424 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.120821724 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.149816367 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.101519931 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.14431817 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.126482347 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.119639459 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.122897437 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.109202521 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.123456113 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.135802361 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.102212011 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.123161974 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.117212016 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.127192291 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.102904643 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.12547329 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.134393925 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.109862742 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.128916071 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.101226455 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.127413323 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.126741738 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.104748296 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.143940078 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.102591263 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.122962595 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.103739817 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.128639982 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.126723522 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.121190412 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.123514704 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.10847128 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.131575422 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.129956883 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.102498265 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.12913819 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.101331985 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.142850298 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.103551945 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.129777817 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.127575866 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.102699085 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.128814084 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.103349369 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.128768907 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.104157856 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.144357337 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.126655591 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.103023097 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.12393127 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.103059295 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.130801253 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.126172301 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.103152622 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.129288555 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.103052399 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.123152022 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.099350845 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.126118312 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.104050999 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.123926571 seconds)
  done (took 9.683278012 seconds)
done (took 36.328153118 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.686648255 seconds)
  done (took 1.630386415 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.858878215 seconds)
  done (took 1.804601508 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.580441686 seconds)
  done (took 18.557853806 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.543675736 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.636000816 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.984346945 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.169332068 seconds)
  done (took 3.279425023 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.972685897 seconds)
  done (took 1.93778268 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.315154279 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.26848688 seconds)
  done (took 1.540698169 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.832972724 seconds)
  done (took 1.789579211 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.584736146 seconds)
  done (took 2.539647888 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.355734043 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.204893745 seconds)
  done (took 1.537392261 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.590025254 seconds)
  done (took 1.557156031 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 15.29417294 seconds)
  done (took 16.257157074 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.238616296 seconds)
  done (took 1.212205396 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.307166642 seconds)
  done (took 1.269524201 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.684033921 seconds)
  done (took 4.65700303 seconds)
done (took 60.521756813 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.105072775 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.13325005 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.108280819 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.130247372 seconds)
  done (took 1.443127255 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.111315445 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.128413383 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.10746576 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.128123965 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.136531034 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.103275181 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.127693944 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.108545441 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.128491029 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.104704785 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.128699695 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.102582389 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.13093102 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.125108898 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.101175817 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.129564122 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.105980087 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.127982613 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.102415125 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.130231538 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.126438936 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.105097147 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.130390045 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.103363703 seconds)
  done (took 3.810228537 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.105372544 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.123174521 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.102554006 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.123868789 seconds)
  done (took 1.429153687 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.109573868 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.141872507 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.116400725 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.135316936 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.142232963 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.116441953 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.124326667 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.098675433 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.126857306 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.108711011 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.125921396 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.144862854 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.11650684 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.120013627 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.111635447 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.118638602 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.095156265 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.142904129 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.13403424 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.110204703 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.123978799 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.109218256 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.132042178 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.138418644 seconds)
  done (took 3.914130686 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.211711525 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.111299563 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.148966302 seconds)
    (4/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.179182274 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.124483828 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.122971511 seconds)
    (7/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.150768105 seconds)
    (8/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.106862318 seconds)
    (9/20) benchmarking ("sum", "Int64")...
    done (took 0.127882709 seconds)
    (10/20) benchmarking ("mean", "Int64")...
    done (took 0.098459244 seconds)
    (11/20) benchmarking ("mean", "Float64")...
    done (took 0.123764389 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.178279376 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.107085663 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.127712749 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.124545239 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.10625485 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.132987554 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.106486092 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.126571946 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.136738269 seconds)
  done (took 3.623529801 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.105647274 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.123433498 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.095190831 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.124121382 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.105923398 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.125572035 seconds)
  done (took 1.658253547 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.095424831 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.093304078 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.119102135 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.093443036 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.123493104 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.093682893 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.117619456 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.094362147 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.119379938 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.093731231 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.11868087 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.093222999 seconds)
  done (took 2.232585113 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.55264079 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.097350333 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.127079148 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.124667605 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.103634695 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.12252763 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.114317436 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.12369528 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.181103331 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.09857933 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.140169741 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.179590974 seconds)
  done (took 2.94541122 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.2180645 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103973983 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.282611654 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.383591754 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169553385 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.173781224 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.284728844 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.176567199 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.193778013 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.14420739 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211614535 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164771008 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.160152296 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187246776 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.120252132 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.191147355 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20724982 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.208417504 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154939995 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.222919558 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17284406 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.17490079 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.196902845 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.159458455 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.144512221 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166664547 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.098067211 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134425461 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180550863 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176320599 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.180341049 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156387739 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.144681171 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207427817 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.247182274 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.186550613 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.309840996 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.141504094 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.199142548 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.19883173 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.283790958 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.147627792 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202546442 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162023355 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.13827384 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188047792 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163630139 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.189978612 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.111024236 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.149672256 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216914907 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182368649 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.188772963 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.14329173 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.307412019 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158264337 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.124861027 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.187926467 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224198752 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207563365 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173655961 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.128822214 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.193864801 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200676447 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187703566 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.152205097 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.174823691 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.131042507 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184973776 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.211963584 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185263079 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174933966 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.219673351 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140308984 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170208778 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.186343294 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133747335 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186981129 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1666307 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.128635166 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156029074 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11623248 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135304401 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.19286545 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103038772 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.245917874 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115594285 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.324491557 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.214957621 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.165332016 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.168450385 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172021895 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175420872 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.152650439 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.099132847 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153912412 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.178731834 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164756706 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138499849 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137232334 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153620867 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.133007868 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159492315 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.103482687 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166950578 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.140679025 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175236954 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172084983 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.108136693 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.171251651 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.157666911 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.166155691 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178442404 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202148747 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139592042 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139379921 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210399702 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164700132 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.11700821 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.218547583 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.203474647 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.17984346 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116828611 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204200449 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203224664 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.120929283 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.23256197 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148656127 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.113371914 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.158776635 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165916385 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.164363071 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.162623219 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107841815 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.158380819 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.236179187 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.107071176 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.143076585 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181360975 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.104831905 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135142986 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151751381 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142994576 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.122917204 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.157707638 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.146045979 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163626687 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165883632 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.133458933 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166328275 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150091409 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229237653 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113496822 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.168298715 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.154935661 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.097062855 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.21280677 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202972208 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.109118166 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194052223 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.203190021 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204594949 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172778473 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137274368 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.189440704 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109490124 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.127085485 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173680133 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.167368746 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.168990522 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.199409594 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201108995 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.173816341 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.160322542 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157032933 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175117116 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.19191859 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165059221 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.154069907 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.172296497 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175752239 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.128595919 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.102825889 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.134183048 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145860173 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111801024 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139499412 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189293847 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170806013 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.195875539 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.168121472 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14718696 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.200127517 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.132941396 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172790463 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.180594104 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145985063 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.20235162 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198985465 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17445009 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.151033634 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179162147 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.099054217 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.133391117 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.13875273 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.173610937 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.113384678 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.1404598 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151250004 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.200687314 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183926135 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15744045 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.211836189 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174017867 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.236763815 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.10189365 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.171421673 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188737356 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165217021 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.193168649 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116305932 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.168418776 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.195668819 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151174106 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200521669 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169996538 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17662291 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.238960065 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.163391077 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111335844 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157616948 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17563337 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148800782 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.179622867 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.153597921 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114078301 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161040239 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.144335355 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.131059141 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188679199 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150575705 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188937544 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.17452104 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182350508 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.13382709 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150854848 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.140587922 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152027066 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.124959531 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178037917 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205111671 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151795184 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165817862 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19224667 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.136966416 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.321562077 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.209570479 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1928169 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146374502 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149964829 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.169568692 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.176637669 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171887553 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.191295853 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150292678 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187699687 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.164225022 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.12260921 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142339952 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.154487391 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.129313148 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.158345505 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.140506338 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.159786128 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.149127995 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191849911 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152023853 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.165553978 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172571868 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.127385046 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.163011587 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148187741 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.220101778 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165800494 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186705813 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.163331111 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.18553556 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195660712 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.130970994 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107570331 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.134053146 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.191719737 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111143507 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165771431 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.217365132 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206187884 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167287061 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177260782 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.144318084 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.103250903 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.167853619 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156555363 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.208117624 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151845792 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.143842438 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.208377477 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.158229565 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108358732 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.172371703 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.316854896 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.127946824 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191356946 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.128513111 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.287756484 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.136668466 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.111034044 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.178483375 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177578346 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.140194306 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.189435219 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175650966 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125048465 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.17840082 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146382858 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.197670068 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.245503826 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179043851 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18344126 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.150440186 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.165091134 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170251954 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194239991 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151232634 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.123878037 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171668257 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203226848 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.201816076 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.14156715 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171129333 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171994189 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.168425389 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18261979 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.142312303 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196041742 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13715953 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174370826 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118858958 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.131658924 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165792152 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.191605775 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140607076 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193098488 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165503363 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110772708 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135014959 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160366593 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166804414 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150980141 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.108891985 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185663456 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.135711157 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170441154 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188192037 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109227381 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.162355707 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.154557542 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137885036 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122450105 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152921704 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142361203 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.152937828 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.22495643 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.109574206 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192595109 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209278086 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172556086 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167122549 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.12361797 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.670107665 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.13353028 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198932682 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.125716373 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.22598953 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.127671899 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175727987 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.169612077 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157052244 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175773161 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157923331 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.227888094 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175074626 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.165271749 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109229642 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153037803 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153944857 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.137835635 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.130570572 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171420301 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147941094 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.144262044 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.163216897 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125562065 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.153291602 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.146842551 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202146908 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.155494154 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191549745 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.192621737 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.146824105 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175005024 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184543778 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136809413 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.168870267 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180214078 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.121276102 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1591916 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.139049713 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.141340019 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159855329 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.13406177 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17025342 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168013276 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.170355888 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171304081 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.113929209 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167269294 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150366272 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169286133 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.132437207 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.134966706 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.164794745 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138767995 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.13416312 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.134112928 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166517746 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.165993906 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133394193 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.153562023 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.224347171 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.105579377 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141127201 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.291033785 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171465361 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203452092 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.161020827 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112732047 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15253125 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164427613 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.160606157 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167539404 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.107555431 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140808692 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.138985982 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.188202943 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.172636027 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137157806 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192738292 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169707096 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.225146683 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.115407195 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.274076688 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.146928442 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.133901224 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.138464196 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.136479436 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119049422 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143281896 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153345188 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.199598554 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189390842 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.163128294 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.152720479 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.105765791 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.135438232 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110920025 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.180410565 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161325223 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166198468 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151828453 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.124080531 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123757241 seconds)
  done (took 81.18899801 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.153904364 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.148515609 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.156974593 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.204594674 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.174490875 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.263473996 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.2129385 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.235296236 seconds)
  done (took 2.615293075 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.106998575 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.14322258 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.148869242 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.132374813 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.13145216 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.35673442 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.14261399 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.104551357 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.191137231 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.14384853 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.129580261 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.626997729 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.130625654 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.129336712 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.1190871 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.104989152 seconds)
  done (took 3.896218952 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.391483554 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.554226649 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.071871955 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.255142583 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.236154774 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.185416866 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.761078569 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.17263802 seconds)
  done (took 12.694721835 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.131921054 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.147650855 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.146807289 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.174173996 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.159386008 seconds)
  done (took 1.841146198 seconds)
done (took 124.259761402 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.102107144 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.131563343 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.103334895 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.132535953 seconds)
  done (took 1.532376699 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.115697121 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.087231868 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.117510338 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.085629901 seconds)
  done (took 1.478752285 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.439334334 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.118029601 seconds)
  done (took 1.666321331 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.127375342 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.145892816 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.125360789 seconds)
  done (took 1.472258763 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.111566658 seconds)
  done (took 1.18109051 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.11372579 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.13957576 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.121845737 seconds)
  done (took 1.445634506 seconds)
done (took 9.85445582 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.118000717 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.440309275 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.391231781 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.145454871 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.732974737 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.384935134 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.044816568 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.166013201 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.173193073 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.097268801 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.144977856 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.677117278 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.066847903 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.344665092 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.05261264 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.369990666 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.681078283 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.126448771 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.105106865 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.127403597 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.993068729 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.125216353 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.098744776 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.127825352 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.677421523 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.430824597 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.097563599 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.386599308 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.09671134 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.131382446 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.414429852 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.097984151 seconds)
  done (took 17.133039416 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.100679243 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.189940046 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.10509214 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.128937657 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.101127125 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.129145711 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.135036702 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.11304877 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.189562718 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.12621438 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.117549094 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.125592304 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.102795788 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.126671972 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.119694401 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.125817346 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.099894884 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.129417331 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.103571238 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.129090445 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.145051088 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.09751972 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.127504638 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.100781258 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.125514718 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.111895285 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.126279781 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.111941093 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.126055179 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.103394785 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.13197584 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.098249178 seconds)
  done (took 4.981286141 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.147964036 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.200173909 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.135331372 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.133491708 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.180179261 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.128914359 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.213357133 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.166101598 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.191724186 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.09871142 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.146188934 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.09774633 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.164817283 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.098591328 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.15053166 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.097811768 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.130538135 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.127589366 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.1066617 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.127822999 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.118796573 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.125399178 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.100373677 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.128589383 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.098162906 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.140769109 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.098020575 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.141597013 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.099981934 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.133501561 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.130935614 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.099120895 seconds)
  done (took 5.337128566 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.106735567 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.134244427 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.1161132 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.143929203 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.099739555 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.134386821 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.106767304 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.129627174 seconds)
  done (took 2.051063949 seconds)
done (took 30.57611609 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.116501616 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.130491736 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.113058141 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.13952117 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.10772464 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.160032432 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.096867535 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.137904068 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.111913824 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.134807778 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.115086327 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.125560782 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.100140679 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.09646016 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.1405576 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.102801756 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.142716146 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.135833506 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.120877825 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.142553672 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.099975547 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.138731921 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.108352326 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.147982283 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.118811992 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.14856439 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.14226899 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.104162199 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.126403529 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.099495314 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.144111016 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.123631664 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.129338622 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.115100606 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.132773044 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.102183494 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.128368589 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.099226891 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.143103602 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.109439735 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.133076384 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.108897493 seconds)
  done (took 6.244884792 seconds)
  (2/6) benchmarking "iteration"...
    (1/39) benchmarking ("Set", "String", "next")...
    done (took 0.125976591 seconds)
    (2/39) benchmarking ("Set", "Any", "start")...
    done (took 0.171121477 seconds)
    (3/39) benchmarking ("IdDict", "Any", "done")...
    done (took 0.09492508 seconds)
    (4/39) benchmarking ("Set", "Int", "done")...
    done (took 0.125414051 seconds)
    (5/39) benchmarking ("Dict", "Int", "done")...
    done (took 0.095876936 seconds)
    (6/39) benchmarking ("Dict", "String", "start")...
    done (took 0.166929483 seconds)
    (7/39) benchmarking ("IdDict", "Any", "start")...
    done (took 0.162509816 seconds)
    (8/39) benchmarking ("IdDict", "String", "done")...
    done (took 0.096313778 seconds)
    (9/39) benchmarking ("BitSet", "Int", "done")...
    done (took 0.12507015 seconds)
    (10/39) benchmarking ("IdDict", "String", "next")...
    done (took 0.1237411 seconds)
    (11/39) benchmarking ("Dict", "String", "next")...
    done (took 0.154032899 seconds)
    (12/39) benchmarking ("Vector", "Int", "done")...
    done (took 0.095369315 seconds)
    (13/39) benchmarking ("Vector", "String", "done")...
    done (took 0.126057196 seconds)
    (14/39) benchmarking ("Vector", "Any", "done")...
    done (took 0.095564305 seconds)
    (15/39) benchmarking ("Dict", "String", "done")...
    done (took 0.125252008 seconds)
    (16/39) benchmarking ("IdDict", "Int", "done")...
    done (took 0.09544758 seconds)
    (17/39) benchmarking ("IdDict", "Any", "next")...
    done (took 0.151334433 seconds)
    (18/39) benchmarking ("Vector", "Int", "next")...
    done (took 0.151592259 seconds)
    (19/39) benchmarking ("Set", "Int", "next")...
    done (took 0.129750043 seconds)
    (20/39) benchmarking ("Vector", "Int", "start")...
    done (took 0.158767926 seconds)
    (21/39) benchmarking ("Dict", "Int", "start")...
    done (took 0.174075667 seconds)
    (22/39) benchmarking ("IdDict", "Int", "next")...
    done (took 0.130761137 seconds)
    (23/39) benchmarking ("Vector", "Any", "next")...
    done (took 0.163700209 seconds)
    (24/39) benchmarking ("Dict", "Any", "next")...
    done (took 0.151850003 seconds)
    (25/39) benchmarking ("IdDict", "Int", "start")...
    done (took 0.142394593 seconds)
    (26/39) benchmarking ("Set", "String", "start")...
    done (took 0.164148048 seconds)
    (27/39) benchmarking ("Vector", "String", "next")...
    done (took 0.148882375 seconds)
    (28/39) benchmarking ("Set", "Any", "next")...
    done (took 0.13387894 seconds)
    (29/39) benchmarking ("Vector", "String", "start")...
    done (took 0.157210163 seconds)
    (30/39) benchmarking ("Dict", "Any", "done")...
    done (took 0.124215882 seconds)
    (31/39) benchmarking ("Dict", "Int", "next")...
    done (took 0.130390967 seconds)
    (32/39) benchmarking ("Vector", "Any", "start")...
    done (took 0.159644094 seconds)
    (33/39) benchmarking ("Set", "String", "done")...
    done (took 0.095002269 seconds)
    (34/39) benchmarking ("Set", "Any", "done")...
    done (took 0.124491768 seconds)
    (35/39) benchmarking ("Set", "Int", "start")...
    done (took 0.169223798 seconds)
    (36/39) benchmarking ("IdDict", "String", "start")...
    done (took 0.13550175 seconds)
    (37/39) benchmarking ("BitSet", "Int", "next")...
    done (took 0.155210143 seconds)
    (38/39) benchmarking ("BitSet", "Int", "start")...
    done (took 0.168519404 seconds)
    (39/39) benchmarking ("Dict", "Any", "start")...
    done (took 0.130446783 seconds)
  done (took 6.4172346 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.107955662 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.144006556 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.125025453 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.199270124 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.170438048 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.113905811 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.14150555 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.116245684 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.157626853 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.126794993 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.110293717 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.160387639 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.115236159 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.139399236 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.104206959 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.151483817 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.148085794 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.101272795 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.134087072 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.118887997 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.146448804 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.11239515 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.143869768 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.109855703 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.128034831 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.107916415 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.135035273 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.140746918 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.107055548 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.136990075 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.103395957 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.1325655 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.102613517 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.137668189 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.103412956 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.135956619 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.121893305 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.139075159 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.141805406 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.135455629 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.138446715 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.103597581 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.151442567 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.175667865 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.102566417 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.136222648 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.110393296 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.137705513 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.098927505 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.147794488 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.113969504 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.129632509 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.143100323 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.099316258 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.098231995 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.137090724 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.10024462 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.132626173 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.136790779 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.104420123 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.149000397 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.108564162 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.135899841 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.101801917 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.135902538 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.098666867 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.127333012 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.103900704 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.15296905 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.104954031 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.16126542 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.128019836 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.105783609 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.136050205 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.105809466 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.13830905 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.099049561 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.135768103 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.107419604 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.133764098 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.108193498 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.131647479 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.10333456 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.147725658 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.142898999 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.108033919 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.133888104 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.106944232 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.131599171 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.101249245 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.143352666 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.100348865 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.133024149 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.109303068 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.130449242 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.10280746 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.135889515 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.104330067 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.127481805 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.119410367 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.134285353 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.098618378 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.147588522 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.129250218 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.103542336 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.137378776 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.112505461 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.127830745 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.105144125 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.134854037 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.099536432 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.134601267 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.10329213 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.128674321 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.113513139 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.140475813 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.104043724 seconds)
  done (took 15.749812094 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.249506802 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.22875927 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.203213383 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.315169189 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.152361774 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.157225851 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.225576908 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.150400542 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.13205584 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.170663188 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.185916274 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.197713262 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.185467254 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.197155846 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.188161576 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.099587533 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.163718449 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.183428721 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.228930323 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.312586014 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.1626402 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.114784163 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.172520053 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.170727464 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.149309569 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.115774344 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.154149608 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.151753206 seconds)
  done (took 6.22290971 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.116363943 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.170674454 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.137095429 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.130730199 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.157537481 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.130624921 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.105383541 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.100243901 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.145227003 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.146997563 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.10142949 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.137295817 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.105947244 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.140494074 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.099263448 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.139879883 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.108811333 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.140021549 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.102804133 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.135056911 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.147795859 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.118849778 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.135159872 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.105849007 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.147046982 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.136842992 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.101485383 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.152194588 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.141415821 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.129251325 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.127432086 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.108529942 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.145485231 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.099905248 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.137672475 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.102857168 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.133524916 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.101147108 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.133865062 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.096781344 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.130101881 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.090123997 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.13574584 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.144014281 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.107992117 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.130194056 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.105839102 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.133408365 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.10129164 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.126799982 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.102551019 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.102508146 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.136267718 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.147200338 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.104252622 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.130179053 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.104733011 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.10253869 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.140947301 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.102601718 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.12702266 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.104807179 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.138169271 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.135241472 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.109825443 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.136636822 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.105359103 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.132766554 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.10525471 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.139561561 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.102880665 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.144011197 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.096570273 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.133617976 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.110107984 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.143865628 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.103892432 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.136725068 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.136467645 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.100115887 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.090647233 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.12955615 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.08657379 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.135035517 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.099919445 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.136388482 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.10283913 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.136683873 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.146920404 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.110390003 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.138189317 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.101447923 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.136558859 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.104639792 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.127472274 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.104418413 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.148477504 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.149911309 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.098673028 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.126623893 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.122309349 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.131337335 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.097868563 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.087869838 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.140329773 seconds)
  done (took 13.977264221 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.12845535 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.169744544 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.101164972 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.151259051 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.166594738 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.129135197 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.145808769 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.108896739 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.131860002 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.120885894 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.138651266 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.1090457 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.13802773 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.145599584 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.130002148 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.144195179 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.101359277 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.146740443 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.104799569 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.172807497 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.150526007 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.127024374 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.163575344 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.142213652 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.107028643 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.155986689 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.131841759 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.145714803 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.112813698 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.165423953 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.144742099 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.132594102 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.165910069 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.136281657 seconds)
  done (took 5.782089546 seconds)
done (took 55.468910324 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.198680063 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.405457927 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.179677204 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.175073272 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.225858262 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.220278485 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.180801176 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.368450222 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.959920001 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.168822975 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.174086193 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.176132932 seconds)
done (took 27.535046803 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.233614856 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.811675141 seconds)
    (2/2) benchmarking "String"...
    done (took 1.501908267 seconds)
  done (took 4.416674271 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.175313811 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.176223381 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.429167272 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.17568753 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.194352943 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.195093906 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.183038165 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.181989757 seconds)
  done (took 15.638449491 seconds)
done (took 25.565151366 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.235412088 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.376628462 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.445522402 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.195843229 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.192436684 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.189074257 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.182197599 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.211361575 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.185504682 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.177317386 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 2.176729097 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.452655784 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.199552763 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.563140559 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.186214871 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.191136455 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.196564254 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.415803417 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.192828703 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.220188515 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.163353972 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.188121895 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.178755482 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.196954175 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.196122948 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.180535174 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.198175079 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.178836512 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.381862376 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.193328224 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.22042444 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.179433114 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.196607128 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.189836936 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.291880572 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.208000821 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.369547149 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.187262372 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.173244999 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.18232344 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.369905284 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.589274661 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.178557543 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.19352946 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.194438647 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.264207422 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.166081159 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.917382399 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.183682886 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.183592523 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.184286868 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.577445502 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.186118837 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.194789151 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.19152246 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.411792818 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.180763045 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.229672072 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.205260959 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.194293373 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.182220522 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.180053748 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.204862537 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.180996737 seconds)
  done (took 142.092102844 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.18023839 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.184485512 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.183463155 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.20274991 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.185850126 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.184960652 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.181207913 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.180827189 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.18635393 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.21320211 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.185600503 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.183095349 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.186193064 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.18262061 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.182184964 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.205017139 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.186732414 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.181686693 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.186019679 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.18169038 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.190118068 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.187601359 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.199647028 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.182024618 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.186725296 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.263908155 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.230416594 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.190282516 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.184717239 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.182962336 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.22912834 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.208845702 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.823541979 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.037688594 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.193124763 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.216721157 seconds)
  done (took 79.559685572 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.183302271 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.18434726 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.182195425 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.215422869 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.18304726 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.778981729 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.778174994 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.915151066 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.350656213 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.61982882 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.469748293 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.187101839 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.279586872 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.196792794 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.188297633 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.199829163 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.20929902 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.189072045 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.184772702 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.761233321 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.197535471 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.227906452 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.36184874 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.201865799 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.218689983 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.58325135 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.18593982 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.218570456 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.519643888 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.237082166 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.185489883 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.609109843 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.927617011 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.30107902 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.186947648 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.217593332 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.185994846 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.469291708 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.186018914 seconds)
    (40/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.186424498 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.187280916 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.189298934 seconds)
    (43/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.188910343 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.189031636 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.784339854 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.190161982 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.161352413 seconds)
    (48/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.912817614 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.190668128 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.186911368 seconds)
    (51/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.189611467 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.228880432 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.898328319 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.205590731 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.187805045 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.189843587 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.186153027 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.188142332 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.219447834 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.319543819 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.304097139 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.189510788 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.190451913 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.23018686 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.189704714 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.231732063 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.18868167 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.581876159 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.270475082 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.311635074 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.766441019 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.190211796 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.286898014 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.31100424 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.191543297 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.189670462 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.186527989 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.190039187 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.299813825 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.190900939 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.616503982 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.365233339 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.209886275 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.631784903 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.294039173 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.190796745 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.604600646 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.194674215 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.188197889 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.946497725 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.288983376 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.187771693 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.18859416 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.191812939 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.619414256 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.791397118 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.474071572 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.195287281 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.445136109 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.191321305 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.627741062 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.761326146 seconds)
    (103/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.192562714 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.874752798 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.189940952 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.306635396 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.370163549 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.208830245 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.188409909 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.637232881 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.19503278 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.243932691 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.195931381 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.592958505 seconds)
  done (took 364.672008396 seconds)
done (took 587.427862659 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.905553806 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.855620815 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.991118108 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.88680588 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.85045366 seconds)
  done (took 10.607523716 seconds)
done (took 11.720585537 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.390881368 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.388617 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.253129234 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.392917722 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.228582239 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.413643811 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.373830832 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.215455258 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.303369668 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.27740876 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.301139827 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.24908593 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.230291299 seconds)
  done (took 18.135785991 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.466309714 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.19877512 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.262327961 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.434122988 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.23775312 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.45959073 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.499491424 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.196411599 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.348506112 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.208024159 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.210483446 seconds)
  done (took 17.642629994 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.464004379 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.201538967 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.265192421 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.449403733 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.240956793 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.46256717 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.510406147 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.199047212 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.372984226 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.211123786 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.208764927 seconds)
  done (took 17.706847157 seconds)
done (took 54.602500888 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.232018944 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.361069974 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.226490033 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.205527164 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.203176167 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.206295977 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.210564613 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.204860468 seconds)
  done (took 10.968500581 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.203672207 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.201649702 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.201307266 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.200222649 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.199971957 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.201243847 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.20237193 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.203155762 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.201123191 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.203062709 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.20341201 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.202120219 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.200033772 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.201828387 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.204741883 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.203680025 seconds)
  done (took 20.354061295 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.205453687 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.199732034 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.202051672 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.199916385 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.202702589 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.202275834 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.200452554 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.200750502 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.20155713 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.201595385 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.202391231 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.202344924 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.203059005 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.201811346 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.201750873 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.200923168 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.202875586 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.2021476 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.205371051 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.203533233 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.202760347 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.206038047 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.204078459 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.204468878 seconds)
  done (took 29.984942743 seconds)
done (took 62.426513932 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.216825415 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.220456871 seconds)
  done (took 5.560490354 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.265196536 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.268662895 seconds)
  done (took 3.657711545 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.207107714 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.207084498 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.206586543 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.207276394 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.205667688 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.209433556 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.205948471 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.208016309 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.206024961 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.204883486 seconds)
  done (took 13.19343171 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.210042319 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.204433446 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.203536355 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.207477915 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.208788048 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.204478202 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.203987485 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.206902933 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.206477447 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.204327969 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.207522426 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.205039393 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.208408217 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.205541071 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.206392089 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.205834782 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.204749228 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.205202745 seconds)
  done (took 22.833902484 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.220537143 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.227679135 seconds)
  done (took 3.573083794 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.345013438 seconds)
    (2/7) benchmarking "second"...
    done (took 1.245832514 seconds)
    (3/7) benchmarking "month"...
    done (took 1.321883322 seconds)
    (4/7) benchmarking "year"...
    done (took 1.311019591 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.24651819 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.225622026 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.248358666 seconds)
  done (took 10.066726961 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.206767379 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.408015454 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.51042428 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.775165501 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.207467055 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.21037988 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.054549065 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.212819806 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.213865368 seconds)
  done (took 13.922709324 seconds)
done (took 73.928329492 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.200058698 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.283509872 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.212830595 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.217456136 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.54256575 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.230732406 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.204183644 seconds)
done (took 16.012033651 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.197450973 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.19665627 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.197357335 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.201003424 seconds)
  done (took 9.915515106 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.201741086 seconds)
    (2/2) benchmarking "read"...
    done (took 1.556437269 seconds)
  done (took 4.883164495 seconds)
done (took 15.921986779 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.209894206 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.210641607 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.207909543 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.209670612 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.207696121 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.207398361 seconds)
    (7/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.208841256 seconds)
    (8/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.207593536 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.208309595 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.210091155 seconds)
    (11/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.21047005 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.206989791 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.211089918 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.211524236 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.209210148 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.207180818 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.212235472 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.208003302 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.207853102 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.207784912 seconds)
    (21/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.20744309 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.211204503 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.209189388 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.20987917 seconds)
  done (took 30.142222092 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.209853966 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.208414774 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.211365399 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.212164637 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.207970584 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.211610232 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.211911397 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.208716797 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.210058077 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.210996714 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.208308755 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.210202826 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.212059717 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.211556201 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.212499965 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.210275607 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.209481808 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.209783222 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.212359289 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.209882063 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.213376902 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.210495405 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.211332862 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.211951076 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.209975941 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.210439069 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.211223771 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.212718902 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.211519047 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.210485654 seconds)
  done (took 37.451082853 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.218253883 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.218701213 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.21400608 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.213368075 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.213408164 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.212891001 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.2147697 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.210874086 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.214882723 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.215645865 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.216647116 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.214433722 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.211807799 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.213644135 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.211832727 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.213154922 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.216089694 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.215546749 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.214981723 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.214343554 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.214785527 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.211124521 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.213305671 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.215422928 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.213622841 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.212320118 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.214075733 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.212191167 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.212692527 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.212488579 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.213863941 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.214389794 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.214113628 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.215496902 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.214137705 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.215461078 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.218181451 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.224169728 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.214192236 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.218598742 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.214005163 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.216333716 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.215049516 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.216091382 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.217392055 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.215893304 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.2158664 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.213976048 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.216102006 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.213234852 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.214158291 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.216413709 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.216037788 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.216020585 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.216409722 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.21660253 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.217397466 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.216915731 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.21650557 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.21655476 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.217303101 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.216559666 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.215491377 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.21517951 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.218375446 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.216557293 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.216309359 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.215738382 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.217199113 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.215508489 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.214738114 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.218932453 seconds)
  done (took 88.63072383 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.217960142 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.213398892 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.214143042 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.210841399 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.214483055 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.21752314 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.218062336 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.217081068 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.213259839 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.216097173 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.215998246 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.215432924 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.213169296 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.218846393 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.218882491 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.216614332 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.217099973 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.215376232 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.217744099 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.2175455 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.215903812 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.216865476 seconds)
  done (took 27.885993529 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.218002159 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.218308752 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.216038594 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.221569924 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.219933683 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.219683716 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.220021218 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.219948738 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.219707366 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.2169449 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.215448177 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.219134519 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.217702227 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.214790822 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.716608094 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.21559652 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.219730199 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.220964244 seconds)
  done (took 23.56349037 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.21698286 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.215702211 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.219016476 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.217658021 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.216467512 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.220049669 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.217437246 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.219343813 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.220999565 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.216242969 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.220931398 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.218116539 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.219548554 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.215968681 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.221141458 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.215468147 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.220481266 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.218209688 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.219839394 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.215965789 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.219863404 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.219512356 seconds)
  done (took 27.943907308 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.223219518 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.220790921 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.219650037 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.218117694 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.217034218 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.223639919 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.219042349 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.218703389 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.221946953 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.22135415 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.218102552 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.221363193 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.222295543 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.218464033 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.217765256 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.220107833 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.2217351 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.219777302 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.221101381 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.217236743 seconds)
  done (took 25.539929294 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.221486662 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.2234166 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.222495598 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.224411438 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.224451933 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.226770293 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.223506713 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.224602167 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.223259261 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.225294166 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.223196868 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.224668576 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.224465114 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.224693356 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.226755972 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.224759363 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.225232786 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.226255891 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.22374932 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.227110009 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.225790496 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.22587793 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.225105348 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.227402997 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.226436246 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.225061791 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.223233648 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.228330212 seconds)
  done (took 35.437868017 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.228092862 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.222995275 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.224897972 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.224100989 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.22316201 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.22353062 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.222924332 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.223491312 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.226224397 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.22308443 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.224158924 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.225397077 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.22543591 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.22492265 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.224899137 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.225773839 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.226443211 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.221485257 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.224498582 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.223797277 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.227055676 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.226694455 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.226637944 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.224621526 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.223908837 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.226699461 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.223298756 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.222959643 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.226113567 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.2235627 seconds)
  done (took 37.881607876 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.267298673 seconds)
    (2/2) benchmarking "in"...
    done (took 1.267928502 seconds)
  done (took 3.678791887 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.221507686 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.225660042 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.224510736 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.224384244 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.223774444 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.224400327 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.226691243 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.224513938 seconds)
  done (took 10.937943081 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.227121959 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.227039921 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.227563952 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.229514968 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.230149395 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.229555897 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.233585833 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.244629118 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.226226943 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.230500294 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.235404582 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.233800512 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.229056079 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.226717257 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.22556416 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.229934382 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.228927178 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.228185655 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.227309481 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.226426838 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.228489963 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.228592392 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.229774103 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.226194597 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.229405416 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.238688445 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.233972684 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.230251854 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.228940439 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.232910659 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.231019621 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.225487611 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.230193519 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.231685402 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.231913453 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.231824056 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.238452385 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.251157351 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.236727687 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.232401428 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.233393897 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.228610224 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.23051714 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.233023415 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.234005077 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.230022442 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.234014252 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.230242375 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.231621706 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.237257464 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.239385366 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.23214308 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.232156202 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.236548145 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.231993674 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.239382449 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.255633879 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.23679029 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.244674378 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.244543481 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.248016291 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.262043991 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.235580644 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.23411636 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.247750151 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.261510465 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.242734906 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.251186055 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.230492979 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.23232799 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.240560926 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.249104675 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.261126709 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.234539674 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.237725843 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.235724022 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.234700525 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.234705897 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.242142436 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.258427319 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.234098241 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.236689604 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.246087826 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.260187586 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.238234968 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.234495707 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.236338968 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.238982298 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.239677225 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.24366689 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.257032655 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.23692994 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.234200281 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.236060047 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.237326731 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.236897068 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.235818687 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.237961439 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.231735875 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.233753272 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.236362066 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.241045187 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.242857213 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.236625308 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.23850429 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.24188242 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.237739299 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.236645394 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.243941386 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.235151435 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.236351516 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.240471373 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.245075356 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.234025965 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.237278757 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.247271006 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.2355015 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.239496897 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.236551955 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.238381305 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.247962728 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.2666185 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.235510574 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.238628806 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.242903891 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.2506808 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.237599003 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.23855853 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.237329242 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.236715067 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.237102344 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.241435246 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.240009645 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.240742428 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.237019579 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.240471446 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.235075466 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.238289819 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.237941563 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.240289589 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.239240956 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.237115395 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.242129934 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.238334905 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.237935536 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.240482592 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.244295608 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.238212059 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.242370225 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.241132568 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.235262438 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.241663697 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.240713645 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.241794877 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.239957089 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.243157936 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.243280355 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.24046903 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.238838208 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.240399678 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.240489272 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.242348949 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.247155509 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.239941975 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.245284968 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.238913526 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.237840555 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.241384253 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.24049307 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.240428938 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.244358747 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.240604332 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.248715091 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.249313172 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.243127159 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.239505642 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.244892218 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.242361526 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.242244792 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.24043622 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.247287687 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.247765301 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.243238414 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.248878254 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.242319164 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.242349124 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.244560538 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.243034764 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.244953573 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.243148743 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.247821526 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.25269538 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.256694657 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.27002788 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.243950386 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.247033076 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.244259783 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.247144767 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.247065914 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.243916816 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.245929311 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.244426023 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.24562728 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.246132755 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.245588667 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.245035732 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.24383883 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.242739334 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.247070156 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.242104755 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.247547099 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.24677012 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.244796881 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.245631696 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.24573927 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.247895879 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.247594016 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.243550843 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.243584003 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.245194602 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.247800992 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.2456946 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.250563011 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.243045535 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.248655753 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.24696681 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.24722275 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.243666932 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.245516308 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.247988453 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.245729424 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.255686873 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.267977443 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.250416163 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.255779246 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.26696644 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.249205868 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.251803942 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.24795221 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.245462831 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.249929883 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.256434624 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.246838593 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.247463166 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.24844477 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.250797329 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.248468558 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.253070155 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.24775462 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.248947806 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.248638705 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.250460086 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.247091526 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.247652038 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.249355284 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.251029932 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.250422161 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.24737383 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.250206942 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.249786263 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.24621549 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.251225487 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.251229694 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.253611306 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.261282858 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.256251184 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.245433493 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.250742813 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.248108985 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.252823743 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.248108818 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.251737852 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.252374936 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.262910537 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.277544692 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.25826674 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.270761392 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.249516098 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.255253033 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.272658811 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.255555327 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.250492594 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.250643376 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.250468896 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.249516593 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.249865655 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.250243086 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.254089956 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.251391137 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.254051815 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.257013663 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.252849557 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.251637455 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.251623286 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.251217286 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.253268037 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.25296722 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.255929788 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.252411918 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.253920974 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.249487988 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.24990118 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.261158998 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.274132492 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.253182219 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.25249663 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.251211765 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.252172046 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.252718072 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.251654028 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.257424754 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.260422232 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.254135047 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.262878615 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.252992935 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.262858942 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.252969795 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.255204231 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.262688264 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.251874371 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.250774047 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.253871891 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.253772324 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.261154961 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.274673748 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.255903668 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.259328946 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.253606863 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.255842927 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.257152239 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.255314342 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.256149645 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.251427862 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.263955338 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.281577169 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.261474182 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.259825814 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.253278962 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.256591632 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.25624696 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.255492295 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.259840577 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.256940422 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.259369661 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.257472594 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.258240687 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.259453462 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.255664215 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.258001917 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.251960375 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.258490438 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.260860094 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.280842828 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.261334257 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.257657455 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.25994223 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.254147629 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.264533832 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.2781789 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.255437539 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.256426698 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.256945788 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.259071288 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.25605638 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.256984622 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.255357406 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.256171948 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.258166101 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.256097876 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.259501228 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.256509214 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.257857062 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.258282311 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.268298231 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.285292722 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.259335632 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.262431568 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.256116132 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.258454473 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.261106248 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.260275769 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.256575031 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.262150208 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.269828523 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.264741229 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.258530692 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.260097945 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.26079098 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.259323343 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.256988012 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.259718596 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.257731005 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.256044925 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.262734286 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.261215805 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.261247456 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.259662996 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.256648441 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.259786805 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.262282078 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.266336288 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.258346547 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.259138478 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.2591956 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.260575629 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.256313775 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.259213824 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.257943055 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.262130449 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.259718621 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.263843207 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.270078309 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.26863712 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.263636201 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.25980631 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.264125794 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.259495702 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.262861209 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.262057636 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.260059475 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.261746518 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.261551051 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.259121397 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.260133726 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.260021936 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.26058549 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.261221926 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.261114848 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.264702359 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.265670164 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.261299659 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.257825293 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.261516096 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.26056038 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.25901867 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.260398387 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.267950496 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.266651932 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.272440131 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.267884976 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.266253887 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.26767137 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.264606967 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.269393975 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.262323656 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.262661555 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.260316427 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.262962601 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.261798538 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.264169165 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.263120209 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.266525237 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.260622332 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.265593584 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.268515839 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.286044116 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.260097519 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.268709842 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.265603333 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.261185971 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.258195034 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.26357676 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.261026383 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.267747399 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.28480371 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.261608173 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.265069095 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.262532605 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.264580316 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.266805313 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.263444711 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.261175374 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.262002818 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.26503302 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.261723958 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.261456405 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.257492981 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.261561552 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.263944763 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.267806474 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.272020557 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.261473553 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.262435959 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.26331149 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.262435424 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.263579765 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.264257685 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.260637011 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.257546226 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.264257097 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.26430376 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.264073447 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.267690296 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.265797788 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.264908176 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.263633658 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.265976223 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.267703386 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.27839187 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.272350479 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.26206686 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.265176712 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.266447971 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.265245774 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.262867991 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.265850537 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.267545737 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.266660232 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.26460069 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.265913325 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.263132598 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.268811721 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.282559657 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.286117305 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.262882701 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.267639985 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.269255777 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.262045991 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.262360246 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.263224323 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.267913343 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.269070694 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.273739683 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.264915844 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.272504095 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.285380528 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.270289353 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.269971818 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.270023105 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.272956822 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.263592413 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.267569634 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.268263153 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.273762932 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.283832112 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.268736522 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.275693245 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.299758803 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.289819492 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.266957122 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.267324889 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.265656003 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.269007466 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.270307429 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.266126548 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.267445342 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.267777234 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.266543613 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.269619424 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.272429575 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.268064083 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.267650501 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.269232815 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.267937907 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.271473389 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.263898035 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.266788252 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.269305545 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.267023172 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.269201055 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.267288212 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.270634337 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.282444524 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.292977988 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.267986473 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.267297587 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.266393963 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.270342166 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.271503941 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.279592483 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.278415418 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.269837688 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.269648728 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.267825764 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.269342531 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.269315361 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.271565786 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.267096607 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.270357347 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.266426916 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.283386507 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.296396417 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.273791489 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.271871032 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.269930253 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.267860428 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.270440032 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.271231966 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.269895095 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.271682052 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.27138468 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.273460165 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.268407782 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.269466913 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.272327991 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.277959731 seconds)
  done (took 748.334719579 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.266892802 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.266314268 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.265917045 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.266857065 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.266881886 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.266779073 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.265962248 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.266646044 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.267357263 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.269033414 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.268288773 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.267776449 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.266404154 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.268332426 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.267562385 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.269868322 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.26838932 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.271124629 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.269006947 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.267086326 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.2694328 seconds)
  done (took 27.80323602 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.272706893 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.267796729 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.272011897 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.273184492 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.26965783 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.27199118 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.273324334 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.272136008 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.274491619 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.27255678 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.27343564 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.271640299 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.267900077 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.268225159 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.270898387 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.273345819 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.27186054 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.270715429 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.273169176 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.271407271 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.273738149 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.270796799 seconds)
  done (took 29.157735146 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.27548913 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.273452739 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.272966587 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.271218976 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.2722704 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.27136668 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.275157391 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.275468551 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.273166443 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.275436367 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.275545771 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.278519395 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.282385557 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.284883777 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.277167404 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.273984801 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.274582732 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.273480458 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.275622239 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.274104775 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.279154164 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.293556494 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.273116603 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.27374056 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.277437228 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.275734876 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.274028122 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.276436968 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.277224678 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.279765191 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.279510419 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.275550722 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.279012331 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.274480076 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.275770372 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.283212298 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.277715281 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.275470425 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.27649813 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.285321061 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.299278622 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.279614406 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.285309422 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.295709279 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.278787223 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.278068694 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.287300721 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.276689015 seconds)
  done (took 62.535533224 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.880049298 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.905708585 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.920644633 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.909842073 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.89612259 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.922368695 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.926691537 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.927373985 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.916037174 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.91276522 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.929729836 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.899386909 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.93476733 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.900673911 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.902358063 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.898462904 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.916836353 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.90649197 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.912118205 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.908829099 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.895709576 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.92172228 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.900345779 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.92072532 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.924229777 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.907139676 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.929122372 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.916547609 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.924347498 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.908013717 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.908024163 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.941950886 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.916326943 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.918649681 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.903719666 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.920196608 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.927362238 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.919502696 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.897828269 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.90063195 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.92078448 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.904388164 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.906948422 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.926297727 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.913363661 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.900361858 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.909647893 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.913717212 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.899888741 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.93020969 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.929673757 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.936104815 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.901088465 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.901341455 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.913833482 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.907288607 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.931773033 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.910843706 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.912235726 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.914536281 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.909684174 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.919844656 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.905278393 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.912933674 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.916182085 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.903140312 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.900864241 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.908737545 seconds)
  done (took 131.277330605 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.278216845 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.281643167 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.281604808 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.282829651 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.28007798 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.281025519 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.284569643 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.280941245 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.281214772 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.282243938 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.281219442 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.281297129 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.285473945 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.282385426 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.284366601 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.282428866 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.282051046 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.282093575 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.283338575 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.283968584 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.284639567 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.280067604 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.283181018 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.281879839 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.281313364 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.282521159 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.284576768 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.285179944 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.28706163 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.283099562 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.285551085 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.283270741 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.28211705 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.28205032 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.283941772 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.285841241 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.284711044 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.279344732 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.278374718 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.277257916 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.277200829 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.278267524 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.280521946 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.279414484 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.280676857 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.280473195 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.281871389 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.281163647 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.278916568 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.279088419 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.282243113 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.276623792 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.280558427 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.28120273 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.280022649 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.279734597 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.280836391 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.279029628 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.280529324 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.280807009 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.282204489 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.281407679 seconds)
  done (took 80.65303898 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.280824703 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.277530744 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.278392185 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.277203541 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.279426709 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.275504502 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.279412717 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.279913748 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.278221913 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.284055915 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.280892234 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.277385867 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.278418704 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.282969536 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.278337515 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.280024968 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.281696622 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.277129546 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.284478943 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.280773613 seconds)
  done (took 26.781629126 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.278226126 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.281348345 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.278675 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.280670959 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.281975054 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.27710473 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.282070138 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.280458578 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.281886686 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.284525296 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.283798587 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.284678606 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.279224887 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.281844315 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.286897803 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.279486194 seconds)
  done (took 21.692015308 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.282763585 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.286125328 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.286005844 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.284785353 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.282812533 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.282651203 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.283776902 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.279924364 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.283966373 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.283852471 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.286882457 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.285772598 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.284697262 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.285200056 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.281336203 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.286165089 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.284437031 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.28221171 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.285848753 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.285088021 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.282958876 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.282141485 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.283381538 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.285469288 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.284240295 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.283296007 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.283513219 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.282184589 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.282440348 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.287703424 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.28261213 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.28425945 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.282226183 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.283697735 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.285060053 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.282549918 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.286503524 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.283463124 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.287698947 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.285416155 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.284108168 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.282423516 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.283287688 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.286143953 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.284944989 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.284543511 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.283751233 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.286108268 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.287154089 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.283441919 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.286487256 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.288863664 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.288039395 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.286803468 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.288821984 seconds)
  done (took 71.843705204 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.28569859 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.286414681 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.281725931 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.286598396 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.283090955 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.283329654 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.287196026 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.284537004 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.284300292 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.28624175 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.285432736 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.28796693 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.286255492 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.285856869 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.286130575 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.287755409 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.287642867 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.283888941 seconds)
  done (took 24.334705714 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.284539563 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.284137888 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.289162796 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.284519522 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.284958509 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.289895318 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.283474868 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.29064638 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.286926269 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.285103582 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.285122499 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.287681425 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.289298241 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.289549131 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.285334535 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.287510667 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.287855245 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.289569476 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.286326404 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.287631562 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.289914374 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.289845392 seconds)
  done (took 29.513522045 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.287491946 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.288109131 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.287200621 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.30488105 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.3156487 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.287515174 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.288496251 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.289099185 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.312484846 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.35159181 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.346453524 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.312292999 seconds)
  done (took 16.865839744 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.286078942 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.288679589 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.29030893 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.290047991 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.290642313 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.290055489 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.285935734 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.287644529 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.292222055 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.287679853 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.288817654 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.290415919 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.288548498 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.289841187 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.291238057 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.288775386 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.28969266 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.289974041 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.288657589 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.290554541 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.287704214 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.291594566 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.289552018 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.286283547 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.289583871 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.28930965 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.290745693 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.288467731 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.287033439 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.285265028 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.293034344 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.283766323 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.289767657 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.287714949 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.290502432 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.289975336 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.288752253 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.292455933 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.292274319 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.288529012 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.292262157 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.291095794 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.292093457 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.290502302 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.291081365 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.289168954 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.289428327 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.290307074 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.288028594 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.292252347 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.292251178 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.286676954 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.289168151 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.295048192 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.289198495 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.294393093 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.287156066 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.290352427 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.292240092 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.290187498 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.288759044 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.291745234 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.289582878 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.29049846 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.292663246 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.289987776 seconds)
  done (took 86.322781921 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.289311236 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.289047124 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.288806218 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.291492191 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.289809287 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.291182645 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.292953412 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.29002693 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.288660565 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.289380944 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.291417616 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.289062714 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.291935448 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.291710148 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.288580254 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.289436003 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.290160389 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.290220889 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.291363021 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.294057077 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.288821685 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.291658812 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.291934744 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.291476651 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.29149916 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.295010322 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.285082064 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.290889513 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.29215573 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.289757938 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.289557432 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.290746651 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.291618132 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.292299295 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.288066324 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.286134544 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.288930127 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.290629549 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.289144852 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.295376669 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.290963361 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.292939857 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.289037639 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.286888881 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.291515299 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.29068096 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.290501754 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.293148934 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.292429491 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.292111216 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.287461656 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.291790657 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.289039274 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.287898704 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.29233542 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.288012558 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.289392047 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.286511516 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.292067866 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.293695934 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.291669179 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.288595612 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.293440211 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.288788477 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.290600982 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.286871372 seconds)
  done (took 86.368059584 seconds)
done (took 1793.700515821 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.45465398 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.409235774 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.288779749 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.300432335 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.290947644 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.312909112 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.305176794 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.287075403 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.290549901 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.287339507 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.290087706 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.482797584 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.287100179 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.288403659 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.289542212 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.386323092 seconds)
  done (took 26.454427753 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.317308031 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.297236736 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.412942154 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.314000061 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.320873807 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.489779978 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.351663864 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.301321273 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.47637084 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.33987312 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.290395816 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.319557956 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.294282696 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.288871422 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.314351952 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.490524746 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.554722795 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.282305335 seconds)
  done (took 28.658436195 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.766255556 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.304316286 seconds)
  done (took 5.266069254 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.319292644 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.297863482 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.300815864 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.294874537 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.291268706 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.28725398 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.29513716 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.287169571 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.295034667 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.432019998 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.298236962 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.30601473 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.317728098 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.295964005 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.297664992 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.333263155 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.464758482 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.297835382 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.289842699 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.299188492 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.297693598 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.388039609 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.342793728 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.297186425 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.42438929 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.293355801 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.294914294 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.302963496 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.422429 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.292800554 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.290485306 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.294099845 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.295149097 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.230059289 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.744786549 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.28206042 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.317988009 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.305622376 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.293674068 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.437494152 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.299403559 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.300639585 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.285148854 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.716637037 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.432013713 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.423284743 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.30474357 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.311024021 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.295003423 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.366838737 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.298319812 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.295825243 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.342787378 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.103610908 seconds)
  done (took 83.131429595 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.289333677 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.284920486 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.466126902 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.310570815 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.283422473 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.283602229 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.284462644 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.582451368 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.306182546 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.285833369 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.582064509 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.860833869 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.306342442 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.361683026 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.127141532 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.3490782 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.28913516 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.304590476 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.285401248 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.291049297 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.842354866 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.295628464 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.286866857 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.383892245 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.32922927 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.817772571 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.290326606 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.302499789 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.286671778 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.284134521 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.816668274 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.307761203 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.32468083 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.289039282 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.558820464 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.673486086 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.633987401 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.292248669 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.337901507 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.290106553 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.318001451 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.796371414 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.652576249 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.288136367 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.292223795 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.80590609 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.28672378 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.297547861 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.288402846 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.553412036 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.294409136 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.297293465 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.30687227 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.308271628 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.291115308 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.409568092 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.365169142 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.817168528 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.292090119 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.303638024 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.318400791 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.293438181 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.294674368 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.29467981 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.305343008 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.658649194 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.498273415 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.298571798 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.658917092 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.825827071 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.306869463 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.89231282 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.305211258 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.298972912 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.480734639 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.290992916 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.305243579 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.841097185 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.309701515 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.292059293 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.64626684 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.292765643 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.589367747 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.310712685 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.290611909 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.859967798 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.300027567 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.30009045 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.292781606 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.302563835 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.293057557 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.29981134 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.593525091 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.323757212 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.295935176 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.290921613 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.34503418 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.292867802 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.292097369 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.29474869 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.881499454 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.319792886 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.29487614 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.294418865 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.293309007 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.293706248 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.293452569 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.297548969 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.57067254 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.295706972 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.320656223 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.294925393 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.293542172 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.308070564 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.396041123 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.304345172 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.603576369 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.2959327 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.307946573 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.296989544 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.295181182 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.343238145 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.294538196 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.301133527 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.170104002 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.588364003 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.316858836 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.308801345 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.297838341 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.299903494 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.294950178 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.294418654 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.335655706 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.294818248 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.062262896 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.312295919 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.299252386 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.297614951 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.30878378 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.292137418 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.293821494 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.297544642 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.589176402 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.57773288 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.490364742 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.29548836 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.301631488 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.044624214 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.329280986 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.475243819 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.321202246 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.29454505 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.544768256 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.518962378 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.296650381 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.293458878 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.291939264 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.557257486 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.297521942 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.616939497 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.845784925 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.313386409 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.300081133 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.064650438 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.023025722 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.303316806 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.299935583 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.583735376 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.313025396 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.298062176 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.300278317 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.299814732 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.310710607 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.319405123 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.304052543 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.300045168 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.297411143 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.626010947 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.49356389 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.322981276 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.30370546 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.812480657 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.302236083 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.299669189 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.301295064 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.30464062 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.299831017 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.38249896 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.300511329 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.346314906 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.303057187 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.296777384 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.832810541 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.299644976 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.302430216 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.49603557 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.995437809 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.312601537 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.302909957 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.312687169 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.192474748 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.83814858 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.336485602 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.61026524 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.30013735 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.339480266 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.305266191 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.373789713 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.834208081 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.301300397 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.319115842 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.96333644 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.31427127 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.71563494 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.300141707 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.303692738 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.911636066 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.313063542 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.306775743 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.305692787 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.304612765 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.600055712 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.304135995 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.322465996 seconds)
  done (took 490.267258867 seconds)
done (took 634.971243327 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.303101053 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.305846504 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.290890442 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.304645998 seconds)
  done (took 10.415470859 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.312306704 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.31064017 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.308984132 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.310232034 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.310498424 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.310133573 seconds)
  done (took 9.075318564 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.303661078 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.308347214 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.30906146 seconds)
  done (took 8.135372599 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.515723104 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.335309735 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.633744058 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.323406231 seconds)
  done (took 9.022721026 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.313620625 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.311458263 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.315070207 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.312877685 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.316465752 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.316553684 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.31611728 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.31428561 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.313699363 seconds)
  done (took 13.042161036 seconds)
done (took 50.901370036 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.291028453 seconds)
    (2/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.293020768 seconds)
    (3/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.974956659 seconds)
    (4/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.316510742 seconds)
    (5/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.320940585 seconds)
    (6/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.32683998 seconds)
    (7/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.948421894 seconds)
    (8/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.328455591 seconds)
    (9/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.315460829 seconds)
    (10/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.308728819 seconds)
    (11/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.35430805 seconds)
    (12/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.321422854 seconds)
    (13/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.306480904 seconds)
    (14/286) benchmarking ("map", identity, Float64, false)...
    done (took 1.374843684 seconds)
    (15/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 1.430547152 seconds)
    (16/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.32535599 seconds)
    (17/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.355532959 seconds)
    (18/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.362126977 seconds)
    (19/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 1.480385449 seconds)
    (20/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.129051065 seconds)
    (21/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.310737392 seconds)
    (22/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 1.475989834 seconds)
    (23/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.967996541 seconds)
    (24/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.324804144 seconds)
    (25/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.004786131 seconds)
    (26/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.965772012 seconds)
    (27/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 2.340352261 seconds)
    (28/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.397793769 seconds)
    (29/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.408593887 seconds)
    (30/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.295967733 seconds)
    (31/286) benchmarking ("sort", Int64, true)...
    done (took 1.925981706 seconds)
    (32/286) benchmarking ("map", identity, BigInt, true)...
    done (took 1.455745565 seconds)
    (33/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.322473719 seconds)
    (34/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.324682684 seconds)
    (35/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 1.643508619 seconds)
    (36/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.330856539 seconds)
    (37/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.443240497 seconds)
    (38/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.326395068 seconds)
    (39/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.43299497 seconds)
    (40/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.346159881 seconds)
    (41/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.330030494 seconds)
    (42/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 1.512044456 seconds)
    (43/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.471645394 seconds)
    (44/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.340555512 seconds)
    (45/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.050829359 seconds)
    (46/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 1.526777575 seconds)
    (47/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.325052235 seconds)
    (48/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 1.394511966 seconds)
    (49/286) benchmarking ("sort", Float64, false)...
    done (took 1.538967093 seconds)
    (50/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.424685387 seconds)
    (51/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.454346703 seconds)
    (52/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.333574499 seconds)
    (53/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.331656361 seconds)
    (54/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.416972606 seconds)
    (55/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.327623977 seconds)
    (56/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.318607465 seconds)
    (57/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.355848224 seconds)
    (58/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.344265684 seconds)
    (59/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.33473173 seconds)
    (60/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.295951151 seconds)
    (61/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 1.503497272 seconds)
    (62/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.332489493 seconds)
    (63/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.013780656 seconds)
    (64/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.34774014 seconds)
    (65/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.368631439 seconds)
    (66/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.361536131 seconds)
    (67/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.354857999 seconds)
    (68/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.323382419 seconds)
    (69/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.059975701 seconds)
    (70/286) benchmarking ("sort", Float32, false)...
    done (took 1.480477011 seconds)
    (71/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 2.327493156 seconds)
    (72/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 2.370413734 seconds)
    (73/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.410745878 seconds)
    (74/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.431991333 seconds)
    (75/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.338601749 seconds)
    (76/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.367377641 seconds)
    (77/286) benchmarking ("map", abs, Float64, true)...
    done (took 1.454501764 seconds)
    (78/286) benchmarking ("sort", Int64, false)...
    done (took 1.537701394 seconds)
    (79/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.396346865 seconds)
    (80/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.320595454 seconds)
    (81/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 1.514896853 seconds)
    (82/286) benchmarking ("sort", BigFloat, false)...
    done (took 2.310409412 seconds)
    (83/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.399832445 seconds)
    (84/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 1.64886523 seconds)
    (85/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.390683818 seconds)
    (86/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 1.522472372 seconds)
    (87/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.388037283 seconds)
    (88/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.334044287 seconds)
    (89/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.330590002 seconds)
    (90/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.461381008 seconds)
    (91/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.434818758 seconds)
    (92/286) benchmarking ("map", identity, Int64, false)...
    done (took 1.375080779 seconds)
    (93/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.362389871 seconds)
    (94/286) benchmarking ("map", identity, BigInt, false)...
    done (took 1.39559375 seconds)
    (95/286) benchmarking ("sort", BigInt, true)...
    done (took 2.326097154 seconds)
    (96/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.418241532 seconds)
    (97/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.355060772 seconds)
    (98/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.391842763 seconds)
    (99/286) benchmarking ("map", abs, Int64, true)...
    done (took 1.456758859 seconds)
    (100/286) benchmarking ("map", identity, Float64, true)...
    done (took 1.453917238 seconds)
    (101/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.361329061 seconds)
    (102/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.398428436 seconds)
    (103/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.48187185 seconds)
    (104/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.329583716 seconds)
    (105/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.372439069 seconds)
    (106/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.960595142 seconds)
    (107/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 1.672787836 seconds)
    (108/286) benchmarking ("sort", Float64, true)...
    done (took 2.069932212 seconds)
    (109/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.392770607 seconds)
    (110/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.561692796 seconds)
    (111/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.331367746 seconds)
    (112/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.05841001 seconds)
    (113/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.333988704 seconds)
    (114/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.322401842 seconds)
    (115/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 2.367257906 seconds)
    (116/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.144946691 seconds)
    (117/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.505322682 seconds)
    (118/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.351148005 seconds)
    (119/286) benchmarking ("sort", Bool, false)...
    done (took 1.347635981 seconds)
    (120/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.32489583 seconds)
    (121/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.353731648 seconds)
    (122/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.365858416 seconds)
    (123/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.017911004 seconds)
    (124/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.330042652 seconds)
    (125/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.335907431 seconds)
    (126/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.463332642 seconds)
    (127/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.420674158 seconds)
    (128/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.341922225 seconds)
    (129/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.327586784 seconds)
    (130/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.329545123 seconds)
    (131/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.057460475 seconds)
    (132/286) benchmarking ("map", abs, BigInt, false)...
    done (took 2.319491419 seconds)
    (133/286) benchmarking ("map", abs, Float64, false)...
    done (took 1.398720848 seconds)
    (134/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.370380409 seconds)
    (135/286) benchmarking ("sort", BigInt, false)...
    done (took 2.313222856 seconds)
    (136/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.337538614 seconds)
    (137/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.398018769 seconds)
    (138/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.329985521 seconds)
    (139/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 1.418366792 seconds)
    (140/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.310674051 seconds)
    (141/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.06337078 seconds)
    (142/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 2.332294385 seconds)
    (143/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.356154982 seconds)
    (144/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.331669309 seconds)
    (145/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.405052674 seconds)
    (146/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 2.371492267 seconds)
    (147/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.332934116 seconds)
    (148/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.437012341 seconds)
    (149/286) benchmarking ("map", abs, BigInt, true)...
    done (took 2.344574378 seconds)
    (150/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.424662186 seconds)
    (151/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.396907163 seconds)
    (152/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 1.539373385 seconds)
    (153/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.354139831 seconds)
    (154/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.335092733 seconds)
    (155/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.187448839 seconds)
    (156/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.344500935 seconds)
    (157/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.188646688 seconds)
    (158/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.411174857 seconds)
    (159/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 2.322190579 seconds)
    (160/286) benchmarking ("map", abs, Int64, false)...
    done (took 1.390224275 seconds)
    (161/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.191658851 seconds)
    (162/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.370205355 seconds)
    (163/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.36271798 seconds)
    (164/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 1.442789532 seconds)
    (165/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.355590503 seconds)
    (166/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.399007196 seconds)
    (167/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.335601691 seconds)
    (168/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.325650312 seconds)
    (169/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.326098818 seconds)
    (170/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 1.455813562 seconds)
    (171/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.35815726 seconds)
    (172/286) benchmarking ("map", identity, Float32, true)...
    done (took 1.412257134 seconds)
    (173/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.334554088 seconds)
    (174/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.423277226 seconds)
    (175/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.325874138 seconds)
    (176/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.313773039 seconds)
    (177/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.398305722 seconds)
    (178/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.34759703 seconds)
    (179/286) benchmarking ("sort", Int8, true)...
    done (took 1.822115706 seconds)
    (180/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.390407933 seconds)
    (181/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.347432501 seconds)
    (182/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 1.420596527 seconds)
    (183/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.419315601 seconds)
    (184/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.358431876 seconds)
    (185/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.336927289 seconds)
    (186/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.166467581 seconds)
    (187/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.389562455 seconds)
    (188/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.056495015 seconds)
    (189/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 2.337658553 seconds)
    (190/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.336340156 seconds)
    (191/286) benchmarking ("sort", Bool, true)...
    done (took 1.660323632 seconds)
    (192/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.335032879 seconds)
    (193/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.403301379 seconds)
    (194/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 2.336955588 seconds)
    (195/286) benchmarking ("map", identity, Int64, true)...
    done (took 1.474910448 seconds)
    (196/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.412171833 seconds)
    (197/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.964700644 seconds)
    (198/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.452761237 seconds)
    (199/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 1.509564812 seconds)
    (200/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 2.337197529 seconds)
    (201/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 2.333589943 seconds)
    (202/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.512201241 seconds)
    (203/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.430916252 seconds)
    (204/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.344740827 seconds)
    (205/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.414911448 seconds)
    (206/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.342721583 seconds)
    (207/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.499814745 seconds)
    (208/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.306988653 seconds)
    (209/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.996390767 seconds)
    (210/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.370530465 seconds)
    (211/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.021394948 seconds)
    (212/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.472141825 seconds)
    (213/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 1.432363008 seconds)
    (214/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.562339616 seconds)
    (215/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.320788255 seconds)
    (216/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.332205008 seconds)
    (217/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.465606684 seconds)
    (218/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.334379623 seconds)
    (219/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.324617394 seconds)
    (220/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.437752961 seconds)
    (221/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.403238269 seconds)
    (222/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.350910075 seconds)
    (223/286) benchmarking ("sort", Int8, false)...
    done (took 1.451184175 seconds)
    (224/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.350197137 seconds)
    (225/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 2.37879399 seconds)
    (226/286) benchmarking ("sort", Float32, true)...
    done (took 2.01469864 seconds)
    (227/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 1.638327793 seconds)
    (228/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.31856506 seconds)
    (229/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 2.382370771 seconds)
    (230/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.335779463 seconds)
    (231/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.977922494 seconds)
    (232/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 2.337163172 seconds)
    (233/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.381061528 seconds)
    (234/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.330745889 seconds)
    (235/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.359286129 seconds)
    (236/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.333711007 seconds)
    (237/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 1.513432421 seconds)
    (238/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.336702088 seconds)
    (239/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.330507403 seconds)
    (240/286) benchmarking ("map", abs, Float32, true)...
    done (took 1.423062465 seconds)
    (241/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.371957744 seconds)
    (242/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.339846284 seconds)
    (243/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.447375998 seconds)
    (244/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.382977476 seconds)
    (245/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 2.341626427 seconds)
    (246/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.397193272 seconds)
    (247/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.352764673 seconds)
    (248/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.336573767 seconds)
    (249/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.334975892 seconds)
    (250/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 1.524998437 seconds)
    (251/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.314645883 seconds)
    (252/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.339340303 seconds)
    (253/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.412857856 seconds)
    (254/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.341275772 seconds)
    (255/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.469834694 seconds)
    (256/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.332964856 seconds)
    (257/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.349097894 seconds)
    (258/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.341766865 seconds)
    (259/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.308760458 seconds)
    (260/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.335242796 seconds)
    (261/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.335709984 seconds)
    (262/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.076593037 seconds)
    (263/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.511118035 seconds)
    (264/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.325760913 seconds)
    (265/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.347700568 seconds)
    (266/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.377020762 seconds)
    (267/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.347958012 seconds)
    (268/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.452174504 seconds)
    (269/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.367529256 seconds)
    (270/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.501417703 seconds)
    (271/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 1.496005344 seconds)
    (272/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 1.547136009 seconds)
    (273/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.331643109 seconds)
    (274/286) benchmarking ("sort", BigFloat, true)...
    done (took 2.323422926 seconds)
    (275/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.376889176 seconds)
    (276/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.341386141 seconds)
    (277/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 1.45212246 seconds)
    (278/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.341969845 seconds)
    (279/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.076019147 seconds)
    (280/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 2.357897802 seconds)
    (281/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.406814373 seconds)
    (282/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.475802768 seconds)
    (283/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.334046942 seconds)
    (284/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.339363714 seconds)
    (285/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.40636876 seconds)
    (286/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.326179387 seconds)
  done (took 466.952990918 seconds)
done (took 468.163806798 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.369473713 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.381359069 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.337885556 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.368247408 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.448518793 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.514315249 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.34681958 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.375715285 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.383787584 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.386774306 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.349233914 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.512533256 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.338953511 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.338355953 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.339740746 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.382201599 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.34156835 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.333836479 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.357024701 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.372920715 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.3553458 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.344723129 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.387412308 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.512818999 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.339271485 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.340324901 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.341038807 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.358155092 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.449639057 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.343212069 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.342184389 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.346589522 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.325957444 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.341710309 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.331206319 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.357684936 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.349694609 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.345968165 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.370375205 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.450484893 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.332906926 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.345242315 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.338832293 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.341922527 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.337379786 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.377794023 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.339787329 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.397573326 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.382020123 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.382880645 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.331247576 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.349838381 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.359213436 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.343851242 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.349897144 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.341499193 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.400559371 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.385674977 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.364304068 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.384834989 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.33667636 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.338340362 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.379763109 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.358205771 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.347393078 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.330678686 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.335710954 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.381297197 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.334956918 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.340975661 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.330330845 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.344760912 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.343026957 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.356671048 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.371563282 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.331348079 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.34938429 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.339371549 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.347242526 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.340736804 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.388901103 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.380431763 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.390147979 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.343452548 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.38600023 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.51648738 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.349580201 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.341937122 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.380371868 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.360107693 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.350108571 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.35532777 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.378144192 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.343032545 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.389132486 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.400068093 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.347703357 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.351142705 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.392180491 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.353713052 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.337728944 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.385118357 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.341833763 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.338425962 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.343937575 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.464854766 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.341492405 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.341316188 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.376445109 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.388325278 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.400413202 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.340724714 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.355728758 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.390387307 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.35359621 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.40529391 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.344694856 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.342346921 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.327727416 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.462349662 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.346057814 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.350044092 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.39165714 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.406059954 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.342893043 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.332861413 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.34312482 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.386366583 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.467545441 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.356029945 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.456172126 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.34532679 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.350738909 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.378070618 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.390978516 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.378342028 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.408064741 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.388322572 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.362274747 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.349574223 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.357032597 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.355438848 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.3460887 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.403132964 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.345652483 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.379383531 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.388564521 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.387290257 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.381257326 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.466631147 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.353991786 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.341463583 seconds)
done (took 225.210426694 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.407995225 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.340838741 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.451072431 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.345271329 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.445120749 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.45504477 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.342295269 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.339259184 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.341915653 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.768461997 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.340480888 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.341267522 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.342375957 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.345877863 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.428493706 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.344602669 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.342002546 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.691993732 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.344603533 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.416740353 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.343068232 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.343537901 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.345386869 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.732827638 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.345411002 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.339242675 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.417626905 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.343575312 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.689848381 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.345156431 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.347656799 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.699237577 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.43523806 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.364000728 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.356773746 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.35240578 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.450557247 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.367750073 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.434059873 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.430152998 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.464010823 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.38601639 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.338775959 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.345561357 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.349009876 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.345583514 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.346742156 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.373151779 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.351242159 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.345059716 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.683221034 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.358120586 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.346271714 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.344270419 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.346075579 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.37523102 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.345168247 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.347676698 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.442005291 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.349606388 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.415908046 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.733084146 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.734940515 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.349357606 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.343686001 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.34594076 seconds)
  done (took 105.408755949 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.415845657 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.427284254 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.463081328 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.36587178 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.402576032 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.468021284 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.364783832 seconds)
  done (took 11.152098447 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.354998482 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.351008404 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.399854759 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.399293882 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.346923318 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.560803671 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.349892448 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.359525234 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.345283564 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.424238967 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.350789941 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.352119316 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.354859885 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.343367576 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.401573199 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.361388769 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.464898323 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.349419608 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.351519101 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.506689904 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.348923723 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.358569235 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.42621146 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.362563539 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.353161525 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.35740186 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.29870313 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.350607457 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.351376565 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.350966723 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.347899945 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.460220538 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.352164894 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.345013093 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.349780977 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.508971132 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.352329934 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.348898874 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.351502982 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.350043211 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.353083928 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.350875399 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.351292872 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.349434777 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.34983052 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.373929137 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.350815673 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.353365789 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.351823239 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.351102898 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.428413135 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.353755735 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.347444749 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.351571392 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.428722716 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.360485801 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.354352744 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.34835103 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.353295961 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.349373001 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.50439145 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.401836164 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.353740433 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.398409408 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.352886253 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.353809214 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.350446871 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.352331695 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.44770476 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.351960123 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.401931538 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.353570497 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.576899847 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.377750272 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.357903509 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.356454947 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.35740861 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.357270932 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.352664274 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.362051236 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.352044226 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.356038878 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.361494642 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.353459851 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.352309029 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.535766499 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.512802777 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.35276212 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.368492309 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.362627978 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.356185911 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.430956712 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.356387498 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.353148354 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.406238071 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.47191953 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.433581618 seconds)
  done (took 139.951542611 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.360214517 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.364198824 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.355852009 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.379415779 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.356921809 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.358639824 seconds)
  done (took 9.427231265 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.359631161 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.358219905 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.355583266 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.358655443 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.356982699 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.358803109 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.357656112 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.360608551 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.363145489 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.357973155 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.357827866 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.360449559 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.360500067 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.359234672 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.358869491 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.357603094 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.356976369 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.35867621 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.356857488 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.356382186 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.355225941 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.359815696 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.361867492 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.359135656 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.364897409 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.357942902 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.364739148 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.359957999 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.358752296 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.364398512 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.37778306 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.358622721 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.361617471 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.363096949 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.364672329 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.361661128 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.365598458 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.360200891 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.354020104 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.35868292 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.360293761 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.35991088 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.363045581 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.359532456 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.361342995 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.366389847 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.369932665 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.368339716 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.363516505 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.365110754 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.361133306 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.363430548 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.361818087 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.360847504 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.364606751 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.380815358 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.368037543 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.364037951 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.362638573 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.369123112 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.362839013 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.36110922 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.365042111 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.367223504 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.361491069 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.362089503 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.363784024 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.365723791 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.365321347 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.362132292 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.362592228 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.361874826 seconds)
  done (took 100.313787413 seconds)
done (took 367.493634124 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.822813277 seconds)
  done (took 4.078268509 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.45501971 seconds)
  done (took 3.713011784 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 21.898993176 seconds)
  done (took 23.164738042 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.367767113 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.416453217 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.366459013 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.350943547 seconds)
  done (took 10.759911841 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.680717126 seconds)
  done (took 3.93901756 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.353304447 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.359616494 seconds)
  done (took 5.972515608 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.687282771 seconds)
  done (took 3.946143223 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.797805099 seconds)
  done (took 4.06250489 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.382253653 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.368129915 seconds)
  done (took 6.017246616 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.345705862 seconds)
  done (took 3.602361929 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 16.465626668 seconds)
  done (took 17.724172646 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.358749202 seconds)
  done (took 3.622579583 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.408543839 seconds)
  done (took 3.667755509 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 5.044443261 seconds)
  done (took 6.300735093 seconds)
done (took 101.824063867 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.358513868 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.351626279 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.352532217 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.349849595 seconds)
  done (took 10.669737592 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.416311351 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.397680952 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.417007732 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.410021349 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.406742583 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.411376683 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.388464957 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.391087425 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.408350332 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.405983155 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.414094177 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.40699181 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.396501293 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.403775864 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.398553081 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.407385864 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.408965574 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.399659188 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.391219429 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.404518216 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.363477769 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.410649166 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.402251953 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.367182022 seconds)
  done (took 34.888708102 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.885126781 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.437836412 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.521710791 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.421308329 seconds)
  done (took 7.524226859 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.424921679 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.443899216 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.441616979 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.482782129 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.506170061 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.445850918 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.390654831 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.387418683 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.375282021 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.437409628 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.495602182 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.428218202 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.52651216 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.365477913 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.572324033 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.365976134 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.367547121 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.445919946 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.488770236 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.496359693 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.366707406 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.445866677 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.446608215 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.426855083 seconds)
  done (took 35.834237248 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.370398175 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.382488525 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.36648783 seconds)
    (4/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.373459573 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.36617469 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.366937196 seconds)
    (7/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.366571189 seconds)
    (8/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.371600068 seconds)
    (9/20) benchmarking ("sum", "Int64")...
    done (took 1.365642699 seconds)
    (10/20) benchmarking ("mean", "Int64")...
    done (took 1.366494618 seconds)
    (11/20) benchmarking ("mean", "Float64")...
    done (took 1.366604873 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.3816445 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.366762801 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.367596765 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.373445105 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.36703239 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.373810037 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.367591487 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.365598517 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.373274429 seconds)
  done (took 28.661666349 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.360313452 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.361828667 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.712497814 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.617125344 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.362784405 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.363904542 seconds)
  done (took 14.038391006 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.439048536 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.600650734 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.364180928 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.745514001 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.827041117 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.370029414 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.370085741 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.631148851 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.965573281 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.930421503 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.428043596 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.442820259 seconds)
  done (took 20.377101146 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.376168668 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.361893966 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.369563602 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.379568355 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.426937076 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.389549191 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.377472522 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.363067465 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.42527488 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.445516679 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.386974227 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.428684579 seconds)
  done (took 21.994675984 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.459028481 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.362954495 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.363249085 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.414068375 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.363058742 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.215626349 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.398193545 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.122654301 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.382672354 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.640761248 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.364601778 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.463974969 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.621283791 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.363627261 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.382942057 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.352212259 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.594492569 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.883121912 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.36449993 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.366747449 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.399421095 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.363730412 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.381191863 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.590050878 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.365772173 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.363351619 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.627838735 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.364623533 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.66361313 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.38192042 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.37511316 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.364399931 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.642175801 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.048642065 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.482814991 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.587758179 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.368735419 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.366092466 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.390054231 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.367452981 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.366214832 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.368080375 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.37756837 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.367072872 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.365508266 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.369009128 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.134197303 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.390417133 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.36515523 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.365242063 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.639872492 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.46340501 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.36901424 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.365371249 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.37269228 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.367723806 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.370214796 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.466436923 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.948835979 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.376768019 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.374189475 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.369035309 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.3869517 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.373845297 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.031695905 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.372438699 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.371211662 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.37193201 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.36605089 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.368380737 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.387092912 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.366630584 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.389715085 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.368863308 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.116115651 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.377752399 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.37007391 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.951797474 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.384145222 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.37060688 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.602694392 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.366877939 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.370589567 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.36858879 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.370217019 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.119282243 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.379637556 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.35535666 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.390814856 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.136568276 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.610156675 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.393031538 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.401750536 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.592732124 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.355229965 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.368211809 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.369641077 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.371148333 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.388057798 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.135889699 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.387163833 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.370590527 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.628825568 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.5802501 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.373541648 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.359822751 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.881546373 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.387117276 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.403781342 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.376654393 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.594793423 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.980729808 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.386320426 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.381233234 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.390327951 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.371581247 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.160690649 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.387791692 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.474665479 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.381841836 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.654439089 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.193018508 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.374267296 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.440127499 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.375721849 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.371502267 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.381129018 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.373689132 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.372351264 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.588919066 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.393573895 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.382639965 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.371281548 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.373640124 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.37757187 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.38835645 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.375739481 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.598852403 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.388563111 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.650874026 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.373740368 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.373665493 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.367351207 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.594548122 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.372395078 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.725877877 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.637724593 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.377154733 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.377155506 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.386942445 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.393683583 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.480944031 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.398208947 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.378380997 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.630754773 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.377264325 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.380590377 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.38502434 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.376113239 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.381712593 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.380984449 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.383458751 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.989266373 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.358920616 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.375704611 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.277095625 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.38775914 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.444463322 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.381905064 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.599778932 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.376938154 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.376884356 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.395967364 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.385329641 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.602529311 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.385749819 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.385390902 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.45230774 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.882735704 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.000754685 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.391471255 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.376470457 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.372482902 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.376857823 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.373807175 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.375620795 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.375600579 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.598539622 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.390583702 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.391734521 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.991373932 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.379402907 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.388326555 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.384209942 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.391586651 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.381908156 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.378719593 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.375446351 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.387732407 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.383002507 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.390041024 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.521663094 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.392278243 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.375366143 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.897043123 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.382527337 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.377340964 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.377132389 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.412173951 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.389520394 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.210040922 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.653757978 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.390534277 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.654141595 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.386590337 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.395034197 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.375132366 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.385997692 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.385266133 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.39055796 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.388205565 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.388722598 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.391756293 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.380409685 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.949214462 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.15633889 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.947873387 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.393936952 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.383115063 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.378922067 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.146200788 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.39552648 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.380363777 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.622134928 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.161526535 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.395214282 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.887322461 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.393623547 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.185061248 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.653519834 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.614452329 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.39435172 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.386245045 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.658623628 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.593690963 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.417595684 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.384922997 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.380894568 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.359776951 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.984329561 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.404591241 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.460389142 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.158118124 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.404623771 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.384241072 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.447020015 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.381149364 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.812182543 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.401209859 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.382347304 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.384338914 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.39486716 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.215940959 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.400192743 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.381032191 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.048686622 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.384212615 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.891067551 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.399581817 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.607179308 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.395043159 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.385355494 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.380808885 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.381037887 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.638461191 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.657700212 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.384348442 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.381647352 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.953031185 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.253261667 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.387673721 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.382204135 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.172572036 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.383786135 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.688211444 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.392098251 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.387153351 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.38356791 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.380037607 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.38156206 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.379475152 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.391832801 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.363354611 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.90605604 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.384801006 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.400703654 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.390596847 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.384943522 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.637716613 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.398174791 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.999927928 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.615046111 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.382210835 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.409423935 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.388619205 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.383996675 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.390350677 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.384483972 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.384113934 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.449960921 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.609349316 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.399724116 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.370905743 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.46245274 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.598672908 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.382360623 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.384060241 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.662776422 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.383001926 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.402944352 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.157912967 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.417186389 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.385420894 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.404256947 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.38168558 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.408904519 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.455815016 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.612329444 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.398321281 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.397508624 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.816894245 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.405345222 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.387615044 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.401300047 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.480886109 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.386468082 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.399801255 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.155385826 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.005793564 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.168321151 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.009593263 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.666300923 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.389064609 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.396237699 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.384366927 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.54731659 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.387408881 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.661640808 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.387081782 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.39275814 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.412598235 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.386165407 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.392909548 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.601033709 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.659353254 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.387046859 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.385022107 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.38931095 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.387795218 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.402020389 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.601888384 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.916110927 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.986329813 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.390017205 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.389088955 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.163349574 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.678037718 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.389140758 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.387701431 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.387066022 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.405505773 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.392277238 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.395804953 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.389758163 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.532888175 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.664782569 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.082069413 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.417164472 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.416906599 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.163770878 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.390243815 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.66162649 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.386979723 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.618053575 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.011770124 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.142864181 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.658291079 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.457225657 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.618596064 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.391307808 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.552095586 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.387509327 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.406986323 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.390566283 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.390262576 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.38659642 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.402771218 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.017603464 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.656842024 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.393639693 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.389106815 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.421311449 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.404821002 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.617893915 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.154140732 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.618381145 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.402934729 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.395530298 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.391173906 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.013707417 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.668715243 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.393012737 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.391243039 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.649009503 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.392731102 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.417073775 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.912501595 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.387985559 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.983089236 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.364428641 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.415485638 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.396741021 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.141885794 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.016163419 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.408080789 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.923597898 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.393215795 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.391194913 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.669930078 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.398454092 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.396326543 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.671893606 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.395529214 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.395043029 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.62330686 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.014212194 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.208502128 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.415097026 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.393990364 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.396521439 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.391504108 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.457181067 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.393991692 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.390319365 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.839161855 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.41375357 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.394050739 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.400556817 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.395352266 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.39960581 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.391522747 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.392987719 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.397216281 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.390479869 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.398705019 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.421645058 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.497031003 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.976375073 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.410195802 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.067989654 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.722837124 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.651283552 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.401223948 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.383691309 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.402733712 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.394770379 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.396304626 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.391425302 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.395608012 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.011058262 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.403028474 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.410409148 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.399342314 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.612683092 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.606344508 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.397089001 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.627214428 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.402991834 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.412713568 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.380976772 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.395095938 seconds)
  done (took 981.376342589 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.417484053 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.434342972 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.429730602 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.415157915 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.434236513 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.499633596 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.458906344 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.409548911 seconds)
  done (took 20.795948595 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.404266692 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.402714946 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.398796879 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.402990388 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.401378424 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.897188254 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.429276818 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.403805508 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.415226785 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.412642401 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.409896744 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.381439488 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.41088945 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.401901285 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.386306456 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.409980212 seconds)
  done (took 33.272871446 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.502933416 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.581671765 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.504419163 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.477102812 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.440110982 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.400146159 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.669187093 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.410914072 seconds)
  done (took 27.284040283 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.411957956 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.412713926 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.412392385 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.413390259 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.411643971 seconds)
  done (took 8.359028418 seconds)
done (took 1246.332936609 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.405211652 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.405201764 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.405928993 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.411179645 seconds)
  done (took 6.924002428 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.384736247 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.383234566 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.388286249 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.397460743 seconds)
  done (took 9.851821159 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.143827777 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.083631558 seconds)
  done (took 5.524878135 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.901103626 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.898239096 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.901455416 seconds)
  done (took 7.000500596 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.711688479 seconds)
  done (took 3.011277244 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.314470468 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.287565955 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.099719367 seconds)
  done (took 8.002017914 seconds)
done (took 41.608591854 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.410429143 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.645837671 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.562018211 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.413319082 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.562096341 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.558802536 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.142471869 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.404032425 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.398444353 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.412568277 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.412631822 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.586926297 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 3.191693578 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.651940193 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.195699302 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.660343275 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.625888745 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.403276979 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.400572882 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.402767452 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.139298849 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.415624417 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.411752736 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.407497699 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.60769585 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.552282699 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.41465688 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.677211325 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.416631375 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.400284708 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.548188083 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.413267291 seconds)
  done (took 83.747899305 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.403904102 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.398075275 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.415479362 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.421526898 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.41123311 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.401534675 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.419883643 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.401744649 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.401091936 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.401189385 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.399913871 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.401984208 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.403246343 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.400114331 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.405404938 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.401103095 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.401625139 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.422230704 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.400951097 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.415600002 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.402573985 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.4012877 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.431526717 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.402813215 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.413108783 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.402431423 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.42166863 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.419060677 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.413018639 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.401108836 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.409983088 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.422560192 seconds)
  done (took 78.37148925 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.407988678 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.398173219 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.403342694 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.40373475 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.401664901 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.402797509 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.40246969 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.40298203 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.403339484 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.402355497 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.418365752 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.400782682 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.421064802 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.400682045 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.404688412 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.417544457 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.409811414 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.404395407 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.400371691 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.405303666 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.401906165 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.401532027 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.403743533 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.405324196 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.406642072 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.40715943 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.400758737 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.40818981 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.405524398 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.419520151 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.414353588 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.405961419 seconds)
  done (took 78.298281336 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.684524839 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.415942774 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.419222622 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.388892846 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.416539813 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.417370189 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.409586064 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.691680207 seconds)
  done (took 15.151441244 seconds)
done (took 256.867364182 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 2.406703147 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.424635478 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.639033771 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.436252095 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 2.409008107 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.436218835 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.43542366 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.646668772 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.410229937 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.663515402 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.425411221 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.433567903 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.406827559 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.451564944 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.699803677 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.565511564 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.369289099 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.415930457 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.760189442 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.445989928 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.686880308 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.417109634 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.695815152 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.388986947 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.43101137 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.413599325 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.408879695 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.347693647 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.447323365 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.771876163 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.418517943 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 2.423928784 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.503912517 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.521996927 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.633155848 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.58012832 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 2.410161471 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.502707568 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.647203011 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.416003185 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.410955564 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.22317184 seconds)
  done (took 84.889556992 seconds)
  (2/6) benchmarking "iteration"...
    (1/39) benchmarking ("Set", "String", "next")...
    done (took 1.416137642 seconds)
    (2/39) benchmarking ("Set", "Any", "start")...
    done (took 1.534440619 seconds)
    (3/39) benchmarking ("IdDict", "Any", "done")...
    done (took 1.420944158 seconds)
    (4/39) benchmarking ("Set", "Int", "done")...
    done (took 1.41614508 seconds)
    (5/39) benchmarking ("Dict", "Int", "done")...
    done (took 1.419317248 seconds)
    (6/39) benchmarking ("Dict", "String", "start")...
    done (took 1.536364426 seconds)
    (7/39) benchmarking ("IdDict", "Any", "start")...
    done (took 1.514130607 seconds)
    (8/39) benchmarking ("IdDict", "String", "done")...
    done (took 1.42143442 seconds)
    (9/39) benchmarking ("BitSet", "Int", "done")...
    done (took 1.419060476 seconds)
    (10/39) benchmarking ("IdDict", "String", "next")...
    done (took 1.420493474 seconds)
    (11/39) benchmarking ("Dict", "String", "next")...
    done (took 1.418873863 seconds)
    (12/39) benchmarking ("Vector", "Int", "done")...
    done (took 1.421098751 seconds)
    (13/39) benchmarking ("Vector", "String", "done")...
    done (took 1.418997769 seconds)
    (14/39) benchmarking ("Vector", "Any", "done")...
    done (took 1.42078323 seconds)
    (15/39) benchmarking ("Dict", "String", "done")...
    done (took 1.419259762 seconds)
    (16/39) benchmarking ("IdDict", "Int", "done")...
    done (took 1.42032384 seconds)
    (17/39) benchmarking ("IdDict", "Any", "next")...
    done (took 1.419446342 seconds)
    (18/39) benchmarking ("Vector", "Int", "next")...
    done (took 1.422603564 seconds)
    (19/39) benchmarking ("Set", "Int", "next")...
    done (took 1.420146408 seconds)
    (20/39) benchmarking ("Vector", "Int", "start")...
    done (took 1.467801324 seconds)
    (21/39) benchmarking ("Dict", "Int", "start")...
    done (took 1.544334806 seconds)
    (22/39) benchmarking ("IdDict", "Int", "next")...
    done (took 1.445591034 seconds)
    (23/39) benchmarking ("Vector", "Any", "next")...
    done (took 1.416540781 seconds)
    (24/39) benchmarking ("Dict", "Any", "next")...
    done (took 1.420046299 seconds)
    (25/39) benchmarking ("IdDict", "Int", "start")...
    done (took 1.527014353 seconds)
    (26/39) benchmarking ("Set", "String", "start")...
    done (took 1.555513266 seconds)
    (27/39) benchmarking ("Vector", "String", "next")...
    done (took 1.421346609 seconds)
    (28/39) benchmarking ("Set", "Any", "next")...
    done (took 1.414696768 seconds)
    (29/39) benchmarking ("Vector", "String", "start")...
    done (took 1.464625283 seconds)
    (30/39) benchmarking ("Dict", "Any", "done")...
    done (took 1.422807731 seconds)
    (31/39) benchmarking ("Dict", "Int", "next")...
    done (took 1.424220678 seconds)
    (32/39) benchmarking ("Vector", "Any", "start")...
    done (took 1.466709131 seconds)
    (33/39) benchmarking ("Set", "String", "done")...
    done (took 1.421304955 seconds)
    (34/39) benchmarking ("Set", "Any", "done")...
    done (took 1.421175948 seconds)
    (35/39) benchmarking ("Set", "Int", "start")...
    done (took 1.534562479 seconds)
    (36/39) benchmarking ("IdDict", "String", "start")...
    done (took 1.522748589 seconds)
    (37/39) benchmarking ("BitSet", "Int", "next")...
    done (took 1.444984674 seconds)
    (38/39) benchmarking ("BitSet", "Int", "start")...
    done (took 1.418025781 seconds)
    (39/39) benchmarking ("Dict", "Any", "start")...
    done (took 1.541628248 seconds)
  done (took 57.906574618 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.421452059 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.680531284 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.865871325 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.432282517 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.42286676 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.427702906 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.503871961 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.424326391 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.426249804 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.426538089 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.600828976 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.426685139 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.461457174 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.895497943 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.428702733 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.431328627 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.426482243 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.42631829 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.689027648 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.429585889 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.528852482 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.425772719 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.508219939 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.434979295 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.446359005 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.424426162 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.428929905 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.01648071 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.428340671 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.601117603 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.264189174 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.502986287 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.962755036 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.87752749 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.254895779 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.427826951 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.422917205 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.608168236 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.427321716 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.458783861 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.507895088 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.428008404 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.876943339 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.085235993 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.440428719 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.425563786 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.039941948 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.606259943 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.69049071 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.433468033 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.902379902 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.42421271 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.42784962 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.427916558 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.68833444 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.425528343 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.425072607 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.045294702 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.442808924 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.510667423 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.426365769 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.429404633 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.69192191 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.423885142 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.686237838 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.4257891 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.433095294 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.446989545 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.885634337 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.426830676 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.111795965 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.44829983 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.429845034 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.608796509 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.687015654 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.072535294 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.450134319 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.695821751 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.964735213 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.508839886 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.433046163 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.010038206 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.51287219 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.432015761 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.430349048 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.430295919 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.428550246 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.474830717 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.511165471 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.051442925 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.106737954 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.069504999 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.52406961 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.437424148 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.431256254 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.049443307 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.439689422 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.430019794 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.883008998 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.105023779 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.44477699 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.436086929 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.117332602 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.443012025 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.512502825 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.433319795 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.885259941 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.426472466 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.475045093 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.43337994 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.438470138 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.453870398 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.514324688 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.434365038 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.430721336 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.094584654 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.626326723 seconds)
  done (took 188.313765945 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.426193283 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.418568383 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.422903448 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.419818856 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.424410156 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.434118174 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.425118722 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.423329335 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.429941026 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.428283132 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.427158383 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 2.425154537 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 2.427381003 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 2.439088994 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.431009572 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.434014803 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.428508067 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 2.425510522 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.426611468 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.441116314 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 2.424839499 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 2.427321251 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.426757759 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.436865913 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 2.428292334 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 2.426776748 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 2.431039129 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.426044151 seconds)
  done (took 65.306905824 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.432022208 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.024713515 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.42938937 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.572543485 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.45202577 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.43073578 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.569230007 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.488751508 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.434507036 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.431269499 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.433169511 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.753946727 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.429826513 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.973229065 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.629220347 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.583012169 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.965381847 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.443862014 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.43184482 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.431491073 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.574736511 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.440398417 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.755193511 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.022122374 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.429052649 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.046849479 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.418075629 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.434990543 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.434556887 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.050164721 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.447477411 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.765309154 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.514295996 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.493865935 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.039123197 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.970513264 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.9880376 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.585636224 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.434233581 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.433593383 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.433618112 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.425128083 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.029308639 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.430514194 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.437949107 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.022155224 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.446951553 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.435262789 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.44056297 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.43333611 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.499771716 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.499572604 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.754588216 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.105814989 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.511740831 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.442511831 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.575661523 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.780769498 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.436846601 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.998458981 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.435127636 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.029987418 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.449334822 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.42497564 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.436695237 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.442935962 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.597275749 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.575668467 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.979241059 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.449237898 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.978036007 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.605709352 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.43363864 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.435557282 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.439314557 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.031450847 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.975293159 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.605872883 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.576155323 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.639996241 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.424598546 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.439153164 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.426921721 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.517176292 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.432255186 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.032855054 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.992969973 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.450843922 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.439124339 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.44056417 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.441656817 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.624839328 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.048787174 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.514417565 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.987183477 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.77593773 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.752491849 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.432679643 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.499385887 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.454781187 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.826262311 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.434374795 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.500293345 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.861155986 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.760640706 seconds)
  done (took 171.133991414 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.692089615 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.460523889 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.53364754 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.59483547 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.061049478 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.021236458 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.428381264 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.568189003 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.545843379 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.701862789 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.427972336 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.529313092 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.664442544 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.521174192 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.193988872 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.518996645 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.537819469 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.593957493 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.586467659 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.431045462 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.10091209 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.73967954 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.637594781 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.45169497 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.577682411 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.267455207 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.034156043 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.996407167 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.61994515 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.438480173 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.975024162 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.436916636 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.435112012 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.148219302 seconds)
  done (took 66.800446526 seconds)
done (took 635.653724219 seconds)
SAVING RESULT...
DONE!
