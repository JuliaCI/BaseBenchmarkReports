cset: moving following pidspec: 7323
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.352107601 seconds)
loading group "string"... done (took 0.551366706 seconds)
loading group "linalg"... done (took 7.591746488 seconds)
loading group "parallel"... done (took 0.176895779 seconds)
loading group "find"... done (took 1.186198251 seconds)
loading group "tuple"... done (took 1.870726809 seconds)
loading group "dates"... done (took 1.271813292 seconds)
loading group "micro"... done (took 0.236540556 seconds)
loading group "io"... done (took 1.029241286 seconds)
loading group "scalar"... done (took 42.978060244 seconds)
loading group "sparse"... done (took 14.289533403 seconds)
loading group "broadcast"... done (took 1.063602015 seconds)
loading group "union"... done (took 15.271673143 seconds)
loading group "simd"... done (took 5.268989537 seconds)
loading group "random"... done (took 10.57791921 seconds)
loading group "problem"... done (took 2.099171727 seconds)
loading group "array"... done (took 24.999407366 seconds)
loading group "misc"... done (took 2.2684596 seconds)
loading group "sort"... done (took 3.695869162 seconds)
loading group "collection"... done (took 21.680630252 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.593971951 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.16249082 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.156964671 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.154095572 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.207939221 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.147783869 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.163937489 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.099594362 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.024383436 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.177992922 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.158064173 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.538011151 seconds)
done (took 5.416132723 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.266370121 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.095161412 seconds)
    (2/2) benchmarking "String"...
    done (took 0.107519848 seconds)
  done (took 0.970811715 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.078471328 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.146046014 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.098070893 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.079686261 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.098024583 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.078823282 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.098261177 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.079101472 seconds)
  done (took 1.450505471 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.087160694 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.100338128 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.083040998 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.099312387 seconds)
  done (took 1.142313071 seconds)
done (took 4.68727526 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.745862369 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.28192348 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.204415112 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.479188801 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.206893436 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.224831198 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.685586652 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.341751234 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.255281241 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.104861292 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.139042216 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.408566853 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.141914557 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.685332376 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.09236186 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.128801734 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.183105819 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.443325311 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.083770754 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.113132368 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.119838941 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.142907806 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.135757535 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.09295365 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.191371957 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.081432302 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.203547754 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.112123066 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.082745957 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.285387343 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.203903917 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.70594869 seconds)
  done (took 11.118309123 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.112383949 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.138392325 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.101415435 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.140227878 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.140473315 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.103133956 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.085752752 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.099709801 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.126642529 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.181787157 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.134235368 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.123582296 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.098224328 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.083463775 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.118548865 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.249103608 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.123796221 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.100234691 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.102561655 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.089163734 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.142768231 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.116713543 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.111682299 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.095252522 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.169749935 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.226856818 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.11283319 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.12829798 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.100665552 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.115684594 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.145220665 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.144947329 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.09746614 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.081349688 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.17749709 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.127013744 seconds)
  done (took 5.332138048 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.134760088 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.196502049 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.126227995 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.17571306 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.082011847 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.147721187 seconds)
    (6/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.132175032 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.118350779 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.269187307 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.137949838 seconds)
    (10/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.098040263 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.481508321 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.145920036 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.118452577 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.09981548 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.084015118 seconds)
    (16/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.096330006 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.081950144 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.688395114 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.162580464 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.138043208 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.098782285 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.107180451 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.103854352 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.37214988 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.0822686 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.097789897 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.083854842 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.083744682 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.16527806 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.083546333 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.174065177 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.126727261 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.104906003 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.135526162 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.198183827 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.12977505 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.119070289 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.099920229 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.078926391 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.196954425 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.089933996 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.100049741 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.104986614 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.13805699 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.139088379 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.099953362 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.082259366 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.216019802 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.081877927 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.11689664 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.98294868 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.18273444 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.091927743 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.098560779 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.293845648 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.118418487 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.098464745 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.079523135 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.323406513 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.194851538 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.101562402 seconds)
    (62/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.125748892 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.082572238 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.09903381 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.084502882 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.386300469 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.101108943 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.738469754 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.085590221 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.109349773 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.083950971 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.100634496 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.106964231 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.091549192 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.119074514 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.08063867 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.101968892 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.081246641 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.099933403 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.082649277 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.112371326 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.222179317 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.100557115 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.08118279 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.098869086 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.119380894 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.112268388 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.103200073 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.097713738 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.116864037 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.103751176 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.10043617 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.119244376 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.10343302 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.110462051 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.085269517 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.146836876 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.100552285 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.17458086 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.097863858 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.127216539 seconds)
    (102/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.081377591 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.104059889 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.133914268 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.1170017 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.084169717 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.171337271 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.098920084 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.078645742 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.100998127 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.079700696 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.102567128 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.083028271 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.114373763 seconds)
  done (took 23.439823278 seconds)
done (took 41.796047037 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.340268477 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.108970563 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.109727765 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.109451049 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.105543895 seconds)
  done (took 1.629053152 seconds)
done (took 2.455575905 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.3008664 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.182105738 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.099662153 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.173821655 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.096619253 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.171966112 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.166264036 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.096300525 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.230065472 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.098364168 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.168114371 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.077962174 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.098282735 seconds)
  done (took 2.818664889 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.096196402 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.12124364 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.084333579 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.113710209 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.077276051 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.113864519 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.093998908 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.119504727 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.11310763 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.087324123 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.096904554 seconds)
  done (took 1.939446459 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.096178364 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.116015497 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.084077458 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.11416705 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.077890756 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.113916733 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.094095071 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.120781794 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.114484293 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.0873592 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.096815559 seconds)
  done (took 1.926574314 seconds)
done (took 7.503372697 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.093854709 seconds)
  done (took 0.901971658 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.974206605 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 8.033581639 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.113683109 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.1495038 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.319874958 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.175761064 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.475537392 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.127465477 seconds)
  done (took 11.390927957 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.116380611 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.118206914 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.107732544 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.085327083 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.107465828 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.086827475 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.105819996 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.102848495 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.086214705 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.10354573 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.085584339 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.106870241 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.102555833 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.08871747 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.106199397 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.087550843 seconds)
  done (took 2.485762634 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.120834477 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.119295311 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.111740193 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.112607593 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.087907063 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.111767858 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.109815482 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.090731241 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.106879418 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.108244663 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.092389054 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.110901065 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.108315184 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.081732452 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.109667808 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.112566399 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.087448237 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.110588091 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.111257711 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.09300503 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.112163144 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.099844382 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.088776552 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.11098346 seconds)
  done (took 3.453153987 seconds)
done (took 19.044153981 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.165801027 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.113733313 seconds)
  done (took 1.104613116 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.099648804 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.117722625 seconds)
  done (took 1.046087767 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.101090887 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.100534661 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.127440043 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.113843316 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.08279402 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.101924127 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.126312117 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.082047578 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.101103435 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.081071829 seconds)
  done (took 1.850930853 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.086094133 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.114871617 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.104726894 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.097119115 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.110086924 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.09853291 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.091906538 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.103004708 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.115064417 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.079571354 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.105717251 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.11763892 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.087904757 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.121081121 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.109445058 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.085171003 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.107559056 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.103347345 seconds)
  done (took 2.674329642 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.083192729 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.101351194 seconds)
  done (took 1.007271583 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.084629015 seconds)
    (2/7) benchmarking "second"...
    done (took 0.097750741 seconds)
    (3/7) benchmarking "month"...
    done (took 0.083498735 seconds)
    (4/7) benchmarking "year"...
    done (took 0.101704727 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.097771282 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.078879663 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.098158558 seconds)
  done (took 1.469493094 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.45675217 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.140520124 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.26984272 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.0868885 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.125619023 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.309714492 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.102744251 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.085669684 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.108314424 seconds)
  done (took 2.575290457 seconds)
done (took 12.559369259 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.095254151 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.11946224 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.114752157 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.48181067 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.111362344 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.102808162 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.150863552 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.258776974 seconds)
done (took 2.266648582 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.147380897 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.616575485 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.441051634 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.240368916 seconds)
  done (took 2.1356724 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.415319482 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.100518976 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.086462821 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.084335756 seconds)
  done (took 1.525085553 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.082637528 seconds)
    (2/2) benchmarking "read"...
    done (took 0.103019578 seconds)
  done (took 1.02709099 seconds)
done (took 5.681012907 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083336044 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.100025292 seconds)
    (3/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.11464823 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.101017275 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.081363107 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.101498155 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.078751552 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.103772444 seconds)
    (9/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.081057925 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.102183737 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.099418598 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.083430074 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.100386832 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.080257475 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.098391849 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.083113063 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.09816829 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081214009 seconds)
    (19/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.101044439 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.080697812 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.100700542 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.080524516 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.098909656 seconds)
    (24/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.079651221 seconds)
  done (took 3.095014437 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.104230671 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.10385459 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.106507925 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.089228064 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.106041221 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.087389214 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.107778291 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.100766815 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.088414264 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.10357795 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.104793504 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.087431706 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.103640442 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.087441278 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.104143471 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.105827467 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.089423628 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.102258033 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.084564762 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.106217851 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.106947382 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08296335 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.10638275 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.086821516 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.106818455 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.105435213 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.084126197 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.1033419 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.106715604 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.087126578 seconds)
  done (took 3.797644536 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.088529612 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.097748507 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.0812034 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.105977741 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.080169133 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.101147394 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.079732479 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.100313365 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.081440492 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.099195025 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.082037599 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.099449372 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.079627677 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.101568 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.080670004 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.104695724 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.116141787 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.080836842 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.099929198 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.080875035 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.102484632 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.080362086 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.099713582 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.079659526 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.099340559 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.080305444 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.099900915 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.08007986 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.100112912 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.080435984 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.10331756 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.082970445 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.099594086 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.085468343 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.103840276 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.078445193 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.104612223 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.078521763 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.100637749 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.097386997 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.080490119 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.098062754 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.080103339 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.10526674 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.081431798 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.101733387 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.080070062 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.101408764 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.080469687 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.103926422 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.079767284 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.099562683 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.081207215 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.101529056 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.102700221 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.080964705 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.099066778 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.079942708 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.100356914 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.080202602 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.098359902 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.080347524 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.101116229 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.080758264 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.11572079 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.087373632 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.099857195 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.0813149 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.10115998 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.082686822 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.10190359 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.113071759 seconds)
  done (took 7.487917025 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.137163169 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.130368947 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.083797221 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.102512946 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.078547382 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.100098117 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.084510671 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.100072082 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.100908901 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.087663044 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099756949 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.08256104 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.102286084 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.095756532 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.101102514 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.100428028 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.088373546 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.098152692 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.08134578 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.103679865 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.080669066 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.10397683 seconds)
  done (took 2.994105309 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.214101948 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.110613346 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.149131878 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.1113962 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.086329948 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.111750177 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.106542014 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.090027769 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.106597811 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.085274196 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.106605999 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.106517861 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.085279967 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.105130507 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.216543275 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.087641689 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.107210019 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.086693559 seconds)
  done (took 2.918890373 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.095966694 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.103240755 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.100460919 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.103921671 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.103125875 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.086521726 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.108919501 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.110831034 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.086716053 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.102523351 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.092126749 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.105856701 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.104934375 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.084228317 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.105726932 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.083597634 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.105268442 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083625697 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.112574956 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.108672168 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.088424026 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.112271598 seconds)
  done (took 3.038156819 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.099154388 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.105567956 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.123152466 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.086993931 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.099677943 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.082413337 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.110905145 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.083545306 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.111861028 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.104330156 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.084284256 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.103873284 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.090415339 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.103626153 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.108850956 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.084110482 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.10521116 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.084022656 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.105614248 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.078468758 seconds)
  done (took 2.807406044 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.10539122 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.10497879 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.103280804 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.095192876 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.104949813 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.084060251 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.114459925 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.104654683 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.084661066 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.129863627 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.104200267 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.084468349 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.114516786 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.1104647 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.103020227 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.09482941 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.113878058 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.112770197 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.084807612 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.105948959 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.130006022 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.084668424 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.113989726 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.10462011 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.084976837 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.1055315 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.104124847 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.090690938 seconds)
  done (took 3.731322071 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083983652 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.102127585 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.082420836 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.100625443 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.081896265 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.100333484 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.08129821 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.102167891 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.084264452 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.100675972 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.083360459 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.103002361 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.083735647 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.103408387 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.083359461 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.103198683 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.083448508 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.100841439 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.081098521 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.101564264 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.08422263 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.103591342 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.083509479 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.101396469 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080042547 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.103817391 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.080502561 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.101694712 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.082554661 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.101409032 seconds)
  done (took 3.625179835 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.093491578 seconds)
    (2/2) benchmarking "in"...
    done (took 0.111055071 seconds)
  done (took 1.056327849 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.083107744 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.119298046 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.081179676 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.107779863 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.088488986 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.105178125 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.112777488 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.088052466 seconds)
  done (took 1.638448657 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.098879558 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.11482156 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.085986934 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.118974425 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.11514893 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.099987512 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.176446696 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.10669762 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.088905661 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.102920541 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.117407159 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.083754891 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.11005458 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.084633317 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.10998673 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.090047684 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.101698716 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.110572909 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.087506605 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.102161602 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.085971958 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.117259745 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.085981105 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.101721086 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.105031636 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.094766668 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.117133078 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.084086472 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.108720598 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.111476482 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.090644869 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.098889678 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.084454674 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.105427355 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.081566607 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.114689134 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.121983041 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.087436043 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.114386448 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.104827317 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.097001333 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.100005601 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.089884847 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.111134382 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.115037826 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.085759922 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.104644209 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.079703849 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.101640703 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.086691501 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.100247646 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.08425079 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.099855767 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.091360669 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.108337881 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.11525292 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.083507075 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.106095346 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.087841893 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.108665996 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.090333013 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.107555187 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.10587819 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.08455249 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.115089405 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.088841677 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.116087241 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.098940941 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.079069801 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.101839856 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.095735132 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.129051467 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.109860321 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.0862649 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.105341217 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.082896942 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.107622349 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.085636852 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.111496394 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.110937735 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.085621981 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.111806405 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.092421648 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.105178199 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.105500645 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.094559924 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.102972396 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.087189022 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.102644079 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.122483498 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.083859585 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.10247031 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.082355171 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.116115818 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.087223038 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.105303475 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.080989519 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.113983149 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.097874064 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.085533789 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.106207981 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.085146493 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.11726108 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.109950249 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.091723851 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.115274273 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.111717098 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.085853758 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.107714688 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.081808269 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.106239159 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.087682268 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.112364853 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.078141037 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.108398153 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.085595859 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.106168372 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.114086314 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.082378196 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.105086358 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.091790762 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.111263769 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.102526281 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.082081133 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.106985632 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.085113377 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.108447714 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.092630104 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.104357035 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.078771618 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.101632348 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.107266327 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.084928769 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.108022907 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.09066988 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.109004958 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.078120507 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.103842275 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.109727721 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.094887792 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.105735869 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.085533817 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.112615609 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.105445868 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.085276077 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.112098653 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.087452184 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.104585026 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.090454413 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.106675755 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.07895679 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.110541387 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.107846673 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.084188077 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.109027378 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.088794132 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.109263405 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.105406701 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.085600434 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.111332177 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.086974347 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.104923883 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.084569239 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.104268455 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.115793306 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.08808014 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.099771936 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.082961619 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.11444038 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.082527731 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.105765352 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.08331057 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.108328478 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.105930095 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.083922464 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.10502827 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.087280776 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.118707658 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.109719221 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.086705371 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.11132973 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.097162682 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.105817818 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.087108108 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.106020889 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.106874266 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.086913251 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.114667709 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.089545036 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.111457732 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.107295046 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.082055231 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.112232346 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.09275319 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.10452901 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.082493611 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.105555397 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.108152516 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.091716477 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.110344138 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.085795508 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.105067877 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.085006339 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.110505435 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.108007018 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.085167948 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.104309946 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.091341097 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.104923112 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.111638865 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.086726883 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.116326294 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.088339569 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.101419362 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.088122713 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.104717784 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.110829509 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.080971641 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.10257672 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.084511507 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.106883402 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.084152936 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.109210867 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.079178902 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.113287388 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.112394641 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.086975028 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.104087128 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.085624119 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.113422385 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.086399604 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.110327175 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.087662865 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.112778123 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.116438645 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.084186876 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.110136018 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.096267756 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.10651912 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.098701517 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.091363807 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.104012366 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.085305321 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.104662958 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.083685572 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.10948361 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.114873944 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.094168733 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.099840071 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.088762651 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.105451499 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.083689526 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.102668454 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.09020399 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.109957345 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.105544904 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.093774965 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.107418667 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.086771791 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.110739707 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.08432417 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.108510886 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.107472644 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.092796564 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.107670388 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.088091373 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.105980655 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.088629689 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.106118617 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.083326021 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.110282148 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.105758579 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.086857631 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.11212973 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.085115089 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.106726028 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.088445985 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.10801481 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.106340942 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.087319371 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.10583599 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.090011415 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.107116002 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.086519023 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.109549142 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.080475695 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.115382025 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.084730682 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.115407944 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.106100356 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.083020063 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.112151402 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.087691465 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.11267411 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.108451345 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.087907077 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.107553862 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.085688366 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.10922423 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.091739989 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.104958477 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.117478933 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.095349666 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.107372642 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.088735142 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.107321981 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.08709501 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.1067473 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.106303549 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.087774673 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.106402144 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.086314572 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.110929994 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.088126153 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.10806536 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.087698697 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.108432727 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.104625557 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.0882975 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.100911804 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.085537155 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.106057133 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.085940994 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.118760923 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.106873267 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.09072297 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.105218037 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.08788503 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.105678353 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.082522923 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.116017668 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.117114372 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.08770274 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.115270828 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.085221069 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.109268079 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.117657326 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.080866641 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.104559702 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.083414865 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.104237572 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.093974152 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.108847711 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.094441779 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.108615754 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.105117832 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.083777172 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.115901753 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.084535974 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.100432001 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.083699062 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.111019155 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.08799526 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.106289381 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.086500157 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.110460588 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.107436671 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.097047018 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.107135376 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.086554993 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.108552269 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.082819123 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.106168914 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.084443037 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.11094086 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.107741531 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.084379532 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.10400589 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.086206125 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.108737713 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.086522948 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.107248154 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.087176541 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.115487957 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.106881484 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.089117929 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.110210356 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.080879387 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.110802768 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.085965867 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.107472573 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.105557876 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.090766477 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.110449206 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.087967666 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.117217667 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.085638823 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.108738409 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.107507465 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.085038564 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.106082769 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.086575912 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.108277547 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.086058949 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.109696484 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.094646931 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.10611823 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.110092776 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.086131927 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.107268541 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.094839996 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.109279475 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.088476408 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.116482246 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.11000065 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.088056449 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.116578757 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.090422194 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.11120886 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.108251189 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.088032298 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.113747241 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.085392083 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.11372275 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.085406507 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.109712141 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.108184032 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.084871377 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.10694246 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.087008424 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.106152494 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.09238705 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.1087291 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.085158329 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.106985218 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.083463093 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.108819791 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.110606774 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.095105344 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.11132416 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.089319488 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.103595527 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.082507754 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.109610371 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.105342085 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.089817956 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.110512241 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.093642681 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.109784946 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.085953206 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.107543568 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.116470059 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.093374345 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.112078916 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.084470521 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.111007778 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.087736375 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.11058519 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.086343656 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.109348542 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.108944566 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.090968641 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.110307011 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.08547421 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.11528468 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.089577417 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.110029085 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.108986906 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.08828614 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.107670376 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.081782439 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.108032968 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.088057732 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.113624732 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.088100555 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.1090581 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.119120524 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.086369902 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.10728074 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.08951921 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.108271225 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.111414304 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.083285036 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.108650454 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.088886097 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.109071141 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.082525611 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.10749154 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.083501388 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.11103883 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.085288031 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.103638826 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.118635084 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.096762879 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.111717124 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.085321338 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.108035223 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.080716465 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.103291404 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.10557491 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.088436883 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.109644783 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.097286554 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.107265342 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.085048382 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.10440206 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.085641289 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.111855715 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.110538325 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.084649275 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.102957746 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.086690391 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.111731117 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.09283064 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.10817373 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.08602991 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.112702792 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.109511158 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.085421024 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.112307562 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.083240457 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.112796647 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.12142651 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.088453578 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.109678345 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.094603365 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.117272442 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.087543717 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.104602129 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.108441155 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.091748008 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.108421783 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.089293971 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.110188365 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.124482597 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.091622369 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.107409023 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.086126401 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.110876609 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.086493545 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.117008797 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.087709213 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.109835419 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.112495641 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.089414377 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.118243567 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.088424694 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.117862693 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.111871472 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.08954785 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.107679703 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.087737978 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.106903797 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.085388169 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.111003114 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.108545917 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.092896545 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.11752785 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.085494892 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.122011749 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.117655466 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.092418279 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.105051265 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.085868151 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.108561906 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.082618109 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.110147501 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.083799567 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.10824781 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.105648952 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.089742724 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.108519212 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.093549445 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.110369108 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.087991203 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.109142375 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.080972493 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.111410961 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.089602759 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.110408998 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.104237199 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.088494903 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.109441436 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.091406458 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.113461134 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.086587185 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.111180644 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.087952602 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.11008874 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.103617603 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.094801418 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.107998937 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.090924407 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.108041012 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.088207022 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.109940642 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.089986083 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.114814922 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.110087822 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.089682896 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.122077742 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.088851237 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.106926526 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.104754677 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.093924655 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.106806976 seconds)
  done (took 60.435827367 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.148856483 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.082951265 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.104491028 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.083608997 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.118344421 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.104986973 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.08354358 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.104894935 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.084107914 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.107737502 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.082044654 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.10515284 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.11423613 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.12983743 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.096992528 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.110644105 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.081790798 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.106156988 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.103534899 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.083944197 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.114914376 seconds)
  done (took 3.058242515 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.107226559 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.126742561 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.123169752 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.124428897 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.093286182 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.121165914 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.120430293 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.120812905 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.102692425 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.117329961 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.12452299 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.12066563 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.094330658 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.117505302 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.116824436 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.096930546 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.123950499 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.115215978 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.121481856 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.099107291 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.119493098 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.120663649 seconds)
  done (took 3.436407355 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.0878648 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.106066675 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.086865873 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.100354917 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.083621101 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.101570338 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.091797901 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.10707264 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.090633635 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.109055305 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.085071569 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.109044477 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.10966363 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.083793605 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.108053097 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.08566669 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.159289491 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.114644929 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.086147509 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.111605719 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.082064385 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.108641824 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.099711526 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.080472284 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.103343172 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.088565792 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.106319097 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.084103847 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.110216773 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.085828125 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.110874121 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.084781744 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.111162075 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.108770442 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.08772864 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.107259408 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.08811709 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.108995288 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.083833434 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.107583735 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.088082582 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.106211756 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.087534822 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.11171677 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.084484851 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.107737555 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.087441946 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.110268895 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.102850306 seconds)
  done (took 5.75427465 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.108056663 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.169259971 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.091025479 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.15090717 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.127135046 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.118759882 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.091740529 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.150473458 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.10936668 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.086461547 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.129366019 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.127862404 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.109935997 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.092692313 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.117138869 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.11007676 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.089753005 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.109437056 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.113600155 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.088764622 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.115705309 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.094002144 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.127638877 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.124498089 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.115224606 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.087524889 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.110406999 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.114208451 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.101640637 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.115420699 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.115257669 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.093993333 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.127341804 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.113042269 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.086617288 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.113985441 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.128185058 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.088106685 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.114847612 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.105158555 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.088836293 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.111871679 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.112167853 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.102942564 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.108157578 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.110391714 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.086095644 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.107658939 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.124901655 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.090354944 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.118742946 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.126376729 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.090767222 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.111297168 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.115217048 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.126913955 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.088851945 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.10854348 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.092151776 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.123823321 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.107370332 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.092033339 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.126142073 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.111991472 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.095377242 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.126573699 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.11638522 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.114705353 seconds)
  done (took 8.589113071 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.098537799 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.117348367 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.12595983 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.127122284 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.094638803 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.116911372 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.116792593 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.093951044 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.117274543 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.123470542 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.1171909 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.140511808 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.09052192 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.120427289 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.11713404 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.095097453 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.11753736 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.117335822 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.094577672 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.115562396 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.113003612 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.124115678 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.094452584 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.125539119 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.14499695 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.106949 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.089460985 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.112628535 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.120956668 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.112181842 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.124557604 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.091244339 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.112787705 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.122232227 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.12523752 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.090848821 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.107513709 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.114698543 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.094127954 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.1178165 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.110558318 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.100414851 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.113193792 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.107885721 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.09412472 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.114178082 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.123960741 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.127372249 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.117342592 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.097351092 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.113287773 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.121572717 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.112391993 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.091208266 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.121918586 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.147693775 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.122055124 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.121590747 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.112113913 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.099860697 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.121613653 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.131337878 seconds)
  done (took 7.94264401 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.108075526 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.118778489 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.123036967 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.106038519 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.08730181 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.115113617 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.086571294 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.109406581 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.119126896 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.099602823 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.124706808 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.115327727 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.095996121 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.124378664 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.115744046 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.118849731 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.092503153 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.116480282 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.122073816 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.092565292 seconds)
  done (took 3.110525083 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.097311173 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.129542504 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.088201808 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.118436904 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.114984876 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.095351953 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.113840698 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.113585212 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.090525251 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.11378836 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.100257955 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.123574908 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.111400531 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.09515645 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.12239522 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.116950675 seconds)
  done (took 2.673778973 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.098861104 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.122243958 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.12687891 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.091071354 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.111035494 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.084295542 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.112591729 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.10691519 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.085693505 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.127006011 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.088130771 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.114963888 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.111111167 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.088118115 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.107864775 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.090886598 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.108028142 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.086269184 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.111594719 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.126285218 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.100402137 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.111157071 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.111719684 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.091472944 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.111851964 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.094733419 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.112927737 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.108640138 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.088352236 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.111532902 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.089783957 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.120497299 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.107927651 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.088714659 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.109761735 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.086948902 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.110800245 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.088567943 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.114972691 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.110115989 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.08833245 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.111210301 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.0891388 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.113089659 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.084443834 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.112627326 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.105669227 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.095976583 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.10885344 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.089040065 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.11177469 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.090757896 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.113118218 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.122020275 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.092247984 seconds)
  done (took 6.620873932 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.10333058 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.111988508 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.08414796 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.109805126 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.092085335 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.114961097 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.114778175 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.091726414 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.113210457 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.087071494 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.114466547 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.093056669 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.115023871 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.113906149 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.090996717 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.115212681 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.084877901 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.114129033 seconds)
  done (took 2.798841624 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.095995939 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.111768081 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.09665516 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.112810701 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.088845144 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.115041161 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.084715429 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.112066939 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.108442333 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.08811663 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.109897247 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.090406739 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.110566486 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.092016995 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.112746984 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08871798 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.115502232 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.109779224 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.089522649 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.107668652 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.091874182 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.11054521 seconds)
  done (took 3.177238666 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.124120609 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.132259949 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.096576585 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.244376061 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.108090607 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.140255539 seconds)
  done (took 1.780969049 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.111881923 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.127227104 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.111763331 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.112203323 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.121393896 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090444299 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115048497 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114706594 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.123522932 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106192451 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116017712 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.124050695 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.124217669 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.102178394 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120536136 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116349189 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108726112 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088346527 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107860846 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.128313439 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088131429 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119324235 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10976852 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090970759 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11532085 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.125065793 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.124446118 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.128210958 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.092937594 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.12503639 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120862098 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.092260254 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.12560191 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.128678497 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113994963 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.102822518 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115284987 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.135246609 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121091088 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.102297076 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.115895405 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.121191545 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.101474971 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.120549402 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.124588144 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.113975054 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.098129295 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.114461711 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.114961291 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.143103021 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.098516953 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.124742247 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120978089 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.124187107 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.101380108 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.142618326 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.128806094 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.12412286 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.121970868 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.129113033 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.124512581 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.098097598 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.12481901 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.129349905 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.121122777 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10073947 seconds)
  done (took 8.567099796 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10286867 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.133387743 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115694072 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.128145856 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.102220266 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115522546 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115029746 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.092228057 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11489841 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113520631 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.160887434 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.093273293 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.125109544 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.12369847 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.09110809 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.115754518 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115341215 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.124487448 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.091528393 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.141073888 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116101134 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.123695892 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.123885667 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.101815013 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.129909735 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121120329 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114103211 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.092429585 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115372768 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113988652 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.098750279 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115927664 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.124567839 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.09075942 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.124826048 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.115698632 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090797004 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.121502732 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.115575268 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.12145146 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.101653441 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.134853403 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115236935 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.115053377 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107242371 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115781121 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.115298391 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.091247463 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116010467 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114244513 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.105822037 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.129011035 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.127741772 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.120369956 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11228456 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090852411 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116505266 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114460465 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.090891306 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.122701429 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.124398922 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.092487908 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.142434423 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116121547 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115898 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123707202 seconds)
  done (took 8.503850154 seconds)
done (took 163.481438051 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.238847764 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.203122585 seconds)
  done (took 1.373640273 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.088694597 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.137852047 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.098986573 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.175595222 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.084769856 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.142257043 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.138487737 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.098115177 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.107677557 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.085710524 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.108849381 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.087215077 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.172520729 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.08517165 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.108452871 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.109987512 seconds)
  done (took 2.773672424 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.114743857 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.259500674 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.130941029 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.110222217 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.091034342 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.110855579 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.084739342 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.112589284 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.089414824 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.106354816 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.088693289 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.110008712 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.083666544 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.108832944 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.089166125 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.110726767 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.105785872 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.089536763 seconds)
  done (took 2.937520673 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.118202485 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.153237318 seconds)
  done (took 1.224587251 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.249645532 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.164687288 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.236184872 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.476453952 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.278413738 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.359640236 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.204748661 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.215982708 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.16730492 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.213694786 seconds)
  done (took 3.511366867 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.124560933 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.183262001 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.320955112 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.156594513 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.106721532 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.127650463 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.159396669 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.131386425 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.126078164 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.100711835 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.125649975 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.119756309 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.139687467 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.094630172 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.117263557 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.119181784 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.119788781 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.116381718 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.116109145 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.09520738 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.139517754 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.106421164 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.095444135 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.114594541 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.09668997 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.121597438 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.10682402 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.085956911 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.117881444 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.115108151 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.092839761 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.1266973 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.119948771 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.156506081 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.123396399 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.157849145 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.119446517 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.091312274 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.116742077 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.090523473 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.120349057 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.12051756 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.125399671 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.097084373 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.107254127 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.097381839 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.107928493 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.085396087 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.12006869 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.121884862 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.094219159 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.116557769 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.155083903 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.120822844 seconds)
  done (took 7.540172014 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.788051059 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.156441344 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.089416192 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.881946555 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.136073875 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.103269363 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.771868534 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.110905149 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.256393506 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.746846294 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.134032056 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.119226622 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.204626615 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.257788844 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.927173428 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.286569159 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.638499994 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.126216315 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.152528461 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.15413853 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.117057785 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.113724061 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.133776746 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.430663706 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.117148517 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.089099397 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.118580535 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.121537285 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.159928557 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.126240588 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.091152826 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.200894595 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.247318004 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.204895813 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.093378286 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.112179794 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.087619212 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.19127679 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.262601541 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.193255873 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.179945069 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.109113719 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.088544961 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.122809372 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.131883961 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.085562862 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.184975849 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.174367864 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.170570594 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.115381763 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.11864463 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.097456298 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.121400713 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.164934819 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.121927061 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.311359474 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.313631524 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.088344775 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.122285509 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.126045076 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.236477117 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.12447065 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.224603432 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.138912845 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.212224117 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.090172274 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.781797967 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.170707467 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.11207232 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.096203411 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.121837452 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.115934203 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.098347643 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.169054919 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.406137279 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.124707687 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.114236 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.088731539 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.229562622 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.102546616 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.112937904 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.16101153 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.116276349 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.120542492 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.10168232 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.123836419 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.16886951 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.251039657 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.100668037 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.119935295 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.115274777 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.102572931 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.117477953 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.214098009 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.217945058 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.160250456 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.234619672 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.099307764 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.186036078 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.169356479 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.119099389 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.170436839 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.119575876 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.100755855 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.123192918 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.217241836 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.14528024 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.122525052 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.093571928 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.118803651 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.147513157 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.127011951 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.095180402 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.192549891 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.458733961 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.166987014 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.110283108 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.12786129 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.097558137 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.184429631 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.095438453 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.261404482 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.122127398 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.169080631 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.120195924 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.087109618 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.121315834 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.162714412 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.122776352 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.120723594 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.100932046 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.119489822 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.230763117 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.217422337 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.121411686 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.219831019 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.183512899 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.118693632 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.171818613 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.121929729 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.167276995 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.122519396 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.119827586 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.095245426 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.773664008 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.12348356 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.097160006 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.116127957 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.186391741 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.110198826 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.102700776 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.125077869 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.086313421 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.804784243 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.126997548 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.121517779 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.101438162 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.118018139 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.121174181 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.095575495 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.116267162 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.160884868 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.231374835 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.119876388 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.118703099 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.103992246 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.158729537 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.117562944 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.125657807 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.123711618 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.102671045 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.122462489 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.115893581 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.102025122 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.191017045 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.162291679 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.217739479 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.572911123 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.113391232 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.124350845 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.226133408 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.090134984 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.28972811 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.119534748 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.201063066 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.185212638 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.098961681 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.324102943 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.186316406 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.187472848 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.104389025 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.194877004 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.088328451 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.118167731 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.16420837 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.111983185 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.094954629 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.18326578 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.101501872 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.123861513 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.968248951 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.088695453 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.249797405 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.087105411 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.171114065 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.118182405 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.121065089 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.287500142 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.090214507 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.128482414 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.163330989 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.116688282 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.125035565 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.846794996 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.125109861 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.121606269 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.095229667 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.22040498 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.163602882 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.120618347 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.119633509 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.09704119 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.184903341 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.211490712 seconds)
  done (took 44.079343045 seconds)
done (took 64.379864928 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.288310112 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.218212528 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.269885582 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.171572205 seconds)
  done (took 1.997410391 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.180600913 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.155471926 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.120906926 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.109587338 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.151830346 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.084881215 seconds)
  done (took 1.772992629 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.371129778 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.278653147 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.24528326 seconds)
  done (took 1.868765355 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.325684233 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.246478245 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.477643753 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.324760367 seconds)
  done (took 2.451401307 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.21749946 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.141148445 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.112916706 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.102924409 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.198232158 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.245145327 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.143305741 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.200870548 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.097327867 seconds)
  done (took 2.481634666 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.197370705 seconds)
done (took 11.744586511 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.135506568 seconds)
    (2/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.260490053 seconds)
    (3/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.223853335 seconds)
    (4/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.232481274 seconds)
    (5/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.124355447 seconds)
    (6/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.322215679 seconds)
    (7/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.105742325 seconds)
    (8/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.168850802 seconds)
    (9/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.214789756 seconds)
    (10/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.248533981 seconds)
    (11/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.176261503 seconds)
    (12/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.218567327 seconds)
    (13/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.191276851 seconds)
    (14/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.196318624 seconds)
    (15/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.099755254 seconds)
    (16/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.244103087 seconds)
    (17/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.115790215 seconds)
    (18/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.093006764 seconds)
    (19/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.213723528 seconds)
    (20/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.175226731 seconds)
    (21/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.126399079 seconds)
    (22/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.09628171 seconds)
    (23/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.228966579 seconds)
    (24/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.113925622 seconds)
    (25/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.093955399 seconds)
    (26/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.198863947 seconds)
    (27/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.153871968 seconds)
    (28/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.180489322 seconds)
    (29/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.106262537 seconds)
    (30/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.125772589 seconds)
    (31/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.116391977 seconds)
    (32/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.165416137 seconds)
    (33/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.234616647 seconds)
    (34/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.137571226 seconds)
    (35/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.116127532 seconds)
    (36/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.161531597 seconds)
    (37/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.106020931 seconds)
    (38/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.174489881 seconds)
    (39/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.09409801 seconds)
    (40/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.065733963 seconds)
    (41/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.214412153 seconds)
    (42/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.131959711 seconds)
    (43/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.131067386 seconds)
    (44/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.111038106 seconds)
    (45/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.135803336 seconds)
    (46/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.137262253 seconds)
    (47/309) benchmarking ("sort", BigInt, false)...
    done (took 0.226398634 seconds)
    (48/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.173947397 seconds)
    (49/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.092313221 seconds)
    (50/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.179400574 seconds)
    (51/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.065065972 seconds)
    (52/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.117501288 seconds)
    (53/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.091985213 seconds)
    (54/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.182986573 seconds)
    (55/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.122004094 seconds)
    (56/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.113678553 seconds)
    (57/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.135686978 seconds)
    (58/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.207506124 seconds)
    (59/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.092700962 seconds)
    (60/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.182984286 seconds)
    (61/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.119311651 seconds)
    (62/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.154349749 seconds)
    (63/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.090242808 seconds)
    (64/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.185797012 seconds)
    (65/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.112684723 seconds)
    (66/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.121444961 seconds)
    (67/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.087145214 seconds)
    (68/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.118338343 seconds)
    (69/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.177135083 seconds)
    (70/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.1230462 seconds)
    (71/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.120476403 seconds)
    (72/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.09416608 seconds)
    (73/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.223690504 seconds)
    (74/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.122985492 seconds)
    (75/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.080975787 seconds)
    (76/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.109463351 seconds)
    (77/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.090552536 seconds)
    (78/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.192077341 seconds)
    (79/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.122452354 seconds)
    (80/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.096953809 seconds)
    (81/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.140377999 seconds)
    (82/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.110154865 seconds)
    (83/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.131191865 seconds)
    (84/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.220201801 seconds)
    (85/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.088132191 seconds)
    (86/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.113667093 seconds)
    (87/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.115004397 seconds)
    (88/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.092239332 seconds)
    (89/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.151001453 seconds)
    (90/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.115663458 seconds)
    (91/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.116439832 seconds)
    (92/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.086266502 seconds)
    (93/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.20586471 seconds)
    (94/309) benchmarking ("sort", Int64, false)...
    done (took 0.11073565 seconds)
    (95/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.067302694 seconds)
    (96/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.116824629 seconds)
    (97/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.114615105 seconds)
    (98/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.093249592 seconds)
    (99/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.181064463 seconds)
    (100/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.231870656 seconds)
    (101/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.122614882 seconds)
    (102/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.188596614 seconds)
    (103/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.08684919 seconds)
    (104/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.10115213 seconds)
    (105/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.085548875 seconds)
    (106/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.122217056 seconds)
    (107/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.188274872 seconds)
    (108/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.11167644 seconds)
    (109/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.112605438 seconds)
    (110/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.12096855 seconds)
    (111/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.097948424 seconds)
    (112/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.148154114 seconds)
    (113/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.110542808 seconds)
    (114/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.190663077 seconds)
    (115/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.182006305 seconds)
    (116/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.092229229 seconds)
    (117/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.178916741 seconds)
    (118/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.126403262 seconds)
    (119/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.307357449 seconds)
    (120/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.21582073 seconds)
    (121/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.136223284 seconds)
    (122/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.192799728 seconds)
    (123/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.165236567 seconds)
    (124/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.071245362 seconds)
    (125/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.097151161 seconds)
    (126/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.103577012 seconds)
    (127/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.097794871 seconds)
    (128/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.11038753 seconds)
    (129/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.13258334 seconds)
    (130/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.098446803 seconds)
    (131/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.108425042 seconds)
    (132/309) benchmarking ("sort", Bool, false)...
    done (took 0.180946956 seconds)
    (133/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.095323428 seconds)
    (134/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.100509146 seconds)
    (135/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.095076398 seconds)
    (136/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.207090225 seconds)
    (137/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.093481664 seconds)
    (138/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.149080687 seconds)
    (139/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.108464459 seconds)
    (140/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.095331349 seconds)
    (141/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.124025313 seconds)
    (142/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.091477126 seconds)
    (143/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.134947598 seconds)
    (144/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.066912721 seconds)
    (145/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.120323845 seconds)
    (146/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.124741973 seconds)
    (147/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.13762033 seconds)
    (148/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.116463218 seconds)
    (149/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.223307926 seconds)
    (150/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.11317348 seconds)
    (151/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.118441188 seconds)
    (152/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.084542966 seconds)
    (153/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.119219929 seconds)
    (154/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.084894404 seconds)
    (155/309) benchmarking ("sort", Float64, false)...
    done (took 0.171305836 seconds)
    (156/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.065210477 seconds)
    (157/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.117815412 seconds)
    (158/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.138684287 seconds)
    (159/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.118055592 seconds)
    (160/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.110511781 seconds)
    (161/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.133312032 seconds)
    (162/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.096830083 seconds)
    (163/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.109955742 seconds)
    (164/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.066695921 seconds)
    (165/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.118687628 seconds)
    (166/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.068269185 seconds)
    (167/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.176853839 seconds)
    (168/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.087395144 seconds)
    (169/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.132812187 seconds)
    (170/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.092501124 seconds)
    (171/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.111215717 seconds)
    (172/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.16098428 seconds)
    (173/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.090777373 seconds)
    (174/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.110714433 seconds)
    (175/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.099341966 seconds)
    (176/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.090276762 seconds)
    (177/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.066964021 seconds)
    (178/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.066864669 seconds)
    (179/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.118294604 seconds)
    (180/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.084966156 seconds)
    (181/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.090462473 seconds)
    (182/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.165197826 seconds)
    (183/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.125045973 seconds)
    (184/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.139702994 seconds)
    (185/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.102800399 seconds)
    (186/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.111273212 seconds)
    (187/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.085229626 seconds)
    (188/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.09091155 seconds)
    (189/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.09323997 seconds)
    (190/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.110544446 seconds)
    (191/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.068353781 seconds)
    (192/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.119225698 seconds)
    (193/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.06682665 seconds)
    (194/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.134564096 seconds)
    (195/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.19522946 seconds)
    (196/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.095866459 seconds)
    (197/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.109103581 seconds)
    (198/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.198255809 seconds)
    (199/309) benchmarking ("sort", Float32, false)...
    done (took 0.150108173 seconds)
    (200/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.139237679 seconds)
    (201/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.117794664 seconds)
    (202/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.120815162 seconds)
    (203/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.110778035 seconds)
    (204/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.084068235 seconds)
    (205/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.116697337 seconds)
    (206/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.076392763 seconds)
    (207/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.222527319 seconds)
    (208/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.175617929 seconds)
    (209/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.100081974 seconds)
    (210/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.164019304 seconds)
    (211/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.119611112 seconds)
    (212/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.067433578 seconds)
    (213/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.068439361 seconds)
    (214/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.091991024 seconds)
    (215/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.088250415 seconds)
    (216/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.115088734 seconds)
    (217/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.113016864 seconds)
    (218/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.109904661 seconds)
    (219/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.095586977 seconds)
    (220/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.091335728 seconds)
    (221/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.094459916 seconds)
    (222/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.090175655 seconds)
    (223/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.097209501 seconds)
    (224/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.118362601 seconds)
    (225/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.088092227 seconds)
    (226/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.110290789 seconds)
    (227/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.212876163 seconds)
    (228/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.069364552 seconds)
    (229/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.086467665 seconds)
    (230/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.138241888 seconds)
    (231/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.133830313 seconds)
    (232/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.092804749 seconds)
    (233/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.134712509 seconds)
    (234/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.087600157 seconds)
    (235/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.110049615 seconds)
    (236/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.200579098 seconds)
    (237/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.112056104 seconds)
    (238/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.102620969 seconds)
    (239/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.067844219 seconds)
    (240/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.189382671 seconds)
    (241/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.066261826 seconds)
    (242/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.142271831 seconds)
    (243/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.088404047 seconds)
    (244/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.093617201 seconds)
    (245/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.06730475 seconds)
    (246/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.111447252 seconds)
    (247/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.11359888 seconds)
    (248/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.115085827 seconds)
    (249/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.066561671 seconds)
    (250/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.093962639 seconds)
    (251/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.078475183 seconds)
    (252/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.085675128 seconds)
    (253/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.116061173 seconds)
    (254/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.085253193 seconds)
    (255/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.11385259 seconds)
    (256/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.187783546 seconds)
    (257/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.094659101 seconds)
    (258/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.090615473 seconds)
    (259/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.087380986 seconds)
    (260/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.118339989 seconds)
    (261/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.068594232 seconds)
    (262/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.138750907 seconds)
    (263/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.077835259 seconds)
    (264/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.066556366 seconds)
    (265/309) benchmarking ("sort", Int8, false)...
    done (took 0.187716152 seconds)
    (266/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.101653355 seconds)
    (267/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.067598284 seconds)
    (268/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.065489504 seconds)
    (269/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.136905866 seconds)
    (270/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.075180514 seconds)
    (271/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.092142046 seconds)
    (272/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.117107105 seconds)
    (273/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.093945689 seconds)
    (274/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.106830472 seconds)
    (275/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.091539784 seconds)
    (276/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.067185419 seconds)
    (277/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.213348796 seconds)
    (278/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.118062068 seconds)
    (279/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.069065204 seconds)
    (280/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.180889412 seconds)
    (281/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.11368949 seconds)
    (282/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.139905342 seconds)
    (283/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.084473139 seconds)
    (284/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.111581009 seconds)
    (285/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.067264707 seconds)
    (286/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.111142479 seconds)
    (287/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.095060692 seconds)
    (288/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.179436594 seconds)
    (289/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.111369632 seconds)
    (290/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.067869745 seconds)
    (291/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.076318699 seconds)
    (292/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.092003798 seconds)
    (293/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.08633055 seconds)
    (294/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.18989685 seconds)
    (295/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.152138893 seconds)
    (296/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.122105181 seconds)
    (297/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.115761125 seconds)
    (298/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.093557457 seconds)
    (299/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.114343686 seconds)
    (300/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.087036618 seconds)
    (301/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.11282045 seconds)
    (302/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.067008468 seconds)
    (303/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.067278217 seconds)
    (304/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.092560709 seconds)
    (305/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.087292353 seconds)
    (306/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.092226347 seconds)
    (307/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.092690654 seconds)
    (308/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.129395113 seconds)
    (309/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.069114482 seconds)
  done (took 40.057291501 seconds)
done (took 41.03620125 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.107492068 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.151196789 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.09593388 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.136332225 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.124204252 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.091626606 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.118935877 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.097171019 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.124270154 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.125210462 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.097957941 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.093948122 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.097122479 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.121306391 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.096801908 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.140930157 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.124290896 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.094153017 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.120030158 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.085651173 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.120455463 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.085238692 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.11404279 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.069463016 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.122367988 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.093630492 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.117476782 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.119160725 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.087273996 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.110104206 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.090877496 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.118188874 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.086403904 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.125169761 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.093931541 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.119466991 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.096540068 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.12180563 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.08761874 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.111733633 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.117042063 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.088044292 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.117736823 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.096230393 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.119791493 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.093078765 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.122206944 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.098302876 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.142759585 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.115833514 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.095726306 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.122635266 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.095246834 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.118722351 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.089864983 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.120460645 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.090911679 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.140716695 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.120932686 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.091917878 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.119316346 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.094641334 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.118083967 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.094532044 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.120459896 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.121217285 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.099359562 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.11617332 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.096947157 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.117175554 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.086243393 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.119882359 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.090017252 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.112100771 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.095205146 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.123769183 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.109117014 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.093933598 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.117692156 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.092766408 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.109818673 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.090145794 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.112619131 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.093689264 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.113749103 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.070204374 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.113298921 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.093924912 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.109685509 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.096776737 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.116399035 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.094306219 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.113610572 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.099215019 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.112454625 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.091544062 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.112378379 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.08660702 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.11432675 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.090534336 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.111569455 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.088731004 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.12050714 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.087435949 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.118381117 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.122597196 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.088397909 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.117209878 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.086625216 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.110211952 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.101987044 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.121682847 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.085996542 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.118067451 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.085128089 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.120381251 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.085702568 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.1125134 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.086715233 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.112929865 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.091088739 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.112140439 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.112912431 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.095375847 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.124494712 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.087548271 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.114808717 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.09065657 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.111328534 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.093409359 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.11248298 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.087060782 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.113366631 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.078056967 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.113497239 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.087719646 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.118764783 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.090275037 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.120284621 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.088947897 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.121282271 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.091529527 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.11910757 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.091896955 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.111125518 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.073747633 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.117831018 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.08905029 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.114192262 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.086931182 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.113738085 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.08634945 seconds)
done (took 17.09000827 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.095284355 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.18713873 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.1513311 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.142238694 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.107678598 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.112773806 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.122028451 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.119763447 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.1149557 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.1433621 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.110001129 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.134673988 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.148900526 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.087030017 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.112483505 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.091541255 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.113336622 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.101996885 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.146827457 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.133478589 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.165595116 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.085892564 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.148534069 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.135883566 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.120240061 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.106108232 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.112702522 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.091506387 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.116064625 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.112889085 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.135085017 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.114162473 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.089151908 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.134876773 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.105273839 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.120808538 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.085927621 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.119784769 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.086709725 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.112830287 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.141027199 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.134081961 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.094182963 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.117215063 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.09108115 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.114378488 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.089492794 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.121876649 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.098347773 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.118000403 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.126534589 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.156685894 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.091772442 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.12249596 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.086493546 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.123492322 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.121080763 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.090974811 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.112892083 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.090756953 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.111594491 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.092305621 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.127913477 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.142225737 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.092002339 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.122676491 seconds)
  done (took 8.735621683 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.110715611 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.139852259 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.104803759 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.132154874 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.112081775 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.089064787 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.113008877 seconds)
  done (took 1.84124115 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.094146842 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.134594203 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.128262707 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.136802709 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.131642112 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.108659371 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.123433852 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.088131717 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.131996592 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.08826619 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.135031714 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.152397861 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.089397579 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.121697693 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.137515189 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.088460513 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.138134777 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.088272704 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.11712944 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.111879845 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.117373956 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.134838541 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.090975843 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.113552735 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.102960124 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.114919727 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.163541696 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.095090556 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.115598608 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.092343153 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.112164578 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.166959337 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.102298883 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.128206745 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.087258718 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.128983134 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.128263022 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.08757452 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.131230412 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.093711054 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.128757452 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.087920191 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.116304616 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.085327447 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.119321488 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.123358365 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.091058592 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.115085833 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.092167912 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.133948742 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.089883899 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.1279725 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.088716564 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.119026812 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.089240969 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.122137245 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.123125368 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.09041057 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.13375767 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.090540421 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.133790043 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.104820518 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.129317221 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.131530727 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.091730908 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.128021197 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.101484712 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.117898058 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.089320398 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.118707119 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.130625214 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.088102755 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.114850935 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.099878423 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.115441501 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.112156496 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.138877421 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.088925702 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.12620641 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.113199809 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.091076586 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.11387222 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.113456225 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.118854415 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.088877772 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.119475747 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.091278671 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.112991927 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.087136337 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.118483529 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.086429842 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.115895759 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.090718088 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.11590709 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.116564217 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.10717848 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.115600962 seconds)
  done (took 11.945692801 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.096621701 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.114160193 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.092615963 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.114113646 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.090938429 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.115186771 seconds)
  done (took 1.679424792 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.119775276 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.118549468 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.103251401 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.121350096 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.155919545 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.103777578 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.130580774 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.124537756 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.108278285 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.128890973 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.129825547 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.105107586 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.136786534 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.120726958 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.104739702 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.121317837 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.128551842 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.101015303 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.12750252 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.096045585 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.138526619 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.121448563 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.097243576 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.132876482 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.118208838 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.096953416 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.125756933 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.102716921 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.128755618 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.123172641 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.095984539 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.117974132 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.096412253 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.12448939 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.130634034 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.095047126 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.1216721 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.118595322 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.10156992 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.119090595 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.10420246 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.122952347 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.127678808 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.094586569 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.124513525 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.120424103 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.095543013 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.125960606 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.103159056 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.120767096 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.119066754 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.096555932 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.118940199 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.094382583 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.122393474 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.123442531 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.094079291 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.13038526 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.094880553 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.122725495 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.117881647 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.094358271 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.124142352 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.116477394 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.106571137 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.120248533 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.095432539 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.122204939 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.12138251 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.096725848 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.120052572 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.092577946 seconds)
  done (took 9.336542853 seconds)
done (took 34.578952829 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.700669252 seconds)
  done (took 1.753171392 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.731091891 seconds)
  done (took 1.785511994 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.333010187 seconds)
  done (took 18.384366463 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.516044097 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.592686462 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.820612387 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.182994254 seconds)
  done (took 3.16355341 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.960879533 seconds)
  done (took 2.035912185 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.301347117 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.259604472 seconds)
  done (took 1.618219872 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.80674375 seconds)
  done (took 1.871381399 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.375677462 seconds)
  done (took 2.436644511 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.338249526 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.185415685 seconds)
  done (took 1.594905854 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.557154585 seconds)
  done (took 1.625342765 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.932995557 seconds)
  done (took 8.01031695 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.258867952 seconds)
  done (took 1.336807218 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.302333735 seconds)
  done (took 1.367063402 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.581437715 seconds)
  done (took 4.648880008 seconds)
done (took 52.700129822 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.099485349 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.127593841 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.102952071 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.124610302 seconds)
  done (took 1.514471865 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.101497004 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.121557037 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.100560213 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.122282649 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.126049678 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.097615086 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.12358793 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.100794907 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.122789999 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.096660484 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.12206217 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.119933482 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.09975669 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.123538494 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.093639195 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.124355193 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.099261768 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.123184972 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.124185372 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.09694743 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.119276973 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.097611603 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.126655831 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.093810218 seconds)
  done (took 3.749153244 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.10173094 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.119231821 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.097604876 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.118953872 seconds)
  done (took 1.517952051 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.101466319 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.142693266 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.13931082 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.10144822 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.14467983 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.137100294 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.09292614 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.117528487 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.095836998 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.125534114 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.090511041 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.150323869 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.13884789 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.099704102 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.128682185 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.087578932 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.118768833 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.13740462 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.099777737 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.127557515 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.093559297 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.127122699 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.09057507 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.141601501 seconds)
  done (took 3.903253782 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.158976676 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.152530128 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.139429626 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.095255667 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.156874089 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.142549365 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.08928017 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.141884416 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.088373787 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.1324569 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.118276337 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.133691496 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.129540966 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.087201437 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.11582687 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.08708682 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.129699826 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.131067707 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.092049975 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.146347512 seconds)
  done (took 3.549602396 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.099417645 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.118278782 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.089336342 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.116185708 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.099918443 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.120611679 seconds)
  done (took 1.725981439 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.09250777 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.114572113 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.091929749 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.113997411 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.095759753 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.115312692 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.089492183 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.115266759 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.090160844 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.115430666 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.09009641 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.11431614 seconds)
  done (took 2.321885503 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.460806114 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.093961151 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.121869168 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.116173388 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.098571529 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.115942005 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.10348343 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.119826283 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.140845382 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.091128735 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.115137941 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.09335466 seconds)
  done (took 2.750404079 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239694176 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.126976661 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.292475246 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192898002 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160333709 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.172149217 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.153656804 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.167700209 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.225802897 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.159073597 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.21026139 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.221918074 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.127135463 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.22010083 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138798151 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.119532062 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.228779653 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.21841259 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155719691 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.234008645 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202930554 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.16651782 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.178957348 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.1530778 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141155681 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171337381 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.122738957 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.103358485 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237149668 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20506802 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192897167 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164893044 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.147498173 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.24391081 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.251497883 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198992964 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18946944 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.136739427 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.16853587 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.141886053 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.271943599 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140452678 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.239188024 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1611249 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105144163 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.225328524 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169560694 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.175183406 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.151626331 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140116645 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198541087 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.243628399 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.194213601 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139978612 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164417315 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16117446 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.169124911 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153344557 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.253136225 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201350931 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205880407 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.09618838 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.148035241 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193588553 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183245302 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.167945377 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.21052872 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.146046062 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195325779 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.187000924 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168393285 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.221996176 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.185081951 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141314356 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171129012 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.175354663 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171541296 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.257672937 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178688488 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.122506036 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169566496 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150768834 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131766761 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.167214996 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.127169492 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.241754366 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124121469 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.135862376 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164370061 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.162621323 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.162570603 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201169306 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.220048193 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.148258515 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.085386801 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157289882 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.15567421 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191610213 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140178818 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.161613156 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161526242 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.131307837 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179127569 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.09725393 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204424448 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.092046114 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178583662 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212440156 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.100728628 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.159948717 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.153967684 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.149716662 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179057557 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198964869 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142821498 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.135063135 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207494114 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175402245 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.150703023 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.180892761 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.22795977 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.142521743 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122365517 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229731415 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.245801412 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112540456 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.231992168 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155432244 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107429704 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.135323256 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178697093 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.15839165 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.161091298 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134133928 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.181635441 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.238714095 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.098924851 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139218607 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187979474 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133879764 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131873 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161204176 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148985823 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.112321664 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.148145301 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.152941445 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181680857 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205910003 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.15240601 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16717268 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151556387 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.251267276 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11529029 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.149709476 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.149932774 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.093089313 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.221740653 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197218181 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.131547762 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204201292 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.171841479 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156803674 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170745635 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136404545 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.177629238 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.130747955 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.094191822 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.220432434 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.167121637 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.162862651 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.195618363 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156091214 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.183035592 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.208637967 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173840376 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175187124 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.164297651 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161089019 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.110855553 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.159238098 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165404018 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.124806251 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.14336245 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.134075322 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156764727 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116691203 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.134705854 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.227175137 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172654018 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.147507557 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.132721907 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151080645 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.179664978 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.1300052 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178944243 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.176355678 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14857589 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.226022478 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194042655 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186017109 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.143849482 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232096062 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.094143922 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.126277976 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.143167874 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.172602426 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106471764 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.136564676 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165375112 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.180258592 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.214673447 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177096365 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163115818 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177774915 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.192929952 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.122188606 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.140929346 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211959255 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176916532 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.187490559 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117007901 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.153089448 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.176655224 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156381811 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.257607685 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16641002 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177681531 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.238872948 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.149878184 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.105610327 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.151695652 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213699838 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154372486 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.178116341 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.146086253 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114241896 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162135676 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.134706855 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.161357939 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182678188 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162487737 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.22018222 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.150025139 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188117367 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.128606051 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165714948 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.159346894 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165905113 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.081715787 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176528535 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.233045304 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148583005 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171022455 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192261179 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.132477089 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.179429601 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.240605622 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196742357 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137920926 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158589137 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.159067155 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.164385213 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175399439 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.17884314 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161015578 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189895097 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.158201424 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.135963764 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113544248 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.151542534 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.153616175 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.13402204 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.148214239 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.176216707 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.137960877 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190353267 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161550137 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.157710757 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17215829 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.15047651 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.116576059 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151565683 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.245026144 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177019176 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.242295973 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.122461435 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.20680557 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207750957 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.126488752 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104200222 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.135345592 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.179235725 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136155061 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.188812232 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.149477533 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158028893 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181540893 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192601709 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140606877 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.119898894 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.129499792 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201637338 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138106432 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152444105 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.159537938 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.239371032 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.142407786 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.10565489 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.17215484 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158334632 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.148372967 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196801634 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.108025257 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.120977502 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.129308349 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.132223219 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.163182762 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209598988 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.137143812 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.184835148 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175010885 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168090324 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.165483183 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149173396 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.122153207 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165418231 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229898498 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18528059 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.132885007 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157717144 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177384324 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195433902 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161466272 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.141555998 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202617555 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.222302093 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.199746629 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.144156379 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169725351 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167682183 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157595399 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185582064 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.136003753 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.233693696 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107322626 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226855568 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155147409 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.143150733 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17685028 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.148250325 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116920308 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.217424699 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174625221 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135830556 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.105684319 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167875119 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204454225 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155853818 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.100716696 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.208077832 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.098850285 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189714056 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.259899401 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135173238 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.155098439 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.147461502 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.109915056 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157891571 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158782012 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141694642 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.164757904 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.209655825 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.135787017 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191188995 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232348137 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172202716 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174315052 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.146482834 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.693242588 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.131868605 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195011368 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156525278 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205604475 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.152576979 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171758036 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.159039156 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169849611 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224805351 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160383798 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.231889378 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193723736 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.176194714 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.133777944 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158858118 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162363424 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.145450789 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.155417988 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167675018 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16117527 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.153293255 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.177553439 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169581998 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.134911543 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.14008184 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199349127 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.155456449 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187494604 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.180399934 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140795828 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172768072 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186015905 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136060825 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.181305187 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240564741 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.142635732 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152185752 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.105984764 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.156753842 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.262027122 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.125113355 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200552098 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175462306 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.159463365 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167194052 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.1483335 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.219804563 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157732129 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177737169 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.145954104 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.160966044 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.15525068 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.111201304 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.131442069 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.155620512 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167054984 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.148305483 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.160740327 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.139111872 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21805597 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.097603754 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146484008 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156083518 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190708251 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.2449459 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.109898599 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138403796 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163460246 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152592157 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.17734723 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179143974 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.137539148 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135893379 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.109605019 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.162051246 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.113979506 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.156101646 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157835251 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166066451 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.236692462 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.108781099 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.280277025 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.142668316 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15481717 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.089997821 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.134094111 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151244055 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147440314 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159544874 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.123905424 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.261844442 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.148466402 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.13409346 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.121779592 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.127739826 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136466277 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.165644043 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168605642 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178069603 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147146155 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.081750543 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160068807 seconds)
  done (took 81.401003095 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.176519063 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.15627119 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.162387319 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.224852018 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.191840233 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.292155453 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.233707961 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.271142735 seconds)
  done (took 2.867014284 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.09600862 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.148231563 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.153307703 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.135083891 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.093122382 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.119253403 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.335988593 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.132448554 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.092155334 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.143092851 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.14898531 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.121224676 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.516317465 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.127757731 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.118236529 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.085406735 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.120118879 seconds)
  done (took 3.841148933 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.470863453 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.722046204 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.481974345 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.127320908 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.195395567 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.138034684 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.780702294 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.215998499 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.096808128 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.493198652 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.773996098 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.192520662 seconds)
  done (took 18.858207476 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.102859803 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.121200541 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.108796273 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.136228188 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.097541175 seconds)
  done (took 1.730879346 seconds)
done (took 130.791228656 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.111639788 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.411528468 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.072148539 seconds)
  done (took 1.684825865 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.1104427 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.13746908 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.108941258 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.136890322 seconds)
  done (took 1.675928767 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.101785872 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.127001031 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.109912809 seconds)
  done (took 1.514560847 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.324859941 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.192384715 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.144721839 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.107230642 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.129934298 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.10473821 seconds)
  done (took 1.510379548 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.098725359 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.127893715 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.098326683 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.130934528 seconds)
  done (took 1.628073757 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.096328294 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.070987344 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.101373019 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.076040249 seconds)
  done (took 1.512118837 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.115576491 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.132435782 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.103574053 seconds)
  done (took 1.525432872 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.130499666 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.140090914 seconds)
  done (took 1.443376487 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.106902615 seconds)
  done (took 1.276730867 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.119994623 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.170796919 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.190240815 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.165976127 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.231190436 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.166365273 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.14154237 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.11545759 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.132851014 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.145659685 seconds)
  done (took 2.754585291 seconds)
done (took 18.472682896 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.104523653 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.519421603 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.413212616 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.118250991 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.723881099 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.380449362 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.033801297 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.146666124 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.165970029 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.094124497 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.140452016 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.673280885 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.064198062 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.474553081 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.02206397 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.473553501 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.705501197 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.094568537 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.119995568 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.095276848 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.019629813 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.092923415 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.123098623 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.092469769 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.705957352 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.426672605 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.096398393 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.471274549 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.093090149 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.12744798 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.382991544 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.124435176 seconds)
  done (took 17.482263541 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.101063743 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.17394078 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.098271143 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.138262715 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.123755001 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.094457207 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.125172514 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.093417704 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.180347404 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.122941091 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.111136786 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.123059833 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.126143237 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.096090227 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.142582297 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.092760142 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.126192036 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.092233721 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.123015578 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.120982665 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.11245153 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.120545969 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.09513265 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.122346579 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.0954425 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.137246882 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.122187986 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.094341061 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.121160199 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.099337949 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.127656797 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.095574939 seconds)
  done (took 4.930661863 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.144395728 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.183820307 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.129090252 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.127196399 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.170694738 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.124828818 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.200099981 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.118133389 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.183801901 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.124464491 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.139628815 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.094491104 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.157988202 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.121633101 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.115577771 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.122678177 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.097913907 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.122487983 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.093321768 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.124028058 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.139751708 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.094038435 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.122639865 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.094444216 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.124073961 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.108542606 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.124269055 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.120999591 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.094506991 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.127303392 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.100709691 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.124707584 seconds)
  done (took 5.262132403 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.103845934 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.126388211 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.10989378 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.139360825 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.095413612 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.126544852 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.09650173 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.126322963 seconds)
  done (took 2.110372112 seconds)
done (took 30.957914285 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.113650741 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.127009165 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.107418792 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.134767291 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.103929901 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.132581347 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.091027392 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.134583146 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.133953095 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.103115083 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.137080313 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.0927819 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.122340789 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.092319653 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.134765031 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.097735268 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.133004656 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.10195802 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.1342649 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.132396823 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.095412069 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.133681677 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.103744798 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.133957304 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.104068494 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.134502201 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.136881019 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.100343026 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.122989275 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.095077343 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.125181181 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.104740505 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.125742258 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.106098456 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.127589261 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.096995638 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.124217954 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.095169488 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.134260785 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.132121389 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.100683781 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.133262165 seconds)
  done (took 6.096017821 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.116235067 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.1475797 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.105975998 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.08057809 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.118411612 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.080546596 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.138695792 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.079859621 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.109965753 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.10906222 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.074278278 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.107238006 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.078877339 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.102036872 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.078883591 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.075505435 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.10842985 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.076910281 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.076775396 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.106185237 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.080596609 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.072986119 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.108780582 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.07941004 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.075373075 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.111250759 seconds)
  done (took 3.692568582 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.108738921 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.136689555 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.113149863 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.185232562 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.161444096 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.100285582 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.133785357 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.139124585 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.109631024 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.120251791 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.09681613 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.150607758 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.11167384 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.12988853 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.091950145 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.13769059 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.136165993 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.094750803 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.127738767 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.113600567 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.139489896 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.103499757 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.145187601 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.132999858 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.093856482 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.123291914 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.097365004 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.14515651 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.097345589 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.132435433 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.125471654 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.097847053 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.123400573 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.106042259 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.126297274 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.094241111 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.143256978 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.130598428 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.103179422 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.121557794 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.0970193 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.12247544 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.11522717 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.168255248 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.091668902 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.131041664 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.129377148 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.103879241 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.121857869 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.111577636 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.132000198 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.092267412 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.126718199 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.091480006 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.122778483 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.106298285 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.125077016 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.123304359 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.104196622 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.124857256 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.106128119 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.126215999 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.109346795 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.123229763 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.099721567 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.122247643 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.092401505 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.122430781 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.143813857 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.095012665 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.164243685 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.09427106 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.124865398 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.130254973 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.102029062 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.128061288 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.094246247 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.137756108 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.102327435 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.126225156 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.101625967 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.127510232 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.095599442 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.141273387 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.123141725 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.096010606 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.122376357 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.100444861 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.124618312 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.09456306 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.136779359 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.09301806 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.126738537 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.110092396 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.122592733 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.122607503 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.101417823 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.126975239 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.093551187 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.135552811 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.098473115 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.124467778 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.130047483 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.094892653 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.124566966 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.104838794 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.127362433 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.092915873 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.127117631 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.099009016 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.124236945 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.094855376 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.126731966 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.094107122 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.133414713 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.098923442 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.128461892 seconds)
  done (took 14.991827034 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.234219642 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.217030787 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.236813988 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.263247908 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.135870761 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.11486247 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.213382313 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.156368271 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.123352787 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.162431815 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.163057151 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.180812489 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.140346812 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.18491971 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.143726748 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.121771884 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.113041723 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.16807858 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.21650163 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.290643978 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.113572614 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.134045085 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.163245409 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.161378482 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.106317855 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.135135909 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.139989358 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.106252332 seconds)
  done (took 5.84979211 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.111104663 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.157936232 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.097713173 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.146935124 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.148774635 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.094871604 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.129640734 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.095309489 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.137014349 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.135899921 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.093275867 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.12984254 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.0995546 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.134079018 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.124171426 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.10436274 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.133128634 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.095246395 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.127192972 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.09759058 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.130440849 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.101112566 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.128499568 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.121326916 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.104912659 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.121835027 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.087178499 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.143826227 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.122105347 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.117144343 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.121571522 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.100702688 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.13402485 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.094249108 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.123388311 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.095409934 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.127351799 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.095868744 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.125553086 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.092481335 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.122640582 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.078177678 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.123278826 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.135562966 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.100602735 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.079759838 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.131443656 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.127387728 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.09629962 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.120271564 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.098370291 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.12481016 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.0972604 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.130234383 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.099711011 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.124313124 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.097498103 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.116395204 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.101209123 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.126469261 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.085541704 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.120950729 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.10001891 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.118517156 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.103150297 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.128482995 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.092866181 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.125339267 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.098091785 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.130859353 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.09588807 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.128049085 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.090962089 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.127503311 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.095525086 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.128759347 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.096429318 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.124322904 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.122014988 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.095213465 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.075525333 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.12395685 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.074385713 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.126781801 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.092382023 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.122932998 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.095283756 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.130255075 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.137584077 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.096818738 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.132035011 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.094040847 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.123133472 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.096919457 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.11440208 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.097402793 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.139016872 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.140309121 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.094023631 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.122238291 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.107730872 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.125918212 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.092633523 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.106444044 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.102007775 seconds)
  done (took 13.105777543 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.135870201 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.156101969 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.094743184 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.144658099 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.156093303 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.157850661 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.103052944 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.13071577 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.096472979 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.142337004 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.094553638 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.132555369 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.097741322 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.137880149 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.157502447 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.10335307 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.125723105 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.107935173 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.133347472 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.170548218 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.112490449 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.144181771 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.107575665 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.1258033 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.128177787 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.112257283 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.162164265 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.108132288 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.137718158 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.141733621 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.109429798 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.162161185 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.143028092 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.100031881 seconds)
  done (took 5.599544734 seconds)
done (took 50.520097141 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.313109849 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.549638216 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.293377048 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.299342768 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.304323649 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.310515082 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.301808571 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.295163554 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.31540962 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.291623258 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.552985432 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 5.018680403 seconds)
done (took 60.062089843 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.425268338 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.429583821 seconds)
    (2/2) benchmarking "String"...
    done (took 1.565430377 seconds)
  done (took 4.224966713 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.679246069 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.258278818 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.550638081 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.293727485 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.292559521 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.576513771 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 3.047173164 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.63518478 seconds)
  done (took 28.873495238 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.305573276 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.703266898 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 5.054007711 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 5.048317783 seconds)
  done (took 19.330669482 seconds)
done (took 62.749698166 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.306533174 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.337536764 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.313137144 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.268625678 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.431659935 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.327435283 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.597397723 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.340587347 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.323141587 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.274083899 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.314594678 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.313728462 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.321490295 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.540460726 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.308662764 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.293150972 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.383973486 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.956953697 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.714120845 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.301659252 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.312034006 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.373630626 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.297847008 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.303424918 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.35635061 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.293979644 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.295459658 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.305694623 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.969805034 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.302054553 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.303961173 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.766822926 seconds)
  done (took 194.068645248 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.297303528 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.158667823 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.246504455 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.363967829 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.669466283 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.495022302 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.433018101 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.756500017 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.320531852 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.324676192 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.467415779 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.298848217 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.54060542 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.288272439 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.308957861 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.374552822 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.511124553 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.580010488 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.318421097 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.570148708 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.326629453 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.405080676 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.32101023 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.468844198 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.356878688 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.365098328 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.30671055 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.338027948 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.487773878 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.428316618 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.321766729 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.310261245 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.945832245 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.152710086 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.297138794 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.337664651 seconds)
  done (took 152.715571418 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.601911286 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.300197533 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.299583636 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.300201227 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.333369597 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.298431287 seconds)
    (6/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.298776121 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.893269232 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.844304605 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.586914534 seconds)
    (10/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.898017494 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.363695386 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.572574202 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.29469021 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.396141571 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.306811778 seconds)
    (16/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.297018845 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.301691656 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.31409907 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.345726585 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.301760463 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.30075151 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.896741817 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.313462166 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.354559629 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.309188324 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.30258712 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.336081367 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.694050881 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.299574501 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.334043851 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.625598566 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.351364705 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.296721638 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.670017774 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.37440212 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.414654815 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.30172194 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.337867803 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.301451265 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.57413438 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.298369721 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.30410854 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.306300393 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.95497286 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.30410795 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.897751133 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.303056503 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.256842801 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.298246932 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.302550895 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.190274265 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.892530693 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.321774143 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.301192844 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.304956352 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.302624005 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.303064814 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.338460078 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.084998806 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.402441112 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.317966695 seconds)
    (62/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.304349669 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.305916305 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.336972844 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.299234639 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.762370011 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.305460012 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.42015961 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.379150104 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.410225846 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.900262569 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.305177643 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.398870673 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.421676445 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.299799347 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.303832419 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.303701232 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.304524867 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.412680988 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.300880047 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.742764067 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.306208828 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.307782914 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.367495016 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.400995042 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.300884444 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.654058757 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.303812526 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.303917448 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.05562157 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.39806898 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.299146328 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.304940477 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.306015572 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.7432343 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.90058814 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.55471952 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.307555469 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.942034276 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.306487077 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.761641167 seconds)
    (102/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.302093391 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.877167885 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.967683348 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.308266128 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.415946773 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.305560656 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.304566249 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.307019714 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.335516398 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.32534021 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.364011857 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.303891086 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.704972503 seconds)
  done (took 359.019966851 seconds)
done (took 708.622997731 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.014848231 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.960644812 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.099332432 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.975793885 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.964909505 seconds)
  done (took 11.245671397 seconds)
done (took 12.473415475 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.509451099 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.505939319 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.368216039 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.51212252 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.332691339 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.528622761 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.483013566 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.321143224 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.417161839 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.392701896 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.415763674 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.36143273 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.336897422 seconds)
  done (took 19.716496609 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.664838003 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.632880531 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.373548694 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.655060781 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.349112704 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.641589503 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.51406021 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.527400065 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.51883071 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.341710146 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.319771101 seconds)
  done (took 17.770385641 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.650294739 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.643513146 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.374536951 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.650912226 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.349630412 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.656657796 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.518656663 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.533927537 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.542681239 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.339276375 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.317965252 seconds)
  done (took 17.806281694 seconds)
done (took 56.516862432 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.318127711 seconds)
  done (took 2.548989856 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.348237338 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.520887779 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.336243069 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.320072811 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.316834631 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.315107014 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.314473665 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.316525372 seconds)
  done (took 12.023609294 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.315204504 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.316036027 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.316667518 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.313417421 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.314832151 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.316776987 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.311789515 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.3113156 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.311875716 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.311887056 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.311536909 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.314634691 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.311041978 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.316378462 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.314418963 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.317311537 seconds)
  done (took 22.256300528 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.317924294 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.311247317 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.312549034 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.315157974 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.313983211 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.311742719 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.310386566 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.3151963 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.313288501 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.313346026 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.315664866 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.314972547 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.312691 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.313497957 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.31130408 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.310824898 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.31287343 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.313313805 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.315384301 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.31438851 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.311717388 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.315762015 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.317065746 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.316894141 seconds)
  done (took 32.762049226 seconds)
done (took 70.815568802 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.505134595 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 4.027878741 seconds)
  done (took 9.76003635 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.316350295 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.315690708 seconds)
  done (took 3.864104079 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.316714141 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.319116553 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.319078142 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.319108685 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.31772235 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.318478106 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.319457117 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.318676788 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.318073459 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.316773085 seconds)
  done (took 14.414269841 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.317457805 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.316960543 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.3159991 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.317426978 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.316302104 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.314165235 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.319153894 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.317847119 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.31888875 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.313948869 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.31706336 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.314786256 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.314748593 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.315352102 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.317765918 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.31632852 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.314132462 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.311348047 seconds)
  done (took 24.92315965 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.31803126 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.317180319 seconds)
  done (took 3.867586116 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.315625242 seconds)
    (2/7) benchmarking "second"...
    done (took 1.316503051 seconds)
    (3/7) benchmarking "month"...
    done (took 1.316786162 seconds)
    (4/7) benchmarking "year"...
    done (took 1.316621734 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.314827501 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.316769541 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.318074176 seconds)
  done (took 10.44920313 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.319521464 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.497208059 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.579042441 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.902767669 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.319616996 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.322555975 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.170469249 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.318507362 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.321592865 seconds)
  done (took 14.983308292 seconds)
done (took 83.49086581 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.346774636 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.327891505 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.532348424 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.313090397 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.33280007 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.614334333 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.324457845 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.439949174 seconds)
done (took 38.462812157 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.312396687 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.0683041 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.06357927 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.307689776 seconds)
  done (took 11.672395709 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.297320208 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.281434794 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.294977174 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.383713604 seconds)
  done (took 18.493875968 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.382400963 seconds)
    (2/2) benchmarking "read"...
    done (took 1.650271175 seconds)
  done (took 5.266902583 seconds)
done (took 42.977992266 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.317802382 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.320783373 seconds)
    (3/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.313502176 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.317804998 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.322510639 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.32059515 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.318054036 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.3228245 seconds)
    (9/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.320426924 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.317901919 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.322617036 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.322937996 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.322312206 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.32045482 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.31951544 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.320940705 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.319877267 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.318150066 seconds)
    (19/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.319634263 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.319008878 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.321839421 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.321139863 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.320562086 seconds)
    (24/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.322879742 seconds)
  done (took 32.92058307 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.322095597 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.318214698 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.32346422 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.321971787 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.321873056 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.322182285 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.322972263 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.321285498 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.32399426 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.321677984 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.319473692 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.319838594 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.321975595 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.317636986 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.324260528 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.323438091 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.324566363 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.323163343 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.327777529 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.323026864 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.324033873 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.32089655 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.320124047 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.324811465 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.318189228 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.319654144 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.320229852 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.320175007 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.325497147 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.321823962 seconds)
  done (took 40.901662448 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.327891193 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.330224985 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.325057382 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.322870233 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.322148386 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.322700897 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.322761873 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.320110885 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.321807379 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.322027387 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.325069836 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.325358593 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.324261657 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.323063019 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.325935647 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.324567258 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.322470544 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.326350619 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.326761734 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.328773599 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.324773229 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.326923735 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.324497348 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.325142467 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.32727567 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.326417995 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.325204918 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.326499187 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.3249767 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.323868008 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.325415858 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.32584787 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.323606392 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.324451854 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.323390589 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.324037169 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.329237562 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.332728789 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.327537319 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.325753825 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.322079813 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.324482114 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.323950162 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.32484693 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.327973176 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.330695695 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.32944571 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.329331029 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.327859768 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.327243573 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.326127541 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.327043997 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.327791391 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.328579908 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.327519508 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.32909097 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.32765553 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.330001782 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.327759824 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.32734817 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.327013397 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.327729494 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.325516048 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.327123166 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.325075947 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.325844778 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.324455092 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.326979806 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.327676467 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.330234512 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.328141452 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.329630322 seconds)
  done (took 96.723063036 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.326641975 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.326231633 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.325433112 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.327023014 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.326151337 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.330365096 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.326900864 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.331435327 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.32680009 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.330412029 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.328163427 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.325346274 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.325170362 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.329883655 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.326226085 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.327529224 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.327537516 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.327959762 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.328145972 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.325371953 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.326949005 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.327362213 seconds)
  done (took 30.449244739 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.32949381 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.335324748 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.329045612 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.330390254 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.325353571 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.328424263 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.329971327 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.330770671 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.329417621 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.327768906 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.329613521 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.330191762 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.325720286 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.326490401 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.329664052 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.330448246 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.330813746 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.327563237 seconds)
  done (took 25.17358978 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.3283454 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.326951387 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.331883595 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.327491719 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.328591993 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.330237567 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.330574526 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.33282245 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.333564552 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.328655371 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.330483586 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.334608929 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.334368527 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.329340312 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.332437111 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.3316522 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.333046577 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.330218028 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.331706798 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.331375436 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.331946695 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.33187496 seconds)
  done (took 30.529395751 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.334279606 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.332233528 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.328735369 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.330126525 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.332924119 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.333045158 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.332156643 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.328677725 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.332890305 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.334703742 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.331380735 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.333761386 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.333619216 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.330989842 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.333200179 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.334337776 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.337217633 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.327505099 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.333377209 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.32971142 seconds)
  done (took 27.893695233 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.333539129 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.331543034 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.33252116 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.333765552 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.333416465 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.331437436 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.333452911 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.335401647 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.333358488 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.33328684 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.332587232 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.332647813 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.33341833 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.332805148 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.335513658 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.333072062 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.333941327 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.335467995 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.332407205 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.332482346 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.332416378 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.335209322 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.331739793 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.331003514 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.334849131 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.336188589 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.332828377 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.334953245 seconds)
  done (took 38.584668973 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.337205858 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.336131693 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.3349454 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.335634559 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.336420223 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.333782709 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.333312737 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.333496892 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.336207487 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.333009989 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.337369963 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.335080697 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.337539306 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.337169783 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.33673892 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.337922607 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.335932962 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.336296454 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.336843318 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.334848294 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.33688673 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.336333303 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.334250061 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.332391361 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.334152056 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.335960663 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.3361135 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.336495251 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.338032191 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.335321661 seconds)
  done (took 41.32793314 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.352154738 seconds)
    (2/2) benchmarking "in"...
    done (took 1.351980604 seconds)
  done (took 3.95736616 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.336695849 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.337048517 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.334942063 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.337059179 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.337793388 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.338847215 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.339566807 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.337438121 seconds)
  done (took 11.955008466 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.338271798 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.337498725 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.338512659 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.338454256 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.337857719 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.335920744 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.343504733 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.362452416 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.342759026 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.339492752 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.345384304 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.348071155 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.341670393 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.336524781 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.337089468 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.339174066 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.338406328 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.339607369 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.334970308 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.338175108 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.34064876 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.338005759 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.340660516 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.335134772 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.339413253 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.350885724 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.360531564 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.340267892 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.341202713 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.341579403 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.336755474 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.338516197 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.339583562 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.336226623 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.337547278 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.339024806 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.346281725 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.362672545 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.346823739 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.358848419 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.340038602 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.33949794 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.339070744 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.339717311 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.339983707 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.341068155 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.339788213 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.337859237 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.339912019 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.344235517 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.351309725 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.344863873 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.342229896 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.348803069 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.342116302 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.346665622 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.363096458 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.347024963 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.353843039 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.352280314 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.373791179 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.368648682 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.341868505 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.342733608 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.347973979 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.36464402 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.34709029 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.361562088 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.341678833 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.341413035 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.349015679 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.375195415 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.37252955 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.339398171 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.340522986 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.342217066 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.340811564 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.341266635 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.349762518 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.364267603 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.34018572 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.341776111 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.355996817 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.365503599 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.340465389 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.340252032 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.342207436 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.341129094 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.34444309 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.354263697 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.365188836 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.343201008 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.343265147 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.342325127 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.34239518 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.342888872 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.342245924 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.345739903 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.34003884 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.344565784 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.340574036 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.348662189 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.353344137 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.34486413 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.345135481 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.352364682 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.365709701 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.344856389 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.349727959 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.345317067 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.344030458 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.347447949 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.34897362 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.341445285 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.348021054 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.35590595 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.343216208 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.344124803 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.344758623 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.345332712 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.357384688 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.377065588 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.345503348 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.345003479 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.354999635 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.360548994 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.343700572 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.345605083 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.343982378 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.34545585 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.340031127 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.346371675 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.34390548 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.344486352 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.34473053 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.347326385 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.342585036 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.348947559 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.344435472 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.345370088 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.34280823 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.34566234 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.347382136 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.348780154 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.343279724 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.348039363 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.35057697 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.365495225 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.348070846 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.346010227 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.344405516 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.345341188 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.348622299 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.34520809 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.345827482 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.348845897 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.347930566 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.34567283 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.347220349 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.349309294 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.34998744 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.348646548 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.350352827 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.349955883 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.352194034 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.347531662 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.347798981 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.349905377 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.351939108 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.347626728 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.350255126 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.348162315 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.354708222 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.359001034 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.350310325 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.35021352 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.351582687 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.345927371 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.352880797 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.349919869 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.351088716 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.360850989 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.348165532 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.357281162 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.372295681 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.350971259 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.348572476 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.350896326 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.345630401 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.349096516 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.356593108 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.361350011 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.364195532 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.37987748 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.351057615 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.353676953 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.352794508 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.353836837 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.357185436 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.347383968 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.350165957 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.350938612 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.348541163 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.349032235 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.349181914 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.350362436 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.348940515 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.350769432 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.352430767 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.354198373 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.352573428 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.352366493 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.351111358 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.346426137 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.350607636 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.353803694 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.348237694 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.347592857 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.352013217 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.351471926 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.354212389 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.352969779 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.356459532 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.350864427 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.353442239 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.35024175 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.351146617 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.348953172 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.351106426 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.352725066 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.351445293 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.357886972 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.37234899 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.350593858 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.357235591 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.370693572 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.349492967 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.354287272 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.351164614 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.3507983 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.360157646 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.36550066 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.3543153 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.351803444 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.35148875 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.352196487 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.353691538 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.35876508 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.36986753 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.352944479 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.351182766 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.357603954 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.348122135 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.360285739 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.356186512 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.350901013 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.356692754 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.35175966 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.350440309 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.351858219 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.352014391 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.352381845 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.352188229 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.356570858 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.363521796 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.359436454 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.355029029 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.354711919 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.356569175 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.355991989 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.355893651 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.353513751 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.353653165 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.365782069 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.380371617 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.359085777 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.373938698 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.353625401 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.359512399 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.377154828 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.358606048 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.352618225 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.352138414 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.351419683 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.352303035 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.352015972 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.354728627 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.355560197 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.358313822 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.356220019 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.36184657 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.357873201 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.356520405 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.352984106 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.354241045 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.355700062 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.35894433 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.357329384 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.357523867 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.356925999 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.353779917 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.355520315 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.361480797 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.376588517 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.3526742 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.353430113 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.357852602 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.359336018 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.35490941 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.355020356 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.359374257 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.368875143 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.358475197 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.370837035 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.357720875 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.367052916 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.356830895 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.362909726 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.369942214 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.354554644 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.354597398 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.357657641 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.357220086 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.361863447 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.377159342 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.360000704 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.36146386 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.35740432 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.357904044 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.35781568 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.361130987 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.358376645 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.355591966 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.364757428 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.379415382 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.361291979 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.359142798 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.353152087 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.361182831 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.35708942 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.357136607 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.360006876 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.356596246 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.358651093 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.35731618 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.356731026 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.359976067 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.356415458 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.355363606 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.356225196 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.359513133 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.363233092 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.385078746 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.363945309 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.357901076 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.364488498 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.378562562 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.364497923 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.383985126 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.359644722 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.35746236 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.359051742 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.362673451 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.363914986 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.358790356 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.35763653 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.361256415 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.366242896 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.361170349 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.360739759 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.361327575 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.358923706 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.359494939 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.368545743 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.386857171 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.363664439 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.367513656 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.359515831 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.363489055 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.363944471 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.359690341 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.358894302 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.361622626 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.379605119 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.372773024 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.36422191 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.36027495 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.363594762 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.358725742 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.361944074 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.364525894 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.360005113 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.359692906 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.364604663 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.360504769 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.363252144 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.360379143 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.364040723 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.363942803 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.364434661 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.369615252 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.381576986 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.362943775 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.36265041 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.363697956 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.363992141 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.362396652 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.362084622 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.364605004 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.366089363 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.363056176 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.371131801 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.371060899 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.365392518 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.361963638 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.363423858 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.363053335 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.363045271 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.363228611 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.362775579 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.364087322 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.364724503 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.362099414 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.364856657 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.360515523 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.362297163 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.366591178 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.362141204 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.369589932 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.373844986 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.36360244 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.363103196 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.363977532 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.368332227 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.365416197 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.362225888 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.37124927 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.392843494 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.380031774 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.377822622 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.368147347 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.363703167 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.36798854 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.380502576 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.363760551 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.365403665 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.362398094 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.366947282 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.367355795 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.369287212 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.364360759 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.370385271 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.386070662 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.366954989 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.372352195 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.386621604 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.366101457 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.36795578 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.371933207 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.366018645 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.362312319 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.368462907 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.366879284 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.373044644 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.387774821 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.364105943 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.369808416 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.365201691 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.368415725 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.370313166 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.365934264 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.369194625 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.364758217 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.365003782 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.367128517 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.366594293 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.365886759 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.368172909 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.369084091 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.37360691 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.378406724 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.363884046 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.370867483 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.364999441 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.367279366 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.368465916 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.367901221 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.367774316 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.36790854 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.367109899 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.366627677 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.368261703 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.369708518 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.365376601 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.369766846 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.373778736 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.374605388 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.37098416 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.381455153 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.379198567 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.369299277 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.371783822 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.369831017 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.372516409 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.372379292 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.370177028 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.371040212 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.371857563 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.370725279 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.36840695 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.3685029 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.373679822 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.386860063 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.392093162 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.372947376 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.368134097 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.37139062 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.368456416 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.369720354 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.369562569 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.37137889 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.372362075 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.380619585 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.370233912 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.374122985 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.38906548 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.370625298 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.374068238 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.37458983 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.382325703 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.373013516 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.368712842 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.370384408 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.374752437 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.388416964 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.37387194 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.383647565 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.405779983 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.394982646 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.371706682 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.373169829 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.371351763 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.371799672 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.375691699 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.373244066 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.37076113 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.373438613 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.373641093 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.371345385 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.375627785 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.370774254 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.371703412 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.369626163 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.370990372 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.37202707 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.371523315 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.373159699 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.375002467 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.376266177 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.37330329 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.375267222 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.373211406 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.384206389 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.39909693 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.376439654 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.377774988 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.370133512 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.374394691 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.375606589 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.388215592 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.384060773 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.376796519 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.374161043 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.377980483 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.374143936 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.37317665 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.375622186 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.373111623 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.372176988 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.374005373 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.388837421 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.399014036 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.377101698 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.377357389 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.373697124 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.373952984 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.3752152 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.375511519 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.372658795 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.37752193 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.378822849 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.375661008 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.373246646 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.37466794 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.380006696 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.385589937 seconds)
  done (took 811.448162803 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.372247128 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.371045205 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.373256267 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.375955195 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.376664146 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.375465543 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.376546101 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.376418667 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.375883217 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.375536948 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.376044642 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.373046859 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.372733397 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.378182168 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.374507002 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.374715504 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.375435047 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.374416247 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.378096544 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.378844867 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.374690134 seconds)
  done (took 30.17067542 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.381794778 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.376213597 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.37781804 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.378491178 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.375240721 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.376192137 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.376433046 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.379520885 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.380010812 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.378552167 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.381595639 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.382548984 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.380724124 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.381751571 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.377324793 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.380975997 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.383959142 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.379710155 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.383065438 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.378698943 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.380607679 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.378416183 seconds)
  done (took 31.642704626 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.37733483 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.37583154 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.374094358 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.379585816 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.384166384 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.380581573 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.382029104 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.379532884 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.38454108 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.382435547 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.382172213 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.384248716 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.390602702 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.388988639 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.382291351 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.382011271 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.522486458 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.382691374 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.383012847 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.383423064 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.380505607 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.386337424 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.399385177 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.382864428 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.380865415 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.385132933 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.385029295 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.38351345 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.384959948 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.383439386 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.385898361 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.384392346 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.381543313 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.384959765 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.381426123 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.385395935 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.390511874 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.385191435 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.377700491 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.382533112 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.394660439 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.408185591 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.38250559 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.389380294 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.403305681 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.385782817 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.388412444 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.392207966 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.382882495 seconds)
  done (took 69.29547073 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.382467565 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.384464448 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.383747425 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.384886334 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.383589647 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.386013548 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.385964776 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.386503989 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.385575963 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.3823889 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.386149607 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.380575014 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.383017242 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.38568703 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.386819938 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.381188134 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.381866914 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.382181972 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.382633141 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.384437577 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.383973522 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.387547629 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.386266688 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.38570307 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.387083922 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.386527147 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.384414981 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.387879568 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.383877757 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.385047172 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.383924532 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.387648618 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.387236197 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.384664479 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.384830148 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.387710164 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.385064269 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.387969775 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.385477883 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.383166433 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.388377506 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.384743668 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.385147841 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.385234613 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.386380438 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.382931236 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.384900148 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.385438522 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.38723707 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.390007139 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.384310925 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.384927019 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.390287145 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.386470299 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.387405503 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.392046035 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.385634018 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.385458413 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.38695177 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.387129658 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.387588411 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.389885078 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.388658728 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.389931992 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.389949971 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.385894351 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.384044034 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.389520814 seconds)
  done (took 95.531639107 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.388192724 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.384841042 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.386030931 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.386446314 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.384473986 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.386008107 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.391856754 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.386573841 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.382899783 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.387164582 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.391265108 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.387910338 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.390516638 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.389061818 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.390634436 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.389067221 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.388161622 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.38990647 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.388566557 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.389408677 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.392926081 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.391982705 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.3896974 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.39152544 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.393544132 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.390456788 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.392115044 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.38633343 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.389304126 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.389059519 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.393200511 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.393254992 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.390911228 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.390479627 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.389838599 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.389105092 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.388987935 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.392234874 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.389621423 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.386566795 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.388969332 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.391192393 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.395096838 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.390726674 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.388186164 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.389958474 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.391717622 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.391301829 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.392244489 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.391453525 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.385836627 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.391923227 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.39027058 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.386752866 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.38830091 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.388505445 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.390174935 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.390195843 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.390800853 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.395029532 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.391384672 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.392095831 seconds)
  done (took 87.463096583 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.393369785 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.39008032 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.392480827 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.392409341 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.391363159 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.39129657 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.394900295 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.39639792 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.396238705 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.394454096 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.393964644 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.393052025 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.391776455 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.397307349 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.39034719 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.391179386 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.392203663 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.392804413 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.395261555 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.392995085 seconds)
  done (took 29.168034347 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.393124815 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.398425667 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.39514196 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.39367718 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.396659625 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.394036278 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.394457885 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.397077022 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.396048668 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.394203684 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.39843954 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.396855129 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.392693959 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.390090649 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.395001332 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.392925648 seconds)
  done (took 23.621732413 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.394833413 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.396115857 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.39653762 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.391449372 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.395517299 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.392810494 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.395564438 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.396441425 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.396821075 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.396338117 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.397356896 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.395622721 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.396039046 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.396471104 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.393335376 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.394724531 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.391485416 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.397383795 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.398292544 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.39495576 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.393703149 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.396509797 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.399219087 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.39945622 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.395290084 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.396387484 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.39626691 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.395002032 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.393930007 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.398191767 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.393551525 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.39827876 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.398173365 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.395058207 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.395915032 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.396861229 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.400852684 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.398628973 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.396866371 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.39965824 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.400254028 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.39890952 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.398224625 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.399124403 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.396093273 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.396613219 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.394450196 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.396204342 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.397370717 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.396086917 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.399253735 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.398059524 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.399179764 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.396134962 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.400802888 seconds)
  done (took 78.118253204 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.402476717 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.401389613 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.398828598 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.401075264 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.398584124 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.397784516 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.402095938 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.396999201 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.402295315 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.401768265 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.398996706 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.402209877 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.398868771 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.401090835 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.399186359 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.401407158 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.399828902 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.403411813 seconds)
  done (took 26.515974334 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.399584158 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.399535016 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.399660636 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.400498638 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.399378043 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.403142495 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.399707223 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.402773207 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.400853904 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.400620299 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.400964558 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.404336526 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.404707554 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.405311247 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.39907373 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.402518994 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.402868926 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.401406305 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.399316901 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.402049595 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.403241205 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.403843949 seconds)
  done (took 32.143241478 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.40289563 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.399555408 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.401501667 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.419542173 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.422573207 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.425961381 seconds)
  done (took 9.779760287 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.414317223 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.405435064 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.401612054 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.406988705 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.404615664 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.402409598 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.402482637 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.403005182 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.406019085 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.403625661 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.401523242 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.404540788 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.403651196 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.403007175 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.404110023 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.406364731 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.402072984 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.403267361 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.404222237 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.405200586 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.402634389 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.40567783 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.402850701 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.400977813 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.403765401 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.40369223 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.406377504 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.404670508 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.401399047 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.404896703 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.403429952 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.401920814 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.406781586 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.404012075 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.405910606 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.407485982 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.403387212 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.405793966 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.40409606 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.40355673 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.405006673 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.405953732 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.406061232 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.401666613 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.404295742 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.403979516 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.405230249 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.403117457 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.402910519 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.40722576 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.406055912 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.40582212 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.406530581 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.406448765 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.407938055 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.405313184 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.4035528 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.40384848 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.408032149 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.403605949 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.406108502 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.40826452 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.406533709 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.40422031 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.408536231 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.404259046 seconds)
  done (took 94.049415693 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.405604764 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.403850253 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.404567976 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.406350757 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.404992534 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.404658607 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.40524751 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.404686883 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.406525474 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.404308413 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.408303683 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.403779274 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.405941937 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.406748672 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.404111697 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.40731887 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.407493444 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.406147258 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.407382672 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.410539714 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.407528033 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.40604778 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.408579074 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.408180503 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.408538636 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.408155332 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.406633734 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.407963044 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.404398037 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.40876657 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.408192988 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.408758887 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.406600485 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.408293925 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.407540389 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.405570949 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.410236943 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.409285707 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.40651528 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.412282797 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.408371042 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.412349264 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.408938754 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.409958728 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.407334404 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.410478979 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.409129877 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.409116168 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.412354526 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.409884708 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.410236174 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.410085637 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.409391372 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.409949811 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.408131828 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.410393186 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.408756748 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.40731824 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.409718101 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.410805445 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.406006741 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.409340855 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.412462019 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.406838676 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.407973903 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.411045255 seconds)
  done (took 94.237557062 seconds)
done (took 1894.83732891 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.453829947 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.524444707 seconds)
  done (took 14.295724767 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.572325187 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.528300897 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.412588816 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.46326483 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.405060334 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.420426617 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.40047295 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.404101969 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.408733047 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.407954895 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.410345207 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.609342724 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.423084689 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.40653504 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.412047967 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.504874949 seconds)
  done (took 44.515171893 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.441521286 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.419092651 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.544507782 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.438843042 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.4422753 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.620538464 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.474981786 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.420055225 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.608961308 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.455983649 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 3.142476526 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.433771697 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.41530966 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.637434219 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.429154793 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.62232515 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.691572384 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 3.14237239 seconds)
  done (took 32.698935378 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.921750525 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.415497149 seconds)
  done (took 9.659301082 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.42947899 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.450224539 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.428650843 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.424790786 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.437434786 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.508886146 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.437528539 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.470790519 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.453944595 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.470043293 seconds)
  done (took 65.837899982 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.441285061 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.418411376 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.419987015 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.418637056 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.408700131 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.403917901 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.417235514 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.410961825 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 5.561237752 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.560247133 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.43842697 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.421440871 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.433886628 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.419043264 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.414267066 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.454421377 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.578211334 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.43290778 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.416037886 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.424329435 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.418310557 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.516119989 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.458358704 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.417369906 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.56254128 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 5.566761665 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.422395349 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.426627626 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.554034855 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.435749759 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.417567266 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.419447319 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.420268663 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.041288623 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.96129445 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.439939667 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.437200931 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.426681948 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.416405981 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.53655392 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.437997627 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.425333472 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.420513166 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.932361841 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.582660806 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.545810152 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.777548252 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.415276074 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.419959797 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.485726585 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.420320782 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.419069115 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.449454229 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.229033931 seconds)
  done (took 117.473367336 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.438367505 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.901061408 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.585365568 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.437583919 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.241334215 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.138956403 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.429629548 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.744647977 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.431725223 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.408479694 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.709475686 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.948120733 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.431169557 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.43779343 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 7.079387756 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.410728992 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.417284392 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.258460136 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.424412161 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.416850817 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.854160566 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.441214604 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.408495006 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.579535928 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.447608663 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.913577647 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.05000765 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.918278319 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.432489073 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.408122668 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.923444377 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.432683573 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.414521368 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.410978089 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.710580576 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.807087841 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.795865877 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.426684456 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.438017305 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.411609305 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.440256683 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.911291822 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.808771939 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.42802736 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.409293778 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.909390995 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.426560654 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.41262763 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.421003183 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.620368107 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.432540834 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.416098993 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.034579366 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.409023949 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.7908516 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.486106325 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.477410404 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.945340808 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.425843584 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.567505361 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.448594006 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.416489761 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.414498014 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.410710692 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.420218056 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.795481732 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.616760536 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.418610579 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.804697934 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.921793203 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.430633056 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.969503721 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.381082685 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.435305383 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.491106413 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.41561065 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.030870618 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.95299418 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.4504167 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.411065251 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.784807975 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.430197333 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.714068893 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.427414442 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.40997988 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.85904096 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.441622985 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.452610024 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.419109243 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.42859559 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 4.077180139 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.420254996 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.717246701 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.473962928 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.418835922 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.419840944 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.446005618 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.417797098 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.429760217 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.426231157 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.983504409 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.446197124 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.580130841 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.441327879 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.420438967 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.414524429 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.422496797 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.422284868 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.642316302 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.997264977 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.418933189 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.42560632 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.412092793 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.437118189 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.560976172 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.424795215 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.767187282 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.430293771 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.4371939 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.42036584 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.192574412 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.47946999 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.414382152 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.437936953 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.268612585 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.647593865 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.437914441 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.413819447 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.422607287 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.443504886 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.942214155 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.41602083 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.455071705 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.425678893 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.168706718 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.473673868 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.464474051 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.100705024 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.423016779 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.43823351 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.41452768 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.42676806 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.743089452 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.717076755 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.473359932 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.423885929 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.433531401 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.144695634 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.442459206 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.572862289 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.440482751 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.449671084 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.62569121 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.792520508 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.422795359 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.996726538 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.423816848 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.635973381 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.416323399 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.744579364 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.941697645 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.434422789 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.428636084 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.16161442 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.098168206 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.031879619 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.423331765 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.713623592 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.422816461 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.872345758 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.422043266 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.424591943 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.884069324 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.417390234 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.433098821 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.424931466 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.425112828 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.565946642 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.602169207 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.700794727 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.426544986 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.923852888 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.456823777 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.417425072 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.447809668 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.41815815 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.777150284 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.503539286 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.423774253 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.425982096 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.42575415 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.433392235 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.930304413 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.443044354 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.419870634 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.584355355 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.090812127 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.443240138 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.428010599 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 4.174030577 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.70483364 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.965890047 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.451131628 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.775751728 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.446736571 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.47084869 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.198554236 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.461244443 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.975649447 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.437743584 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.419424529 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.063395867 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.438084518 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.772099393 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.422114913 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.42750841 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.004209404 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.437310925 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.429166411 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.934325962 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.421836687 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.67060162 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.420545067 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.443185463 seconds)
  done (took 1134.203908458 seconds)
done (took 1419.999593157 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.428703758 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.422243327 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.408782765 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.433570984 seconds)
  done (took 27.030491433 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.440337653 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.439186991 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.440851419 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.438147111 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.439570497 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.439195173 seconds)
  done (took 9.980670165 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.676013744 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.425173929 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.430119902 seconds)
  done (took 19.874095853 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.67924612 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.837453516 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.847067617 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.916413001 seconds)
  done (took 11.621156647 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.433133605 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.433465247 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.435292823 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.438417001 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.43705374 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.44002448 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.441124403 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.439645604 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.43980645 seconds)
  done (took 14.27914926 seconds)
  (6/6) benchmarking "26942"...
  done (took 5.774726264 seconds)
done (took 89.895798543 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.457109198 seconds)
    (2/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.448577236 seconds)
    (3/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.425018782 seconds)
    (4/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.441305849 seconds)
    (5/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.518884384 seconds)
    (6/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.862456636 seconds)
    (7/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.450104252 seconds)
    (8/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.175020619 seconds)
    (9/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.823974467 seconds)
    (10/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.391485627 seconds)
    (11/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.424620714 seconds)
    (12/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.435745204 seconds)
    (13/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.406084865 seconds)
    (14/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.719572289 seconds)
    (15/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.375616121 seconds)
    (16/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 4.552254291 seconds)
    (17/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.738801745 seconds)
    (18/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.347550666 seconds)
    (19/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.566097024 seconds)
    (20/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 4.039655396 seconds)
    (21/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.468646847 seconds)
    (22/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.457880245 seconds)
    (23/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.431374099 seconds)
    (24/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.42339206 seconds)
    (25/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.489712391 seconds)
    (26/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.890481581 seconds)
    (27/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.444183307 seconds)
    (28/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.274197083 seconds)
    (29/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 4.048958393 seconds)
    (30/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.905633712 seconds)
    (31/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.319357962 seconds)
    (32/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.838848628 seconds)
    (33/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.541265209 seconds)
    (34/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.481977549 seconds)
    (35/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.534720842 seconds)
    (36/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.549830625 seconds)
    (37/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.456834544 seconds)
    (38/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.433689409 seconds)
    (39/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.460137179 seconds)
    (40/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.573958156 seconds)
    (41/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.444670152 seconds)
    (42/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.524092274 seconds)
    (43/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.898797508 seconds)
    (44/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.44697136 seconds)
    (45/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.444147953 seconds)
    (46/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 4.710799105 seconds)
    (47/309) benchmarking ("sort", BigInt, false)...
    done (took 6.426223149 seconds)
    (48/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.318059969 seconds)
    (49/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.991190525 seconds)
    (50/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.428366216 seconds)
    (51/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.102353133 seconds)
    (52/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.538683996 seconds)
    (53/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.840140592 seconds)
    (54/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 4.293888396 seconds)
    (55/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.456550076 seconds)
    (56/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.471644578 seconds)
    (57/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.688469295 seconds)
    (58/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.897165351 seconds)
    (59/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.453592086 seconds)
    (60/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.414253352 seconds)
    (61/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.455976506 seconds)
    (62/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.095178333 seconds)
    (63/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 4.560508837 seconds)
    (64/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.770988162 seconds)
    (65/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.622236568 seconds)
    (66/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.46036466 seconds)
    (67/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.486549684 seconds)
    (68/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.518683883 seconds)
    (69/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.770962981 seconds)
    (70/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 3.035594059 seconds)
    (71/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.875083702 seconds)
    (72/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.444715984 seconds)
    (73/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.010199371 seconds)
    (74/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.516017366 seconds)
    (75/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.02901712 seconds)
    (76/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.801333421 seconds)
    (77/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.949981966 seconds)
    (78/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.425571465 seconds)
    (79/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.537889196 seconds)
    (80/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.541451491 seconds)
    (81/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 3.197367356 seconds)
    (82/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.734810823 seconds)
    (83/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 4.239545215 seconds)
    (84/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.463086769 seconds)
    (85/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.493468446 seconds)
    (86/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.545404613 seconds)
    (87/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.289453831 seconds)
    (88/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.455727242 seconds)
    (89/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.434995416 seconds)
    (90/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.448406322 seconds)
    (91/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.529257952 seconds)
    (92/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.454048641 seconds)
    (93/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.965221765 seconds)
    (94/309) benchmarking ("sort", Int64, false)...
    done (took 5.70093236 seconds)
    (95/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.422339692 seconds)
    (96/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.456123877 seconds)
    (97/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.457476524 seconds)
    (98/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.295380881 seconds)
    (99/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.665781545 seconds)
    (100/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 3.187609001 seconds)
    (101/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.441794484 seconds)
    (102/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.78540539 seconds)
    (103/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.432006933 seconds)
    (104/309) benchmarking ("map", identity, BigInt, true)...
    done (took 3.057185199 seconds)
    (105/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.268103444 seconds)
    (106/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.480155185 seconds)
    (107/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.449709498 seconds)
    (108/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 4.163159321 seconds)
    (109/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.433893473 seconds)
    (110/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.525652048 seconds)
    (111/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.447833454 seconds)
    (112/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.13700285 seconds)
    (113/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 4.705066371 seconds)
    (114/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.431027859 seconds)
    (115/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.895152709 seconds)
    (116/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.45767268 seconds)
    (117/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.415454858 seconds)
    (118/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.585439821 seconds)
    (119/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 3.27136116 seconds)
    (120/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.429620718 seconds)
    (121/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.650340973 seconds)
    (122/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.437769913 seconds)
    (123/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.43611274 seconds)
    (124/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.429222741 seconds)
    (125/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.459532962 seconds)
    (126/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.819493683 seconds)
    (127/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.457283897 seconds)
    (128/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 3.283638613 seconds)
    (129/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 4.169178615 seconds)
    (130/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.12248207 seconds)
    (131/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.318515667 seconds)
    (132/309) benchmarking ("sort", Bool, false)...
    done (took 1.965450318 seconds)
    (133/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.481324973 seconds)
    (134/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.186436784 seconds)
    (135/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.559225315 seconds)
    (136/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.97075728 seconds)
    (137/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.717459978 seconds)
    (138/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.853019642 seconds)
    (139/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.070903509 seconds)
    (140/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.443503019 seconds)
    (141/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.938767827 seconds)
    (142/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.315879511 seconds)
    (143/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.699689223 seconds)
    (144/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.437791956 seconds)
    (145/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.484412969 seconds)
    (146/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.938515018 seconds)
    (147/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.478407102 seconds)
    (148/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.569968198 seconds)
    (149/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.439446965 seconds)
    (150/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 6.4544988 seconds)
    (151/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.461882696 seconds)
    (152/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.303184881 seconds)
    (153/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.460176118 seconds)
    (154/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.973053552 seconds)
    (155/309) benchmarking ("sort", Float64, false)...
    done (took 5.813722855 seconds)
    (156/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 3.154258771 seconds)
    (157/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.476140437 seconds)
    (158/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.86287982 seconds)
    (159/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.459834132 seconds)
    (160/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.415303627 seconds)
    (161/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.773796385 seconds)
    (162/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.892064959 seconds)
    (163/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.510456125 seconds)
    (164/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.114127604 seconds)
    (165/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.46482813 seconds)
    (166/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.422760466 seconds)
    (167/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.852250573 seconds)
    (168/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.444382061 seconds)
    (169/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 4.217372919 seconds)
    (170/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.461766811 seconds)
    (171/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.443724444 seconds)
    (172/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.550416638 seconds)
    (173/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.724257159 seconds)
    (174/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.460770856 seconds)
    (175/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.97291129 seconds)
    (176/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.887680991 seconds)
    (177/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.104771296 seconds)
    (178/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.437883269 seconds)
    (179/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.54811576 seconds)
    (180/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.680838365 seconds)
    (181/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.39887699 seconds)
    (182/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.457990843 seconds)
    (183/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.79171994 seconds)
    (184/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.143979705 seconds)
    (185/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.197218037 seconds)
    (186/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 3.033543827 seconds)
    (187/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.559402823 seconds)
    (188/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.973945215 seconds)
    (189/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.470605058 seconds)
    (190/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.504245229 seconds)
    (191/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.441063865 seconds)
    (192/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.471404988 seconds)
    (193/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.031568779 seconds)
    (194/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.492309654 seconds)
    (195/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.442357803 seconds)
    (196/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.479777456 seconds)
    (197/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.886689579 seconds)
    (198/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.614776561 seconds)
    (199/309) benchmarking ("sort", Float32, false)...
    done (took 5.480720343 seconds)
    (200/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.540423543 seconds)
    (201/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.542589238 seconds)
    (202/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 6.082000292 seconds)
    (203/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.43707279 seconds)
    (204/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.495869463 seconds)
    (205/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.473045714 seconds)
    (206/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.294336688 seconds)
    (207/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.441526047 seconds)
    (208/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 3.066253881 seconds)
    (209/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 4.105524047 seconds)
    (210/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.437041565 seconds)
    (211/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.531339299 seconds)
    (212/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 3.067755804 seconds)
    (213/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.428600569 seconds)
    (214/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.803085067 seconds)
    (215/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.519603472 seconds)
    (216/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.529643795 seconds)
    (217/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.644501195 seconds)
    (218/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.8455421 seconds)
    (219/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.123806217 seconds)
    (220/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 3.236050547 seconds)
    (221/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.655679659 seconds)
    (222/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.427097998 seconds)
    (223/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.470123927 seconds)
    (224/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.448781478 seconds)
    (225/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.72669782 seconds)
    (226/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.907756951 seconds)
    (227/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.464450661 seconds)
    (228/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 3.121313492 seconds)
    (229/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.4656181 seconds)
    (230/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 3.104984414 seconds)
    (231/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 4.226634291 seconds)
    (232/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.463419785 seconds)
    (233/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.463944998 seconds)
    (234/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.498092439 seconds)
    (235/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.487057877 seconds)
    (236/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 3.284781563 seconds)
    (237/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.492190495 seconds)
    (238/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.573728879 seconds)
    (239/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.044631494 seconds)
    (240/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.447671113 seconds)
    (241/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.793564077 seconds)
    (242/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.15363611 seconds)
    (243/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.571328503 seconds)
    (244/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.424952608 seconds)
    (245/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.881102338 seconds)
    (246/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.450170183 seconds)
    (247/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.346067095 seconds)
    (248/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.470907667 seconds)
    (249/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.640712564 seconds)
    (250/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 3.285713299 seconds)
    (251/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.9588006 seconds)
    (252/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.690646965 seconds)
    (253/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.549400578 seconds)
    (254/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.338841403 seconds)
    (255/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.565897272 seconds)
    (256/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.805923367 seconds)
    (257/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.47628665 seconds)
    (258/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 3.070299734 seconds)
    (259/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.455396749 seconds)
    (260/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.836216482 seconds)
    (261/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.674033564 seconds)
    (262/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 4.182116867 seconds)
    (263/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.333599425 seconds)
    (264/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.891214116 seconds)
    (265/309) benchmarking ("sort", Int8, false)...
    done (took 4.502532224 seconds)
    (266/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.971383551 seconds)
    (267/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.603009675 seconds)
    (268/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.636950157 seconds)
    (269/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.36614293 seconds)
    (270/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.862499521 seconds)
    (271/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.430569021 seconds)
    (272/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.517124175 seconds)
    (273/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.167525177 seconds)
    (274/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.926223372 seconds)
    (275/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.219774094 seconds)
    (276/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.980647038 seconds)
    (277/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.586482692 seconds)
    (278/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.561750734 seconds)
    (279/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.436933802 seconds)
    (280/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.545755218 seconds)
    (281/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.438067469 seconds)
    (282/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.422985369 seconds)
    (283/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.538616009 seconds)
    (284/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.568121558 seconds)
    (285/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.433903831 seconds)
    (286/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.47172667 seconds)
    (287/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.291179328 seconds)
    (288/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.441268495 seconds)
    (289/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.591354254 seconds)
    (290/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.381457677 seconds)
    (291/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.897514589 seconds)
    (292/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.015931073 seconds)
    (293/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.533897356 seconds)
    (294/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.548751384 seconds)
    (295/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.521357505 seconds)
    (296/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.519172392 seconds)
    (297/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.491657245 seconds)
    (298/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.590263382 seconds)
    (299/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.511991091 seconds)
    (300/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.153808594 seconds)
    (301/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.528006385 seconds)
    (302/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.643247591 seconds)
    (303/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.669940497 seconds)
    (304/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.120910632 seconds)
    (305/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.480186018 seconds)
    (306/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.785032892 seconds)
    (307/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.493379484 seconds)
    (308/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 6.004818668 seconds)
    (309/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.425477749 seconds)
  done (took 974.842714186 seconds)
done (took 976.182634598 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.510935233 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.481243553 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.460336608 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.484186494 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.574981592 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.486691233 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.470295808 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.463522393 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.509802732 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.511158155 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.46243553 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.484475683 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.462613337 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.464217105 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.460954436 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.478125229 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.663866817 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.457638086 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.480996268 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.474377342 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.48211282 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.463121351 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.510460212 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.486618065 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.467066018 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.463514069 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.466011817 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.483633318 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.575107774 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.468088118 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.465387592 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.477385216 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.644350192 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.45521282 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.459937121 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.482737855 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.475103694 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.474515264 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.468963849 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.497283815 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 3.075579407 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.476124822 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.46530605 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.46656055 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.462964732 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.471987242 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.468148547 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.472712375 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.480343024 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.480300971 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 3.063614374 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.491737502 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.468733254 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.467804301 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.477785277 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.466115496 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.468521189 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.48548865 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.487363969 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.484378505 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.615901642 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.464457208 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.469224222 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.483250329 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.47322128 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 3.102577145 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.474767422 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.47027312 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 3.078142406 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.48463306 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 3.098085086 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.487276782 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.468202341 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.480929517 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.498233004 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.629319091 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.456495895 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.465769724 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.475172787 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.463454852 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.475772821 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.482009555 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.470244125 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.468383583 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.480071909 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.494340146 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.476768449 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.471650211 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.479342323 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.486891274 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.473203748 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.479752058 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.472421124 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.462896657 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.475850646 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.470231898 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.470855429 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.469502781 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.469280405 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.475694749 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 3.076858637 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.499103897 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.466332476 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.46510042 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.466081732 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.484039396 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 3.079109388 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.481645736 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.484386137 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.51502547 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.463370517 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.614294546 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.464946273 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.485432254 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.474677326 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.470739262 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.46479683 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.618822996 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 3.069002308 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.496397732 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.471537252 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.469799709 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.487886117 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.468868691 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.468784919 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.635549196 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.466901194 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.484678948 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.590904909 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.481362096 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.501750092 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.469185148 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.474448793 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.493500094 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.485874507 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.501758545 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.473597163 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.488641135 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.487490191 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.466633577 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.482287815 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.48163856 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.474073722 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.47248775 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.467139284 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.496685638 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.485542743 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.484126663 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.492356722 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.592510511 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.470274653 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.621117909 seconds)
done (took 248.396229979 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.52913728 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.465544918 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.55302239 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.468117332 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.572463446 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.567880391 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.463266345 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.465515253 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.465916247 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.8457818 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.467114797 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.466735011 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.460994185 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.46714928 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.554088548 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.470688572 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.46816166 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.810702529 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.470542106 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.536181713 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.464394832 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.466483324 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.472181769 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.850002481 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.464984713 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.466693903 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.539682581 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.472135709 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.839677443 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.469219439 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.469696856 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.84084493 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.559861208 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.486777992 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.4779885 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.477333767 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.57617833 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.486291637 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.552086278 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.555448236 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.555464721 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.509337192 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.469671537 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.466530457 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.467314089 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.470274241 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.467530529 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.498142773 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.466102866 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.47014324 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.810672811 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.47589365 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.469146654 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.470723973 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.468821606 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.500731059 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.470146093 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.469246617 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.557412642 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.470344916 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.534630794 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.850355606 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.851598294 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.468591777 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.463160089 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.464316989 seconds)
  done (took 157.562808461 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.538792067 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.542630089 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.594078282 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.490329218 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.522202169 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.600472096 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.492372382 seconds)
  done (took 12.153494002 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.477032815 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.472160757 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.520240198 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.522073911 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.470769796 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.61888767 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.472362703 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.482857796 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.471250232 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.526453115 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.471384605 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.474140679 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.481538702 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.469998677 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.522088289 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.482686782 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.586158126 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.475725362 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.475039011 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.626657843 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.472079534 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.479942057 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.525875019 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.486939015 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.47708572 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.480236255 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.042860062 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.47692178 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.474080448 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.475180882 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.474060524 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.513997294 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.477893961 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.473920857 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.473370985 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.592909046 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.47590478 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.471659943 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.47770095 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.474363586 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.476164593 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.474989425 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.475804145 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.473257047 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.475229855 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.499784353 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.480293744 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.47932415 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.476007017 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.476283339 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.527549583 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.47797499 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.473375127 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.473160288 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.533042484 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.48392706 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.477539313 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.475939153 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.476676111 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.47380533 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.625927074 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.524807657 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.476200853 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.522159046 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.476295777 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.473542293 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.475206896 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.474554276 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.532541941 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.477276088 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.524359903 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.474546286 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.628801171 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.49874589 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.476733726 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.476040624 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.481336097 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.476220552 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.471953697 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.48127326 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.473119022 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.474897403 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.483601665 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.474781716 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.472034874 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.575728071 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.583869132 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.475142176 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.491985616 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.485676851 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.4709886 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.5310012 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.478097065 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.472010445 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.529701305 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.594247892 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.53095282 seconds)
  done (took 167.077908032 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.485224673 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.48744543 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.480316365 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.495623039 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.479642156 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.479550222 seconds)
  done (took 10.288243916 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.482767178 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.483904356 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.481066852 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.482057685 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.480462259 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.481274524 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.482078689 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.48413936 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.487040121 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.483171889 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.480930664 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.480611691 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.482275468 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.481243204 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.481242803 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.482920959 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.480425921 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.479403056 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.481494645 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.480944207 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.576551007 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.482199987 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.47919724 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.483818669 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.486854898 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.481401781 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.49102382 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.480922323 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.483203841 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.491714439 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.504785323 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.482056793 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.484426455 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.48861238 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.488967995 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.484734402 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.48804485 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.48073884 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.479248181 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.480454297 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.48161433 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.483721191 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.48195152 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.483605854 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.48350151 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.489326042 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.487660101 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.491812926 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.483721481 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.483673823 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.484489642 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.483866457 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.48372774 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.483020025 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.487164186 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.507909739 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.48830148 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.48094019 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.48575972 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.485428181 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.487208015 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.484560364 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.488427595 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.488024641 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.491556973 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.483706318 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.484710309 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.490312728 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.483900665 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.48767679 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.485175159 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.483056293 seconds)
  done (took 109.379237298 seconds)
done (took 457.826414714 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.6734345 seconds)
  done (took 8.056733527 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.753159107 seconds)
  done (took 8.139895839 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 24.497873234 seconds)
  done (took 25.889689916 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.491326639 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 7.082736969 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.485230787 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.478410258 seconds)
  done (took 27.92329146 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.642445526 seconds)
  done (took 8.028525193 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.477936912 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.471232762 seconds)
  done (took 14.333212268 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.893510337 seconds)
  done (took 8.280658133 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.503610208 seconds)
  done (took 7.894788107 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.491802498 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.516141569 seconds)
  done (took 14.405580381 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.459286113 seconds)
  done (took 7.844740388 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.775312248 seconds)
  done (took 9.161139076 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.492619655 seconds)
  done (took 7.879549704 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.517427456 seconds)
  done (took 7.90242058 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 9.705842658 seconds)
  done (took 11.091053788 seconds)
done (took 168.2132063 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.478215396 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.482266486 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.481578722 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.47985623 seconds)
  done (took 27.305925998 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.520666237 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.519945962 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.523052527 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.53053782 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.524652845 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.522698384 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.51369869 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.511217364 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.532081218 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.525718072 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.523226567 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.52188593 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.522246703 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.513178835 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.522040189 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.524147727 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.529178683 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.523135717 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.514294804 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.524861479 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.489097027 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.533517104 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.525902168 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.489947766 seconds)
  done (took 37.870382272 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.017117759 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.563875075 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.645948282 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.542986732 seconds)
  done (took 8.157153351 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.540137437 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.542256365 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.553521255 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.593417325 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.618959281 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.555624989 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.515499168 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.510486864 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.498266188 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.543129873 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.618135264 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.558735937 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.62656203 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.49074666 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.673227393 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.491579629 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.490047783 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.541669174 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.592563812 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.608299262 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.490015767 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.541285216 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.548808343 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.558084111 seconds)
  done (took 38.686931728 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.504102998 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.496765203 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.491777923 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.489060509 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.509986294 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.489313399 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.489787515 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.490081787 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.488990676 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.497959882 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.487561673 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.502449041 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.488339603 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.489781556 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.496822604 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.490473105 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.496484714 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.488820555 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.489944386 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.493716524 seconds)
  done (took 31.261145532 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.483110249 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 5.397258081 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.8367359 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.739549926 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.483427912 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.478028471 seconds)
  done (took 29.808025065 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.571740349 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.752091203 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.489250054 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.923912167 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.018263779 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.511631388 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.492242223 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.778576728 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.158527409 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.151766787 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.560170568 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.572566698 seconds)
  done (took 22.370476376 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.492345082 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.484179839 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.50270308 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.502384421 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.557604286 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.513612913 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.498135623 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.484175144 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.558977799 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.57432877 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.509222499 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.558481034 seconds)
  done (took 39.629269947 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.573169041 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.539916326 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.529124915 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.412545179 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.21201189 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.690275323 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.428540158 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.970202781 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.483232422 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.761399688 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.504519433 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.572248931 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.746665953 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.484507338 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.490041306 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.604964448 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.72708773 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.048834573 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.481628142 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.971422185 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.513646761 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.490708568 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.191399483 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.522723386 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.699991867 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.471960427 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.750529992 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.266571913 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.823062094 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.499870925 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.5013542 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.489169843 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.76443274 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.218924074 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.607890593 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.499587887 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.449058751 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.031349264 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.489236629 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 5.053937923 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.499512196 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.492346126 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.500312014 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.490456063 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.425654374 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.492103634 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.983551622 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.488223957 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.200452876 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.491992661 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.501032421 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.58697266 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.49486494 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.065039254 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.664666616 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.491161477 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.488944281 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.495736747 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.067180225 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.585037518 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.501977899 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.425175427 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.058858939 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.979393291 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.210890383 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.603563692 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.494626694 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.494581382 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.427057666 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.035232658 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.507415531 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.629979325 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.509522704 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.154556099 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.289455269 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.52178458 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.417415363 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.103090875 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.498373788 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.427704931 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.721383717 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.262895773 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.430576213 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.436998185 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.428216099 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.291546859 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.492770246 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.973197571 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.493032614 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.973018186 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.495805096 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.508791837 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.516765745 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.715415034 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.368727537 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.491512908 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.49829487 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.603584864 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.505797574 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.980248069 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.419744626 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.490010947 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.752149421 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.703734772 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.498968734 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.608211936 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.749682581 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.488615827 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.508532623 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.502298381 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.502384546 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.161697739 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.515648831 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.576948392 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.513858256 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.270414801 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.314243179 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.495793663 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.595357505 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.506348343 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.771224338 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.34670912 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.369414731 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.563085211 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.499332598 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.495300126 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.079101725 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.347057573 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.377437663 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.490999304 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.500315453 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.505385439 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.493004293 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.454489191 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.484157934 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.508687075 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.274697462 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.719677385 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.495184798 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.770537106 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.42974175 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.634030528 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.504799586 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.713837897 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.825211561 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.50703363 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.758781349 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.502209634 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.509168706 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.507015716 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.514076277 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.593532244 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.518948422 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.514628772 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.756733906 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.49630697 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.500480197 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.108049857 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.276660933 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.50168433 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.502083479 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.489079364 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.163056199 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.481391061 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.497923613 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.390921756 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.510726573 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.564151663 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.502294664 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.506830937 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.625750535 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.561363868 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.495452225 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.505289106 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.718107698 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.508611839 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 5.027381088 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.575065478 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.742192173 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.170434008 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.522821303 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.431903475 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.208429999 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.192265341 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.499318032 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.700633789 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.500048564 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.506908654 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.508964441 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.236169393 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.174831296 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.511658845 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.027751065 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.504795422 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.507603282 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.502159422 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.500457626 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.616552299 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.627878552 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.512240461 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.513057364 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.644504462 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.514375298 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.434601163 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 2.015312918 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.504752856 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.499635534 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.275775684 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.535450503 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.019391539 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.021618514 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.755445533 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.421550776 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.50385397 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.172182899 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.536581777 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.534663118 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.500148747 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.517402923 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.501127182 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.501367193 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.513178303 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.096309895 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.950415045 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.06153058 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.318441447 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.144086792 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.546896089 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.496170579 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.402582179 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.989684165 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.429291396 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.162047932 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.725062763 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.013089303 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.451804047 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.743997619 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.829672895 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.381125027 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.505812455 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.731893106 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.5311671 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.499122884 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.514213993 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.714527354 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.538412425 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.502732142 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.431944377 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.014217918 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.801914208 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.497803443 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.583132839 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.995327935 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.504659779 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.283328535 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.502080991 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.951762207 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.717617839 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.051599227 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.899103077 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.510454845 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.50272757 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.021945707 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.505285514 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.032212055 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.217484502 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.51748459 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.744520069 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.436613992 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.515605668 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.514283021 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.500232531 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 4.07191597 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.495324371 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.755185241 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.511502004 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.439128319 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.514313335 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.126693667 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.373040146 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.510022488 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.506732862 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.344554682 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.499680417 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.841202023 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.508077232 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.563389991 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.52149859 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.44156378 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.439489222 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.199837738 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.509678853 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.475717221 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.072517875 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 3.016171097 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.65510374 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.533651271 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.359625313 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.767076981 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.52040265 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.183911913 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.745003603 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.540884023 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.52832247 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.606129004 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.516593606 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.48219868 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.404672089 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.744022028 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.498426845 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.72401036 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.571692793 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.401097364 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.504785354 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.712174625 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.401325432 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.511748487 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.799819868 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.238287656 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.525404141 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.328143305 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.544346092 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.521661128 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.519942202 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.071999778 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.507135908 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.577220164 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.518448359 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.518413716 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.518754504 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.711296365 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.525889073 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.510230502 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.522297001 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.605308685 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.643595252 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.571326346 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.276270429 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.194378413 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.350723483 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.206647378 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.533366426 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.509199651 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.511201893 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.445425633 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.651025699 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.039787758 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.784103426 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.629417865 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.163341335 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.528654487 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.51164945 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.511783963 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.72262455 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.785958358 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.386643953 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.513342528 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.175506144 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.669941936 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.52008958 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.721702913 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.089151427 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.142548307 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.62479163 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.523186999 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.999977831 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.776913603 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.60388996 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.514243392 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.105742896 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.532282898 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.972148696 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.529252748 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.512490051 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.672490701 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.520887214 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.233746301 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.540549549 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.672663023 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.284475253 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.162436609 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.771743373 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.084933375 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.516538163 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.219519974 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.34784202 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.770078755 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.582758363 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.52193522 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.625032931 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.653969101 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.526306465 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.403321108 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.514186798 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.362845112 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.222868584 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.523063508 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.207954802 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.791618015 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.510603003 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.514018904 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.530455935 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.525410764 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.738285425 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.304584732 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.732295831 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.525239099 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.516414214 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.087132297 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.200852284 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.538927309 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.45106462 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.510395238 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.800959547 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.770676546 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.539508794 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.967129647 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.223713768 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.14167551 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.483036621 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.538025379 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.516197819 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.334907662 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.192399249 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.596177726 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.087172773 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.167070228 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.536299906 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.790554202 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.520104842 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.516386683 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.7924906 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.519790269 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.523285576 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.529483377 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.210676188 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.41253942 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.533475554 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.125005854 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.452652015 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.743435696 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.303871717 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.443302409 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.510496838 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.729194489 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.508810226 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.635740183 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.52109864 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.526928872 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.517605977 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.273986274 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.797236287 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.516015632 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.498103279 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.511777938 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.512647358 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.524688598 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.818077686 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.51699819 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.192831071 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.86855593 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.776582712 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.517975796 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.499998074 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.520846151 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.518227855 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.237613286 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.487688432 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.264983294 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.157468808 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.513712875 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.527573994 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.522949743 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.735043793 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.728998684 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.521077944 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.520698919 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.519514949 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.551164371 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.416879188 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.290156887 seconds)
  done (took 1687.400761766 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.551144791 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.563262891 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.539014205 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.575639934 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.580718065 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.622271632 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.585817444 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.632969742 seconds)
  done (took 54.072935794 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.518755798 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.670947684 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.552046534 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.520437545 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.52032705 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.533985719 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.038687123 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.539008255 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.522540771 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.527212235 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.519382852 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.521300965 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.259647847 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.521628299 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.535133675 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.515881318 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.520992908 seconds)
  done (took 68.763030983 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.520548605 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.206364708 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.577078114 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.523935112 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.474628611 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.530636941 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.207605395 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.522673065 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.512410008 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.665915341 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.170870477 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.552377903 seconds)
  done (took 83.887431861 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.52831706 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.529210618 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.527273131 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.527325373 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.529746331 seconds)
  done (took 9.065472174 seconds)
done (took 2139.662583396 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.773159531 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.367474739 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.235437293 seconds)
  done (took 6.022955683 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.667938817 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.713906838 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.870445053 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.855682238 seconds)
  done (took 8.529829348 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.803747906 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.903429134 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.706352999 seconds)
  done (took 6.83624982 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 3.173760964 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.513319037 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.65367318 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.521093342 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.520960039 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.519606046 seconds)
  done (took 20.98556036 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.525741201 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.528222282 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.524465777 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.526119957 seconds)
  done (took 7.528572663 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.501090587 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.217361558 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.493518272 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.505337451 seconds)
  done (took 19.139366589 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.268546456 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.281550707 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.268825896 seconds)
  done (took 8.241827107 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.531542644 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.369816367 seconds)
  done (took 10.324820485 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.833664601 seconds)
  done (took 3.25668013 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.656806265 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.857345502 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.73858358 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.65104142 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.784436929 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 6.145945305 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 3.451734263 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.946603203 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.597169869 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 4.064825314 seconds)
  done (took 32.31888595 seconds)
done (took 137.718619728 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.853613085 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.91882268 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.728423797 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.867966623 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.748281325 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.727840364 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.815858424 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.837832193 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.331781036 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.315217658 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.866354781 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.748247856 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.990841683 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.927852424 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.989742619 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.926959322 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.756045803 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.880503852 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.512692247 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.517753508 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.806998501 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.459029921 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.694827832 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.478887871 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.747480392 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.679397039 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.04531905 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.917204814 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.525273135 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.079118777 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.670749901 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.523391028 seconds)
  done (took 205.313903008 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.523775624 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.528677968 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.515542867 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.535432618 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.521873036 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.533709329 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.529496804 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.516482824 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.548941385 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.515120946 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.515207812 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.516502548 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.518539098 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.518418502 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.517601344 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.515085482 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.519183309 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.52508626 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.515999761 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.532327179 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.51867362 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.536207868 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.52422824 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.518946435 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.517055288 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.518578766 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.553151788 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.519464425 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.540645789 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.51760218 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.535375975 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.537319227 seconds)
  done (took 210.225964457 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.527169765 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.518289208 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.526190111 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.524872848 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.519140814 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.520242743 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.520284984 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.537618959 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.51774072 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.518502405 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.557060426 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.518554504 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.520000739 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.519119167 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.54337561 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.516526603 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.522688266 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.518952147 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.545988185 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.519329139 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.520529521 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.518859596 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.537404803 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.521231736 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.520745353 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.521318607 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.523223156 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.519904954 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.519558195 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.535154553 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.519226878 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.531829133 seconds)
  done (took 210.229322846 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.723360366 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.536970847 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.536036635 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.470456631 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.537127056 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.535000886 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.528286968 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.73538459 seconds)
  done (took 16.033106309 seconds)
done (took 643.224845986 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 4.053376766 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.70590955 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.745967395 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.551151748 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.47252158 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.570123935 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.556954876 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.750220072 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.517042426 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.755443803 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.891614297 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.566749859 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 3.048042075 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.54815174 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.848701288 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.667644529 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.521990909 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.648766228 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.898042456 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.212716462 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.832724809 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 3.135529629 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.776056192 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.509105884 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 3.049152851 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 3.127766164 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.357518586 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.506413408 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.566808121 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.916074832 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.394435879 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.609862295 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.624088557 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.632989762 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.689940186 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.66971113 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.594411353 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.620185 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.769473828 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.900579807 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.217191303 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.321105294 seconds)
  done (took 102.782899489 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.518844705 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.520176905 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.520403781 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.51998158 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.521242411 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.520078125 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.520052611 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.520548584 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.519512629 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.520228237 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.521403183 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.520724112 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.519803883 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.520924831 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.519356838 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.51910655 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.521407788 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.522879374 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.522436178 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.520545954 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.522737299 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.523667301 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.522343147 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.521141479 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.52185378 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.521709128 seconds)
  done (took 40.97628896 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.539378027 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.821945716 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.988295829 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.538319452 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.54214992 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.542804722 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.632802925 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.539696627 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.541994164 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.544252726 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.725062056 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.535949319 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.577241464 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.01938655 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.536137379 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.541731691 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.542534766 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.540934165 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.831789301 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.542801576 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.656128645 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.539137743 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.633153507 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.550972006 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.561247971 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.541381925 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.547494631 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.090675801 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.559871001 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.730296514 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.495865705 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.632375306 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.029538008 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.017642467 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.495494417 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.545231128 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.543918046 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.731102477 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.537578346 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.543095447 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.637499673 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.543728271 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.011220089 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.193163143 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.563045637 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.543965327 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.107941177 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.740584658 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.833863297 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.544533542 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.038079896 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.540652606 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.546002362 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.544961044 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.83926563 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.544002423 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.542238322 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.122789535 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.572677235 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.634441985 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.540017257 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.543909077 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.833428348 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.537798055 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.823040672 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.539496018 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.555231148 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.557080834 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.022683773 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.541234786 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.230589718 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.567142397 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.546331999 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.726499121 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.817056273 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.133177176 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.55919913 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.837507386 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.039271018 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.649900707 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.543971568 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.073865242 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.66016418 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.548641871 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.548529457 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.54674671 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.545435137 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.59931515 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.63853707 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.147711097 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.227923805 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.148078049 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.665150912 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.55957018 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.550312312 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.124713911 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.572479364 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.54878141 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.020418635 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.226347814 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.570949817 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.556472463 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.224250798 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.573055851 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.644701075 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.553593649 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.032926679 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.548870049 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.601631647 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.548322879 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.554705078 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.565055769 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.641552779 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.544424961 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.548942195 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.200139725 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.75744744 seconds)
  done (took 202.454909575 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.544183399 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.534161634 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.556759569 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.533521652 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.537437114 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.549063329 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.540010023 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.539135319 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.5479568 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.54181481 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.539943231 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.545906216 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.546141407 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.576817951 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.546140739 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.547014132 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.195555581 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.541395921 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.545002248 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.556429769 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.37456883 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.542654694 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.550593825 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.53472296 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.542507721 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.543391055 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.565845153 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.536681491 seconds)
  done (took 158.198843991 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.553473379 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.208386521 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.564809706 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.705930074 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.569422295 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.551263752 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.706949987 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.611472861 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.570454254 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.550940231 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.547141642 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.904358111 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.547295007 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.153399464 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.776005069 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.724472352 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.14259308 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.565129324 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.551201869 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.550721283 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.710704868 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.54838795 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.904590729 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.204101336 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.565493469 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.215822864 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.529364624 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.550027796 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.552400104 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.250284059 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.570153685 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.930236806 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.644018015 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.615021045 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.270917121 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.175220118 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.162467462 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.719762682 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.543858561 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.548223916 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.550578319 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.536616399 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.250692072 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.573839595 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.553385954 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.241998506 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.575648771 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.55633231 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.558419918 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.551282198 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.625217029 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.647651652 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.951865055 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.259530475 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.663372495 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.558057278 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.708735588 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.954852701 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.550819676 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.15540794 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.53061499 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.228831428 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.567290882 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.537410645 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.551653145 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.559373834 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.727037463 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.702908959 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.148796348 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.564409753 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.156872193 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.741686202 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.546224138 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.55409464 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.557763403 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.257949564 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.178380114 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.742987775 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.704483952 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.780600086 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.54018131 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.554961346 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.538422448 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.646069206 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.548039726 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.263152442 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.177124056 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.569115003 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.555905652 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.557930583 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.555984294 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.76789989 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.240662613 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.657481985 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.143600513 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.924889491 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.904563386 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.551510738 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.626875382 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.575883064 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.913162924 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.551133676 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.626937703 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.037778166 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.90837864 seconds)
  done (took 186.019619818 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.830402829 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.879617562 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.651952302 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.702031742 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.188857423 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.143463971 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.882564228 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.703922454 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.684444208 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.840374197 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.825113687 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.637313249 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.750785405 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.637013517 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.351557274 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.649314429 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.678497181 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.702118373 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.675759603 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.634212305 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.234225943 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.857380401 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.740830787 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.583616342 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.654741564 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.4173882 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.152820932 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.155369323 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.738684369 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.964244127 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.139891416 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.75246961 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.591304509 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.31627427 seconds)
  done (took 73.801353752 seconds)
done (took 765.662570388 seconds)
SAVING RESULT...
DONE!
