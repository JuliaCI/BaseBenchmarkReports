cset: moving following pidspec: 26550
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.980295231 seconds)
loading group "string"... done (took 0.551453236 seconds)
loading group "linalg"... done (took 8.928506744 seconds)
loading group "parallel"... done (took 0.169969694 seconds)
loading group "find"... done (took 1.4489335 seconds)
loading group "tuple"... done (took 2.113411727 seconds)
loading group "dates"... done (took 1.390607367 seconds)
loading group "micro"... done (took 0.223754846 seconds)
loading group "io"... done (took 0.626827285 seconds)
loading group "scalar"... done (took 44.501751826 seconds)
loading group "sparse"... done (took 14.021090578 seconds)
loading group "broadcast"... done (took 1.140030043 seconds)
loading group "union"... done (took 12.740810193 seconds)
loading group "simd"... done (took 2.572712666 seconds)
loading group "random"... done (took 10.313603771 seconds)
loading group "problem"... done (took 1833.446627383 seconds)
loading group "array"... done (took 25.755316729 seconds)
loading group "misc"... done (took 1.125965966 seconds)
loading group "sort"... done (took 3.783664055 seconds)
loading group "collection"... done (took 18.825492446 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.622245952 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.11864361 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.165204127 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.342987549 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.209395598 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.151489551 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.161839497 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.557356826 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.986273622 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.208658998 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.1448061 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.546297788 seconds)
done (took 5.933562748 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.25617186 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.430842591 seconds)
    (2/2) benchmarking "String"...
    done (took 0.113087231 seconds)
  done (took 1.194095302 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.091807517 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.175039593 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.094518368 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.109409873 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.1088315 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.108030788 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.09346958 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.109986631 seconds)
  done (took 1.451540833 seconds)
done (took 3.654057087 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.501404886 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.836370596 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.502064939 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.132410578 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.157818855 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.149824395 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.305559192 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.162452565 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.123684712 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.087640081 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.172009596 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.372450444 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.47514892 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.953459387 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.08592843 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.129860961 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.084398947 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.703894757 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.082130398 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.141447898 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.527254701 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.119890577 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.118085816 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.139598456 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.190483292 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.130005877 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.164018018 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.096783891 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.67280306 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.102023382 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.184720467 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.099308649 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.163185704 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.248735265 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.097373778 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.09872213 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.678613772 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.17993204 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.113502942 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.099682418 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.672268389 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.082860219 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.197604936 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.108322122 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.109476874 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.184765434 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.113957221 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.079926103 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.103231229 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.090709297 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.161877214 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.484279695 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.108778663 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.149592378 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.108112313 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.690424015 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.09931956 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.157397704 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.141430445 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.10432571 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.098255589 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.106618382 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.156066673 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.109695383 seconds)
  done (took 19.556399158 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.116407914 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.140250746 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.093764923 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.140329298 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.13779414 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.096056526 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.083885389 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.093984914 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.108406992 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.182831562 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.13602862 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.14210465 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.091523188 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.081810726 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.117331404 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.247945688 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.104629495 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.12034902 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.080519383 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.105383729 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.138669017 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.095378861 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.108302145 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.108861381 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.167839109 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.20356553 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.110950727 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.123563718 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.094332281 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.097926263 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.141233375 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.160304437 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.074786858 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.092918365 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.182089043 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.119936263 seconds)
  done (took 5.11083835 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.197687852 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.115648359 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.190374308 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.17742337 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.146135965 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.166146986 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.118336363 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.26411609 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.178620125 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.179041997 seconds)
    (11/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.164899462 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.111792811 seconds)
    (13/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.097294231 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.111324369 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.078930986 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.095786261 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.078827574 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.669800862 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.179347115 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.147798601 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.12328295 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.087969723 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.096681744 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.374297349 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.09793965 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.080478842 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.101327089 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.071923115 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.173628127 seconds)
    (30/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.09874424 seconds)
    (31/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.083842464 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.310474202 seconds)
    (33/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.100215172 seconds)
    (34/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.110187275 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.130009155 seconds)
    (36/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.192227603 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.130481452 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.122875853 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.102671671 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.079862133 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.232287893 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.105685104 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.078019104 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.124316776 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.131446654 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.115102826 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.099383788 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.108622874 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.222434348 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.098050484 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.117391954 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.063328938 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.198483055 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.097774038 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.099217443 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.352292809 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.116305066 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.085170488 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.099394757 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.284185581 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.132396912 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.082223597 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.077677036 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.101830474 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.093707597 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.399527182 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.090172414 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.993868812 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.09620106 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.156193035 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.097988347 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.104662641 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.085269796 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.101112839 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.102585453 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.096276421 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.078286246 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.096246801 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.078017318 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.100460529 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.112826424 seconds)
    (82/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.082540084 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.0987231 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.078302502 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.158450824 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.099733531 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.116122855 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.123005233 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.084474561 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.094960031 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.112630074 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.096242004 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.081935527 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.144288198 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.104290478 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.112138861 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.09772583 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.126473881 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.0958735 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.18154073 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.081848708 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.124318567 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.098677796 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.11245373 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.119058706 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.096098473 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.083907558 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.094553511 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.079599272 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.160523391 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.08022556 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.077839219 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.099643931 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.109812256 seconds)
  done (took 23.550469897 seconds)
done (took 48.870126909 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.46818523 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.094265588 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.11209463 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.111877035 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.109809694 seconds)
  done (took 1.624575266 seconds)
done (took 2.326553159 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.334409182 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.189382971 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.101632999 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.194601195 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.089860159 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.201266846 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.164199112 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.116936322 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.196052739 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.098914468 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.175624593 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.098670761 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.086858952 seconds)
  done (took 2.777545616 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.093412607 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.117214588 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.081570726 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.108924142 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.075704409 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.108933853 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.091202593 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.127323096 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.091566411 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.10210749 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.075611344 seconds)
  done (took 1.773770898 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.08954225 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.113197047 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.082849809 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.107828271 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.076319478 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.090116139 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.106632047 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.116601735 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.090483806 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.103306881 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.075541792 seconds)
  done (took 1.752975687 seconds)
done (took 6.997380618 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.03949432 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 8.396163437 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.118420541 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.165510695 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.337203963 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.209954182 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.516901336 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.130440258 seconds)
  done (took 11.798514912 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.130524962 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.099514026 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.082864857 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.097068065 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.079201663 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.09875019 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.080035781 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.098135734 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.082647846 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.095269224 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.081783088 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.09495577 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.078674288 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.096878599 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.081718106 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.095265589 seconds)
  done (took 2.233742726 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.118815807 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.115821121 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.102375636 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.106443965 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.08412604 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.10035381 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.086484847 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.100662678 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.082947704 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.099347336 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.105073572 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.088445519 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.102915768 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.08242711 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.101891661 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.09057759 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.098324613 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.102091013 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.086260622 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.102241895 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.089640225 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.100165645 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.103489785 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.089307545 seconds)
  done (took 3.14680771 seconds)
done (took 17.881617 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.168679882 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.085786774 seconds)
  done (took 0.958059819 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.100692596 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.117707726 seconds)
  done (took 0.929725907 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.108097901 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.095786408 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.13428367 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.113339925 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.081727128 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.095426389 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.112717398 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.097356312 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.080660627 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.096680744 seconds)
  done (took 1.728663317 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.085401464 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.100499832 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.089806327 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.117850834 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.108133842 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.082345042 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.101687159 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.084696226 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.102455875 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.079959994 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.104895158 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.11579879 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.087556518 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.117536317 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.086277382 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.102452518 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.106496151 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.085125036 seconds)
  done (took 2.474141316 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.079602535 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.082174414 seconds)
  done (took 0.8752206 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.082835872 seconds)
    (2/7) benchmarking "second"...
    done (took 0.095234464 seconds)
    (3/7) benchmarking "month"...
    done (took 0.082754427 seconds)
    (4/7) benchmarking "year"...
    done (took 0.098773556 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.079329673 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.095624656 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.079053491 seconds)
  done (took 1.327468455 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.508503079 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.25560951 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.332297811 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.097188444 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.150257154 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.367997621 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.134085054 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.111908218 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.111406118 seconds)
  done (took 2.823470686 seconds)
done (took 11.827541769 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.090482615 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.187437671 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.541681003 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.116881078 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.079225196 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.157462578 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.264247565 seconds)
done (took 2.151616094 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.35271715 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.124133682 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.090570359 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.079725253 seconds)
  done (took 1.358388512 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.079188093 seconds)
    (2/2) benchmarking "read"...
    done (took 0.101548547 seconds)
  done (took 0.900549812 seconds)
done (took 2.981565846 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078272665 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.128818726 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.078643153 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.093334908 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.079093245 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.093714185 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.075838201 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.07803433 seconds)
    (9/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.093107792 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.077620535 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.094419379 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.078054791 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.093597275 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.076328618 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.076347054 seconds)
    (16/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.094016813 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.078158693 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.09171681 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.075892141 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.092132421 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.079031212 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.092291344 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.076512962 seconds)
    (24/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.07823533 seconds)
  done (took 2.805726086 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.216460736 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.096068853 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.084328286 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.101585159 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.082546414 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.100445826 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.100624742 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.079251173 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.100986487 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.081281318 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.098176964 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.083628152 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.096394545 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.083611347 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.097722015 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.099186241 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.085274517 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.094853075 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.08143562 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.099220873 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.084884563 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.094827628 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.082790923 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.10123368 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.09912223 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.082386407 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.097787572 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.079176845 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.101455657 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.083123379 seconds)
  done (took 3.591504195 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.08734191 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.07601351 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.09297249 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.087562307 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.092718155 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.080069828 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.092108259 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.077358592 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.094046873 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.077288628 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.094073344 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.076353617 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.092456129 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.078131642 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.077277802 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.099101322 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.111751137 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.076064522 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.076303112 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.093246169 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.082686568 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.09239109 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.078726053 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.092980483 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.076072601 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.092951645 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.077457145 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.075567007 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.093725549 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.076410966 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.098043325 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.082875011 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.092093209 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.089868671 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.099256707 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.076654923 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.101799201 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.076341233 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.093544698 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.076104153 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.092378902 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.076620004 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.076676607 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.10387234 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.080319711 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.093772633 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.076598772 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.09421023 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.077874684 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.096934965 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.076335043 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.092724929 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.079343483 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.094877111 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.082810341 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.076202895 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.095165971 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.076549623 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.093753784 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.077532988 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.093407224 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.075737175 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.099588486 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.077971918 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.11739131 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.089001928 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.092978659 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.078706542 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.096761433 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.084535368 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.095059088 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.095598857 seconds)
  done (took 6.993789134 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.081918308 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.103267698 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.079236644 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.095410965 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.075038567 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.077319182 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.100925062 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.093430134 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.079124692 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.112633023 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.077716569 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.095352895 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.078401293 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.097353505 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.077621791 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.095065736 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.087665308 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.091358366 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.078630256 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.096708074 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.077156736 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.100957023 seconds)
  done (took 2.682726473 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.22057057 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.102600114 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.141961146 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.11391838 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.096518551 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.110875689 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.100493569 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.085265807 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.101099631 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.087442686 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.103487168 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.084297869 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.113656619 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.102899059 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.104427925 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.087995866 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.100540504 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.088721613 seconds)
  done (took 2.674408214 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.092333813 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.097366999 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.105245512 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.096570282 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.080225202 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.099567565 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.085957775 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.112764632 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.099183541 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.079813648 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.107422933 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.08249642 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.098948859 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.080250086 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099108035 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.080524757 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.098562513 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080813734 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.107217701 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.103393904 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.086648881 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.107374615 seconds)
  done (took 2.814865526 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.096965275 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.09871472 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.110532782 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.099826753 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.075791903 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.095296057 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.087156381 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.097038206 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.105171976 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.081404698 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.097530839 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.07805591 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.103779939 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.080443392 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.102995642 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.08013648 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.098816963 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.080542098 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.098791598 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.07584665 seconds)
  done (took 2.578693947 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.123281886 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.114056441 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.097245096 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.124168629 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.113889698 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.096553831 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.124024222 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.113348543 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.097265553 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.126888612 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.096525542 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.114169717 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.125525441 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.103581989 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.113131908 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.124289065 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.107207672 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.124913302 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.113326173 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.097132928 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.126986609 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.113591612 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.107868618 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.113861717 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.096972752 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.116434952 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.114577454 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.103818747 seconds)
  done (took 3.882151139 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079896312 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.079781008 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.094591115 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.077525266 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.093912078 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.077589168 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.09464496 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.07739493 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.079641553 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.094471724 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.079806843 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.097422944 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.080149969 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.096420961 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.080355088 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.096202198 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.079860365 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.07723749 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.094218092 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.077939829 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.09663374 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.080203127 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.096343862 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.07758718 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.077151878 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.09632999 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.077380145 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.094431924 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.080741249 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.094729297 seconds)
  done (took 3.320290341 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.089128257 seconds)
    (2/2) benchmarking "in"...
    done (took 0.103686705 seconds)
  done (took 0.930790649 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.078616907 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.115320643 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.07785688 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.101361585 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.086903976 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.098823984 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.090635061 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.103742984 seconds)
  done (took 1.492066572 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.105749355 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.118227483 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.086520601 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.110098013 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.100396736 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.118815083 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.168274945 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.087061769 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.10558753 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.082154381 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.118348501 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.081927516 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.11030026 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.103965225 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.090808819 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.112930115 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.079952428 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.111490897 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.090946645 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.101872984 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.087546338 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.115786503 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.091736539 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.106306261 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.085475052 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.111293497 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.11221277 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.093324792 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.104351519 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.094553197 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.105741388 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.075708363 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.104726878 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.087149816 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.096972535 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.10006776 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.118203077 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.086473674 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.108166063 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.086783 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.108104614 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.09411314 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.092142855 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.105443786 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.09682885 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.103688324 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.087432536 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.093879103 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.082376756 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.102629397 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.076856493 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.102026173 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.07592701 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.107893467 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.090756443 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.116814163 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.08476828 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.10318231 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.086233108 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.101324357 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.088824757 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.103181776 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.109358128 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.084459496 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.107845992 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.090420971 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.107229294 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.077229856 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.092312341 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.079517714 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.10771736 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.106854443 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.110554922 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.087036719 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.104262191 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.079577897 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.105077055 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.087563516 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.106640695 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.110469644 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.086281966 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.106573036 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.092119705 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.10221209 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.086061652 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.105527015 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.083807408 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.101205434 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.082434641 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.119483153 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.084401099 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.097622654 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.083041894 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.109047233 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.08631154 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.102591805 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.084353591 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.108532771 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.075643972 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.104243517 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.087819418 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.10539481 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.095097883 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.104587416 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.105583417 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.091104805 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.111060742 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.087331395 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.102173532 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.078142135 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.105284322 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.083837626 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.10808225 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.075863188 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.104203983 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.086544696 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.104535277 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.093301514 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.101899746 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.086540042 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.112435887 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.093882727 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.101873031 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.079175385 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.105046569 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.087400019 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.108242244 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.094214407 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.102150674 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.077192671 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.095073506 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.091320252 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.10347809 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.088739461 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.104044901 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.087101349 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.093694476 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.079832987 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.104300171 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.093273584 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.103057921 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.105780125 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.092093935 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.106391801 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.085939762 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.109311713 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.085235927 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.098986933 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.091685405 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.103571953 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.077186241 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.107735391 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.086758278 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.101337099 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.087325639 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.107872619 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.086953403 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.106042591 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.084093263 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.103721613 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.088749991 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.098722818 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.08725725 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.102532432 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.102415472 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.103735019 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.077147373 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.096966448 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.088203354 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.100782026 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.086618997 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.098987711 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.086877103 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.104916755 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.079847851 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.102738581 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.085992388 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.116235051 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.095222188 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.105589601 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.106527587 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.094344454 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.104235036 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.088791757 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.104506615 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.088348592 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.104905006 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.091506909 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.106330536 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.088314733 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.103513089 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.078863614 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.106834247 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.092771915 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.099427673 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.079827173 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.09999607 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.086765836 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.111868371 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.087142347 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.105980179 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.084494495 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.106923651 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.091054265 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.103500346 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.08664224 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.099301625 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.08792863 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.109412393 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.088429269 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.105954284 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.094078874 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.1057854 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.077283811 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.108331678 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.084160748 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.107950382 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.07746732 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.100068427 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.082963433 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.105525679 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.085575342 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.102694773 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.076927923 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.109514223 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.093208309 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.105566761 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.082931094 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.104846975 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.096906127 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.103116582 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.108904128 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.087802471 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.107892412 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.101678363 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.100393722 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.087803689 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.112637098 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.087043394 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.09378467 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.089829196 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.101887933 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.082255405 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.103329638 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.084442467 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.105491687 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.089298199 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.105779308 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.076724536 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.104274927 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.08511782 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.100174864 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.078607042 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.110283699 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.088128121 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.104966656 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.097167448 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.105395385 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.08783654 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.107181666 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.085797393 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.106700783 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.106372501 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.087963332 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.108162997 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.086566381 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.100398828 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.087852182 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.100043652 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.081439626 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.086009709 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.10591598 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.087631204 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.106370904 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.10440668 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.092470397 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.105514513 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.0881523 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.123305424 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.102293186 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.083333607 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.105878935 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.090094035 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.103631798 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.086764447 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.095840084 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.092687929 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.1041528 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.093321207 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.103500503 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.079308131 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.105873167 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.086747076 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.105815659 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.089021659 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.105695279 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.086456321 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.103985272 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.088019097 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.11461721 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.083857063 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.111961442 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.089581056 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.107140436 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.087601797 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.106102902 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.085549176 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.101503511 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.087631604 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.106388467 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.089036759 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.104031193 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.106371761 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.087760856 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.103708846 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.085855796 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.106112255 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.088530865 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.107166622 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.077030898 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.082868296 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.101921933 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.087952766 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.10970358 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.105535424 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.086139835 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.085158158 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.107960707 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.08511611 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.098174126 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.091599019 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.108313878 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.08834081 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.114819362 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.101009048 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.087836489 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.115633013 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.077447649 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.102810802 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.081035331 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.10137858 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.093112387 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.106653816 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.092694423 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.106779315 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.083827713 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.09731519 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.090048966 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.103019002 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.077300078 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.098669054 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.090846404 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.102787126 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.085467345 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.106447484 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.089615597 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.106391842 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.091582698 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.103911605 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.088597904 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.105724567 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.080480246 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.101594931 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.083372401 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.105219891 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.089862748 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.101683848 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.080015013 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.087179215 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.105944431 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.10497028 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.087132671 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.104462631 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.093344082 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.104655143 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.088614487 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.110478186 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.078032824 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.105166001 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.087798929 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.105506159 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.08409281 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.106173798 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.0898809 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.107829388 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.09316624 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.105398458 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.091010164 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.105964947 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.081085091 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.104767409 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.088063037 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.106075083 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.084398943 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.107562255 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.09522559 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.099354957 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.088041528 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.105997222 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.085223399 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.107353067 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.089915471 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.106872181 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.091433532 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.107274042 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.088082675 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.109956088 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.087884616 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.106733084 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.088818882 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.104643993 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.09162808 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.102662901 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.11293588 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.089807356 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.107307258 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.086955511 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.101962517 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.087617561 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.104922551 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.086466422 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.111902324 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.089065439 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.101827497 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.08425546 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.081266542 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.106567305 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.110103043 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.094664426 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.106394422 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.089209318 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.097099433 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.081118405 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.107305285 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.085308913 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.10450692 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.091171812 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.110495667 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.088546964 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.103031753 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.086808405 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.110871134 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.093108869 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.108338412 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.08407953 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.108058493 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.088666759 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.107272059 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.085258213 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.106465734 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.089545794 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.108789721 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.086930162 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.102965708 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.114888994 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.093479922 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.107659506 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.087517011 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.108578805 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.088931796 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.097553155 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.089304469 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.105550189 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.092505291 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.105743508 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.088277058 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.11637731 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.083888304 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.105626712 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.093309576 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.10643214 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.111475993 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.079773435 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.087929913 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.10809057 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.107282655 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.079725776 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.0838092 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.103681674 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.087903228 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.102675455 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.079481747 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.116301349 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.111620893 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.089555184 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.105254933 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.087284942 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.09714481 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.07976945 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.084246367 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.109315259 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.086657185 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.115178421 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.101840758 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.084506991 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.079151907 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.106641393 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.10816133 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.091254081 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.081052153 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.098749982 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.084524851 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.106718928 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.113394668 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.086703351 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.106426774 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.090316143 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.106534316 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.082658272 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.111105705 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.081566935 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.107983121 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.099589886 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.107842108 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.090766076 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.109894052 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.094763328 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.107212714 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.080279554 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.107993827 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.088432823 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.10798183 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.089182609 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.109256174 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.121828364 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.089240805 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.102857951 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.087079474 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.106394478 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.085749366 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.113926663 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.090654463 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.108453631 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.091069126 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.105699412 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.091348772 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.113253363 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.090704224 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.108327926 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.107392284 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.087383557 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.088433178 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.105301753 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.087387224 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.109664696 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.090250758 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.107083534 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.090901071 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.1040123 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.117228022 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.096939282 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.10982499 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.081725092 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.103767043 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.084937886 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.080280379 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.109478444 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.082981008 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.105184853 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.086591361 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.10566846 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.090905616 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.109125941 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.088422159 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.1098331 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.087193279 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.097905143 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.092710213 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.10762901 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.10885347 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.081791142 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.088171204 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.111915183 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.111351817 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.094059777 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.105249116 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.089370436 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.105910999 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.092261829 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.09904409 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.092606073 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.105258862 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.087653879 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.102244748 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.088727703 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.108556423 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.090865639 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.108069735 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.092087424 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.107910997 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.094072029 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.110406387 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.082008728 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.100605291 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.092909453 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.100880594 seconds)
  done (took 58.593455336 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.151272088 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.08756291 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.098723631 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.080181297 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.125971185 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.081259461 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.09842344 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.084150853 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.100759191 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.094424513 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.099507537 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.080395092 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.121193273 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.127104147 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.124458754 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.113732707 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.080845846 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.099805096 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.080187994 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.099362512 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.101219797 seconds)
  done (took 2.914269227 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.106294227 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.117968584 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.115205455 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.102407077 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.109305956 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.116357735 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.09607552 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.117057436 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.119766459 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.112083784 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.101601114 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.116581071 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.11086393 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.093235584 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.111374542 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.113933616 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.102324094 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.109384931 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.117247349 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.096976067 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.113935056 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.115555554 seconds)
  done (took 3.202589373 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.093473563 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.087702384 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.111989821 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.081587023 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.106694164 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.081774088 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.111737654 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.084793953 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.110744801 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.08928248 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.104069208 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.089751431 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.111762777 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.083051051 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.105003275 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.086011788 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.111311031 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.08890365 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.108529848 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.082457818 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.127633784 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.101048791 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.083824368 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.08602841 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.116994217 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.088898971 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.108088611 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.08794415 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.104239478 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.088404706 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.103752053 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.090679593 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.110549182 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.085254509 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.104535522 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.088116772 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.107215344 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.083175822 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.103301037 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.091999536 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.101984052 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.089839053 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.114646679 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.085567864 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.103318299 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.090642046 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.107575744 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.084088214 seconds)
  done (took 5.457785574 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.122402499 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.161175965 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.092988363 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.156695708 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.127911919 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.118229225 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.092801933 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.148537101 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.105905773 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.087947158 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.124783622 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.122862436 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.089255515 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.116895161 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.093221097 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.109423322 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.111607161 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.094163014 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.117740493 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.089740538 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.115964209 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.112070668 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.102867951 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.120894245 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.112598931 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.088831657 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.107274301 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.097877065 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.118984039 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.114474007 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.094807746 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.118716099 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.128155109 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.093001174 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.110824428 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.110168125 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.105316439 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.108316185 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.09094826 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.105726622 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.109888414 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.097515512 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.110593953 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.124162973 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.090086414 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.110340254 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.092800029 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.108721215 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.124849059 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.09540637 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.117406419 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.12230907 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.094027582 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.108867878 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.094939443 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.126679148 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.108297702 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.088217398 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.112583933 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.119177286 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.089264782 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.117686 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.107392338 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.113029891 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.117450344 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.102277113 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.110908706 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.112540534 seconds)
  done (took 8.405292591 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.096169649 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.132142931 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.125633985 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.105383267 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.114599802 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.114010688 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.095497483 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.113378138 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.094710507 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.121095091 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.113368825 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.163816679 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.088645441 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.118317065 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.09524701 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.114295641 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.112675136 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.094552674 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.112800414 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.095209264 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.113062987 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.124501474 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.094760059 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.124366627 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.125488358 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.106063181 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.095502889 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.112423099 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.106124714 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.115229617 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.125590878 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.113941219 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.094780267 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.123895641 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.127368079 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.094262742 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.10332601 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.094001761 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.113802366 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.113630641 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.089075552 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.124196263 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.09447489 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.107758952 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.113137514 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.096161693 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.125164303 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.127202362 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.119598418 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.102526948 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.114055454 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.124959853 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.0953317 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.114184451 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.125359395 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.132706071 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.106422659 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.125869276 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.112762321 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.106037658 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.125982668 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.133786153 seconds)
  done (took 7.758181798 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.086398277 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.086037238 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.103146317 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.083712091 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.105269476 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.084456512 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.105292047 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.08642878 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.085414968 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.106213013 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.086304507 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.102917267 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.084272123 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.105124365 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.084759421 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.10250209 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.084151992 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.084193467 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.105367214 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.083981153 seconds)
  done (took 2.657119417 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.095246048 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.125991731 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.086595822 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.114006639 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.089346562 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.113934595 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.106452556 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.090039125 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.10548793 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.090299635 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.118045646 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.099416147 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.107380424 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.112785916 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.099661657 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.112778223 seconds)
  done (took 2.472680951 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.107441857 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.119686104 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.133627256 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.091845797 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.103658003 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.09411314 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.105590039 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.081960649 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.100933546 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.095809499 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.112379843 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.098154117 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.105066406 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.084556776 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.105783084 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.092321784 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.101608881 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.090925215 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.105128863 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.112870825 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.111621699 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.107776316 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.087536005 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.107690513 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.089011531 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.111331117 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.094025222 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.10568978 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.084005904 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.105932958 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.089777843 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.1138617 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.082469926 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.112211466 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.083465275 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.103598996 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.085718579 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.106501354 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.091923971 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.106485709 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.083681699 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.109557539 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.085474374 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.107363572 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.081546953 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.106930176 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.082034174 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.113278986 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.10736965 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.090079747 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.105826413 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.095697718 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.113297949 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.098635014 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.116243784 seconds)
  done (took 6.325800545 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.102031206 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.110237093 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.091045287 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.10374302 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.090963887 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.114088051 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.09104238 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.108128594 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.090487983 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.104311184 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.089352222 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.110471533 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.088581029 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.110548821 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.088975513 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.110210192 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.081882795 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.107860423 seconds)
  done (took 2.601661829 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.092832445 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.10553131 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.094837937 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.106383903 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.086627359 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.087685952 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.103079982 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.084874253 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.104658892 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.086819913 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.10661387 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.089259103 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.104033147 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.089999838 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.106620644 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.087758546 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.108991691 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.085351118 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.106711539 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.082856399 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.108129042 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.085586693 seconds)
  done (took 2.923990878 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.105950773 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.139980744 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.101027695 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.150741004 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.111746492 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.091162307 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.122167776 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.091730888 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.129495235 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.109824288 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.091495179 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.110204793 seconds)
  done (took 2.168413801 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113361942 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.145933172 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.085003836 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110126202 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.120896486 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.093893549 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.111753622 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.09256806 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.12504309 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.124879476 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.091824591 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.124740162 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.124173597 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.12342613 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.100742913 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.120539397 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.111142055 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.093137553 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107056897 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.133865504 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.092978675 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.124237143 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.111228816 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.093147163 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.112110647 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.123215873 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.105202985 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.125475678 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.112126997 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.105003356 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.122474469 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.11211501 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.105180581 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.126733798 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108967906 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.124344674 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.09286168 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.133951227 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119956744 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.103183729 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.111262771 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119980675 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.104572383 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.120181589 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.123433545 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.093582779 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.119727497 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.11162484 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.093190396 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.139239167 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.120333143 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.123079879 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.100494878 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.125560403 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.124865887 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.139708108 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.12563752 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.123116832 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.101018932 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.126405586 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.122695479 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120112423 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.104014001 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.127013019 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120001297 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123868385 seconds)
  done (took 8.386784443 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.128196492 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.106382079 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.092524644 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.126477455 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.124534477 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.111723698 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.093553153 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.112206042 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.092652952 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109367952 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.159769434 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.112325135 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.104198985 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.123905324 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.112234599 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.093426258 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.112458086 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.124277997 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089813754 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.140796315 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112355211 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.123241666 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.104133665 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.124555749 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.125758343 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120658075 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.09362285 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112695585 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.092982915 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113432665 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.119467267 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.093847067 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.123712445 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.1053746 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.104111136 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.113353938 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.093013222 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.121678798 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.112556323 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.100394626 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.124724248 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.133927635 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11253558 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.092824613 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.126573481 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.112998045 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.093289862 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108644605 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.093108301 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.110011787 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.12612028 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.126848211 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.105906134 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.123843826 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113308755 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.09303543 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.114585879 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112299881 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.093794082 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.120432073 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.123976612 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.093998552 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.13995608 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.112925575 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.093393046 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.125366028 seconds)
  done (took 8.226996708 seconds)
done (took 156.578422533 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.106428745 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.144467533 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.103118745 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.171139735 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.087575194 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.142532048 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.120421289 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.12442268 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.088086567 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.107804878 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.088208374 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.111129178 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.154016796 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.108250595 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.088585573 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.111632264 seconds)
  done (took 2.673094832 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.184722 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.286904927 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.108103281 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.112678181 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.094717718 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.11164806 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.091850388 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.115609379 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.089356779 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.122530265 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.109990501 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.091144278 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.121383789 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.090904277 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.109694409 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.090993491 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.121197469 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.090544798 seconds)
  done (took 2.964999683 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.114208186 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.169114086 seconds)
  done (took 1.108399575 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.125075846 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.18777775 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.306710785 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.165021356 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.117891872 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.131004016 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.166546054 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.127695554 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.195681885 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.129724694 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.110680647 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.116068812 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.139431128 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.101257622 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.118658011 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.09429695 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.143346566 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.117015743 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.097694482 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.11586878 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.116973853 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.117101195 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.120113872 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.097903817 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.185746091 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.131389305 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.094936856 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.117132951 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.116039477 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.096968158 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.121205468 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.131044537 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.109322529 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.190924386 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.100711529 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.189003047 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.103246094 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.11499651 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.096416551 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.115587065 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.118393963 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.09921746 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.130902258 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.094237245 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.117670029 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.12274813 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.096683154 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.115994815 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.102157368 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.124829765 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.122535103 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.100665306 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.185926352 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.104165138 seconds)
  done (took 7.731576445 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.841340689 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.159635922 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.114872228 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.947159349 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.147176755 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.129188708 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.8403251 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.115544532 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.268197115 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.074942756 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.133914933 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.129722067 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.236164515 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.260251321 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.154261241 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.342643662 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.717700787 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.129229618 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.122442121 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.15859479 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.121851347 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.143193202 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.113922722 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.441279771 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.116336601 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.092582947 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.120623035 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.127802973 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.167984354 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.09191036 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.11955795 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.185970247 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.293673608 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.18679144 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.116432967 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.091068105 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.114128887 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.176057293 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.273755565 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.223482824 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.178737188 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.089937693 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.112888427 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.105865459 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.134626995 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.088916802 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.191796967 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.180313721 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.180561128 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.118288942 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.126620376 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.102634011 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.12586479 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.167966375 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.112683236 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.342344636 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.345598184 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.093448226 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.122540746 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.11312111 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.2712245 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.113894758 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.208910314 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.141069777 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.218863554 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.091552766 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.793140741 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.17326253 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.113709623 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.12125713 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.101081987 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.120732061 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.104110809 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.174529486 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.386805749 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.12891946 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.117619959 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.09333193 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.255593154 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.093145792 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.112383719 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.171028116 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.093317354 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.123296037 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.130528768 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.105495169 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.197836365 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.256910192 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.128016711 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.10039556 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.119256764 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.125458442 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.094235301 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.220284238 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.223071954 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.18517926 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.21952879 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.12638591 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.17158671 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.172392045 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.125517025 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.179643641 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.121514143 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.110981059 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.127946466 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.220230244 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.148924208 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.093146593 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.118746458 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.119444541 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.150605491 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.097409488 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.12084558 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.17692884 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.471954534 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.192865374 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.089363724 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.117747056 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.101567683 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.168316419 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.122003755 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.266873743 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.102612043 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.194496782 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.099790134 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.110776041 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.10094891 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.190911073 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.107145427 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.123233638 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.126630593 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.101473466 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.276176721 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.203976159 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.130099965 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.241177696 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.184763416 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.102800526 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.200952937 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.10204257 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.196689167 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.104254268 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.12589009 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.094208705 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.785382955 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.127570696 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.100476787 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.119447514 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.20196253 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.11353718 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.095675521 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.092291292 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.11295723 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.81923741 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.096916584 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.111035877 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.095495334 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.123864021 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.101418737 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.12110514 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.097796036 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.189756028 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.239196477 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.106834224 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.122302878 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.092638302 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.188455863 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.094816178 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.114151778 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.093738434 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.11465987 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.10303167 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.119129476 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.095625442 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.200588185 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.166600583 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.227183205 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.535015275 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.11430778 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.09333139 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.236025487 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.114181039 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.289510348 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.122353219 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.230467416 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.174527346 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.110920494 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.321038573 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.198766845 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.202518019 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.096165663 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.199027663 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.090878451 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.119909973 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.169648279 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.09224491 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.122292956 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.165416891 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.132579823 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.128910903 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.136505211 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.115178636 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.23817571 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.111877817 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.177811549 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.116095647 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.106539 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.314012196 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.113785196 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.11491589 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.188634412 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.098507872 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.114372212 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.672901232 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.114233261 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.10425016 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.125380393 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.229503826 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.174155166 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.121741678 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.101311456 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.133283215 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.169398462 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.237557506 seconds)
  done (took 45.552913917 seconds)
done (took 60.850672276 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.315281941 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.275751599 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.312232345 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.202216698 seconds)
  done (took 2.028907446 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.184167312 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.159634346 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.130353246 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.113331711 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.160678372 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.091661752 seconds)
  done (took 1.690652313 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.490418084 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.380406262 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.347764282 seconds)
  done (took 2.072205972 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.268736972 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.291369593 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.365659669 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.455217744 seconds)
  done (took 2.339437637 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.210993499 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.131063123 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.104907308 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.145195595 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.17719557 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.181687754 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.147361801 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.156970219 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.133721673 seconds)
  done (took 2.28890167 seconds)
done (took 11.269889939 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/224) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.168657296 seconds)
    (2/224) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.175503985 seconds)
    (3/224) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.096039973 seconds)
    (4/224) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.134682454 seconds)
    (5/224) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.325939862 seconds)
    (6/224) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.225814762 seconds)
    (7/224) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.129950773 seconds)
    (8/224) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.120534432 seconds)
    (9/224) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.094637982 seconds)
    (10/224) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.286811183 seconds)
    (11/224) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.265882198 seconds)
    (12/224) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.164900081 seconds)
    (13/224) benchmarking ("map", identity, Bool, false)...
    done (took 0.22866302 seconds)
    (14/224) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.228415861 seconds)
    (15/224) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.119380848 seconds)
    (16/224) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.1196759 seconds)
    (17/224) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.227309095 seconds)
    (18/224) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.151979448 seconds)
    (19/224) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.094620598 seconds)
    (20/224) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.144884485 seconds)
    (21/224) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.163480108 seconds)
    (22/224) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.164512755 seconds)
    (23/224) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.271815316 seconds)
    (24/224) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.224011753 seconds)
    (25/224) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.150633645 seconds)
    (26/224) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.134517754 seconds)
    (27/224) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.135410328 seconds)
    (28/224) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.255235292 seconds)
    (29/224) benchmarking ("map", abs, Float32, true)...
    done (took 0.2214752 seconds)
    (30/224) benchmarking ("perf_sum", Bool, true)...
    done (took 0.129422979 seconds)
    (31/224) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.241848136 seconds)
    (32/224) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.081783632 seconds)
    (33/224) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.222207013 seconds)
    (34/224) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.219775918 seconds)
    (35/224) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.244214252 seconds)
    (36/224) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.193010249 seconds)
    (37/224) benchmarking ("map", identity, Float32, false)...
    done (took 0.136758443 seconds)
    (38/224) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.132176178 seconds)
    (39/224) benchmarking ("map", identity, Float32, true)...
    done (took 0.086664282 seconds)
    (40/224) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.115880733 seconds)
    (41/224) benchmarking ("map", abs, Int64, false)...
    done (took 0.157979789 seconds)
    (42/224) benchmarking ("perf_sum", Float32, true)...
    done (took 0.110054632 seconds)
    (43/224) benchmarking ("perf_sum", Float64, true)...
    done (took 0.128152135 seconds)
    (44/224) benchmarking ("perf_countequals", "Int8")...
    done (took 0.104983404 seconds)
    (45/224) benchmarking ("map", identity, BigInt, false)...
    done (took 0.157173909 seconds)
    (46/224) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.078753562 seconds)
    (47/224) benchmarking ("perf_sum", Bool, false)...
    done (took 0.117575193 seconds)
    (48/224) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.158289038 seconds)
    (49/224) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.216738422 seconds)
    (50/224) benchmarking ("map", abs, Bool, true)...
    done (took 0.143167022 seconds)
    (51/224) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.131327712 seconds)
    (52/224) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.116639241 seconds)
    (53/224) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.098134118 seconds)
    (54/224) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.230993057 seconds)
    (55/224) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.265178892 seconds)
    (56/224) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.127261155 seconds)
    (57/224) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.147704492 seconds)
    (58/224) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.17144712 seconds)
    (59/224) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.188799019 seconds)
    (60/224) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.133136434 seconds)
    (61/224) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.197373626 seconds)
    (62/224) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.112268114 seconds)
    (63/224) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.210337393 seconds)
    (64/224) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.207125156 seconds)
    (65/224) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.130406867 seconds)
    (66/224) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.080640089 seconds)
    (67/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.149636903 seconds)
    (68/224) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.181327345 seconds)
    (69/224) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.197136685 seconds)
    (70/224) benchmarking ("perf_sum", Int8, true)...
    done (took 0.125924436 seconds)
    (71/224) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.216730615 seconds)
    (72/224) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.102141695 seconds)
    (73/224) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.111925519 seconds)
    (74/224) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.128730483 seconds)
    (75/224) benchmarking ("map", abs, Bool, false)...
    done (took 0.078501186 seconds)
    (76/224) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.195758281 seconds)
    (77/224) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.119720144 seconds)
    (78/224) benchmarking ("perf_countequals", "Float32")...
    done (took 0.106012052 seconds)
    (79/224) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.101551431 seconds)
    (80/224) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.116785099 seconds)
    (81/224) benchmarking ("map", identity, Float64, false)...
    done (took 0.159585787 seconds)
    (82/224) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.101248212 seconds)
    (83/224) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.104260764 seconds)
    (84/224) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.093204939 seconds)
    (85/224) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.21916084 seconds)
    (86/224) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.140251245 seconds)
    (87/224) benchmarking ("map", abs, BigInt, true)...
    done (took 0.168920465 seconds)
    (88/224) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.1042051 seconds)
    (89/224) benchmarking ("map", abs, BigInt, false)...
    done (took 0.101173953 seconds)
    (90/224) benchmarking ("perf_countequals", "Int64")...
    done (took 0.123161716 seconds)
    (91/224) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.197286135 seconds)
    (92/224) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.204419676 seconds)
    (93/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.120986065 seconds)
    (94/224) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.09914041 seconds)
    (95/224) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.117506258 seconds)
    (96/224) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.188954308 seconds)
    (97/224) benchmarking ("perf_countequals", "Bool")...
    done (took 0.106193809 seconds)
    (98/224) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.117708196 seconds)
    (99/224) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.0990231 seconds)
    (100/224) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.113233607 seconds)
    (101/224) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.080606499 seconds)
    (102/224) benchmarking ("map", abs, Float32, false)...
    done (took 0.078238973 seconds)
    (103/224) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.102291995 seconds)
    (104/224) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.199745616 seconds)
    (105/224) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.081666004 seconds)
    (106/224) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.144173983 seconds)
    (107/224) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.083146002 seconds)
    (108/224) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.133049413 seconds)
    (109/224) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.093027427 seconds)
    (110/224) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.117700327 seconds)
    (111/224) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.080852115 seconds)
    (112/224) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.101317646 seconds)
    (113/224) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.079842046 seconds)
    (114/224) benchmarking ("perf_sum", Int8, false)...
    done (took 0.096973727 seconds)
    (115/224) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.110956423 seconds)
    (116/224) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.192799169 seconds)
    (117/224) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.080280621 seconds)
    (118/224) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.127421178 seconds)
    (119/224) benchmarking ("map", identity, Float64, true)...
    done (took 0.088814052 seconds)
    (120/224) benchmarking ("map", identity, BigInt, true)...
    done (took 0.109592343 seconds)
    (121/224) benchmarking ("perf_sum", Int64, true)...
    done (took 0.107319205 seconds)
    (122/224) benchmarking ("perf_sum", Float32, false)...
    done (took 0.119009884 seconds)
    (123/224) benchmarking ("perf_sum", Float64, false)...
    done (took 0.095722752 seconds)
    (124/224) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.101834148 seconds)
    (125/224) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.079794478 seconds)
    (126/224) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.120875403 seconds)
    (127/224) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.151043506 seconds)
    (128/224) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.117575981 seconds)
    (129/224) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.079747656 seconds)
    (130/224) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.195864651 seconds)
    (131/224) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.15036225 seconds)
    (132/224) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.112905872 seconds)
    (133/224) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.101506604 seconds)
    (134/224) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.100207379 seconds)
    (135/224) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.100316258 seconds)
    (136/224) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.099916088 seconds)
    (137/224) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.142469792 seconds)
    (138/224) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.197445533 seconds)
    (139/224) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.09705745 seconds)
    (140/224) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.120460353 seconds)
    (141/224) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.172455025 seconds)
    (142/224) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.121347453 seconds)
    (143/224) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.095485824 seconds)
    (144/224) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.119590772 seconds)
    (145/224) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.082377079 seconds)
    (146/224) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.121474906 seconds)
    (147/224) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.081300111 seconds)
    (148/224) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.143672785 seconds)
    (149/224) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.092351408 seconds)
    (150/224) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.101762146 seconds)
    (151/224) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.096530328 seconds)
    (152/224) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.141634034 seconds)
    (153/224) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.130104969 seconds)
    (154/224) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.099352577 seconds)
    (155/224) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.129825714 seconds)
    (156/224) benchmarking ("perf_countequals", "Float64")...
    done (took 0.10627596 seconds)
    (157/224) benchmarking ("map", abs, Int8, false)...
    done (took 0.161831111 seconds)
    (158/224) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.079518085 seconds)
    (159/224) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.194308839 seconds)
    (160/224) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.101742256 seconds)
    (161/224) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.105027058 seconds)
    (162/224) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.10179168 seconds)
    (163/224) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.08124656 seconds)
    (164/224) benchmarking ("perf_sum", Int64, false)...
    done (took 0.116922341 seconds)
    (165/224) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.100877716 seconds)
    (166/224) benchmarking ("map", abs, Int64, true)...
    done (took 0.110455378 seconds)
    (167/224) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.100267731 seconds)
    (168/224) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.101455751 seconds)
    (169/224) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.099324213 seconds)
    (170/224) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.121167367 seconds)
    (171/224) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.110988495 seconds)
    (172/224) benchmarking ("map", identity, Int8, false)...
    done (took 0.158789724 seconds)
    (173/224) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.099355331 seconds)
    (174/224) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.122613632 seconds)
    (175/224) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.080298478 seconds)
    (176/224) benchmarking ("map", abs, Float64, false)...
    done (took 0.160272944 seconds)
    (177/224) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.129028004 seconds)
    (178/224) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.081097362 seconds)
    (179/224) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.120475715 seconds)
    (180/224) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.080919635 seconds)
    (181/224) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.119361236 seconds)
    (182/224) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.07991189 seconds)
    (183/224) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.079363522 seconds)
    (184/224) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.150427352 seconds)
    (185/224) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.079642318 seconds)
    (186/224) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.103538069 seconds)
    (187/224) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.092543023 seconds)
    (188/224) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.152986416 seconds)
    (189/224) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.114370634 seconds)
    (190/224) benchmarking ("map", identity, Int64, true)...
    done (took 0.14533276 seconds)
    (191/224) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.102806238 seconds)
    (192/224) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.095568906 seconds)
    (193/224) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.102018039 seconds)
    (194/224) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.095777796 seconds)
    (195/224) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.12948922 seconds)
    (196/224) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.097183371 seconds)
    (197/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.121335025 seconds)
    (198/224) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.08093501 seconds)
    (199/224) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.121113773 seconds)
    (200/224) benchmarking ("map", abs, Int8, true)...
    done (took 0.088567154 seconds)
    (201/224) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.079331394 seconds)
    (202/224) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.102323404 seconds)
    (203/224) benchmarking ("map", identity, Bool, true)...
    done (took 0.087797352 seconds)
    (204/224) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.102318415 seconds)
    (205/224) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.100356994 seconds)
    (206/224) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.114379557 seconds)
    (207/224) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.081168388 seconds)
    (208/224) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.101829371 seconds)
    (209/224) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.099372662 seconds)
    (210/224) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.101483708 seconds)
    (211/224) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.107516403 seconds)
    (212/224) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.116627705 seconds)
    (213/224) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.107818379 seconds)
    (214/224) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.119242119 seconds)
    (215/224) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.110527722 seconds)
    (216/224) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.102505699 seconds)
    (217/224) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.097065641 seconds)
    (218/224) benchmarking ("map", abs, Float64, true)...
    done (took 0.088298941 seconds)
    (219/224) benchmarking ("map", identity, Int64, false)...
    done (took 0.102489113 seconds)
    (220/224) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.112928386 seconds)
    (221/224) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.115059948 seconds)
    (222/224) benchmarking ("map", identity, Int8, true)...
    done (took 0.088150267 seconds)
    (223/224) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.115346946 seconds)
    (224/224) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.080409687 seconds)
  done (took 30.527737564 seconds)
done (took 31.384543102 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.404999149 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.132694419 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.126577926 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.103624012 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.146929785 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.108088965 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.127898831 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.106709301 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.125345193 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.094134978 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.117336074 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.126695432 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.104310537 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.143559677 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.10568329 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.11922623 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.095277593 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.127774749 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.103490657 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.129273748 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.146061379 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.098000902 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.1252842 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.095512042 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.146452613 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.096695646 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.126191137 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.103723527 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.124798785 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.094581268 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.128255749 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.11789218 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.10581478 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.129290978 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.094605009 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.118974679 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.095208204 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.109261839 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.09636981 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.119921816 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.103113267 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.11909202 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.106752866 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.119374059 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.098539857 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.117427119 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.094118001 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.128955923 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.093920855 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.127669395 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.097035241 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.132091119 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.115672756 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.094052433 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.116657073 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.096986731 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.127039151 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.095147649 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.12651339 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.095292467 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.118605396 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.095631452 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.121938619 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.094784528 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.119266402 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.097216303 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.11868521 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.097384825 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.116267865 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.098126672 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.116239608 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.096999161 seconds)
done (took 9.315505863 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.104103464 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.190085522 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.15179046 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.155008371 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.152610986 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.114082474 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.12982112 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.150288137 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.104529347 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.148520205 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.148328909 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.141372525 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.133033988 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.127738421 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.136373149 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.104211263 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.12537146 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.135966747 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.137470661 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.14673302 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.152047516 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.104708063 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.14783261 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.146014028 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.124029136 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.12537165 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.128353692 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.126336701 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.106716855 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.142168958 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.120086462 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.129762445 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.127357069 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.115473621 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.132956759 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.101988007 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.135950604 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.121597237 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.104644631 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.126573239 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.138164869 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.114695797 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.122864089 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.132878534 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.103988466 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.130052451 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.103072083 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.124218832 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.103505847 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.120795234 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.147211613 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.124590989 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.124225561 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.127124654 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.104704591 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.125446211 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.105253017 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.129686339 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.129051 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.107578418 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.125712628 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.106117893 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.131282267 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.142265709 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.10248377 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.12870979 seconds)
  done (took 9.304280397 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.118649679 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.156824443 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.134102217 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.111053034 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.129286655 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.091991368 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.115792194 seconds)
  done (took 1.7652539 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.09455088 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.146635706 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.127562241 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.150958537 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.139412077 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.131491431 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.134289106 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.093736916 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.141859779 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.127178666 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.122541914 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.172468308 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.117320038 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.106608161 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.153446096 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.116328075 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.130406143 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.117125976 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.102175565 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.150916414 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.12250449 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.117401768 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.131676416 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.095988058 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.139558407 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.096508446 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.18583014 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.129649996 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.093589087 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.124559918 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.10008051 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.211613827 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.117978098 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.127454787 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.092652993 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.146523417 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.115463128 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.124244971 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.143563363 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.099336691 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.140777143 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.101165146 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.125667419 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.123134504 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.102746868 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.133256307 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.105952482 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.126367564 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.100535324 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.147431572 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.129187181 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.117325611 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.118919981 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.099187521 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.127412613 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.101534582 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.13186652 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.099884869 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.147219837 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.124854561 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.121548885 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.144639835 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.140460007 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.121782764 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.135946752 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.117650493 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.140698692 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.123896048 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.103060481 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.125883546 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.122320994 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.121930382 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.104687985 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.134339235 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.126292685 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.1239928 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.146014712 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.099516907 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.131875153 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.099004333 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.123265567 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.094416513 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.13443089 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.098199347 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.120493697 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.135475205 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.107246067 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.122564392 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.098548718 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.141895917 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.121694038 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.10664162 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.129460679 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.098189197 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.133409567 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.146234505 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.10582546 seconds)
  done (took 12.909359339 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.096681045 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.095925512 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.125757391 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.120112131 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.097173235 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.096993934 seconds)
  done (took 1.552846604 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.126621114 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.122710484 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.111416154 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.125450071 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.163132965 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.120021968 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.144007645 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.128873884 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.116220071 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.134398289 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.11968492 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.145374648 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.150152259 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.103430954 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.143575715 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.103275926 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.143666643 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.122898498 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.111009613 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.123189457 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.11188755 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.12624817 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.100106405 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.142511288 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.103001486 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.128920756 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.125796756 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.11190978 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.134462996 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.105256648 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.126112805 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.103389788 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.127554151 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.128710999 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.121015308 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.126938081 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.098117185 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.129300253 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.10339086 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.127551435 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.145086423 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.100209642 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.132866271 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.105977058 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.129448501 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.102574003 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.128378601 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.124498554 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.121078991 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.128736663 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.105340464 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.126837619 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.102861288 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.12818673 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.103688345 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.128945864 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.12771271 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.121296546 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.126930697 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.10428098 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.124150618 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.103272609 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.128866995 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.125761339 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.103145615 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.128862699 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.10396078 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.122999101 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.100039639 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.125831693 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.105373223 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.123676274 seconds)
  done (took 9.653165556 seconds)
done (took 36.083527483 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.110624146 seconds)
  done (took 2.023949182 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.881881905 seconds)
  done (took 1.796354675 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 16.201296386 seconds)
  done (took 17.15116604 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.517474247 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.606540106 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.974868318 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.169417734 seconds)
  done (took 3.184047029 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.957794851 seconds)
  done (took 1.895478054 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.318357378 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.266826295 seconds)
  done (took 1.507379134 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.821866519 seconds)
  done (took 1.748065035 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.571659792 seconds)
  done (took 2.500376801 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.35698919 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.2032535 seconds)
  done (took 1.496934737 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.588270123 seconds)
  done (took 1.516986677 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 14.221457795 seconds)
  done (took 15.155608823 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.23613989 seconds)
  done (took 1.181091501 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.305617575 seconds)
  done (took 1.238434331 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.426700497 seconds)
  done (took 4.361362546 seconds)
done (took 57.678274731 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.10687364 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.132550576 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.110478093 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.13034492 seconds)
  done (took 1.411127271 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.110713163 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.126735027 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.107008682 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.127050997 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.112183592 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.127292783 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.102585108 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.134481246 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.103402943 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.130381636 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.127407508 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.10448204 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.128327006 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.102912143 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.12495591 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.10497795 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.130605152 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.103195768 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.128272006 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.103910785 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.127487106 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.127981558 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.106380816 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.127175783 seconds)
  done (took 3.768034712 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.107118578 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.100477617 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.126728337 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.099388382 seconds)
  done (took 1.374331903 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.111942766 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.142306296 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.11707011 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.135080793 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.141698484 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.117577659 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.12412881 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.100074914 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.126090626 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.110633618 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.124816826 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.119716635 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.142914542 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.120004403 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.113158921 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.116724911 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.09732301 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.142079773 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.1108075 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.136788793 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.099044304 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.134146939 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.1073063 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.138824328 seconds)
  done (took 3.876852473 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.176373475 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.13757253 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.148165181 seconds)
    (4/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.171538494 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.125508555 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.122767726 seconds)
    (7/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.125065509 seconds)
    (8/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.132568428 seconds)
    (9/20) benchmarking ("sum", "Int64")...
    done (took 0.127577887 seconds)
    (10/20) benchmarking ("mean", "Int64")...
    done (took 0.099360643 seconds)
    (11/20) benchmarking ("mean", "Float64")...
    done (took 0.123364943 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.155823445 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.130264224 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.125768655 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.100320444 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.129159852 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.106732689 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.129418048 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.101575342 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.138364903 seconds)
  done (took 3.551940198 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.107640651 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.124105262 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.096293617 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.123213249 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.107224586 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.126422173 seconds)
  done (took 1.631605394 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.096762059 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.094243244 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.119583526 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.094559721 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.124475788 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.095280791 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.117708577 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.095815034 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.094669309 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.121324057 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.094911202 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.117958137 seconds)
  done (took 2.209690787 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.221431232 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.121726647 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.12314371 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.100698919 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.128185871 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.099232933 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.137961994 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.098133799 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.179018497 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.124178688 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.114121211 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.1776628 seconds)
  done (took 2.568608906 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.21611363 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104916286 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.279912824 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.379102546 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165514367 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.174485413 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.279854141 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.174542543 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.193415159 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.144952345 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212563201 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163602358 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.136373729 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186285502 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.14773538 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.192788998 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181588352 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.207216511 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156278193 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.246633548 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171883264 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.174433319 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.196470959 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.133999843 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.14524043 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165047285 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.124289029 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110189159 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178802439 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177256035 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179224403 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155249336 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.145020034 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207093564 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.245222957 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.184415782 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.308467692 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13993551 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.196346919 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.199129133 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.281269569 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.147021638 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203069377 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16149146 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112747248 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.211469666 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136738233 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.210272496 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.114394697 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.147927486 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190260129 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183441038 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.188281686 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.145059875 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.30568694 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151369617 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.152438319 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.187018016 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19636874 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206179033 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176204923 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.129851758 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.193517452 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197095433 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186718332 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.151645286 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.17415401 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.131903348 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184445252 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.210849322 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183608555 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173746601 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.214826348 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114966623 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171572408 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.185523192 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160204733 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187207106 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168411958 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.127937041 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130945915 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145233071 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134556914 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.166773356 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.130230927 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.219580401 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143395073 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.295343362 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23859814 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138887143 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.16842404 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170449566 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17420255 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.154692591 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.125615501 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12704613 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.177330686 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163993622 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1385001 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.16453424 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15183742 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.107332388 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158770151 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.129407922 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164756117 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.115678746 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172403833 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170994272 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.134903739 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.170591152 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.131189579 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.165156923 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177229828 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204463318 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141992663 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138961551 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210775855 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165735018 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.11768579 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.217371332 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.202997289 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.180763137 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117844309 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174265676 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.2290984 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.123561196 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.230155375 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123622242 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.140675627 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.157837849 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165840688 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.163442576 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.136338062 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137212419 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.159065404 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208961375 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.13534523 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.11755673 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181526352 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133043458 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134008135 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125368388 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143005467 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.14843126 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.156483124 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.12059307 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161688412 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167398044 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.161509618 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165901656 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149896904 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201023757 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140009316 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.141162758 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.155331839 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.124326711 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.187798063 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201090321 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.136162444 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195030317 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.175677644 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205446791 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170300667 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137691145 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.190518057 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110117394 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.127240991 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173556808 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.167690138 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.169543041 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.198599451 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201236039 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.173087634 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.160314183 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156597181 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175294598 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.193566111 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163253333 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.153201275 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.169928402 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174024697 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.102613101 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.13185408 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.107426332 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147177418 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137474444 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.113156456 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.213220017 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171394323 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.1959896 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.167810548 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145443668 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.200122984 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.10641088 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171776977 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.179095136 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146161809 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.202755314 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198950603 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173988171 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.151029321 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178012918 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.100685158 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.135068373 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.138533968 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.174048706 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.113427591 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.141993099 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150777919 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.200380544 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183111609 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156573894 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.211456194 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174314791 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.234956655 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.103107733 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.171667397 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188290163 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165451943 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.169176868 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140393018 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.168927662 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.195802888 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151996313 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202149212 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170157733 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176103047 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207691065 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.165104654 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137491065 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.1554122 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175980737 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120323731 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.179341145 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.154839567 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142258687 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161152802 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.116958089 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.132911723 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188608262 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151425848 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187031335 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.174924463 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180887396 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.134701651 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151045674 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.144751657 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152331929 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.124556057 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177784965 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205155587 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150611918 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165609769 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191820018 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110302378 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.345323678 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.208117801 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192139822 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.145699067 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14966741 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.143077785 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.17680918 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171380709 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.190132707 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150979666 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189601844 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.166535398 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.150941822 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116143375 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.155311857 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.158313354 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.159137444 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.113986371 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.161030045 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.151183301 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191874944 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152531963 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.165987896 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172707695 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.128880228 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.163060735 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149218382 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22009257 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167865968 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185205974 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.165019237 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.184405139 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1965094 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.131869964 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109510712 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.1339783 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.192183157 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1126414 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166145834 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.191997715 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.229704822 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167856799 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178606242 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.117282462 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.131795552 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.167074369 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15514363 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205736405 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149662595 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.116296639 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.236969202 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.131353384 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.13961964 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.172653226 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.29096439 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.15197382 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191141411 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.127615555 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.283707282 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.108340149 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139375194 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.177120612 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179011331 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.111992154 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.191072194 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173362469 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152512262 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.177703315 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118335475 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.223059112 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.217033879 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178572756 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183434796 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.151332729 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.166427045 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170516878 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193660095 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150058289 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.126609148 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171142004 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201703825 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.202029761 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.14072254 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172168216 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17071598 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.166921442 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182202761 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141437762 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197640049 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111373131 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172829565 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148060873 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.130672682 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165452829 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.19078841 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114997925 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.217342134 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138183622 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141134689 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133093454 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131119154 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168527878 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151629902 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.136441475 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187555012 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.107757824 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171404546 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190576829 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138609333 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.162484491 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.126206883 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.139821986 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150316076 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124341567 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143080087 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.175626613 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201900071 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.110842764 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.221380366 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181490049 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174083812 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167214904 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.125216911 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.670250692 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.134216445 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200626332 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.128538297 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.222427022 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.129462587 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175060446 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.169448881 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157318502 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175536408 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157269195 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.227421844 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174528896 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.164687182 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112407146 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15253145 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153396307 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.111986441 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.159888349 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170712303 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148177578 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.116625991 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.164539886 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155491485 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.153338206 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.120233898 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203756519 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156916067 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189080604 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.192027117 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.147757339 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174073077 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182173829 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138010472 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.169774985 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179674642 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.149878025 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130521341 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.139056597 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.142541617 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18836103 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.106056339 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169157031 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168612538 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.169071147 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170259442 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.11456277 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169045681 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150907973 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169965104 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.107080291 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.162780086 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.167554594 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138914254 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.108693878 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.164899107 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167204558 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.166922979 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.105375404 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.179428775 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198643608 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.13224365 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114694748 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.29071409 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162653266 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200867199 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.161614408 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.143650941 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150751309 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134395997 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.162173568 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167422801 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.137582686 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112200204 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.139040288 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.189532748 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.172996297 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.163902953 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191703299 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167578516 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196582637 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.115422108 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.272545632 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.146483881 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.162439268 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.111769269 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.135537618 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147413596 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115431999 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152726159 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.200439894 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186444814 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.160000669 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.151951808 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.107221922 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.133630705 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11358073 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.179155204 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16103259 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16632883 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150391584 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.098634764 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152434768 seconds)
  done (took 80.816691427 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.174409247 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.166264267 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.169400344 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.219889155 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.195130044 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.28135702 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.227035947 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.248152341 seconds)
  done (took 2.711292781 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.109384944 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.143055168 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.148394499 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.13163152 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.131310226 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.35251517 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.14284556 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.106554953 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.191060435 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.144683458 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.129199191 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.615919148 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.106179423 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.132777371 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.120520205 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.131911447 seconds)
  done (took 3.864606165 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.13683346 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.527049515 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.771775044 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.249368736 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.230623907 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.161998476 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.71915534 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.189522296 seconds)
  done (took 12.015402953 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.137644587 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.150377674 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.266040235 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.183330477 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.168982649 seconds)
  done (took 1.942297923 seconds)
done (took 122.673047413 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.104200047 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.131137223 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.104427495 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.132704997 seconds)
  done (took 1.495731309 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.11844375 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.092262431 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.121608784 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.087862592 seconds)
  done (took 1.451315486 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.499755463 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.089048144 seconds)
  done (took 1.658896936 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.129285582 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.144453374 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.125672988 seconds)
  done (took 1.444231012 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.112301476 seconds)
  done (took 1.155160903 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.114583525 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.111207012 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.150091118 seconds)
  done (took 1.41843375 seconds)
done (took 9.658870264 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.140226992 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.439257969 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.394749794 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.146952178 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.72894013 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.388176973 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.034445677 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.161744543 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.171424213 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.099970305 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.145089156 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.678943033 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.054445244 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.344415736 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.039359861 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.436894683 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.710773982 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.101711333 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.133858316 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.100945025 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.013570757 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.098643617 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.128082251 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.1012397 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.706360002 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.403706252 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.128356444 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.480518443 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.099804283 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.130138308 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.389547302 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.125253428 seconds)
  done (took 17.285990076 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.144038491 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.187853575 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.134644052 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.102634303 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.130622936 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.101996769 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.135878865 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.113256765 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.186075729 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.1298946 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.120180079 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.127193972 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.105068176 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.12745715 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.122281472 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.126736814 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.103188179 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.129973377 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.106829175 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.12965188 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.118747816 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.126509635 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.101401919 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.129922792 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.099648652 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.141013394 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.100534841 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.138977145 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.099646093 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.134646647 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.131534973 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.101606405 seconds)
  done (took 5.0306527 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.150377204 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.196739033 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.13652024 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.135574858 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.177731136 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.128291657 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.213973931 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.136439357 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.191470727 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.129859274 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.119783453 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.127255662 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.164453945 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.101973895 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.149500315 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.100298901 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.130309957 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.103009638 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.134260253 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.10297958 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.147536593 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.099243274 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.129292691 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.101989822 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.127651045 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.114677774 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.128381303 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.138653306 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.100882819 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.131246431 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.107098772 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.126528142 seconds)
  done (took 5.33341334 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.107686093 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.134150678 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.118077038 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.145247758 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.104549405 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.13293375 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.108368007 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.129507344 seconds)
  done (took 2.02400682 seconds)
done (took 30.715010873 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.12266757 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.144405603 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.116037491 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.137381362 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.137431752 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.126416362 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.112071369 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.09927988 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.138911762 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.11628698 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.128041417 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.100961648 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.141736153 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.105273754 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.144298565 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.110267911 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.150455718 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.115799647 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.129854286 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.11034044 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.128952443 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.120525885 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.134998734 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.100792932 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.153803366 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.13530779 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.119510601 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.132520962 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.106593444 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.101830789 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.145888721 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.106220871 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.131118032 seconds)
  done (took 5.145446008 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.130084898 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.17511919 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.101804391 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.12712576 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.169327269 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.099461806 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.156020131 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.099304606 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.125815792 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.099438345 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.098183042 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.154160501 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.160695668 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.131934898 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.176551197 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.163766239 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.126049239 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.166080897 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.150326394 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.139306998 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.157836771 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.09722567 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.161790313 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.169660956 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.100911462 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.126162805 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.144239505 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.15843321 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.171228458 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.132900914 seconds)
  done (took 5.225366522 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.110266869 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.145370376 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.127878847 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.201341692 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.171171259 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.116936981 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.142783758 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.120356377 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.157852291 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.10089186 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.141386711 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.161571607 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.119918153 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.140029886 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.108116997 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.144007616 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.121802821 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.131583418 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.109841052 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.149076377 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.121159981 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.142991395 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.116559927 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.139885175 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.100959993 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.139317794 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.106778358 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.145298618 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.108904218 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.139546576 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.132213681 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.106541932 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.131204655 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.112301963 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.133056967 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.109833261 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.152322309 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.112304944 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.144239192 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.136772859 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.140311578 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.133767138 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.124335276 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.178413948 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.103003666 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.137075266 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.113287419 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.139641225 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.101233751 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.14968173 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.11709039 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.130835116 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.146701139 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.101621955 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.100309006 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.137013734 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.102962567 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.133528104 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.110809142 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.134959872 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.150210043 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.111526045 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.137422412 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.104900163 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.139014051 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.102844311 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.127928353 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.107797257 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.154426182 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.107943701 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.16337537 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.102028423 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.136245972 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.111348152 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.136717932 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.111140182 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.129360194 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.109645965 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.138157623 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.10780929 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.138761104 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.105607107 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.133479737 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.120685574 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.145748731 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.137779668 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.107886871 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.136552491 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.105818518 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.132220413 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.117035497 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.132181808 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.105440664 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.141373596 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.102584726 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.132767064 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.108609018 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.13492883 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.100933358 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.150512765 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.10721656 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.129602675 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.120677482 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.130855528 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.10573395 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.140105365 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.114895965 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.131230413 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.106818405 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.137168218 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.101795856 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.136488419 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.106065474 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.130045477 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.115342788 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.143318014 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.107464459 seconds)
  done (took 15.900530661 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.253276572 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.233725197 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.204875308 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.317711818 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.154521588 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.129597874 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.229493485 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.184336019 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.131776373 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.172454376 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.187922301 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.19428391 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.10311098 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.165633301 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.233422301 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.323256978 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.165296477 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.172437258 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.142834003 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.154032286 seconds)
  done (took 4.925548355 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.119302966 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.171366203 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.16095934 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.128821555 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.132599969 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.116149308 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.132869624 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.146961283 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.104089069 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.138333721 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.102615545 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.139610006 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.105109567 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.134946846 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.12086671 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.148940141 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.107398313 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.138745885 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.148704738 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.10823738 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.132407297 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.153080802 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.112938066 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.161159712 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.111209974 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.147817744 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.101231053 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.139493575 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.09971801 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.130551485 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.108833657 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.14709742 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.138110684 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.103890627 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.136654381 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.103231916 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.126613922 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.104582665 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.133071953 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.10661915 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.147502351 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.10570768 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.131067134 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.103834496 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.139561805 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.100215876 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.106906856 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.138283566 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.136401709 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.111626616 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.137964442 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.108216651 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.139413401 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.1148345 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.128361029 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.112769586 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.143711944 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.107802345 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.137508905 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.100789894 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.13014102 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.106624819 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.130382895 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.107750397 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.13701256 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.148427158 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.111842392 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.131827179 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.108909414 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.135691184 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.10674785 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.149672833 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.151636296 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.101480959 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.099584512 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.153564814 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.099786525 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.121142065 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.111587583 seconds)
  done (took 10.979940285 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.131124884 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.131839296 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.122783274 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.167886693 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.117795598 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.141744289 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.102934388 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.153375899 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.109507652 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.141277131 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.109742413 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.147253054 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.1592685 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.116483985 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.132248222 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.118531581 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.135873381 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.144299947 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.152230921 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.163845677 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.114758299 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.136953327 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.11730919 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.143979795 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.136253507 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.145540616 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.165867202 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.108861055 seconds)
  done (took 4.852096347 seconds)
done (took 48.073680915 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.157542039 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.352206623 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.141416544 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.140973971 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.171313004 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.159158199 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.142025993 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.334391228 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.803574577 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.129361918 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.140203818 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.144067067 seconds)
done (took 26.884970557 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.240707504 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.727565423 seconds)
    (2/2) benchmarking "String"...
    done (took 1.457154976 seconds)
  done (took 4.262612532 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.140727639 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.141593434 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.387968408 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.14179095 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.156132048 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.156780689 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.141249792 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.1441863 seconds)
  done (took 15.336207044 seconds)
done (took 25.044153173 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.212063945 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.543636273 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.460721606 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.159550253 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.15884764 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.143214932 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.130256851 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.217555781 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.142384097 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.129832405 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 2.152334253 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.479410755 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.135346428 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.610595782 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.138775645 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.1488716 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.16938893 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.531065198 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.144347204 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.186987451 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.133850051 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.130661536 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.17365259 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.188980888 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.155882324 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.153907311 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.195163952 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.130487705 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.524365288 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.151381941 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.188007373 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.147438515 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.206554763 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.146438686 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.25109926 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.162510807 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.477061748 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.134539978 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.140819142 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.1453413 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.475319627 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.532551546 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.145581521 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.140750842 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.159609875 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.21361378 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.134741519 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.858217668 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.151076507 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.13726034 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.178814605 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.566487694 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.15980265 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.149783141 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.149245374 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.529077568 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.169359093 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.220049644 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.174970962 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.158105112 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.157029372 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.14669881 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.177413842 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.149344793 seconds)
  done (took 141.037157581 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.14738412 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.15072838 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.150635374 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.165466281 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.151145077 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.151041507 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.147332655 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.148177528 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.149712555 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.172080289 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.147566973 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.149212723 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.151693557 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.108872991 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.14820374 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.172343717 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.152803385 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.148568415 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.148759865 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.147302396 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.152320177 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.151466612 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.163698647 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.147361022 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.178540885 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.236016155 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.183894764 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.164447818 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.147479602 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.147989672 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.186551381 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.164146177 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.73140479 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.005784728 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.160879413 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.161608621 seconds)
  done (took 78.16399929 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.150062767 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.150049789 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.149650244 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.179454092 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.151149034 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.69235049 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.697927418 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.938146005 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.580034583 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.453444019 seconds)
    (11/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.150714676 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.391661722 seconds)
    (13/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.150141814 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.149138594 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.242880305 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.165963058 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.151503551 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.167275537 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.177856907 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.151069261 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.150510562 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.696773198 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.166248151 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.650209978 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.320498136 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.166389224 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.180596007 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.547364249 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.151219059 seconds)
    (30/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.15064562 seconds)
    (31/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.181947024 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.48020401 seconds)
    (33/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.197817571 seconds)
    (34/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.151524168 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.470507983 seconds)
    (36/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.277599983 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.264007243 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.153462922 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.181653643 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.153796822 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.43051288 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.152880592 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.152564402 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.155126209 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.766830446 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.153172267 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.697453392 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.153442535 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.083371652 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.156050636 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.154158951 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.202588674 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.765885016 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.166805937 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.152780866 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.154182153 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.153438352 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.152989852 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.184710611 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.324695292 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.268108983 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.153284563 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.156297166 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.183479752 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.155596008 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.278872251 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.171935788 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.739036205 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.21907395 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.274017174 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.700419694 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.157263649 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.250645858 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.271812151 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.153840505 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.153776458 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.15442671 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.15311497 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.262563586 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.153924366 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.551275995 seconds)
    (82/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.154965466 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.32541407 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.171766114 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.425843535 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.250962957 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.15500112 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.50938487 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.155365329 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.155720092 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.881422112 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.250001407 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.155747796 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.15512861 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.154586821 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.557626104 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.703656832 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.367405734 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.156154093 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.721960591 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.161427122 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.562844578 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.698363419 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.793580846 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.157105818 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.267383573 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.327160881 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.172926464 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.155492748 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.430468746 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.156801564 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.217364859 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.155972485 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.55317459 seconds)
  done (took 359.906112234 seconds)
done (took 580.174480748 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.923438767 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.822011867 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.951857705 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.849205676 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.811923674 seconds)
  done (took 10.437981319 seconds)
done (took 11.515361648 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.34074991 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.343137713 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.213795918 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.342930557 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.188250808 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.359879499 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.323971681 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.177091774 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.259190525 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.234231773 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.259053477 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.208465142 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.190783914 seconds)
  done (took 17.518956256 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.414385426 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.158872594 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.238702055 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.39196427 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.199032969 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.409449896 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.443961601 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.158447036 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.286753797 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.171625822 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.170802074 seconds)
  done (took 17.12421527 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.428529276 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.159063365 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.225399485 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.399394588 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.198252189 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.404685055 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.45587624 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.158876843 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.339923733 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.171967824 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.171149175 seconds)
  done (took 17.193183405 seconds)
done (took 52.913258695 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.196914215 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.326306484 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.186929492 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.172032296 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.16890535 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.16859817 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.172760552 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.168344575 seconds)
  done (took 10.641559634 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.167645128 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.167423737 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.167621909 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.164811235 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.163983354 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.166905197 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.164402718 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.16733312 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.167073325 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.164131406 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.168259615 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.163997252 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.165158229 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.164596714 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.167977352 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.164680104 seconds)
  done (took 19.736784093 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.167663928 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.164872237 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.165127479 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.164713265 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.16347811 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.166607109 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.165301095 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.165712921 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.165938539 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.165771369 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.166690405 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.165449565 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.166126807 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.165212319 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.166290842 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.166577605 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.165719904 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.166214717 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.169979294 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.166999209 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.165950224 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.165909698 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.16672976 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.166461288 seconds)
  done (took 29.07076921 seconds)
done (took 60.526803032 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.16209735 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.174575043 seconds)
  done (took 5.418645345 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.229147856 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.232096425 seconds)
  done (took 3.546399607 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.170391005 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.170705805 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.169600662 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.170659706 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.170809106 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.169899644 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.170271393 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.169509294 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.169686203 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.170592159 seconds)
  done (took 12.786119943 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.168907542 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.170180169 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.166177062 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.170348597 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.169915974 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.166951005 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.170506179 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.170313977 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.170185416 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.167663925 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.171395515 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.167981967 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.171328598 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.167739233 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.170247264 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.16952792 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.168024507 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.168552017 seconds)
  done (took 22.129734138 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.183823967 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.191816545 seconds)
  done (took 3.460654389 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.30741338 seconds)
    (2/7) benchmarking "second"...
    done (took 1.209093509 seconds)
    (3/7) benchmarking "month"...
    done (took 1.286023724 seconds)
    (4/7) benchmarking "year"...
    done (took 1.275106701 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.210660388 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.189749986 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.210224797 seconds)
  done (took 9.774125629 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.171744463 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.361251251 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.468351091 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.742781627 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.17104766 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.176969261 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.037644128 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.176002223 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.179624861 seconds)
  done (took 13.571222527 seconds)
done (took 71.767334399 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.164322665 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.200592239 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.183433628 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.181261278 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.507405326 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.170785179 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.168970822 seconds)
done (took 15.661220443 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.161571706 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.170005135 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.167889882 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.169515705 seconds)
  done (took 9.756289735 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.171070842 seconds)
    (2/2) benchmarking "read"...
    done (took 1.516666927 seconds)
  done (took 4.775674515 seconds)
done (took 15.616490434 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.172897754 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.1701433 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.173103073 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.170377689 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.173953785 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.170673084 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.17063206 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.172981013 seconds)
    (9/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.170477068 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.174705417 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.174143107 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.174566154 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.173983402 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.171413132 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.172093439 seconds)
    (16/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.174511531 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.173599583 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.171453697 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.171976922 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.171393652 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.174081731 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.172449078 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.172110869 seconds)
    (24/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.175313367 seconds)
  done (took 29.231115195 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.175398216 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.172703172 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.176140401 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.175887101 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.171341 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.175564302 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.174821028 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.172805555 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.174884477 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.174545752 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.172246071 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.172906162 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.175062004 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.173440908 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.175025629 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.17293312 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.176152374 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.173099516 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.176186854 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.171958851 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.176467099 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.173703202 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.173412076 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.176055461 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.174087769 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.174016709 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.176638569 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.17440825 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.177310345 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.174767832 seconds)
  done (took 36.32384078 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.181497995 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.185224004 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.176939891 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.177868709 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.176879214 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.177176456 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.175532744 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.177200101 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.176697208 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.176772513 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.17775261 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.176175417 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.17656555 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.1770201 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.178014073 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.177691541 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.17839243 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.17655757 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.178013255 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.176880338 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.178729537 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.179232234 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.178264126 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.177130801 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.17866824 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.17779499 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.177781581 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.17866536 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.178944371 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.178149695 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.177977594 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.178585542 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.178609564 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.178422439 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.179645539 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.178868519 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.18465195 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.186996049 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.179001012 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.17808345 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.178353525 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.17903006 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.179603567 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.180015656 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.17904167 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.178693637 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.179637644 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.179909675 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.18000897 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.17948929 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.180297023 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.180182761 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.179810031 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.179306053 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.18008892 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.180150927 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.179210807 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.179816017 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.179986467 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.179879776 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.181280737 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.180362169 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.18020682 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.180406054 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.180714114 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.180481384 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.181586934 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.182203408 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.180537357 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.18134566 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.180289202 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.182117754 seconds)
  done (took 85.996363548 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.182358277 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.180197054 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.179512435 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.178197903 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.178976856 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.181213704 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.180038821 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.182222899 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.179407808 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.183166454 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.181322638 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.178789079 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.179144714 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.182541039 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.182426181 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.180874679 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.182461775 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.181630024 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.18252718 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.182410142 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.183151135 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.180967428 seconds)
  done (took 27.079117853 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.182369428 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.18371518 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.180062207 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.185736736 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.181408404 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.184155467 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.18255858 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.184043111 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.183832775 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.180873541 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.180217351 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.182772743 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.182939542 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.18053965 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.181561471 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.183248867 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.183796217 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.183030418 seconds)
  done (took 22.383554876 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.181888031 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.184550726 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.184539624 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.181951896 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.181526967 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.184210704 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.18215266 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.185357553 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.18418556 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.1806357 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.184288566 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.184701063 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.184769967 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.18192987 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.185360258 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.183247102 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.185871196 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.1829007 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.185716347 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.183803559 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.183588482 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.185014056 seconds)
  done (took 27.139967337 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.185427985 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.184787035 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.183812108 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.183091268 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.182835438 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.18630351 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.186814314 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.183705789 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.187000518 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.186550846 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.18478244 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.186872952 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.187203379 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.185823049 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.185260266 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.183160425 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.187566478 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.1846816 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.186079435 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.184174289 seconds)
  done (took 24.804396645 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.188388953 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.189161814 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.188456194 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.189387544 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.189630535 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.188986968 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.189415352 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.189254558 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.188036132 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.189327668 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.189129187 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.188877237 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.189257649 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.189707454 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.190113326 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.18910421 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.190093664 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.189524288 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.189921703 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.18981993 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.190769255 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.189830867 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.189504777 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.189774372 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.190091058 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.189499018 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.190102522 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.190059427 seconds)
  done (took 34.405862023 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.189257568 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.190404371 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.18646855 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.18697254 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.187241717 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.186857603 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.188548468 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.187131124 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.190232554 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.187628434 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.189568795 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.189437278 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.188782614 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.190711198 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.190987818 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.191012622 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.189685522 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.188489848 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.187690483 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.187691311 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.189870455 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.19070762 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.191939613 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.188149839 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.18716548 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.190818044 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.188434753 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.18792764 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.190792671 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.188405928 seconds)
  done (took 36.771941965 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.235205766 seconds)
    (2/2) benchmarking "in"...
    done (took 1.235584125 seconds)
  done (took 3.573693837 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.188415944 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.192041174 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.191468059 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.189130648 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.188985317 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.192925667 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.191541296 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.187730484 seconds)
  done (took 10.625889922 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.191423106 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.191472653 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.191637127 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.192702059 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.192529647 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.191068142 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.199059672 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.212097447 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.193304412 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.195255529 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.200006576 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.201016176 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.194661147 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.192003733 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.192911737 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.194705954 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.193532297 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.193274565 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.193946463 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.194367154 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.193238611 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.196513696 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.195643873 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.191869451 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.195566098 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.204137464 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.19627832 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.195451155 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.193597559 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.197012563 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.194326661 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.192508485 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.19475468 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.19422163 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.195540911 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.194476377 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.203514713 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.215816932 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.201211726 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.195618551 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.198630673 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.202738903 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.197658513 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.194853631 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.196242283 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.195277607 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.195772867 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.192864716 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.19533659 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.19875002 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.201091588 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.196375772 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.192761943 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.198779211 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.196204568 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.201666954 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.215034382 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.198915983 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.205329509 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.205549739 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.21060438 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.220325396 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.197433362 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.196641106 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.207519926 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.221288293 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.202416109 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.211954355 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.19418831 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.198219155 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.204281148 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.211828422 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.223328176 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.1985734 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.199218868 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.200727846 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.200105137 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.199965434 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.206015923 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.221016634 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.19909528 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.199291794 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.211146312 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.223058485 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.200754414 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.197469699 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.198756909 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.198822652 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.199525362 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.208168115 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.21702044 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.199479881 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.19783702 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.198730982 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.201155562 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.200081159 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.196789965 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.199016835 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.196271855 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.199754643 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.198374492 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.203738359 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.207871885 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.198110228 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.19945234 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.205033147 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.199136655 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.198740236 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.204039697 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.199513776 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.20020528 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.202556606 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.20634126 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.196894167 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.204210489 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.210080681 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.200243002 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.202141959 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.199715306 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.201739275 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.212008122 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.233940394 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.200721313 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.200580925 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.205212736 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.21262234 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.202601098 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.203717089 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.20107422 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.198522455 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.197213051 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.20146949 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.201259972 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.202055153 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.202348634 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.2025598 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.199782671 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.202049285 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.201682196 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.201188069 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.202278904 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.201065761 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.201633294 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.203519652 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.201746735 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.202764257 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.207233822 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.201964765 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.204283414 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.202602914 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.199496335 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.203761233 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.202704598 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.202816804 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.201400981 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.202860929 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.202768456 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.202801612 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.203571883 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.2030089 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.202903454 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.204335808 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.207076558 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.203987609 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.20550391 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.203170469 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.201482372 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.203446997 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.204305768 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.202947749 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.202986144 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.203759765 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.208588228 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.212102136 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.204835369 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.204100333 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.206693615 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.203663949 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.204009849 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.204166544 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.208853015 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.213030674 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.204417268 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.210821458 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.204921847 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.205443112 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.206600592 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.204896538 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.204434061 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.205277336 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.209956964 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.214284797 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.217287949 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.230698461 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.206189765 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.21009536 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.206501298 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.208647654 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.208479656 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.205636052 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.207219925 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.206206875 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.205837874 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.205103698 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.206649233 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.205671703 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.205070302 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.205962756 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.207169667 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.206298474 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.207213104 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.205833045 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.20717562 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.204048851 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.207094054 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.206379747 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.206902506 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.204083314 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.206371385 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.206608857 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.208809449 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.207663123 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.212176999 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.20636987 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.210113601 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.207917902 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.206862569 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.207049799 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.208862032 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.20868484 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.208225985 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.214361972 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.226079504 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.208029631 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.216040642 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.225392088 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.208062025 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.210647843 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.209298117 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.205842321 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.21246464 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.218093341 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.209885915 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.209706728 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.209597695 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.208966898 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.209634236 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.216495465 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.206698301 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.208421674 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.20963198 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.210373814 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.207072831 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.209567927 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.210116076 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.209662997 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.211492682 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.210034661 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.210411562 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.210043208 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.209867358 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.212819635 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.212947476 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.217406484 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.222338775 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.219305566 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.216638494 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.217067461 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.211400835 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.214949722 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.210883115 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.210850657 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.210818759 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.222839811 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.237831368 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.217071037 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.229816362 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.212111407 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.216451675 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.23036187 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.214716675 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.211850853 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.212048622 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.210902907 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.212521175 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.208661488 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.212546952 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.212647767 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.212017602 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.21572478 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.217679346 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.213418369 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.212479638 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.212355959 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.213286699 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.212146565 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.21172651 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.21320532 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.214643337 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.21384565 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.211307647 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.211188217 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.218448509 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.231167329 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.212788773 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.213140922 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.213407118 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.212111248 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.212987531 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.214652463 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.217919612 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.223016379 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.21789803 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.222424333 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.216237329 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.222852346 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.213158369 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.217085615 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.222297013 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.212039529 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.212698757 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.213609006 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.214530407 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.220918001 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.232038099 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.216698591 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.219440204 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.214655596 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.215085556 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.214621069 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.213918409 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.215225944 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.214579587 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.221825938 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.236000869 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.21887958 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.216415802 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.213161454 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.215266912 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.216794237 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.213918405 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.217009933 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.215317313 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.217089111 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.215393615 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.215448153 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.216283079 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.215858096 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.216871265 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.213976947 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.216381858 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.22256361 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.236748872 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.22100416 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.216069316 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.222532285 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.215768841 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.223522159 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.236108222 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.218040236 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.216803608 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.217666092 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.218726309 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.216343674 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.217770163 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.217192334 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.219905082 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.223059661 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.218465497 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.217973579 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.217761279 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.217926929 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.21722273 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.228084294 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.243768702 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.218992292 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.222751053 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.215260633 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.219648244 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.222190671 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.219224108 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.216756426 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.221560803 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.229675098 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.228611486 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.219350997 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.21901406 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.220236192 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.218700789 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.218823211 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.219552638 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.219801208 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.72207233 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.217605832 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.219727778 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.220536262 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.219815207 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.220072912 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.22044925 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.219752526 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.229603989 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.22049358 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.219607094 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.218676912 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.221682208 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.219386886 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.219324719 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.219695486 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.220458367 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.219883647 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.221724119 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.228624593 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.227645754 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.221530267 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.219840004 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.221552896 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.220131386 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.220587074 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.221330625 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.221229408 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.220624935 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.221561118 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.220953347 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.221590288 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.219722102 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.221725125 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.220848198 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.221660751 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.223676328 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.229238094 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.220199253 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.218499514 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.221081482 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.221300032 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.22051796 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.220389211 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.227796885 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.224326662 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.23547641 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.231137351 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.227394018 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.221810882 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.2249014 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.230655805 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.220429235 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.223598594 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.221630951 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.222683775 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.222629895 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.226275225 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.223400317 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.227643863 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.222663452 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.221655002 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.229579587 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.244065688 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.222662756 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.22490356 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.227132624 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.22298545 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.22041325 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.224111587 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.222782644 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.228775855 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.242576921 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.224227441 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.224653528 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.222583465 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.225149533 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.229328771 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.224152959 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.223749921 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.221152856 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.223754905 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.224339389 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.224025524 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.220745584 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.224425108 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.224345083 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.227542773 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.231972728 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.222715174 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.2263708 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.223453445 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.22533914 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.224188938 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.22575754 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.222576119 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.221611622 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.223365222 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.224461018 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.225499533 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.227559184 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.22435276 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.226479482 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.23030832 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.22637958 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.229617589 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.23714238 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.234197291 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.223342502 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.225265223 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.225008311 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.227878863 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.225932446 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.226548349 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.226010877 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.227387283 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.225562663 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.22645856 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.227351679 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.230416363 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.243357619 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.247855185 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.225576847 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.225724327 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.229708655 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.228402869 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.225071251 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.228577901 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.228454065 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.230632919 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.234392587 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.228197255 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.233508383 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.246166638 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.229374754 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.233267273 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.230491331 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.236739129 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.230036163 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.227334549 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.228148672 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.233741997 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.245363278 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.228727746 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.237565516 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.259056338 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.247141248 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.229634664 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.22843517 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.228284829 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.228061699 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.228770792 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.228588694 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.228807211 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.229356497 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.228809332 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.231705059 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.234012214 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.230269677 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.22998028 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.228416126 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.227013145 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.22855894 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.226432309 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.228740137 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.229574825 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.227990387 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.22996163 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.22911899 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.22948863 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.240671314 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.256087397 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.230118406 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.230075923 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.226884948 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.232278313 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.233521681 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.241829088 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.239520987 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.23018291 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.231239934 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.23129723 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.230692414 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.229844344 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.230323092 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.229886891 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.231353604 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.227729392 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.243064239 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.255530654 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.233099195 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.230378514 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.230419288 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.231395754 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.231566966 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.231473763 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.232901164 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.232795768 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.235664631 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.236285638 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.232784245 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.231922965 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.235451787 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.240479424 seconds)
  done (took 725.849433847 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.229937195 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.229153838 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.229753885 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.229837111 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.230656578 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.230249659 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.231113665 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.230370576 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.231036716 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.230563151 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.230523972 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.229929494 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.230762842 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.230080602 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.230462445 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.230626852 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.22988667 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.229841013 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.230760213 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.229192968 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.230882671 seconds)
  done (took 26.975654868 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.233779836 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.231584963 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.231466433 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.233910284 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.231697799 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.233797074 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.23199223 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.234042161 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.233555312 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.23084661 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.233368437 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.232773313 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.231888266 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.23237335 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.232964652 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.233900797 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.234437132 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.232124759 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.234672876 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.233479362 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.234106426 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.232070527 seconds)
  done (took 28.266263299 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.235040566 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.235991319 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.234270589 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.23206745 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.23618789 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.231795044 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.235318489 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.23654947 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.235848919 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.235181203 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.236088136 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.236294506 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.243363066 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.242271291 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.237276689 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.235378114 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.236414579 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.23601424 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.237142874 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.232817213 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.241111649 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.253078533 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.234375327 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.234923231 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.237168666 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.237291434 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.236404647 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.236672522 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.236828752 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.241571457 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.237842993 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.237003011 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.238715013 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.235772233 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.237701919 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.242715234 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.237726256 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.234684511 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.238658496 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.248523089 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.261532383 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.23706264 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.244366192 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.256963675 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.237568207 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.241655917 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.247536715 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.236612931 seconds)
  done (took 60.60700019 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.83854824 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.850786252 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.852005486 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.854541006 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.855574322 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.853738132 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.857885849 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.857528507 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.849438898 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.850906728 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.852052444 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.848552134 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.851302451 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.850243567 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.852303967 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.849410539 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.848595853 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.850734145 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.857562428 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.856042909 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.85169541 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.854572913 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.849638121 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.852242965 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.852610511 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.850267514 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.850845223 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.852948355 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.85089934 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.851624796 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.852907252 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.859047843 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.859619793 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.847360301 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.84964436 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.850402282 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.85661347 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.85136802 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.85406606 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.852818812 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.856562039 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.851843538 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.85593223 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.857474657 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.868392394 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.853154561 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.851936654 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.850766516 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.855528074 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.85375633 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.861359663 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.854860253 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.853297369 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.85425864 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.856119083 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.860435043 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.860584405 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.860603794 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.857660992 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.857108053 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.85254956 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.857207879 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.860161777 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.858274044 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.857693929 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.859784884 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.860453553 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.85762843 seconds)
  done (took 127.232636714 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.242115935 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.244073734 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.243129717 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.243541435 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.244114152 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.243977468 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.244133099 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.244507674 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.244435864 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.244983787 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.2434398 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.244533195 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.241985336 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.245874469 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.244302112 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.244730318 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.244123812 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.244487765 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.245543213 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.244900432 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.244686832 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.245162321 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.245195755 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.244419497 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.245089017 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.244822049 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.245803862 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.244544153 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.246347774 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.246151775 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.246304992 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.24544729 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.246854091 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.244869633 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.246161772 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.245466841 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.244948512 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.24736229 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.246699298 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.245206071 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.246700315 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.246542453 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.247058189 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.246224076 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.24647514 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.247369497 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.247723884 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.248974461 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.247547877 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.247266199 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.247402388 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.247412247 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.247418365 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.246440158 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.246894938 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.248110215 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.247472622 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.248086363 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.247751057 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.248166318 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.247695631 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.24859189 seconds)
  done (took 78.389312337 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.248319113 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.248751109 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.245081549 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.24583442 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.248308975 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.245024291 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.249348319 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.248445148 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.249160094 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.248183778 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.249445599 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.247234756 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.24757989 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.249722642 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.246870005 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.248337123 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.246183779 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.246867035 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.249306229 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.2477095 seconds)
  done (took 26.110240767 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.24714263 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.250240792 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.24807305 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.246840176 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.249207104 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.246658739 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.249242008 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.249150734 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.247384116 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.250266096 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.249908111 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.250271719 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.246154963 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.247431148 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.249672925 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.247895471 seconds)
  done (took 21.131474623 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.248686541 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.249115627 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.24957481 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.249770109 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.24837962 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.249933798 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.249929451 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.248502805 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.248162591 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.25099301 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.25018946 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.250654504 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.250444508 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.251654583 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.249004226 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.250526841 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.249102159 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.249136728 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.251744289 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.252423981 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.24889013 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.249343419 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.252288364 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.253076993 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.249315398 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.250683046 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.250157086 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.249184028 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.249926122 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.25166118 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.250055299 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.251084405 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.2512023 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.250981259 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.25207107 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.251546274 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.253218948 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.25464379 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.253582911 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.253010074 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.253238033 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.250569843 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.253123755 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.253741616 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.250165489 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.253278263 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.251416479 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.251446926 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.250165765 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.252018025 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.254856658 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.252706824 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.252262455 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.253337744 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.254454779 seconds)
  done (took 69.969027656 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.255038682 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.253986881 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.252353764 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.255174139 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.254259131 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.25300592 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.255137945 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.254551823 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.251193673 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.254465587 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.252781765 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.255994869 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.253470475 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.255065061 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.255070103 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.257803055 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.253170094 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.252546662 seconds)
  done (took 23.734354656 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.253755079 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.253699539 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.256979785 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.252896149 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.253674871 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.259919684 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.254877706 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.258023318 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.258053499 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.258023444 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.257779757 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.25952999 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.261297755 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.256629875 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.256494771 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.254812534 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.256458299 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.255878662 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.253880445 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.253021846 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.25739788 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.255893257 seconds)
  done (took 28.800546378 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.255654903 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.256414632 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.255880543 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.276050264 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.282558483 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.25931529 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.25659106 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.25527353 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.280553739 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.314032384 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.307933425 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.279891278 seconds)
  done (took 16.440897449 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.25544993 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.257278981 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.254218733 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.258388315 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.258679737 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.254252108 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.255804129 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.255317531 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.258011444 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.256141522 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.254608612 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.259512367 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.257477135 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.256633181 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.260633281 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.257925898 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.256465093 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.256986048 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.256123664 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.257421895 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.2556304 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.258639153 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.256516549 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.256472884 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.25611546 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.257803819 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.259173627 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.256552571 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.255685475 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.258817443 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.258826615 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.255997081 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.259517003 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.256503552 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.259413614 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.259797766 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.256744585 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.260000319 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.25998523 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.257146081 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.259774199 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.259575701 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.259655743 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.258076801 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.260689047 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.256942081 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.258498071 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.257882321 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.258498695 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.260641359 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.259660087 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.259347225 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.260979629 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.260670522 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.260423645 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.261427563 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.258255576 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.258696315 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.261750728 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.258651787 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.258493166 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.260674988 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.258925746 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.257957705 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.262631831 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.258146744 seconds)
  done (took 84.205452177 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.260200676 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.258757354 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.2620791 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.261019095 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.259553754 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.260729136 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.26008958 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.260040304 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.259184165 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.262159996 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.263798389 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.260436891 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.26073574 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.259393859 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.260727545 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.259701096 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.261554749 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.261140113 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.259232521 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.263539775 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.26023977 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.260931108 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.261548475 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.262090062 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.261935664 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.26267672 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.260480977 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.261124463 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.261548899 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.261269238 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.260981471 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.259794641 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.261862476 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.261296598 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.262239966 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.261137817 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.260567979 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.262327798 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.26134965 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.263578711 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.262634387 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.265162954 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.261089086 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.26165117 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.262249261 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.262640458 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.262920523 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.262364443 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.263757524 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.263035874 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.262756453 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.264107401 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.262769951 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.262765627 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.262323028 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.262939898 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.262369334 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.262536427 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.263060139 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.265433395 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.26348543 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.264209502 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.2667756 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.264386731 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.263589636 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.263526477 seconds)
  done (took 84.456416545 seconds)
done (took 1741.58911103 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.430406085 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.382792691 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.265740455 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.277135908 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.264845536 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.288400341 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.273041126 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.264669279 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.264895734 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.264544599 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.264455616 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.453508148 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.259985541 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.26562252 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.26468297 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.362709333 seconds)
  done (took 26.018568883 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.294576089 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.272584487 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.386205297 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.286826644 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.294564144 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.460340603 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.326394256 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.2696179 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.446162871 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.313259608 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.261344956 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.294072204 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.271892939 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.260720345 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.288171359 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.462410075 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.528152275 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.264849682 seconds)
  done (took 28.153840282 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.74194643 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.280991505 seconds)
  done (took 5.193820877 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.290815577 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.270708125 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.270803201 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.269428893 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.262516107 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.262623685 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.268474732 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.282445666 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.264013208 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.403167275 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.278206169 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.28315819 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.291798705 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.272057499 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.271823858 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.312058703 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.432151163 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.270250537 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.267858293 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.277680853 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.271807285 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.384705864 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.31550034 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.270730469 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.401255416 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.271192351 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.278200782 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.278987907 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.42717873 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.271502451 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.270958029 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.272698524 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.273652022 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.217587482 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.823412605 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.266116919 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.298372097 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.282250794 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.270011356 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.446513884 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.274162215 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.280152652 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.265043369 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.828556004 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.412737979 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.396461242 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.287955195 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.277653762 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.273694475 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.340694201 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.273653824 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.274890185 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.318849796 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.117595199 seconds)
  done (took 82.197356149 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.278014716 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.267308063 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.44749204 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.287365525 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.264651777 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.265119707 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.267425454 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.562180313 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.309055049 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.267162428 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.610679046 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.854583854 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.297278405 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.313694006 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.117771212 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.329115702 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.265946844 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.283957255 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.267551555 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.273348187 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.838691382 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.285427691 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.272334663 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.436054271 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.306196329 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.794738397 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.266879239 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.271272493 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.287138769 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.268204004 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.80109348 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.297076622 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.328489228 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.267858347 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.546311081 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.660336202 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.621061675 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.271952387 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.304603493 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.269635751 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.279945497 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.779752176 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.637728012 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.269455913 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.268499822 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.792439025 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.268957871 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.280306296 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.276631152 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.52006393 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.269403468 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.272009509 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.287315476 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.274083591 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.268066526 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.349560927 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.343101088 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.796727826 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.268853128 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.26983267 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.316172622 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.271312704 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.275006671 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.273098974 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.274898994 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.640795447 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.423887426 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.27109322 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.640187077 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.79772951 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.287200712 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.871860801 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.287563705 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.288874063 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.487960639 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.270269776 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.287076126 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.807487048 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.306082583 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.271110439 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.62278141 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.271523179 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.603716444 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.291241671 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.272389289 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.837194448 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.276631564 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.279654762 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.271665029 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.283180657 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.272462479 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.272965451 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.55672726 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.32234341 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.272908965 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.273841038 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.280002757 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.271764184 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.272277235 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.275444315 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.868342832 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.296652942 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.27158939 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.274426 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.272805302 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.275465072 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.275285248 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.276857471 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.539607108 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.276494402 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.276270437 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.275124416 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.272536413 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.279568702 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.441856728 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.277621438 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.594303911 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.273383439 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.277909802 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.279964828 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.276139838 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.328479331 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.274063955 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.282819433 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.168787407 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.571919586 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.294286162 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.275561363 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.275595722 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.279401862 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.277246668 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.275917733 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.308799624 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.276415833 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.050841063 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.295432957 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.280400475 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.273296908 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.280755445 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.275511317 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.281508105 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.277029844 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.570249832 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.554824027 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.426849451 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.274265894 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.276816825 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.060447577 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.347129697 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.457171406 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.297144166 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.276680957 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.526961213 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.510766936 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.277299515 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.274885521 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.276030729 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.535938949 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.276316604 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.599068115 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.834949674 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.293760442 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.284682426 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.055831484 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.983490976 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.278651132 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.282581126 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.616444147 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.295718494 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.276440847 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.2771559 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.27819209 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.292755138 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.282912571 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.283398206 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.277341821 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.277485643 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.322274752 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.470397481 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.29591715 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.277306153 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.799135252 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.28667876 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.277599861 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.282151034 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.280226771 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.277033157 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.340645494 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.278730236 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.306895984 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.278475806 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.288938822 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.853260129 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.278034415 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.280171178 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.471112641 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.989280819 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.29848814 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.279790048 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.298205378 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.175837913 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.827949602 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.339329241 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.601920561 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.286426085 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.318939903 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.277742228 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.348288892 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.828347603 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.283846135 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.295436513 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.958375173 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.302286226 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.793961256 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.280522683 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.278985237 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.910544711 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.301488829 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.280913735 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.285047156 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.282119611 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.618940208 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.28159193 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.323307988 seconds)
  done (took 485.954355131 seconds)
done (took 628.684573033 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.286605976 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.284857354 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.270741755 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.288667378 seconds)
  done (took 10.321225404 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.292456877 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.29018311 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.292255001 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.290607908 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.292391483 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.290605104 seconds)
  done (took 8.94379633 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.284309906 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.289819632 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.28849432 seconds)
  done (took 8.056070181 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.505297179 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.311542928 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.630770915 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.306999735 seconds)
  done (took 8.949615628 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.295081678 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.293921185 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.29494218 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.294165112 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.295041383 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.295572165 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.295431786 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.293926714 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.294743398 seconds)
  done (took 12.846139088 seconds)
done (took 50.304770925 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/224) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.298443952 seconds)
    (2/224) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.366254702 seconds)
    (3/224) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.302757643 seconds)
    (4/224) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.330637976 seconds)
    (5/224) benchmarking ("map", *, Int64, (false, true))...
    done (took 1.468322861 seconds)
    (6/224) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.356588327 seconds)
    (7/224) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.288590694 seconds)
    (8/224) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.302823899 seconds)
    (9/224) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.300234007 seconds)
    (10/224) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.109493426 seconds)
    (11/224) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.338932727 seconds)
    (12/224) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.364272171 seconds)
    (13/224) benchmarking ("map", identity, Bool, false)...
    done (took 1.306531299 seconds)
    (14/224) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.941157311 seconds)
    (15/224) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.356159888 seconds)
    (16/224) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.303718514 seconds)
    (17/224) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.36575679 seconds)
    (18/224) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.327899183 seconds)
    (19/224) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.301847643 seconds)
    (20/224) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 1.476532165 seconds)
    (21/224) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 1.668852477 seconds)
    (22/224) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.398141553 seconds)
    (23/224) benchmarking ("map", *, Float64, (false, true))...
    done (took 1.4695558 seconds)
    (24/224) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.456438492 seconds)
    (25/224) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.335488969 seconds)
    (26/224) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.292171052 seconds)
    (27/224) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 1.392001823 seconds)
    (28/224) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.370983815 seconds)
    (29/224) benchmarking ("map", abs, Float32, true)...
    done (took 1.385950119 seconds)
    (30/224) benchmarking ("perf_sum", Bool, true)...
    done (took 1.296097698 seconds)
    (31/224) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.273590425 seconds)
    (32/224) benchmarking ("map", *, Int64, (false, false))...
    done (took 1.431062763 seconds)
    (33/224) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.390581176 seconds)
    (34/224) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.415913835 seconds)
    (35/224) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.290823587 seconds)
    (36/224) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.441718156 seconds)
    (37/224) benchmarking ("map", identity, Float32, false)...
    done (took 1.362026217 seconds)
    (38/224) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.296504613 seconds)
    (39/224) benchmarking ("map", identity, Float32, true)...
    done (took 1.394501759 seconds)
    (40/224) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.300446418 seconds)
    (41/224) benchmarking ("map", abs, Int64, false)...
    done (took 1.362150567 seconds)
    (42/224) benchmarking ("perf_sum", Float32, true)...
    done (took 1.318190686 seconds)
    (43/224) benchmarking ("perf_sum", Float64, true)...
    done (took 1.298532435 seconds)
    (44/224) benchmarking ("perf_countequals", "Int8")...
    done (took 1.319188036 seconds)
    (45/224) benchmarking ("map", identity, BigInt, false)...
    done (took 1.373020811 seconds)
    (46/224) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.342531679 seconds)
    (47/224) benchmarking ("perf_sum", Bool, false)...
    done (took 1.302563705 seconds)
    (48/224) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 2.288724423 seconds)
    (49/224) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 1.99435308 seconds)
    (50/224) benchmarking ("map", abs, Bool, true)...
    done (took 1.341897813 seconds)
    (51/224) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.306031271 seconds)
    (52/224) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.302825902 seconds)
    (53/224) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.327308379 seconds)
    (54/224) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.94963917 seconds)
    (55/224) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 1.498685053 seconds)
    (56/224) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.379554762 seconds)
    (57/224) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.337961218 seconds)
    (58/224) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.367947871 seconds)
    (59/224) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.167315749 seconds)
    (60/224) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 1.521858577 seconds)
    (61/224) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.552817385 seconds)
    (62/224) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.379005502 seconds)
    (63/224) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.2885701 seconds)
    (64/224) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.950344265 seconds)
    (65/224) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 1.480437734 seconds)
    (66/224) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.28894323 seconds)
    (67/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.45765321 seconds)
    (68/224) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.479564499 seconds)
    (69/224) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.992596221 seconds)
    (70/224) benchmarking ("perf_sum", Int8, true)...
    done (took 1.300625459 seconds)
    (71/224) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.18075639 seconds)
    (72/224) benchmarking ("map", *, Float64, (true, true))...
    done (took 1.494335962 seconds)
    (73/224) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 1.431269424 seconds)
    (74/224) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.326990431 seconds)
    (75/224) benchmarking ("map", abs, Bool, false)...
    done (took 1.311170897 seconds)
    (76/224) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.340964523 seconds)
    (77/224) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.365708893 seconds)
    (78/224) benchmarking ("perf_countequals", "Float32")...
    done (took 1.314929762 seconds)
    (79/224) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.284816974 seconds)
    (80/224) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 1.50613586 seconds)
    (81/224) benchmarking ("map", identity, Float64, false)...
    done (took 1.361645848 seconds)
    (82/224) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.278461318 seconds)
    (83/224) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 1.606751557 seconds)
    (84/224) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.371956035 seconds)
    (85/224) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.936944297 seconds)
    (86/224) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 2.356557443 seconds)
    (87/224) benchmarking ("map", abs, BigInt, true)...
    done (took 2.36066038 seconds)
    (88/224) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.396094381 seconds)
    (89/224) benchmarking ("map", abs, BigInt, false)...
    done (took 2.309587704 seconds)
    (90/224) benchmarking ("perf_countequals", "Int64")...
    done (took 1.337176886 seconds)
    (91/224) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.286867164 seconds)
    (92/224) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.046109531 seconds)
    (93/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.482538012 seconds)
    (94/224) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.385149571 seconds)
    (95/224) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.278955395 seconds)
    (96/224) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.287761314 seconds)
    (97/224) benchmarking ("perf_countequals", "Bool")...
    done (took 1.319799504 seconds)
    (98/224) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.278097783 seconds)
    (99/224) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.346923908 seconds)
    (100/224) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.378201423 seconds)
    (101/224) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.287990828 seconds)
    (102/224) benchmarking ("map", abs, Float32, false)...
    done (took 1.34710629 seconds)
    (103/224) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.363890754 seconds)
    (104/224) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.502918469 seconds)
    (105/224) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.943606883 seconds)
    (106/224) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 1.399866613 seconds)
    (107/224) benchmarking ("map", *, Int64, (true, true))...
    done (took 1.479866446 seconds)
    (108/224) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 1.516439445 seconds)
    (109/224) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.387527384 seconds)
    (110/224) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.308795643 seconds)
    (111/224) benchmarking ("map", *, Float64, (false, false))...
    done (took 1.391121437 seconds)
    (112/224) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.959948482 seconds)
    (113/224) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.44127385 seconds)
    (114/224) benchmarking ("perf_sum", Int8, false)...
    done (took 1.320668821 seconds)
    (115/224) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.449536489 seconds)
    (116/224) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.950891287 seconds)
    (117/224) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.488720784 seconds)
    (118/224) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.324330227 seconds)
    (119/224) benchmarking ("map", identity, Float64, true)...
    done (took 1.446916688 seconds)
    (120/224) benchmarking ("map", identity, BigInt, true)...
    done (took 1.452414547 seconds)
    (121/224) benchmarking ("perf_sum", Int64, true)...
    done (took 1.303726746 seconds)
    (122/224) benchmarking ("perf_sum", Float32, false)...
    done (took 1.304544973 seconds)
    (123/224) benchmarking ("perf_sum", Float64, false)...
    done (took 1.303414451 seconds)
    (124/224) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.375537768 seconds)
    (125/224) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.160958304 seconds)
    (126/224) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.316019241 seconds)
    (127/224) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.281713721 seconds)
    (128/224) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.305972934 seconds)
    (129/224) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.944959316 seconds)
    (130/224) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.447936502 seconds)
    (131/224) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.337041167 seconds)
    (132/224) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 1.500164858 seconds)
    (133/224) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.044824503 seconds)
    (134/224) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.427747698 seconds)
    (135/224) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.417157802 seconds)
    (136/224) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 1.64819062 seconds)
    (137/224) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 2.324549439 seconds)
    (138/224) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.423338881 seconds)
    (139/224) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.326527406 seconds)
    (140/224) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.351981176 seconds)
    (141/224) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.000437525 seconds)
    (142/224) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.386731711 seconds)
    (143/224) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.311195962 seconds)
    (144/224) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.310084044 seconds)
    (145/224) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.057141514 seconds)
    (146/224) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.470998156 seconds)
    (147/224) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.387806284 seconds)
    (148/224) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 2.365193742 seconds)
    (149/224) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.447184059 seconds)
    (150/224) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.05900923 seconds)
    (151/224) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.333317614 seconds)
    (152/224) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.320464208 seconds)
    (153/224) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.397275132 seconds)
    (154/224) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.407819341 seconds)
    (155/224) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.390622927 seconds)
    (156/224) benchmarking ("perf_countequals", "Float64")...
    done (took 1.321339469 seconds)
    (157/224) benchmarking ("map", abs, Int8, false)...
    done (took 1.318936588 seconds)
    (158/224) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.381001031 seconds)
    (159/224) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.43013013 seconds)
    (160/224) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.062194968 seconds)
    (161/224) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.330755751 seconds)
    (162/224) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.123853518 seconds)
    (163/224) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.283845005 seconds)
    (164/224) benchmarking ("perf_sum", Int64, false)...
    done (took 1.326438639 seconds)
    (165/224) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.380145461 seconds)
    (166/224) benchmarking ("map", abs, Int64, true)...
    done (took 1.451547917 seconds)
    (167/224) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.331565016 seconds)
    (168/224) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.44552842 seconds)
    (169/224) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.387246478 seconds)
    (170/224) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.400438395 seconds)
    (171/224) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.31583135 seconds)
    (172/224) benchmarking ("map", identity, Int8, false)...
    done (took 1.316960098 seconds)
    (173/224) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.327310124 seconds)
    (174/224) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.405331766 seconds)
    (175/224) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.287478931 seconds)
    (176/224) benchmarking ("map", abs, Float64, false)...
    done (took 1.368828692 seconds)
    (177/224) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.356846012 seconds)
    (178/224) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.18791036 seconds)
    (179/224) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.379918821 seconds)
    (180/224) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.528620775 seconds)
    (181/224) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.30360702 seconds)
    (182/224) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.284404241 seconds)
    (183/224) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.448818501 seconds)
    (184/224) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.377791028 seconds)
    (185/224) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.287828093 seconds)
    (186/224) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.409633035 seconds)
    (187/224) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.338715669 seconds)
    (188/224) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.32481654 seconds)
    (189/224) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.376424308 seconds)
    (190/224) benchmarking ("map", identity, Int64, true)...
    done (took 1.451849143 seconds)
    (191/224) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.439455599 seconds)
    (192/224) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.311996324 seconds)
    (193/224) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.403448114 seconds)
    (194/224) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.332860452 seconds)
    (195/224) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.336597249 seconds)
    (196/224) benchmarking ("map", *, Float32, (true, true))...
    done (took 1.435339165 seconds)
    (197/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.467181741 seconds)
    (198/224) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.012573298 seconds)
    (199/224) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.319944964 seconds)
    (200/224) benchmarking ("map", abs, Int8, true)...
    done (took 1.348407017 seconds)
    (201/224) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.062508883 seconds)
    (202/224) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.404712539 seconds)
    (203/224) benchmarking ("map", identity, Bool, true)...
    done (took 1.35132976 seconds)
    (204/224) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 1.653533201 seconds)
    (205/224) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.34757208 seconds)
    (206/224) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.341303351 seconds)
    (207/224) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.065192541 seconds)
    (208/224) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.079855767 seconds)
    (209/224) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.377473356 seconds)
    (210/224) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.412788581 seconds)
    (211/224) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 1.512840244 seconds)
    (212/224) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.31162912 seconds)
    (213/224) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.485267107 seconds)
    (214/224) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.324277447 seconds)
    (215/224) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 1.520135436 seconds)
    (216/224) benchmarking ("map", *, Float32, (false, true))...
    done (took 1.436303429 seconds)
    (217/224) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.316338727 seconds)
    (218/224) benchmarking ("map", abs, Float64, true)...
    done (took 1.455743003 seconds)
    (219/224) benchmarking ("map", identity, Int64, false)...
    done (took 1.377465435 seconds)
    (220/224) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 1.45888155 seconds)
    (221/224) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.415715438 seconds)
    (222/224) benchmarking ("map", identity, Int8, true)...
    done (took 1.348717624 seconds)
    (223/224) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.362313764 seconds)
    (224/224) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.416696823 seconds)
  done (took 360.578658731 seconds)
done (took 361.771166569 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.355944291 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.486057383 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.327295199 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.328044129 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.353017553 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.302887162 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.350030677 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.316743863 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.313066787 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.312650667 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.30360147 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.319745628 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.331178611 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.343612432 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.423662429 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.316518509 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.327987539 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.312077408 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.350313751 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.370366523 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.354389069 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.356213338 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.322714839 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.330619235 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.359662324 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.357040137 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.332207898 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.313029675 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.313958655 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.352201201 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.302253538 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.336591896 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.361481485 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.362272137 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.355459669 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.314538949 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.354229664 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.48841422 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.347283599 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.347343249 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.314249743 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.362325674 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.330892564 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.327512941 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.362942756 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.326480922 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.358570397 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.436040362 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.30920184 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.303069261 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.359065759 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.375150015 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.317608032 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.301518435 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.303239007 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.435816344 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.31314919 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.360844268 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.315257553 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.355783737 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.426808278 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.35993617 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.376242275 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.36074106 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.315484086 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.335574664 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.316460698 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.374173461 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.312965581 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.358226329 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.358802877 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.320420015 seconds)
done (took 106.101112112 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.376187928 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.312353159 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.415214479 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.315857106 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.413946869 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.415744755 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.311410528 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.312913577 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.312317774 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.688411456 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.31425691 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.31230232 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.313727491 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.314685769 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.394747152 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.317110866 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.311824927 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.659904031 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.31588577 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.385967625 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.314656755 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.313862337 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.315271168 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.703325434 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.314938316 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.309610023 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.391893901 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.315227781 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.659686089 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.31031257 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.311934099 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.667317605 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.405867016 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.332823987 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.325658448 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.322661236 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.41823293 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.335071415 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.3973177 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.396857676 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.420334374 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.354967935 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.310849672 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.314042462 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.318498136 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.316796678 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.315751931 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.34552261 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.314467783 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.313010707 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.655342035 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.327975437 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.317651099 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.316139447 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.315704682 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.346298431 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.315173612 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.317209864 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.409230697 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.317461037 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.379887637 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.699975979 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.701613406 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.318722988 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.314553225 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.317125173 seconds)
  done (took 103.288032212 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.385138847 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.39409755 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.433531085 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.334630221 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.370855392 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.438397496 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.336509254 seconds)
  done (took 10.910256277 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.324920975 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.321372666 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.369281006 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.369618366 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.317843523 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.533606345 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.320824501 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.329976614 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.317101642 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.395474 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.320049148 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.321602829 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.327166196 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.315393286 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.368058664 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.331894204 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.434759182 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.321257782 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.320066225 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.474053463 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.318072878 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.327206393 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.396247079 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.332161298 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.322549957 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.326634317 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.264809885 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.321384696 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.319149759 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.320896011 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.319848419 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.429195255 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.323003425 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.318534192 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.317950749 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.481067798 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.323412002 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.319639884 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.321584939 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.321577114 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.321951006 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.321868882 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.321655428 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.3192092 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.321642968 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.345810119 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.322165011 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.322847218 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.32183217 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.322907666 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.397654115 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.323929637 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.321048349 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.319459531 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.399963028 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.330838617 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.323868869 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.320486715 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.325037036 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.320145455 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.477013647 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.371689968 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.323983018 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.370535214 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.32647878 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.322748128 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.323915334 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.32351657 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.416480699 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.323937527 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.370774837 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.321211697 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.545594138 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.348468783 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.325951883 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.328089452 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.327453019 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.324759662 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.321733209 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.328600205 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.323374567 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.32500176 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.331226664 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.322199396 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.322207196 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.505850393 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.480782314 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.321203592 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.337553335 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.330372243 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.323133282 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.40135742 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.325397697 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.320850415 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.376270528 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.440740372 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.403173409 seconds)
  done (took 137.018805888 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.328885373 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.333906001 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.329031115 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.348521334 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.325823704 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.325997769 seconds)
  done (took 9.216432027 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.326422597 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.326789756 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.326730458 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.326482905 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.327151237 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.327672062 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.328552574 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.328417572 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.331087397 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.325290543 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.327719782 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.327921672 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.329259926 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.327647662 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.327765256 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.328730654 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.327400602 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.326070764 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.328289635 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.327332918 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.327865703 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.327901335 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.328359033 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.330702748 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.332410933 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.329114786 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.335794665 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.32857041 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.329762413 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.338720937 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.350864132 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.330068997 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.331682755 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.334006674 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.334170713 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.330477305 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.332478678 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.328828161 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.327213092 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.328117667 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.329088716 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.330363348 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.329144307 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.329525821 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.331574706 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.334662785 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.33561367 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.340356687 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.329683808 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.329986614 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.330808569 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.329759281 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.330450784 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.3309083 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.33324707 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.353217078 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.334796673 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.331183782 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.330575209 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.332464064 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.331486407 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.330501978 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.332815226 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.335862936 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.329693829 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.331612896 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.332313692 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.334357851 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.330729807 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.332884056 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.331560207 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.330327644 seconds)
  done (took 98.058396183 seconds)
done (took 359.701758972 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 3.13107118 seconds)
  done (took 4.361447021 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.426028023 seconds)
  done (took 3.656702781 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 22.128536822 seconds)
  done (took 23.363836572 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.41659891 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.336510411 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.341304571 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.331612616 seconds)
  done (took 10.65884343 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.632551728 seconds)
  done (took 3.8617683 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.332884741 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.324734127 seconds)
  done (took 5.887629622 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.646678487 seconds)
  done (took 3.875931385 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.753209499 seconds)
  done (took 3.990805449 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.352835725 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.340329338 seconds)
  done (took 5.933044128 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.310486036 seconds)
  done (took 3.541514607 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 15.624457181 seconds)
  done (took 16.856055957 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.333245959 seconds)
  done (took 3.566559316 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.372366512 seconds)
  done (took 3.603016744 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 5.059546595 seconds)
  done (took 6.289083788 seconds)
done (took 100.673772466 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.325017752 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.326887031 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.325457419 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.325796309 seconds)
  done (took 10.532917723 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.38528128 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.38575099 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.387659284 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.386184326 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.384916883 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.385975065 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.358795382 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.358728264 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.385638316 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.385402987 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.388368542 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.385609906 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.386533272 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.361527402 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.387027531 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.386319663 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.384939743 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.385679475 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.360011828 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.386359832 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.335043194 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.388606698 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.386523093 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.336537404 seconds)
  done (took 34.294577382 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.827027273 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.405212752 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.488669349 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.387397373 seconds)
  done (took 7.342557526 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.412408803 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.412333783 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.428387117 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.469046346 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.47688793 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.425084058 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.361966823 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.357288924 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.343313045 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.412239026 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.465634715 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.403778107 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.492680269 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.336424241 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.543002365 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.335998232 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.335440038 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.41684785 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.466200594 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.479540309 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.335965951 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.415069824 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.413561082 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.405236275 seconds)
  done (took 35.177321387 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.342366605 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.348962533 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.336947013 seconds)
    (4/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.354078812 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.336372308 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.336938619 seconds)
    (7/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.336152765 seconds)
    (8/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.342197107 seconds)
    (9/20) benchmarking ("sum", "Int64")...
    done (took 1.33475544 seconds)
    (10/20) benchmarking ("mean", "Int64")...
    done (took 1.336443063 seconds)
    (11/20) benchmarking ("mean", "Float64")...
    done (took 1.33877351 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.351668491 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.341397002 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.335965104 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.346099682 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.33811853 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.342946111 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.339544928 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.335964056 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.342399281 seconds)
  done (took 28.052656713 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.328901109 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.328923021 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.681444839 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.588669938 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.329435972 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.32933271 seconds)
  done (took 13.821186491 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.412733738 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.570333004 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.337866287 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.726193051 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.815418469 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.344158012 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.338221738 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.594555862 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.938153496 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.928427891 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.397822435 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.412787875 seconds)
  done (took 20.052894494 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.337157324 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.336346644 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.335183837 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.352226343 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.398759189 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.35995068 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.345614106 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.333023734 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.402572414 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.41910015 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.360129466 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.39833106 seconds)
  done (took 21.616060639 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.429413124 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.333640304 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.333534698 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.379372659 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.332461988 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.180339716 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.365165412 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.060915888 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.357446845 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.608075658 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.345412114 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.432094827 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.589958526 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.342161973 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.337445283 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.332290575 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.56516762 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.852283481 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.335560899 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.335272327 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.372215815 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.334537878 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.339771684 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.566598144 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.336418144 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.334961004 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.596534629 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.333475713 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.638247795 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.350590592 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.346610683 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.336084959 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.61090086 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.015278585 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.454908333 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.55964089 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.349083389 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.338948476 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.355738678 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.339350431 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.342408703 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.338067367 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.348483914 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.336556632 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.336838196 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.348711094 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.077161568 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.361973908 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.335615965 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.337355209 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.616129671 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.434668667 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.341255776 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.336781554 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.399500607 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.337737223 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.341562372 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.434453179 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.91873773 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.343343567 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.354715404 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.341725354 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.339617996 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.340888215 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.984141819 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.344534666 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.341249447 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.34267073 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.338895072 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.339535923 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.358319316 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.338882896 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.364063621 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.33958139 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.079795044 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.352170862 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.341010187 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.930754769 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.347368983 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.343364398 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.570512157 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.339050921 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.340200906 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.338679574 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.339259004 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.084382973 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.34876231 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.324356652 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.360337669 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.066517283 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.58628284 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.35885572 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.369914932 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.562643218 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.323904853 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.340397129 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.341278595 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.339901521 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.360493704 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.071682545 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.358146738 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.343138922 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.597329965 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.550901779 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.34818111 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.327956279 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.836656506 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.363501162 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.360134452 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.342787844 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.571056938 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.959136418 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.356032271 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.34531323 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.360151158 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.339616091 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.120791502 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.346846535 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.446342704 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.353484368 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.626675329 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.168318589 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.341879661 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.408823283 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.344453275 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.340165355 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.347402811 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.347779192 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.34141464 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.559157266 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.372057948 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.355798976 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.341115788 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.342958686 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.351812186 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.346671103 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.343522465 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.566571115 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.348653108 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.620610546 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.342302862 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.342344518 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.342096922 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.565466574 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.349155985 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.678365353 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.60500456 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.352841507 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.352769059 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.358791003 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.360811955 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.448075573 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.365167782 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.353020755 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.603851901 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.347487984 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.34800246 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.353032973 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.347966721 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.347217592 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.349281085 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.350004347 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.96974817 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.324575147 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.35124425 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.236152186 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.358603623 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.414065105 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.352146287 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.574231278 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.360120793 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.348244754 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.352343088 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.34293184 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.576222585 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.355962057 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.356340203 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.428722341 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.842270213 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.986141389 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.360417131 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.346839136 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.344400299 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.343255512 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.345849688 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.346507902 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.347080479 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.57305753 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.363072698 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.350875628 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.995706223 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.350676038 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.356992241 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.358209915 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.361923813 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.354861874 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.353159078 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.347752615 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.364511454 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.355338529 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.366071436 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.492426505 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.363249053 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.347343358 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.865565717 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.353701266 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.349507168 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.348849828 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.384532728 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.359219791 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.191315686 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.613247467 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.349480106 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.652061323 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.35144926 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.367947227 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.34764574 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.358500081 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.361852466 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.377504528 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.35714386 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.361824578 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.361932131 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.354877804 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.92636047 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.115862258 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.921489533 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.360885788 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.364778149 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.353272863 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.087404141 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.369845836 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.351336405 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.600118297 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.087045983 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.370189601 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.85285644 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.380540609 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.164781446 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.635121852 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.584803307 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.360634143 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.352831522 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.635723221 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.565877498 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.39251033 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.359947357 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.356911546 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.337738812 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.930682527 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.375377077 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.430515818 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.093399914 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.383100794 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.354358676 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.354510358 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.35187262 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.801401366 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.372269554 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.351788069 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.351493412 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.375827498 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.200894363 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.358607768 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.352803048 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.013947884 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.361578229 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.85483967 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.372066986 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.583650703 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.36412733 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.355944058 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.355478645 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.364849728 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.613319615 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.637252197 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.354390223 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.360215088 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.933940383 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.223780388 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.36049508 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.354023155 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.143879265 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.367208536 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.666382927 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.369700215 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.367314274 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.359151901 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.356124534 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.353559872 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.35134586 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.363952069 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.328351475 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.882707304 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.35636035 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.392538729 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.369712977 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.359592026 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.610981725 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.369517702 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.980907847 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.586377301 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.36900917 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.38018668 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.359834735 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.357325433 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.343523998 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.35571025 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.356931997 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.425691148 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.579618563 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.371363426 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.342193875 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.444271271 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.568692012 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.356733616 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.356450286 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.61381701 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.355209208 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.364545164 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.120163689 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.390553889 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.368167344 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.359201037 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.361503795 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.378811201 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.428536469 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.58786236 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.370116723 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.368610984 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.787281972 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.377112219 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.361114355 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.373484961 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.455106413 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.356888328 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.369765179 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.134969025 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.989310373 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.122889788 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.989844013 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.645282955 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.359343864 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.368488855 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.359851031 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.52164394 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.359465132 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.631241282 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.359327896 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.359993184 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.382417288 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.359505282 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.373355246 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.574280632 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.635874712 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.360374346 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.369977432 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.364500957 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.361529532 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.371674585 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.57413801 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.890521566 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.954533872 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.362103693 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.375303747 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.109808886 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.654520343 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.360538456 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.361996462 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.361991719 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.373363224 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.364719255 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.368257364 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.364453746 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.507141964 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.64445921 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.050373273 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.392846762 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.389595587 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 1.879044908 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.361674856 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.621593503 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.358862168 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.594597194 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.990967219 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.114285164 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.629827021 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.434630745 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.596109018 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.362028777 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.526238978 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.373276092 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.360835666 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.362585977 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.362297685 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.360472141 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.373019403 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.998789558 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.630356004 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.367796175 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.374977295 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.394467646 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.374134032 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.587417522 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.126508772 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.590202674 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.375738367 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.368551948 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.364380731 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.997875488 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.650507113 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.364954382 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.3695014 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.61982565 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.366003996 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.386407608 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.882330692 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.362602701 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.963682903 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.338256354 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.388191808 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.374661108 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.12196065 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.005745427 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.36769031 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.898085259 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.366559364 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.376219774 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.642873239 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.371205545 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.374822957 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.645795236 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.368335049 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.376701098 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.603217867 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.993563915 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.192051052 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.388290816 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.373055964 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.391012683 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.366800396 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.390634675 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.366323134 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.368818742 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.812351446 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.386745758 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.368050367 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.379037969 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.366889736 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.36761685 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.368696489 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.368205629 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.373789261 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.355431586 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.371089261 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.369920672 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.485822648 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.953013437 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.387485161 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.036599881 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.692224145 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.624501612 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.368807042 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.358270694 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.37210469 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.36810559 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.368803658 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.369179174 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.371376745 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.957395228 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.374013946 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.382826342 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.372780143 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.371662965 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.582975296 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.370601613 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.604674715 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.378006436 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.386734613 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.354544987 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.368544063 seconds)
  done (took 968.146722635 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.398851388 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.408865144 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.391486596 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.386877114 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.422791818 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.477221299 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.427879794 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.383706891 seconds)
  done (took 20.567687708 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.385896273 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.383536894 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.37850623 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.378727415 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.373068012 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.864722827 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.395227045 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.379562075 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.386296719 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.381967581 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.377439265 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.356507655 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.400616776 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.375295367 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.37102901 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.381278253 seconds)
  done (took 32.847198127 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.54718034 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.573062007 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.701756036 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.395657414 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.424052959 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.375390023 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.677486202 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.394353845 seconds)
  done (took 27.360949069 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.382293528 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.383275006 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.382626801 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.384044304 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.384958129 seconds)
  done (took 8.189250237 seconds)
done (took 1229.23011012 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.377027636 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.37847971 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.37646972 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.380282728 seconds)
  done (took 6.783958215 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.35858546 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.359141456 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.3602161 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.371312732 seconds)
  done (took 9.722103887 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.149976678 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.057657196 seconds)
  done (took 5.480425403 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.876401044 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.877852974 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.872626099 seconds)
  done (took 6.900896512 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.702353829 seconds)
  done (took 2.975299483 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.287238062 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.375968255 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.069111046 seconds)
  done (took 8.005826985 seconds)
done (took 41.139702895 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.382108166 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.62122221 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.526505154 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.369162 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.535503048 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.528521415 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.112523359 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.371399168 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.378645211 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.375353646 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.385387611 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.535068993 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 3.161796693 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.620016095 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.1606665 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.714555905 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.5354319 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.372315418 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.37306409 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.373769274 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.113914351 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.372343099 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.391305413 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.396622789 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.535661924 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.518781116 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.382791151 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.714367831 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.376852367 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.388829858 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.519246254 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.37238812 seconds)
  done (took 82.789977652 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.386999122 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.37284244 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.374575802 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.393752544 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.374075442 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.375713245 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.395822615 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.374345756 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.402157214 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.382493842 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.373162793 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.375783828 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.377966728 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.374886725 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.380116355 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.375746011 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.37532885 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.3909472 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.374946558 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.374049034 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.394205128 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.386359369 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.376444611 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.398996148 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.372948546 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.394327426 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.394851364 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.391248102 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.391855964 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.374810148 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.395198904 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.397428626 seconds)
  done (took 77.55040383 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.374971568 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.377474607 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.378341078 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.379309394 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.400220833 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.381935361 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.379514777 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.378243664 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.384256505 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.39474951 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.392384836 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.377194318 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.397190289 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.38925103 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.376202043 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.378357674 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.398696595 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.381673209 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.398504866 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.380592083 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.395795959 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.377425778 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.377962948 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.392819546 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.395373988 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.382418988 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.379131848 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.377892861 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.385258592 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.37795749 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.392518013 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.380416693 seconds)
  done (took 77.591988964 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.657680512 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.385004899 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.386662192 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.377865266 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.386652522 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.386168853 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.380783039 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.661094538 seconds)
  done (took 14.90033646 seconds)
done (took 254.10392068 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.37805602 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.610910493 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.408405029 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.379706074 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.409006897 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.408782798 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.61976301 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.422681239 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.614789035 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.398665034 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.423490032 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.379207569 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.686013071 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.542617923 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.342814884 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.392133268 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.739446822 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.401381872 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 1.680177328 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.673666712 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.40576053 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.382211954 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.324657384 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 1.757480302 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.388673924 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.477317272 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.493545201 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.614517292 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.548098568 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.470843116 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 1.616498436 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.38694348 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.380845268 seconds)
  done (took 62.438744824 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.38880709 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.506226952 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.388668502 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.388339062 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.506696911 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.387610594 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.387893125 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.389416984 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.391126562 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.390660542 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.390715203 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.392354571 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.391684768 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.434775089 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.510677822 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.407452158 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.389796174 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.509063048 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.388604343 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.383684427 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.433171944 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.390458734 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.393860222 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.434392074 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.391130056 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.390443541 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.508655513 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.393134549 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.389640749 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.504595207 seconds)
  done (took 43.839090255 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.39079328 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.657755234 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.842966599 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.39917293 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.395569127 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.39583346 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.477005402 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.392627193 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.398474424 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.396403023 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.571246939 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.394714419 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.43052291 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.875184966 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.395480554 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.393590546 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.393223211 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.394139625 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.666370347 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.402956938 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.499276982 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.395316854 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.478652484 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.404283329 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.416738036 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.393619571 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.399587267 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.984787801 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.395699268 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.569928116 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.258126786 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.476921885 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.930080195 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.861974994 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.268921872 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.400047585 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.39478823 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.573528469 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.394591582 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.394288254 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.477011238 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.393930335 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.853168159 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.068257378 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.415349536 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.394133726 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.01174368 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.573577732 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.657020618 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.403070233 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.878792437 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.398441909 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.396479612 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.397427694 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.65903676 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.396753682 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.395592771 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.023622975 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.418756613 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.478945746 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.397775448 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.395686915 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.665219078 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.395796371 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.660729763 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.397439516 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.403537039 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.416503271 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.85954643 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.399826001 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.100610812 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.417292309 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.396056754 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.570782312 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.65847535 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.042796541 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.419008475 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.672720873 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.942203373 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.478139047 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.401901446 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.977534398 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.482794272 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.400198635 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.400002554 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.399885434 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.397918177 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.44385136 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.478491368 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.025698691 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.098369223 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.048927188 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.500534961 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.405781979 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.398065707 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.02522163 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.415927364 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.399415822 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.856788205 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.093278533 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.417197253 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.40473285 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.105592753 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.420084185 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.482544261 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.405373133 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.85775138 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.401580926 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.444993403 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.398649558 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.406660436 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.424972119 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.481601997 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.403178462 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.399934966 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.081172538 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.59896804 seconds)
  done (took 185.010669534 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.40111659 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.3924395 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.401759378 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.392217714 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.392249167 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.400316711 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.391739975 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.393204826 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.398800987 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.393332317 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.392127035 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.401411315 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.401126755 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.393493235 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.393318296 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.412673378 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.393860627 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.396266021 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.412307531 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.394600618 seconds)
  done (took 45.239453253 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.402625498 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.006027551 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.542789606 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.426712037 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.398980725 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.400585788 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.461433186 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.400803031 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.400865947 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.722057947 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.592324525 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.420430643 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.398534807 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.399457459 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.543919353 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.414007772 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.72600407 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.007322392 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.403401478 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.00940281 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.393932613 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.403674064 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.401414017 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.009171444 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.727599195 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.483755107 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.465770826 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.007581059 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.401341297 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.400105679 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.01144146 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.405426382 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.403026852 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.003537326 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.421376351 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.409446504 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.402096103 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.466175481 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.468457985 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.730569597 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.092464964 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.487100182 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.416110357 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.788267942 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.407171171 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.392987157 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.011177886 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.426454774 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.394116144 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.405713123 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.410335798 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.565066454 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.408177744 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.56402534 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.404562001 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.40454295 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.013775423 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.567359315 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.549563058 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.617672149 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.42318614 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.486560544 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.403326828 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.014162006 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.425657171 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.408321964 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.408925825 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.595850553 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.036552701 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.488604023 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.731257749 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.734509671 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.410005162 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.469469158 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.424182575 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.804505281 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.46806706 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.828947806 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.73490515 seconds)
  done (took 125.413249066 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.660061521 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.520218939 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.56337785 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.039340134 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.400850977 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.530784593 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.519848945 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.675141211 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.418520833 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.494503702 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.631998671 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.488062203 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.128396989 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.481702965 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.503713998 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.555433 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.554761282 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.400113674 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.088466269 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.59849029 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.42316192 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.539821866 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 2.006013613 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.586650345 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.400399433 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 1.96643822 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.368333675 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.108768777 seconds)
  done (took 52.952561339 seconds)
done (took 516.17018562 seconds)
SAVING RESULT...
DONE!
