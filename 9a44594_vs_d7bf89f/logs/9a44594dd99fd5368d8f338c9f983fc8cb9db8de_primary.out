cset: moving following pidspec: 22890
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.916348545 seconds)
loading group "string"... done (took 0.546662784 seconds)
loading group "linalg"... done (took 8.958723956 seconds)
loading group "parallel"... done (took 0.172201266 seconds)
loading group "find"... done (took 1.456058081 seconds)
loading group "tuple"... done (took 2.116498053 seconds)
loading group "dates"... done (took 1.393924668 seconds)
loading group "micro"... done (took 0.221712329 seconds)
loading group "io"... done (took 0.632887473 seconds)
loading group "scalar"... done (took 44.252817572 seconds)
loading group "sparse"... done (took 13.55135108 seconds)
loading group "broadcast"... done (took 1.094015761 seconds)
loading group "union"... done (took 12.678517345 seconds)
loading group "simd"... done (took 2.551056734 seconds)
loading group "random"... done (took 10.357180818 seconds)
loading group "problem"... done (took 1833.758251467 seconds)
loading group "array"... done (took 26.259970596 seconds)
loading group "misc"... done (took 1.137126744 seconds)
loading group "sort"... done (took 3.778231239 seconds)
loading group "collection"... done (took 19.334242076 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.626578949 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.121920405 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.165182397 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.345639299 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.211768718 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.148563528 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.161812459 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.556976707 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.950779301 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.213864619 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.146220237 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.547224501 seconds)
done (took 5.915610779 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.245900571 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.430298942 seconds)
    (2/2) benchmarking "String"...
    done (took 0.113348759 seconds)
  done (took 1.19269404 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.09387511 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.174756354 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.093821443 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.109119967 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.109095752 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.108246179 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.093443638 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.108782019 seconds)
  done (took 1.448687635 seconds)
done (took 3.640520229 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.482580378 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.834255834 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.532317644 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.132808957 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.156761824 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.14599385 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.301939606 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.158022766 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.119138425 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.085026695 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.168140995 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.356907534 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.471678302 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.933919492 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.083636669 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.126778761 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.082389135 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.694216592 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.081904781 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.131847439 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.521539679 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.121717218 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.117644156 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.138676481 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.189727348 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.129822255 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.161009264 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.095490501 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.662684427 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.102524834 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.185369756 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.099538718 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.161679842 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.24681988 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.097541939 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.092717042 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.670106325 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.179257805 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.111632691 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.099422637 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.666031848 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.081573163 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.1900104 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.10079483 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.10825288 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.185682121 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.113214532 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.079987498 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.101768873 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.089637693 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.156155691 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.462594227 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.105339808 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.144004706 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.107586099 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.688404444 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.099177009 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.154657394 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.140426618 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.102125192 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.097943275 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.105583989 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.152844738 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.108553423 seconds)
  done (took 19.357406653 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.117312392 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.139848496 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.095036193 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.140619747 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.139132687 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.095518478 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.082936466 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.09409007 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.110699403 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.189279391 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.138559407 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.144697633 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.092498305 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.083202777 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.119254083 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.249111897 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.107468757 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.122354103 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.081551138 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.107121584 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.141595363 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.098332813 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.109545805 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.110010615 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.17015874 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.205147971 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.110997523 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.124055395 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.094326851 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.100134455 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.14265396 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.163493952 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.076651233 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.095797771 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.185567604 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.121023727 seconds)
  done (took 5.167479856 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.1997915 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.116040315 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.194094951 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.182032884 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.14976228 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.169327463 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.121429144 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.268847716 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.195628006 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.179353312 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.115064171 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.112151792 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.078397081 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.095652748 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.077961506 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.67955839 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.183125573 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.153867154 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.128649774 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.105643721 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.08500866 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.379141498 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.102967584 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.081654357 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.105404716 seconds)
    (26/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.138074495 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.072416581 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.200270168 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.088238964 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.291716722 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.118590675 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.107315835 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.129356566 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.190586719 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.131982301 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.122713689 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.101153762 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.079908664 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.232880107 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.106116041 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.077913384 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.12395864 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.131235516 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.117688702 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.102050703 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.111627157 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.224795063 seconds)
    (48/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.099620235 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.081216089 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.120140681 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.078768102 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.212886386 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.098231675 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.098163757 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.355591921 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.098134002 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.103919388 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.0973142 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.300603671 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.132365835 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.084261229 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.078711533 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.104324364 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.095107801 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.410245118 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.092699884 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.927919406 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.096781337 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.158451112 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.101238773 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.107462755 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.086991129 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.102615923 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.103441819 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.098728013 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.079889217 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.097661057 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.079316389 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.103100355 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.11506774 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.086355784 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.096513309 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.147328256 seconds)
    (84/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.131305031 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.118241092 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.102011233 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.128012114 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.102757484 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.08164057 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.129905515 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.098039706 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.08666676 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.147446047 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.087618792 seconds)
    (95/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.101893306 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.116072247 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100596072 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.129560627 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.098299734 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.178769644 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.082777312 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.126268311 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.100415796 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.115107155 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.122711355 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.097784328 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.086110026 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.096127475 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.081361499 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.162454332 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.082919857 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.080119411 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.102484799 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.111889097 seconds)
  done (took 23.779657514 seconds)
done (took 48.954685528 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.470718178 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.099795713 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.116225814 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.116297378 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.114695997 seconds)
  done (took 1.643997224 seconds)
done (took 2.345236472 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.350398002 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.170753733 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.102489448 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.19517101 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.089547115 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.198646666 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.163597974 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.116346948 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.195987963 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.098501994 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.174815225 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.097866766 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.088350034 seconds)
  done (took 2.771953641 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.093217583 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.118659183 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.082849669 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.110422696 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.076122442 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.109187623 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.092688008 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.134519535 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.092945102 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.10292564 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.076205983 seconds)
  done (took 1.784624345 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.090164122 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.112717624 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.082824007 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.106963632 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.076601873 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.090052156 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.108192772 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.116303855 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.091335664 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.103349784 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.076721196 seconds)
  done (took 1.752830351 seconds)
done (took 7.002412715 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.040621264 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 8.283830399 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.11861254 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.163945934 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.335877238 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.211347937 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.513475704 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.13132964 seconds)
  done (took 11.680024172 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.113319828 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.114957985 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.080776552 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.097080557 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.080544842 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.099155855 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.082182906 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.096162302 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.082418581 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.097703666 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.083923998 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.098421333 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.080791594 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.09604016 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.080767871 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.0966716 seconds)
  done (took 2.236839313 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.117867255 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.11741823 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.103198079 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.106216511 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.084007043 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.100510801 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.086433753 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.103166231 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.084825393 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.101259629 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.108090152 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.090592233 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.10533948 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.083564247 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.103659338 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.105315943 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.08261152 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.101356865 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.086747802 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.101880159 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.089953055 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.100634945 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.103045331 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.088436907 seconds)
  done (took 3.158556764 seconds)
done (took 17.773786925 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.167972353 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.084060624 seconds)
  done (took 0.952172525 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.101157485 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.120439952 seconds)
  done (took 0.929043209 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.105766494 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.095605743 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.133241753 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.112264587 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.080895414 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.094976525 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.113439979 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.098045383 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.082760104 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.099484804 seconds)
  done (took 1.723761891 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.084191566 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.101400098 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.089992988 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.120683203 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.109713493 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.08505168 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.104518216 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.088188013 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.104774443 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.081435815 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.106226736 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.118065653 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.089288599 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.119614052 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.088147422 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.103596547 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.106510988 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.085466943 seconds)
  done (took 2.495867339 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.079360532 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.082294119 seconds)
  done (took 0.87319508 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.08382338 seconds)
    (2/7) benchmarking "second"...
    done (took 0.094640415 seconds)
    (3/7) benchmarking "month"...
    done (took 0.082070183 seconds)
    (4/7) benchmarking "year"...
    done (took 0.098822496 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.079887868 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.097012298 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.081543751 seconds)
  done (took 1.326635007 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.510849057 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.259522038 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.342560577 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.099662237 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.152019999 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.367539433 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.134333575 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.111353042 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.111033243 seconds)
  done (took 2.838272404 seconds)
done (took 11.845046485 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.091244485 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.184570651 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.539708792 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.116705574 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.078654092 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.15609869 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.261486997 seconds)
done (took 2.137922882 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.350313187 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.125367433 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.089793167 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.079931614 seconds)
  done (took 1.353290652 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.079346462 seconds)
    (2/2) benchmarking "read"...
    done (took 0.101792749 seconds)
  done (took 0.895364861 seconds)
done (took 2.967154038 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.11461936 seconds)
    (2/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.096729228 seconds)
    (3/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.076391247 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.09635338 seconds)
    (5/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.075817532 seconds)
    (6/24) benchmarking ("one", "Float64")...
    done (took 0.09342635 seconds)
    (7/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.078243948 seconds)
    (8/24) benchmarking ("zero", "Float64")...
    done (took 0.075870479 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.091319898 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.078389613 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.094089113 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.078743259 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.096373507 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080400408 seconds)
    (15/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.079849452 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.093710539 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.077413482 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.096094031 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.077189285 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.093795058 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.078330315 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.096640379 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.077349313 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.07771215 seconds)
  done (took 2.823039751 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.211304725 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.095252191 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.084752692 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.101193484 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.083833103 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.099844413 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.099409896 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.079067393 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.10294757 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.083324893 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.100820328 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.084844044 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.098436418 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.085232802 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.099103277 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.100606117 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.086908777 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.097688679 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.083318532 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.101115937 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.087211481 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.097246796 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.084713507 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.102683049 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.100791442 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.08528789 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.099663237 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.081512446 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.102451278 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.085103468 seconds)
  done (took 3.622556746 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.087480839 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.075682378 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.09404182 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.08722294 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.092007076 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.079880781 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.091287658 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.077206239 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.096552975 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.07797361 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.09989082 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.078002397 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.093954774 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.079399965 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.080531579 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.101381576 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.111840957 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.07694914 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.07758891 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.096853935 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.082757676 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.094234776 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.081098617 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.094080461 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.078185443 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.094659827 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.079608316 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.079085849 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.095431283 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.077201548 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.099459959 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.085939303 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.093910598 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.091864359 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.100057383 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.077273387 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.103553234 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.07809089 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.095312178 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.078030406 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.094619263 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.078578034 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.078283965 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.106526121 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.081136035 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.09584061 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.079178349 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.095771878 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.079216824 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.098039462 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.078175855 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.094509421 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.081569231 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.09658667 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.084902202 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.079204884 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.096476101 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.078064791 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.095912861 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.078578593 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.095062199 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.078965475 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.101688442 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.080004136 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.119184295 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.091220808 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.094890425 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.080582361 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.099372586 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.086985003 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.096854952 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.097537334 seconds)
  done (took 7.109656925 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.081422929 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.103435258 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.078667575 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.095321981 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.075752495 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.078430752 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.102132192 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.095884223 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.08122657 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.11477511 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.079678693 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.096660126 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081089975 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.099639591 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.079630191 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.096973651 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.089782915 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.093934222 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.07909129 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.099496185 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.079854173 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.102562485 seconds)
  done (took 2.710385457 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.221379819 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.101801491 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.141432208 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.113178298 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.096775797 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.110732714 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.100684878 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.086606448 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102561032 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.090143193 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.10562246 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.084393915 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.115200652 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.102839105 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.087197765 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.104157853 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.100160214 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.088899391 seconds)
  done (took 2.676182692 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.092915366 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.095499232 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.104514801 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.097409392 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.081711424 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.101061638 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.088448195 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.115519536 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.101575341 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.082774807 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.109991317 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.085239642 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.101137725 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.082653477 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.101283585 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.083349017 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.100877234 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.082462974 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.110073316 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.104883477 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.088903027 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.108778255 seconds)
  done (took 2.848342648 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.096164937 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.09825429 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.110283686 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.099604642 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.075897474 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.095199698 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.087112996 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.096088348 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.106370856 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.083954813 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.099337635 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.081033198 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.106889769 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.082311727 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.10616404 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.083654328 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.101449143 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.083244476 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.101910384 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.078621516 seconds)
  done (took 2.598997201 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.123864174 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.114153048 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.098610908 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.126214216 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.115859873 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.099887769 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.125325318 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.115108832 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.099344388 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.129714993 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.098853604 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.116692489 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.127243757 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.1064011 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.116622231 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.126865277 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.1102618 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.126423364 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.114972714 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.100113078 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.129308179 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.116282694 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.111254703 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.116722674 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.10010839 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.117897184 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.115614167 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.106827479 seconds)
  done (took 3.937308215 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079852168 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.080525656 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.096371769 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.080224208 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.096870368 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.080091276 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.096692412 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.080548777 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.082247591 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.097048151 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.082111196 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.098645868 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.082872092 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.098534479 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.082785361 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.098612979 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.08254621 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.079283602 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.096550417 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.080626805 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.099398381 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.082666381 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.099043803 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.07995463 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.079556371 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.098799779 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.079962421 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.097207753 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.082577021 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.096930651 seconds)
  done (took 3.381207671 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.088374473 seconds)
    (2/2) benchmarking "in"...
    done (took 0.102508185 seconds)
  done (took 0.922150385 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.078554981 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.113692575 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.078669354 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.103463181 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.08947159 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.100349831 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.093506608 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.105491246 seconds)
  done (took 1.495087524 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.105032645 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.120657428 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.089202536 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.112882002 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.103084198 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.119847762 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.169220147 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.090208589 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.107788827 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.084324638 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.121073007 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.083147542 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.111046893 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.105960636 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.093400312 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.116435387 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.08105954 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.110742938 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.091863565 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.102665963 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.089963708 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.11745045 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.09517265 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.108439094 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.086965024 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.113385538 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.114564111 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.095780324 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.106721755 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.096699061 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.108616011 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.077407437 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.106140772 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.089225431 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.099432241 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.103377794 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.11920231 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.088973381 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.111677226 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.090089286 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.111390642 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.095964719 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.095253672 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.108415023 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.097881251 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.105930775 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.090863739 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.09636417 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.084712826 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.10541054 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.079979155 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.104658187 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.078709643 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.110210666 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.093754735 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.12027941 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.086921762 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.106978087 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.08891549 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.104466676 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.092101368 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.105580971 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.111346441 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.086937693 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.109228585 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.093892768 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.109355512 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.080064297 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.094862195 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.082112115 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.111397835 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.110248904 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.112755666 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.089847515 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.107297736 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.080951533 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.105589611 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.087228451 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.106392304 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.109022607 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.086506758 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.104837608 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.091710692 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.101147835 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.085915652 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.104857905 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.083896634 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.101625816 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.08376016 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.122935809 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.086858138 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.099585833 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.085600714 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.113013382 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.089364624 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.106452525 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.085194736 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.11139427 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.079358946 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.107736694 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.090468691 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.108293785 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.097863245 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.107725253 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.107681134 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.094115525 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.113591097 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.090431054 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.104534951 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.080816428 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.107505701 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.086514247 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.110379414 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.077596928 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.10668153 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.089424599 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.106115694 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.093217965 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.102054699 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.086878463 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.109580397 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.092977047 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.100516772 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.078594438 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.105235731 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.089788304 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.111632452 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.097354413 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.104420043 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.080230122 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.096969555 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.094159936 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.105950417 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.091831473 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.107484291 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.090564902 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.094652136 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.082587169 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.108082542 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.096079652 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.1035588 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.105795162 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.09186832 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.104595193 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.084856231 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.108110706 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.084826657 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.098438692 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.090916577 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.102169679 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.078579923 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.110513069 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.086911707 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.105142037 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.090290141 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.111014673 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.089425072 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.106732189 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.08444851 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.10520095 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.088512595 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.099003306 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.086302944 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.108331824 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.094230911 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.102812436 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.07669313 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.095169178 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.08771662 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.099785829 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.085122433 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.098840021 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.086742901 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.103824703 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.080299716 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.101725794 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.086147002 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.118353468 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.09497285 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.104851414 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.105883478 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.093598469 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.101949105 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.088254412 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.102273559 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.088086333 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.10412616 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.090752858 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.10526033 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.087265175 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.102009772 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.079090455 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.104674735 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.092528873 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.098619614 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.080632357 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.098658238 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.086030946 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.10917728 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.086882978 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.105448138 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.084362382 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.105060775 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.091177516 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.103384197 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.086072877 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.098864171 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.087276459 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.108259415 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.088215715 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.104095338 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.094247122 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.10496372 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.0774009 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.107846567 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.083404463 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.107610959 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.077756357 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.099514322 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.083334114 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.104768637 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.085373322 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.101312351 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.07634917 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.108145379 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.092711152 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.10422556 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.082874536 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.103530925 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.095888996 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.102030043 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.106392777 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.087057705 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.106244161 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.101725465 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.099322024 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.086892423 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.112167954 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.087186917 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.09246048 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.089489868 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.10108121 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.081349642 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.101430723 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.083952115 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.104966551 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.090243728 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.104817571 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.076394013 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.10327595 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.084850622 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.099968923 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.078163211 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.108895978 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.089071509 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.103938135 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.096353424 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.105018329 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.087856742 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.106194808 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.086508569 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.105580349 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.086979003 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.105115704 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.106352673 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.084826435 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.082287423 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.104960872 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.082102593 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.096769324 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.084851411 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.10400985 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.088494898 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.106818666 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.085477173 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.109375477 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.103427353 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.088884534 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.12351938 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.100809451 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.08382328 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.104795205 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.089272349 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.107772177 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.089051626 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.099390209 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.096845594 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.10774494 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.097457096 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.107646634 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.08334046 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.108373104 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.091005236 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.109868271 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.09263749 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.109858735 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.089885224 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.108003191 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.090758666 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.118656404 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.087474184 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.116322723 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.093770505 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.111524064 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.090784807 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.108908457 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.089323347 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.104261708 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.09080355 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.110301519 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.091897801 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.109073356 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.09306251 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.109711276 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.107234481 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.089665951 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.109430697 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.091179594 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.107519707 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.076878386 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.083768143 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.10408683 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.090835418 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.114867795 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.109825455 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.089212627 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.089804757 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.112205124 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.088980554 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.102005547 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.095934253 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.111999713 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.092391419 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.120097893 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.104483125 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.092312042 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.119531347 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.081125988 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.106501235 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.085845723 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.104543223 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.096296387 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.108975488 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.097638301 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.110260778 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.08763807 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.100786355 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.092809345 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.106751889 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.081853315 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.101822751 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.094851181 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.106064679 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.090361396 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.091670388 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.111222447 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.110369309 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.094279298 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.106611459 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.089776273 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.108171192 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.082794832 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.104055686 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.085394173 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.107353654 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.089954376 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.101550134 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.081169921 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.088854355 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.110440209 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.109454771 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.089904907 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.090397422 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.116293287 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.108084502 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.092846368 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.114871324 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.082486594 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.10998679 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.091343436 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.109121674 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.088073559 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.110668912 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.093722037 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.111030546 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.097703685 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.109485239 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.09530906 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.109598444 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.085711964 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.10965017 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.092946841 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.109913862 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.087832111 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.111168709 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.099302067 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.101486256 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.089496906 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.107110636 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.085400648 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.10756662 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.089554918 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.105208985 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.092788045 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.106857798 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.093026984 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.114411971 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.092715403 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.111675051 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.093379832 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.108820704 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.096752278 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.107054678 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.116422576 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.093637645 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.110954754 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.091264674 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.10639327 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.092392255 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.090713796 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.109504411 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.116093995 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.093966583 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.105245918 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.088671894 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.085438397 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.112002705 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.115055868 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.099754634 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.110416325 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.093687354 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.101314162 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.085200423 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.112056131 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.089201347 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.108937133 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.095507311 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.114327861 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.093086823 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.108330522 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.091609393 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.116289349 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.096509604 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.111522703 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.086946806 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.1114299 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.091299831 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.10806118 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.085969672 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.105242505 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.089029457 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.107287758 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.086677476 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.102005588 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.113991638 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.093592895 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.106508773 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.08671578 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.106857351 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.08739807 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.096415449 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.09034546 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.105398522 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.091713438 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.105410684 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.087913116 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.116688546 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.083059095 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.105075315 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.09293567 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.104769983 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.092946597 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.096854609 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.089107593 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.108396545 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.106702586 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.079789278 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.084113579 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.102859874 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.088342386 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.101737421 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.078806816 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.116605449 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.110264054 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.089770564 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.103658308 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.087210005 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.096658244 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.079799421 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.083875514 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.109069029 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.087005174 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.114849619 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.101147083 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.084186403 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.078586052 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.105860578 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.089523731 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.108540205 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.080400903 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.097909075 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.083368565 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.107062229 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.111740459 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.087397753 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.086873184 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.107779844 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.105363823 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.082587406 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.109673406 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.080446349 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.106352236 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.100447955 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.105989939 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.09086163 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.108920499 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.095270758 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.106847365 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.080062954 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.107188818 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.089777061 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.107026753 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.08961877 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.109270118 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.121511769 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.089806348 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.102189936 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.087680883 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.105364967 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.086101239 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.113342118 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.090831324 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.106707719 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.091365928 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.104347921 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.090951689 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.112365154 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.091298129 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.106736123 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.088510384 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.10581161 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.087504904 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.104559098 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.086814443 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.108057783 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.088581334 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.1053513 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.09108901 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.102296712 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.116195912 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.09561384 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.108136622 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.080770659 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.101707996 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.085029715 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.079304971 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.108022023 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.082536347 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.104196788 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.08596097 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.104590107 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.091658224 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.107436226 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.088418744 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.108656105 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.087920537 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.095614549 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.092139175 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.107337663 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.09100023 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.100145069 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.089464971 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.109111381 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.09366617 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.112140723 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.104096357 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.089678018 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.105322274 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.093307446 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.098614868 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.093496708 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.105839218 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.090322639 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.106490102 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.094091875 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.111765139 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.095253653 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.110627585 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.093106014 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.107097566 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.094027006 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.10955167 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.082921533 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.098596619 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.092746118 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.099567107 seconds)
  done (took 59.336137157 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.148970531 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.086918151 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.098047554 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.080633507 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.124904734 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.081636677 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.097744305 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.08120365 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.099186505 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.094298481 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.098772152 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.079284697 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.120061724 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.126456127 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.123480078 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.112144449 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.08013074 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.098088885 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.080166093 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.098836132 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.101362653 seconds)
  done (took 2.891044475 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.106231088 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.116907593 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.115405658 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.101852341 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.109122004 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.115300395 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.096574558 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.11667559 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.119219601 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.110746019 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.103238655 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.116276529 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.109445176 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.093432256 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.110471537 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.112490689 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.101790743 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.108316009 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.116713064 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.09729967 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.113460585 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.113947632 seconds)
  done (took 3.186517124 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.093575844 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.086549997 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.11118074 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.081728837 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.105105815 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.082759001 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.110062782 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.084268425 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.110432291 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.088484681 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.103286569 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.088361401 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.111521219 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.082404231 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.103117187 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.084285239 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.110129457 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.087861012 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.106938028 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.082170146 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.126383959 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.099745796 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.083359443 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.08512365 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.116255306 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.088738257 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.106106315 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.087306797 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.102974625 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.087777086 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.102714012 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.090340354 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.109466889 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.085780798 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.103344252 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.088663581 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.105872736 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.083505954 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.10256412 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.092292485 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.100610076 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.089524821 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.113875065 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.085687831 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.10263452 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.090774371 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.105945769 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.083138005 seconds)
  done (took 5.416633277 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.122923699 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.158399785 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.092799106 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.153491297 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.126225726 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.117866079 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.092249791 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.148156574 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.105183138 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.088259463 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.125225749 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.122934198 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.08971124 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.11466042 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.088948411 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.107298497 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.109235494 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.092214364 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.116808709 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.089429357 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.114444218 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.110120759 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.104446922 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.119180055 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.110816754 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.08821409 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.105712294 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.096585159 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.117827929 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.112740616 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.094970771 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.115174518 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.125555239 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.095133513 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.109124833 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.108997768 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.105737432 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.107132069 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.091523198 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.105178448 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.108746746 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.097607346 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.110125498 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.123479661 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.090659199 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.108269904 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.091687144 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.106897108 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.122376914 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.094717633 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.1163704 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.120979915 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.094615896 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.107565429 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.094697683 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.124675466 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.10627301 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.088360986 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.111031697 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.118214704 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.088740394 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.115053492 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.105356589 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.111646507 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.115286069 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.102263218 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.110107624 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.111370025 seconds)
  done (took 8.327546335 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.095884789 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.131779163 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.124167538 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.10531884 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.112751548 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.111856142 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.09455215 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.11191057 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.094596303 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.119473325 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.111153983 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.16238917 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.087751031 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.117906035 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.094517751 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.113160998 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.11203604 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.094259621 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.111404986 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.093416895 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.113054974 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.122528777 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.094437842 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.124406597 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.125552713 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.105430396 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.094157991 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.112015461 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.105062618 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.113797778 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.124347765 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.112915082 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.094465764 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.123301407 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.126428895 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.09509862 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.103484019 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.09482126 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.113057232 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.11284029 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.088826541 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.123263196 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.094890349 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.10733688 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.112417305 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.095477617 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.125458652 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.127028344 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.11853869 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.101876889 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.112544805 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.124384765 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.095745759 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.112948645 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.124075408 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.13246911 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.106612177 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.124025007 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.112190061 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.105637585 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.124152974 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.132306209 seconds)
  done (took 7.705914838 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.086954906 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.085561811 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.102380744 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.084063094 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.104697042 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.083815626 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.10418159 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.086402489 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.085257803 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.105013076 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.08583005 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.102240905 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.083685159 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.104196566 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.084220635 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.101919233 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.084432908 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.083606267 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.104395965 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.08379299 seconds)
  done (took 2.641874645 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.095542824 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.124714302 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.087144223 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.112306848 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.089345562 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.113579867 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.105619951 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.089951498 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.10560933 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.09037406 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.116928929 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.099306831 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.107150793 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.110865586 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.099282175 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.112374537 seconds)
  done (took 2.458620864 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.107759063 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.118296197 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.131242781 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.09150628 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.102943768 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.094609226 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.105617213 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.081903897 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.100185497 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.094989955 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.111459067 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.098161978 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.104683478 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.084537374 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.10512633 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.094037355 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.100875478 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.091913404 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.108099569 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.115970445 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.118146183 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.114430897 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.094554038 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.114984416 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.096357297 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.118803681 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.100249616 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.112914019 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.09151416 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.109971794 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.089473657 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.114038739 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.082655055 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.11175531 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.084157378 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.102304417 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.086364823 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.106052361 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.091401094 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.106760358 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.083571179 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.108585611 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.085574182 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.10795321 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.081415881 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.106885479 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.082038918 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.113833931 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.107326936 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.090308375 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.105146712 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.095478827 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.111746663 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.098862037 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.115155639 seconds)
  done (took 6.383421159 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.101827826 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.109056444 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.091489728 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.102746059 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.090735341 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.113309412 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.090214989 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.107208944 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.088478619 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.102887974 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.088854579 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.110260415 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.089271076 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.109588344 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.089306086 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.109418981 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.081317203 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.106920426 seconds)
  done (took 2.58471391 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.093082952 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.104585179 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.094807675 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.105233009 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.087244242 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.087887416 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.101900576 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.084475035 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.104027182 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.085990976 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.105499364 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.089122027 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.104646928 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.089013285 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.10565408 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.086567433 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.107606971 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.085524601 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.105157561 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.082673074 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.107375695 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.085555812 seconds)
  done (took 2.906062725 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.105717987 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.138367512 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.101493335 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.148525345 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.11106806 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.090501339 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.120113529 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.091282118 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.12904878 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.110054411 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.090928737 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.108915731 seconds)
  done (took 2.153716811 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113360069 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.145831394 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.084751508 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109360719 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119640845 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.093427385 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110670853 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.093129061 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.12356916 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.123772825 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.092489412 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.124887284 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.123241975 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.121575507 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.100027585 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119579574 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.111713055 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.093367487 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106765511 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.132970418 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.092973123 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.12397928 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110412213 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.093322135 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.111066772 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.122749135 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.104923991 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.125448735 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.111473581 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.104859715 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.1208828 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.110821013 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.103916535 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.125779489 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108556837 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.123467073 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.093233697 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.133800484 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118506115 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.103891068 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.109954449 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119468009 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.104549789 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118984511 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.122723591 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.093168736 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11952086 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.110637578 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.093430882 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.139730176 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119552159 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.121898102 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.100029207 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.125372143 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.124073742 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.140170794 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.125566273 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.123312029 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.100551433 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.125135754 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.121774768 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120092859 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.103850992 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.125315564 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119301051 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.12307152 seconds)
  done (took 8.345325369 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.12800935 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.105898927 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.092634013 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.12638967 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123288143 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.110991183 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.092605128 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.111969018 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.092505848 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107629745 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.159135712 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.111266599 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.103734845 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.122323125 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.111244204 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.09274344 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.111738817 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.122299072 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08969457 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.139994218 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.111205365 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.123170933 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.104463745 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.123036838 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.124978525 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120141664 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.093111263 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112062589 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.093944525 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.111878772 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.118263318 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.09353453 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.122894479 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.104596614 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.105326529 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.111886557 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.092506222 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.120323728 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.111042169 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.10104576 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.124264372 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.133957566 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.111013024 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.093513339 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.125610519 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.111985035 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.092502119 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10815847 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.093877316 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109559591 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.125732257 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.125923745 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106711095 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.123897218 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.111633466 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.094688597 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.112454282 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.111274082 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.093687089 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119431629 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.123569744 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.093988103 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.140245776 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.111494586 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.09299896 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123979396 seconds)
  done (took 8.18361883 seconds)
done (took 157.356384787 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.1063182 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.143140183 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.102385285 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.170730986 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.088082787 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.1413463 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.121165505 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.124509847 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.087438641 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.108061347 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.088233166 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.110409935 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.153855831 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.107239078 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.088295607 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.109806564 seconds)
  done (took 2.661544586 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.183298247 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.284530265 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.107663601 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.112161593 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.094498688 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.110546086 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.091640499 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.114884331 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.08912923 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.121517829 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.10861117 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.091546785 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.119604155 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.09159481 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.108007071 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.090841767 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.120765333 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.08992439 seconds)
  done (took 2.947806257 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.113747439 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.151333825 seconds)
  done (took 1.086039846 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.124642616 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.186559873 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.303885997 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.164048285 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.118529768 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.129892422 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.165231498 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.126508809 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.195785757 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.129627453 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.109825624 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.115485198 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.137402849 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.101544428 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.117444812 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.094137655 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.140997008 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.115364598 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.0965035 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.115386475 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.115560079 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.115358952 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.119251859 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.097711719 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.185092847 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.13023566 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.114869887 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.096919632 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.115191893 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.09661636 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.120216026 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.128882546 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.108926886 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.189561094 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.099661228 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.187257878 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.102610999 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.114884727 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.114865335 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.095409479 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.118202836 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.099081728 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.131101396 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.113172717 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.096704391 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.121935686 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.095899202 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.114497752 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.121100873 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.104846266 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.121884945 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.119431415 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.165724547 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.121876226 seconds)
  done (took 7.698458157 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.83982707 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.162521552 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.114303097 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.944180006 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.150310633 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.127968588 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.834494902 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.118712595 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.269971919 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.054039567 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.132839544 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.12789848 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.233054344 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.259397764 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.150109594 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.340105306 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.709829966 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.129782377 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.122688685 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.157283028 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.121231286 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.142386684 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.112525813 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.444463423 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.115720471 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.092108198 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.119252417 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.125689348 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.166643036 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.092093639 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.117172952 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.184911047 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.291242115 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.185578825 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.114185621 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.091719523 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.112301674 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.173696586 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.27017586 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.220711796 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.179227224 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.089341811 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.111068098 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.105501334 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.133725066 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.088456676 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.189799347 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.179220286 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.177193746 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.118114025 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.125301202 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.101554962 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.125076637 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.165758717 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.111425554 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.337115693 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.341743285 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.093168941 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.122138174 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.110057871 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.268150819 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.112868234 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.207740299 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.140878081 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.215385413 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.091052863 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.788713914 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.171313956 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.11314806 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.121085582 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.100582567 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.119147683 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.104640693 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.17395409 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.388668225 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.12734878 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.116051407 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.091975984 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.228809891 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.092122752 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.111151817 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.171296543 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.092222448 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.121963689 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.128441581 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.125121551 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.17802861 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.248762491 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.131844042 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.09958758 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.118813292 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.124683243 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.093564138 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.218242665 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.219962781 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.181539183 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.218049931 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.124754967 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.169863688 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.171349724 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.124793428 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.176595695 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.119745681 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.13032399 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.105721646 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.216571652 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.147444984 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.092702029 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.118665619 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.119185705 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.148992396 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.096248122 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.119928778 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.175404459 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.473267533 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.191428166 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.089273681 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.116486484 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.100976746 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.167531002 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.120202546 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.264983227 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.101209017 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.192582532 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.099558882 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.109942709 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.10004825 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.190429384 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.106690588 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.123220237 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.126216266 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.100388742 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.276027693 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.201892317 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.128036132 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.238779043 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.183029588 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.102478488 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.199579549 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.101279028 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.194803156 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.102672005 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.124575068 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.093436175 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.78198891 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.12633371 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.120785617 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.09931897 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.198279944 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.112000891 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.095418908 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.091339954 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.110996223 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.815835424 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.09658825 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.11026129 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.094830093 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.12288955 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.100612971 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.12026806 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.097036654 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.188688657 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.235808736 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.10572173 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.122276292 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.091485745 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.187508383 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.094991294 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.11406342 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.094168518 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.113304143 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.103205344 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.117028865 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.094082868 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.198315344 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.164763113 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.222765184 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.530678402 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.11341984 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.09197753 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.233802474 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.112090885 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.287248648 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.12108837 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.227873229 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.173222873 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.110717385 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.341758793 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.176621942 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.198181958 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.095517379 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.196244841 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.090539504 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.119517164 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.168504987 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.091608798 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.121525612 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.162764658 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.130998714 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.127584754 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.133432066 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.113106832 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.234189938 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.111135527 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.176173112 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.114385532 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.106466045 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.310602409 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.112421408 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.115038233 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.18691208 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.09741609 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.112713752 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.748864924 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.113803821 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.104332236 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.123263865 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.225891792 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.172176155 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.120840088 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.101150256 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.12632673 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.168667816 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.235769989 seconds)
  done (took 45.276460707 seconds)
done (took 60.483500753 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.305898463 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.268305036 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.307561657 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.200308791 seconds)
  done (took 2.002209071 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.182218966 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.157009525 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.129728545 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.112386983 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.158616618 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.091765654 seconds)
  done (took 1.676805276 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.487814924 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.378554869 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.346112456 seconds)
  done (took 2.058661855 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.267257688 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.287464677 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.362672207 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.451873372 seconds)
  done (took 2.321308638 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.209137557 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.128396817 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.103795366 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.142906602 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.1752949 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.179839236 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.145985088 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.158567048 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.131420496 seconds)
  done (took 2.269572374 seconds)
done (took 11.173609088 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/224) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.293211191 seconds)
    (2/224) benchmarking ("map", identity, BigInt, true)...
    done (took 0.281136737 seconds)
    (3/224) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.17930332 seconds)
    (4/224) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.189116094 seconds)
    (5/224) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.16302982 seconds)
    (6/224) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.241269929 seconds)
    (7/224) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.171318002 seconds)
    (8/224) benchmarking ("map", abs, Int8, false)...
    done (took 0.258696878 seconds)
    (9/224) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.136333846 seconds)
    (10/224) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.184916651 seconds)
    (11/224) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.163852879 seconds)
    (12/224) benchmarking ("map", identity, Float32, true)...
    done (took 0.238903926 seconds)
    (13/224) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.115842073 seconds)
    (14/224) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.117337809 seconds)
    (15/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.163033763 seconds)
    (16/224) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.255672888 seconds)
    (17/224) benchmarking ("map", abs, BigInt, false)...
    done (took 0.169610855 seconds)
    (18/224) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.12536465 seconds)
    (19/224) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.119271092 seconds)
    (20/224) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.090489787 seconds)
    (21/224) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.147424683 seconds)
    (22/224) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.113867136 seconds)
    (23/224) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.192341109 seconds)
    (24/224) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.122602596 seconds)
    (25/224) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.130510336 seconds)
    (26/224) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.204307169 seconds)
    (27/224) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.149588187 seconds)
    (28/224) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.120711639 seconds)
    (29/224) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.220064229 seconds)
    (30/224) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.117558289 seconds)
    (31/224) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.126310091 seconds)
    (32/224) benchmarking ("perf_sum", Float32, false)...
    done (took 0.130621864 seconds)
    (33/224) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.097110604 seconds)
    (34/224) benchmarking ("perf_sum", Bool, true)...
    done (took 0.127735724 seconds)
    (35/224) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.246615652 seconds)
    (36/224) benchmarking ("map", identity, Bool, false)...
    done (took 0.223942882 seconds)
    (37/224) benchmarking ("map", abs, Bool, false)...
    done (took 0.15521828 seconds)
    (38/224) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.12714356 seconds)
    (39/224) benchmarking ("map", abs, Float64, false)...
    done (took 0.213568816 seconds)
    (40/224) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.11447635 seconds)
    (41/224) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.245933825 seconds)
    (42/224) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.119858239 seconds)
    (43/224) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.21178284 seconds)
    (44/224) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.128698504 seconds)
    (45/224) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.216709804 seconds)
    (46/224) benchmarking ("map", abs, Bool, true)...
    done (took 0.088322744 seconds)
    (47/224) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.221398799 seconds)
    (48/224) benchmarking ("perf_countequals", "Int8")...
    done (took 0.146074025 seconds)
    (49/224) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.127889051 seconds)
    (50/224) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.098006859 seconds)
    (51/224) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.126981337 seconds)
    (52/224) benchmarking ("perf_sum", Bool, false)...
    done (took 0.094665667 seconds)
    (53/224) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.228196111 seconds)
    (54/224) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.120927119 seconds)
    (55/224) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.083154843 seconds)
    (56/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.118995504 seconds)
    (57/224) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.109797606 seconds)
    (58/224) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.143506224 seconds)
    (59/224) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.219871594 seconds)
    (60/224) benchmarking ("map", abs, Float64, true)...
    done (took 0.100614434 seconds)
    (61/224) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.249037565 seconds)
    (62/224) benchmarking ("perf_sum", Float64, false)...
    done (took 0.129083046 seconds)
    (63/224) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.205566681 seconds)
    (64/224) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.218207956 seconds)
    (65/224) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.089303266 seconds)
    (66/224) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.125068342 seconds)
    (67/224) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.093807072 seconds)
    (68/224) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.131994047 seconds)
    (69/224) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.096794648 seconds)
    (70/224) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.207383218 seconds)
    (71/224) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.190651865 seconds)
    (72/224) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.116562911 seconds)
    (73/224) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.098588149 seconds)
    (74/224) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.099413708 seconds)
    (75/224) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.096890348 seconds)
    (76/224) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.202604807 seconds)
    (77/224) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.123961445 seconds)
    (78/224) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.080713992 seconds)
    (79/224) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.130525609 seconds)
    (80/224) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.095760958 seconds)
    (81/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.119792768 seconds)
    (82/224) benchmarking ("map", abs, Float32, false)...
    done (took 0.147832355 seconds)
    (83/224) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.170873665 seconds)
    (84/224) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.157294107 seconds)
    (85/224) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.119396791 seconds)
    (86/224) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.103064522 seconds)
    (87/224) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.07873336 seconds)
    (88/224) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.204619105 seconds)
    (89/224) benchmarking ("perf_countequals", "Float32")...
    done (took 0.126823334 seconds)
    (90/224) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.149712984 seconds)
    (91/224) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.096065515 seconds)
    (92/224) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.189403633 seconds)
    (93/224) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.09818637 seconds)
    (94/224) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.201256124 seconds)
    (95/224) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.130043784 seconds)
    (96/224) benchmarking ("perf_sum", Int8, true)...
    done (took 0.147933378 seconds)
    (97/224) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.079500137 seconds)
    (98/224) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.155069448 seconds)
    (99/224) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.122083012 seconds)
    (100/224) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.100775396 seconds)
    (101/224) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.096928609 seconds)
    (102/224) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.099814867 seconds)
    (103/224) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.174259394 seconds)
    (104/224) benchmarking ("perf_countequals", "Int64")...
    done (took 0.127083783 seconds)
    (105/224) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.118660874 seconds)
    (106/224) benchmarking ("perf_countequals", "Bool")...
    done (took 0.122629883 seconds)
    (107/224) benchmarking ("perf_sum", Int8, false)...
    done (took 0.11909225 seconds)
    (108/224) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.099207231 seconds)
    (109/224) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.100402357 seconds)
    (110/224) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.07955013 seconds)
    (111/224) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.119385273 seconds)
    (112/224) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.111857493 seconds)
    (113/224) benchmarking ("perf_sum", Float32, true)...
    done (took 0.119218968 seconds)
    (114/224) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.096765096 seconds)
    (115/224) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.100466408 seconds)
    (116/224) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.092560833 seconds)
    (117/224) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.116931665 seconds)
    (118/224) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.080903669 seconds)
    (119/224) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.197493999 seconds)
    (120/224) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.12729851 seconds)
    (121/224) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.081430443 seconds)
    (122/224) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.11922557 seconds)
    (123/224) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.100269047 seconds)
    (124/224) benchmarking ("perf_sum", Int64, true)...
    done (took 0.127346703 seconds)
    (125/224) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.139870773 seconds)
    (126/224) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.101839033 seconds)
    (127/224) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.096125047 seconds)
    (128/224) benchmarking ("map", identity, Int8, true)...
    done (took 0.165084028 seconds)
    (129/224) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.120370977 seconds)
    (130/224) benchmarking ("map", identity, Int64, false)...
    done (took 0.137250211 seconds)
    (131/224) benchmarking ("map", abs, Int8, true)...
    done (took 0.108474412 seconds)
    (132/224) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.194600145 seconds)
    (133/224) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.155356503 seconds)
    (134/224) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.118639119 seconds)
    (135/224) benchmarking ("map", abs, Int64, false)...
    done (took 0.156724568 seconds)
    (136/224) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.099133503 seconds)
    (137/224) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.094760822 seconds)
    (138/224) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.121931183 seconds)
    (139/224) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.080218144 seconds)
    (140/224) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.120729194 seconds)
    (141/224) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.194201115 seconds)
    (142/224) benchmarking ("map", identity, Float32, false)...
    done (took 0.079668685 seconds)
    (143/224) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.120481986 seconds)
    (144/224) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.106906926 seconds)
    (145/224) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.118896842 seconds)
    (146/224) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.103885568 seconds)
    (147/224) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.114993957 seconds)
    (148/224) benchmarking ("map", identity, Bool, true)...
    done (took 0.087977221 seconds)
    (149/224) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.101533313 seconds)
    (150/224) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.07992924 seconds)
    (151/224) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.12933346 seconds)
    (152/224) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.089028359 seconds)
    (153/224) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.120686428 seconds)
    (154/224) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.112432797 seconds)
    (155/224) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.101183654 seconds)
    (156/224) benchmarking ("perf_sum", Float64, true)...
    done (took 0.095830121 seconds)
    (157/224) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.148926261 seconds)
    (158/224) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.108068723 seconds)
    (159/224) benchmarking ("perf_countequals", "Float64")...
    done (took 0.126678436 seconds)
    (160/224) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.204643411 seconds)
    (161/224) benchmarking ("map", abs, Int64, true)...
    done (took 0.089193729 seconds)
    (162/224) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.101278142 seconds)
    (163/224) benchmarking ("map", identity, Int64, true)...
    done (took 0.088414996 seconds)
    (164/224) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.142044827 seconds)
    (165/224) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.092813652 seconds)
    (166/224) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.101758421 seconds)
    (167/224) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.080683191 seconds)
    (168/224) benchmarking ("perf_sum", Int64, false)...
    done (took 0.114802571 seconds)
    (169/224) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.080595396 seconds)
    (170/224) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.088015085 seconds)
    (171/224) benchmarking ("map", identity, BigInt, false)...
    done (took 0.100396487 seconds)
    (172/224) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.145678712 seconds)
    (173/224) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.191372564 seconds)
    (174/224) benchmarking ("map", identity, Float64, true)...
    done (took 0.166292948 seconds)
    (175/224) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.079118113 seconds)
    (176/224) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.125751851 seconds)
    (177/224) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.206076868 seconds)
    (178/224) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.095616141 seconds)
    (179/224) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.196321958 seconds)
    (180/224) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.100144925 seconds)
    (181/224) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.080904503 seconds)
    (182/224) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.117587868 seconds)
    (183/224) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.08132583 seconds)
    (184/224) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.079945238 seconds)
    (185/224) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.194021471 seconds)
    (186/224) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.116949297 seconds)
    (187/224) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.093259847 seconds)
    (188/224) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.100395435 seconds)
    (189/224) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.080347124 seconds)
    (190/224) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.113735471 seconds)
    (191/224) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.090645317 seconds)
    (192/224) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.080170543 seconds)
    (193/224) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.115982014 seconds)
    (194/224) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.098843489 seconds)
    (195/224) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.101376917 seconds)
    (196/224) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.109679865 seconds)
    (197/224) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.120503436 seconds)
    (198/224) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.080738254 seconds)
    (199/224) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.10061896 seconds)
    (200/224) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.107386917 seconds)
    (201/224) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.101543099 seconds)
    (202/224) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.105290722 seconds)
    (203/224) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.100468877 seconds)
    (204/224) benchmarking ("map", abs, Float32, true)...
    done (took 0.08937232 seconds)
    (205/224) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.13927264 seconds)
    (206/224) benchmarking ("map", identity, Float64, false)...
    done (took 0.080277695 seconds)
    (207/224) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.079368742 seconds)
    (208/224) benchmarking ("map", identity, Int8, false)...
    done (took 0.101604306 seconds)
    (209/224) benchmarking ("map", abs, BigInt, true)...
    done (took 0.089620332 seconds)
    (210/224) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.101958433 seconds)
    (211/224) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.080663169 seconds)
    (212/224) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.113183348 seconds)
    (213/224) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.096028669 seconds)
    (214/224) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.127617766 seconds)
    (215/224) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.08033308 seconds)
    (216/224) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.101004105 seconds)
    (217/224) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.099083745 seconds)
    (218/224) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.101337235 seconds)
    (219/224) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.093061184 seconds)
    (220/224) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.079194239 seconds)
    (221/224) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.137006059 seconds)
    (222/224) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.079915713 seconds)
    (223/224) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.101959474 seconds)
    (224/224) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.092580538 seconds)
  done (took 30.312387288 seconds)
done (took 31.164414077 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.402562149 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.13156283 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.125910099 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.103153169 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.145565702 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.109215868 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.125293909 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.10556059 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.125092817 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.115010705 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.093899037 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.126213483 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.104272771 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.142703391 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.105344042 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.117732047 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.095229894 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.126472055 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.125777075 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.106263297 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.144649606 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.098570355 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.123708314 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.096425572 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.146316074 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.096611378 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.12567504 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.103499493 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.124877554 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.116718777 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.103844881 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.117129813 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.106259456 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.128589331 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.094695915 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.118307997 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.094439312 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.108031794 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.096097554 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.119015141 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.1033226 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.117355719 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.106062498 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.118347689 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.097679592 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.11613068 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.093702861 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.128669371 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.115030339 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.104422189 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.118176998 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.108622895 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.114660468 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.094162283 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.11430195 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.096656696 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.126758632 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.095180488 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.126307133 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.094976173 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.118126697 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.095609532 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.120318894 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.095201873 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.118061639 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.096399692 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.118266122 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.097223363 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.115022063 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.097732344 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.117850494 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.097357179 seconds)
done (took 9.266240736 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.104015875 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.187888705 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.150149779 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.156586309 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.152672689 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.113778413 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.128195546 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.149201245 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.104157155 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.147332906 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.147213688 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.139194058 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.132446597 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.125955413 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.135030351 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.103767031 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.123941215 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.134666465 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.138171729 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.145291173 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.150080582 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.104104966 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.145821576 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.145129814 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.12277709 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.132553549 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.128008395 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.125043063 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.106235912 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.131916153 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.119504676 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.12784773 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.126912994 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.115015034 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.13131642 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.101044298 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.135528445 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.120374574 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.104020125 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.125897646 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.136330752 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.114040889 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.122254565 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.132617929 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.103772693 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.128830838 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.103029177 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.123809017 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.103373281 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.120155611 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.14525973 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.124482781 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.123535676 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.126735695 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.105069195 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.125314576 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.106283332 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.128743847 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.127955564 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.1070693 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.123663929 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.10580981 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.130188908 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.14124641 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.102150395 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.128215491 seconds)
  done (took 9.244642179 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.118450377 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.154801503 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.131381569 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.110407894 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.127358386 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.091929483 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.113603281 seconds)
  done (took 1.751478229 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.093912751 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.145231456 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.127810772 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.148481446 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.137662233 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.13153784 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.132432779 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.093173748 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.140783141 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.125986253 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.122469053 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.171133084 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.117537195 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.106428862 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.151322198 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.11513892 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.130233235 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.11617305 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.102095266 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.149595939 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.121658562 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.116977026 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.129826261 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.095072804 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.138842514 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.095742989 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.185048039 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.128725205 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.094062404 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.122128032 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.099202453 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.208412743 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.117624094 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.126716472 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.092662678 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.145930087 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.115747428 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.122405116 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.142423568 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.099626354 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.138378078 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.101497553 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.123984336 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.122539977 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.102316612 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.132085231 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.106691244 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.124986319 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.100582569 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.14607145 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.127145575 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.117323526 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.118214663 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.099690433 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.126051755 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.101565513 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.130874467 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.099608594 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.145922941 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.123800219 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.122201376 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.143722052 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.138621951 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.121963235 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.133998425 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.116900692 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.140534889 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.121743006 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.102761802 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.124354461 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.121598987 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.120871984 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.104607827 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.133042789 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.125196676 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.123213543 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.147425823 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.100965105 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.13023478 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.100625899 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.121033588 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.094645603 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.132836382 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.098991783 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.121162862 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.134228866 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.107235999 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.12175764 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.099064553 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.138464035 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.120306544 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.105724563 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.12749256 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.098234888 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.132930653 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.145573017 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.104923357 seconds)
  done (took 12.830046481 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.096966018 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.096159127 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.124534879 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.118510345 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.097188944 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.095574784 seconds)
  done (took 1.542466255 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.125991011 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.121199386 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.111004723 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.12451846 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.161905887 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.120578832 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.144844069 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.127711703 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.116155234 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.133180339 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.119491465 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.143986294 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.148572223 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.103426617 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.14213592 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.103260192 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.142711519 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.121872307 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.109884067 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.121668648 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.111894706 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.125499708 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.099942428 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.140826142 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.125262037 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.103940872 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.124162378 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.111057296 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.132371139 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.104867514 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.125156733 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.103116823 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.125555664 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.127269899 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.12077336 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.125196225 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.098667563 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.127407445 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.125544595 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.103923079 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.143752897 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.100227218 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.131783022 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.104811193 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.128897786 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.125297897 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.105041556 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.123252358 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.120898162 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.126794023 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.105270012 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.125527556 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.103469477 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.127958263 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.103445558 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.129118935 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.12650716 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.121198582 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.126418061 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.103820893 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.12283867 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.103051354 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.12945084 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.124770266 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.103199525 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.126590921 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.104024998 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.121874184 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.100129635 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.125131392 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.105023935 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.122367995 seconds)
  done (took 9.592937427 seconds)
done (took 35.854806662 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.086304089 seconds)
  done (took 1.993168718 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.850217922 seconds)
  done (took 1.759227222 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 15.694243489 seconds)
  done (took 16.634702235 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.513133811 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.621225774 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.971191118 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.166951894 seconds)
  done (took 3.182423045 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.926336991 seconds)
  done (took 1.856337159 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.316107334 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.263650068 seconds)
  done (took 1.495692531 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.808119662 seconds)
  done (took 1.729138365 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.561799519 seconds)
  done (took 2.482372248 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.355875132 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.202676351 seconds)
  done (took 1.490173219 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.58137386 seconds)
  done (took 1.508119396 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 14.09867802 seconds)
  done (took 15.028807798 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.233754077 seconds)
  done (took 1.171919876 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.307059022 seconds)
  done (took 1.235601566 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.300467435 seconds)
  done (took 4.230298955 seconds)
done (took 56.712328109 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.106286677 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.131262238 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.109446212 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.128561217 seconds)
  done (took 1.399382711 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.110151031 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.125729592 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.107230182 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.125781847 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.111354587 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.126468713 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.101510608 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.13345374 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.102292444 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.128314819 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.125369942 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.104456022 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.127931564 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.102282813 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.124148369 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.104161211 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.129097276 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.102734432 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.126491945 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.103945401 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.126908927 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.126590609 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.106753046 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.127309147 seconds)
  done (took 3.741290699 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.106687274 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.099458954 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.125380081 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.099464396 seconds)
  done (took 1.364465892 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.111369719 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.141110792 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.116914483 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.133212565 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.140854674 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.117514953 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.122836018 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.100166311 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.124965228 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.110257163 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.123688542 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.119414903 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.139660981 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.119350855 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.113694749 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.115577366 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.096159147 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.140886872 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.109880504 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.135071579 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.098787629 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.133367252 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.107383483 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.137647205 seconds)
  done (took 3.847678067 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.174806469 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.13684599 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.146489702 seconds)
    (4/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.170925528 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.125498037 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.121644327 seconds)
    (7/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.125145477 seconds)
    (8/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.131264805 seconds)
    (9/20) benchmarking ("sum", "Int64")...
    done (took 0.126762229 seconds)
    (10/20) benchmarking ("mean", "Int64")...
    done (took 0.099552759 seconds)
    (11/20) benchmarking ("mean", "Float64")...
    done (took 0.122420029 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.15529622 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.128917917 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.124381606 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.100009624 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.128210277 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.106546392 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.127387757 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.100675812 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.137239017 seconds)
  done (took 3.530417164 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.107710294 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.122228073 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.095794315 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.121887594 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.107178732 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.125114225 seconds)
  done (took 1.622606689 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.096142768 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.094516115 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.118517374 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.094790117 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.122988544 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.095367686 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.116260124 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.095574477 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.09431562 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.119442413 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.094325319 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.117348585 seconds)
  done (took 2.197404292 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.220422703 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.120791127 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.12295301 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.100773483 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.127474182 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.097359752 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.136915225 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.099297241 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.178877473 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.12391433 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.114439154 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.175834318 seconds)
  done (took 2.559318727 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.215528048 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104455893 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.277270055 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.374240957 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163894458 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.171698135 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.275280095 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.17275476 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.192070293 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.142554011 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211049292 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163384848 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134986998 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20825577 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.12121051 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.190194126 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181250843 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.230589332 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129920206 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.244541429 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171219738 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.172797165 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.195845256 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.158059866 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.119554729 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164671953 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.123353462 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109310691 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178279797 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17459204 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204607616 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153134378 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.119965904 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231331198 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.220189967 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.182787317 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.330945652 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.115089169 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.195227878 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.196217475 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.282850462 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.146774957 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201196534 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160561863 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.137416764 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187496567 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162751068 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.185537643 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.137144684 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.123307199 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.214163493 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18242852 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.188167003 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.143153538 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.300559189 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15237277 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.128408889 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.186324291 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.221625714 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206765437 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17402903 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.104341992 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.215423274 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19883099 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187554075 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.151691311 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.17474113 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.105342997 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183082253 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.235203099 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185835528 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176271446 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.191985272 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140644874 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169729452 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.185118743 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159631371 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187281102 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166842302 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.102424805 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156582461 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142390933 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108849492 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.190983963 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.128149246 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.221358243 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142554051 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.295669354 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213367772 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.165423322 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.167624134 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170991159 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174275286 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.153388067 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.099716079 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152803039 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.178442244 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163071266 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13747357 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.162750169 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128779137 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.132174616 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158037039 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.103721315 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166006357 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.140462198 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173361376 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171432602 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.109091425 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.171875663 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.155842592 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.165060663 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176965999 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203749731 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138990293 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.113361657 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23542309 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13954318 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.142430323 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.190575762 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.200597805 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.17845184 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143921315 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173937723 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20110252 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.148075563 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202686035 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148807177 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.1385274 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.157304159 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163727031 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.137729739 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.161975873 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135849709 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.158007238 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210636065 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.133528736 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.118895061 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180556956 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.132715491 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108341664 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149767352 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141781138 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.147296735 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.130817022 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.145084158 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16305202 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166015051 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.160680812 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165427554 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123327828 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224565137 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11438886 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.166103535 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.153919482 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.097912188 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.211762784 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201644402 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.109083313 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.218642934 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.174716508 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203340683 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169857455 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13648823 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.187138293 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110343048 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.126221895 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172674353 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.166328491 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.168673314 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.198881036 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199949396 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.172150445 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.159150338 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154707655 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173509813 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.191882027 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163419326 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.15222635 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.168133509 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174854636 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.102440395 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.129731423 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.107824333 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14808555 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136851305 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.113559223 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.212528301 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170339076 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.194379154 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.168204295 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120011261 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.222842519 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.10676448 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171234209 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.178793579 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146055798 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.200609572 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197374191 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173601484 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.149684066 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177153817 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.125149094 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106955775 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.139612054 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.17371926 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.113593581 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.141218956 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149995955 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.198992078 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182423063 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156386245 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210742093 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173347875 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.233749485 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.102125172 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.169856301 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186927352 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163997823 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.168808426 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136771078 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.167513732 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.194334206 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150398441 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200288809 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169669043 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17543782 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205630489 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.163547881 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.13769734 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.155416511 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17607546 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120544857 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.179018542 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.153179851 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141617798 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159904466 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.116289356 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.132429752 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186484645 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152086973 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185716092 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.173550889 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180042204 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.133676964 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149437994 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.169202651 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126794027 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.124442375 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177699211 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203298187 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152005177 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165858155 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190735798 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137003462 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.318181992 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.206195714 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19151634 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.145981052 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150216212 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.168550786 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.175135262 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170078071 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.189908584 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124069725 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188169827 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.166981569 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.150446044 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141103199 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.12887518 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.157014821 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.157929532 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.139164286 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.159490051 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.122882044 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.215888465 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124791183 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.165827218 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172351498 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.154318377 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.16194053 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12171544 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.242639429 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139075253 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185071413 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.162942336 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.182884706 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194005981 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.132269277 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134909341 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.107852281 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.19040906 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139455724 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165190463 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.189991168 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205007208 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16495839 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176143039 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.14558558 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.104890346 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.16586011 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156162286 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206025312 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148745688 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.143733057 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206267538 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.158548776 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.13716217 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.145263392 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.315169895 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.126080965 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188801718 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.129672177 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.283710632 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.132915657 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112965289 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.177316351 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178549648 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.138338559 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.164837117 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168597232 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152360128 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.178486062 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146080451 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.196774288 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213927871 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202749677 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183290028 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.123660021 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.165326295 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169918339 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192475106 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151738449 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.151942366 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169642708 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198973789 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.20284074 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.139832438 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170104007 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1428718 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.166978478 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207233014 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.114644478 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194812988 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138519546 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173182521 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1476354 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.104559089 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165287774 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.1906022 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140320079 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191382574 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165612845 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139378006 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.106408135 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159019164 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166218502 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150212743 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.109981782 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210279649 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.10913405 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171007402 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188029992 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110334938 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.161920066 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.152932528 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136196535 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123772969 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151699457 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141585236 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.151656746 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.221473844 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.111614667 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19258762 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178439006 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170878408 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16674201 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.150683431 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.669467095 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.10731575 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198106634 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.155777269 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194224732 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.156671347 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173283714 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.168600992 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156343248 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175950176 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155161626 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.201017906 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172286931 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.166235983 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138536713 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1511851 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125361543 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.138549221 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160226643 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168914898 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120064458 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.144833739 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.163689617 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154023588 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.150656917 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.119201196 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202397094 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.15503301 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189968411 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.192550764 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145937783 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174167433 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181890152 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136848827 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.168868579 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179278542 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.122636359 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15865494 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.137381068 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.141633398 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16104942 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.131948895 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169044758 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168184343 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.168427703 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169223287 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.115033878 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16776434 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149503792 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168224045 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.105984247 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.161008837 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.164680961 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137714443 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.108159935 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.163226398 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166142357 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.166337825 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.131864108 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.152196964 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198200152 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.131429883 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114639178 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.288016635 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161457184 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.227531932 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.132790917 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.143605036 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150080754 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162475849 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.133540145 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166308522 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.136772987 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11226012 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.137755215 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.187271154 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.172414888 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.163298352 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19126559 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168298749 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196432246 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.114289414 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.269092654 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.146592389 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.163370169 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.111303571 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.135583965 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147601263 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114101371 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153233693 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.198918955 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185885744 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.160095821 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.151882363 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.106008712 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.133210832 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139646815 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.152075425 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160595134 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16628395 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151112723 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.124301583 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124905143 seconds)
  done (took 80.484688139 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.152882289 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.148560214 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.153368728 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.205520527 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.173566067 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.263183193 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.212141364 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.233848375 seconds)
  done (took 2.571050358 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.110070649 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.142056458 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.148184651 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.130643227 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.131469201 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.352118942 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.142525014 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.10629413 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.190215859 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.142926489 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.128173666 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.616954481 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.102866571 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.130872477 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.118584876 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.129273898 seconds)
  done (took 3.841149722 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.092971507 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.510631946 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.607442558 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.231621058 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.243904924 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.160735573 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.691333461 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.168556177 seconds)
  done (took 11.729824707 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.137696503 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.150458257 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.265615515 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.182657762 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.167405312 seconds)
  done (took 1.939393199 seconds)
done (took 121.753184206 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.103672241 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.131774847 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.104686527 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.132818185 seconds)
  done (took 1.492347809 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.118681769 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.092186797 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.120683162 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.087555026 seconds)
  done (took 1.443603585 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.495353424 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.089167114 seconds)
  done (took 1.65008835 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.128601056 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.143913407 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.125275781 seconds)
  done (took 1.436910068 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.111314774 seconds)
  done (took 1.149263408 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.114032048 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.110712767 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.149532536 seconds)
  done (took 1.411431347 seconds)
done (took 9.613265659 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.139716562 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.434855009 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.395216307 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.145954328 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.726183022 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.388704095 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.057446918 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.161364959 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.170630547 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.099586746 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.143666321 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.679013584 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.05019947 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.348381931 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.034851543 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.441239501 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.709924273 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.101283344 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.132573599 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.100613889 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.038372001 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.09788602 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.127040654 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.100457227 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.705683518 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.403633297 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.12756343 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.479816506 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.099114315 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.130292486 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.38858483 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.124435913 seconds)
  done (took 17.308803598 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.143042848 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.186838264 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.133444623 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.101751304 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.129346197 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.101879744 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.134933152 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.112160308 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.185366392 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.12590568 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.119809069 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.125618233 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.104762617 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.126817282 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.121372212 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.125646017 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.102284599 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.129012663 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.106955672 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.127701857 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.119235316 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.124651268 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.102139987 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.128455892 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.098885795 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.13946039 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.099473327 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.138105709 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.099727994 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.132307828 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.130034683 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.101202813 seconds)
  done (took 4.991803967 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.14777013 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.195856217 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.134743633 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.135410299 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.177563473 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.127416759 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.212415565 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.136727566 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.189041032 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.126007856 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.118924688 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.12691741 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.163223288 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.101015679 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.148859523 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.10019839 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.128730034 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.102223214 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.132820602 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.102101812 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.146849704 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.09915164 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.127939003 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.101484893 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.126188186 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.113975542 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.12649734 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.137436169 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.101179229 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.13057168 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.106634067 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.126294574 seconds)
  done (took 5.295382085 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.107309804 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.133703477 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.117794456 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.144250369 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.104458962 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.132130787 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.108313406 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.128905539 seconds)
  done (took 2.015859318 seconds)
done (took 30.648719101 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.122825495 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.140462198 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.116489732 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.135643932 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.136337372 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.124827473 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.112155675 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.098416464 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.136500848 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.116728244 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.126467409 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.100924154 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.141072103 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.10543559 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.142803959 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.109401977 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.148526749 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.142541426 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.101857526 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.110124627 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.127783179 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.150146695 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.106475952 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.100505062 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.153092752 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.131148341 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.118074927 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.130547494 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.10466501 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.126894012 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.116988799 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.13061346 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.101126481 seconds)
  done (took 5.101299434 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.128152748 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.173054759 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.099587059 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.124642606 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.166102721 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.098817353 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.153317515 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.098043084 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.124583553 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.09823853 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.097239596 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.152695615 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.158631465 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.131880302 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.178134587 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.166610277 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.12924497 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.164244365 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.150944483 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.137125911 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.154608138 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.098346478 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.158855103 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.16739557 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.100798082 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.124050513 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.141756734 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.156239509 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.168922337 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.132420638 seconds)
  done (took 5.181509932 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.109764191 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.142794145 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.126942965 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.200687783 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.169154251 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.116129875 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.140701259 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.119123388 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.155371725 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.099008833 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.138610335 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.158123647 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.117886732 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.137877115 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.106027466 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.14127235 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.120851579 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.128991808 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.107402594 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.146017275 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.11913093 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.139654133 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.11506696 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.137714347 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.099526471 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.136618949 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.10543121 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.140782376 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.107617407 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.136473241 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.129996669 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.105295591 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.129399452 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.111589995 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.130227516 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.108321652 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.149284927 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.110408738 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.140284906 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.135248428 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.138023055 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.131372553 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.122942288 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.175526293 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.102681249 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.135132367 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.11153826 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.137568986 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.100036143 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.147185838 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.115442717 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.12897348 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.143293366 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.101138489 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.099409458 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.135667482 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.101765657 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.13158776 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.109001095 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.132731005 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.14725607 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.110302895 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.135510314 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.104147565 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.134330511 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.10072625 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.125509254 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.105646563 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.151947148 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.105939915 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.16008367 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.101036497 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.133970544 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.109597133 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.134788035 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.110554551 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.12689537 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.108304673 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.137026613 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.106264111 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.136414777 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.103752539 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.132112972 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.119002536 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.143757009 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.136329491 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.106225553 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.134355107 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.103824376 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.12949634 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.115381266 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.129798922 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.105037847 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.138367826 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.102183257 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.131302941 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.107716172 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.133045394 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.099639376 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.149271985 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.106820964 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.127702228 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.118348227 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.129439182 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.105212558 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.136816054 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.113306295 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.128021996 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.106098498 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.135760137 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.100227895 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.134193815 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.104177777 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.12725774 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.113247263 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.13986041 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.106448647 seconds)
  done (took 15.666528847 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.249566103 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.229756089 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.201077464 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.311841741 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.151483997 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.127467295 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.225318833 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.181095132 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.130190206 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.169445498 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.184640302 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.190794189 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.101553537 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.161899105 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.229067332 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.318636768 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.161812111 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.170161564 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.141842392 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.152442194 seconds)
  done (took 4.850468926 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.117197546 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.16806976 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.15834789 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.1267417 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.129423666 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.115554344 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.130937682 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.144488511 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.103317856 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.134684803 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.100788163 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.13694533 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.103872206 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.131625665 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.118874267 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.146149731 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.105655187 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.13743698 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.145081125 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.107845904 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.129850727 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.14964066 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.111568341 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.158025403 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.109507074 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.145623963 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.100482907 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.137623555 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.09866299 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.128639413 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.107750535 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.144910772 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.135949422 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.102615219 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.133582791 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.101813255 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.124592349 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.10356229 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.130672326 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.1063097 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.144221338 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.104638587 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.12881465 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.102175119 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.13757208 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.098489672 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.105934726 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.136153742 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.134080969 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.110534024 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.134404554 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.106305207 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.13724499 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.11321637 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.125496682 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.111626967 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.142049567 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.106247485 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.13521358 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.100798443 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.128063606 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.105715758 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.128353066 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.106672602 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.134594345 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.145542338 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.111387938 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.129867114 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.107583299 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.133969088 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.105760065 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.146378872 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.148764833 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.100131992 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.098924287 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.150590928 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.098559394 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.118909515 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.110945408 seconds)
  done (took 10.81645107 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.129532617 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.129946633 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.121206792 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.163889041 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.115585616 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.138841335 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.102068361 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.149946144 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.108292097 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.138126381 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.108045332 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.144759808 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.156147654 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.116397003 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.129186901 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.116776661 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.13297455 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.142653515 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.148831951 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.159304454 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.113340047 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.134179297 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.116159567 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.140476182 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.134377715 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.142414327 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.163841118 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.107743822 seconds)
  done (took 4.777052037 seconds)
done (took 47.432500497 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.17829125 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.336706695 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.131265946 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.130390536 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.164617817 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.152778168 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.131597276 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.324617739 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.726592734 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.121970959 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.129524611 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.136433007 seconds)
done (took 26.725045778 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.178653899 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.691352666 seconds)
    (2/2) benchmarking "String"...
    done (took 1.473642493 seconds)
  done (took 4.215731548 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.123186379 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.116596446 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.361951343 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.117627604 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.116645673 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.132180182 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.114736822 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.118575665 seconds)
  done (took 15.121571253 seconds)
done (took 24.688454747 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.150735081 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.318232315 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.369978808 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.131813358 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.118401711 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.114207877 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.097626008 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.133059212 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.115414586 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.101239855 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 2.099310419 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.38909682 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.099756306 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.487758208 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.096907998 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.138316905 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.107806086 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.331047417 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.108042097 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.146801631 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.093421511 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.093446778 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.155774709 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.125865904 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.115712176 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.118302091 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.135305529 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.09187015 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.291764021 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.134420517 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.148613409 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.107881817 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.147108387 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.109789509 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.207644943 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.133519348 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.305660695 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.093257601 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.098050443 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.110207298 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.308010091 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.471531465 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.104813123 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.093658453 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.104138218 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.148828278 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.093662455 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.77834493 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.117638096 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.085127991 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.121545735 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.470830073 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.097807371 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.120789222 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.102892631 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.323557262 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.109942649 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.11346896 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.123286594 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.098629228 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.110552179 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.096585191 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.120562508 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.097045801 seconds)
  done (took 136.932201527 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.096525421 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.101433663 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.102691494 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.163728826 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.102148719 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.101586471 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.096138723 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.096097237 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.102154088 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.103535677 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.102623745 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.100591198 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.10173168 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.061010994 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.098941278 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.112733121 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.103276042 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.096534342 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.104926551 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.096881461 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.099033923 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.102906127 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.118011253 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.102498333 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.135860456 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.17926796 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.120421923 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.111890127 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.1006117 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.097410759 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.127104788 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.117207644 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.646001661 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 1.955092864 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.110529022 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.102542692 seconds)
  done (took 76.297361513 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.09726104 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.098094548 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.097945309 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.126869476 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.097860527 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.603113155 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.608259867 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.824975128 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.153650389 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.264856488 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.288555124 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.09849426 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.188619816 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.113086917 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.100029443 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.115392524 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.124632272 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.102265511 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.099920811 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.603188427 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.116397795 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.203058426 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.26959072 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.114817975 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.127374579 seconds)
    (26/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.099259937 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.493879646 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.099326015 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.129205322 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.420999371 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.144444666 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.100266538 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.407721263 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.497861172 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.204739617 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.094209827 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.120823633 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.096419869 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.364709069 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.090169549 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.089733173 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.093038528 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.698746054 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.095574532 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.5912757 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.092411403 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 3.989159151 seconds)
    (48/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.090780593 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.087513675 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.087856847 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.101347523 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.673188514 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.106542848 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.08710273 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.088694096 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.086671468 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.086758996 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.116345827 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.080219138 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.196000607 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.087586927 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.090890797 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.11575256 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.08848999 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.095082179 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.088128411 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.661610977 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.148615802 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.229308489 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.591658429 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.092849752 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.181654066 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.204559754 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.087602143 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.087377125 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.089262255 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.089310638 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.195297767 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.087661507 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.461439484 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.25332894 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.104512576 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.24163293 seconds)
    (84/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.094227845 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.18311883 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.089480743 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.413329814 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.094446697 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.08910434 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.759562426 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.182667965 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.089479041 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.089684728 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.089178525 seconds)
    (95/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.090043478 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.460706071 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.594504107 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.256192248 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.092149137 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.497504393 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.089794977 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.471194772 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.582852885 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.718733134 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.092877248 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.199450936 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.254341544 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.105813382 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.089595017 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.242091809 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.096129928 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.145450461 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.096209553 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.484540398 seconds)
  done (took 350.782500758 seconds)
done (took 565.054325417 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.747577462 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.704613266 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.82976554 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.730200406 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.70069908 seconds)
  done (took 9.731567027 seconds)
done (took 10.749891666 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.269411336 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.269736765 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.149261653 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.271172273 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.124764726 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.287821285 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.252835341 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.116148147 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.193462846 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.16771115 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.191918286 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.142452412 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.126876858 seconds)
  done (took 16.583675801 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.34690354 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.096904752 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.172466931 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.320276799 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.13580139 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.340889812 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.371985248 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.097878891 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.237828645 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.108837904 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.111228588 seconds)
  done (took 16.362348455 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.358428744 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.097431622 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.162756792 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.341589201 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.137317964 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.349316209 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.38860388 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.097575804 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.279608622 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.10961527 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.109301456 seconds)
  done (took 16.453675913 seconds)
done (took 50.419671634 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.135406476 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.262742607 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.121623258 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.111608876 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.105182125 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.107275595 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.112638556 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.106273301 seconds)
  done (took 10.086181075 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.103854627 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.105661201 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.10540805 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.103368405 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.102282075 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.106013284 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.105384193 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.103455845 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.105320018 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.105639289 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.105448493 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.106290703 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.103023481 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.103397074 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.102285574 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.105340452 seconds)
  done (took 18.696364646 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.106136449 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.103343321 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.102795339 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.103248809 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.102704343 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.103066903 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.104774072 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.10331167 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.1029492 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.10323443 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.10484132 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.104087906 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.1039546 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.103993281 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.104453482 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.105313947 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.104533547 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.104522943 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.108669806 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.103615631 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.106519924 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.10405914 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.104111933 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.104315909 seconds)
  done (took 27.529162065 seconds)
done (took 57.332817862 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.099992953 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.100486827 seconds)
  done (took 5.22538709 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.16781249 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.166876538 seconds)
  done (took 3.361034428 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.109023441 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.107414892 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.108706175 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.107524796 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.108278167 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.106321198 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.108503442 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.106919815 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.108257723 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.107562777 seconds)
  done (took 12.105039706 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.107767987 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.108095223 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.105494995 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.107248541 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.108877726 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.105594686 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.108387981 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.108071725 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.108961682 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.105842425 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.108130361 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.106243848 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.109226094 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.106199567 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.107844503 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.105820563 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.105469901 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.10570047 seconds)
  done (took 20.955457426 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.124587536 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.130218602 seconds)
  done (took 3.281161254 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.24721558 seconds)
    (2/7) benchmarking "second"...
    done (took 1.148205258 seconds)
    (3/7) benchmarking "month"...
    done (took 1.223974971 seconds)
    (4/7) benchmarking "year"...
    done (took 1.214653888 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.149314812 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.127984702 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.14887998 seconds)
  done (took 9.28714544 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.111095229 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.296956004 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.398518243 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.663454518 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.111377709 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.113541513 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 1.999408191 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.114067725 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.116148014 seconds)
  done (took 12.952370092 seconds)
done (took 68.191817179 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.104424501 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.153087674 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.108647717 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.132802864 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.447257017 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.142930096 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.109553859 seconds)
done (took 15.227561696 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.099095026 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.098817833 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.104200022 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.109095521 seconds)
  done (took 9.439833898 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.067091083 seconds)
    (2/2) benchmarking "read"...
    done (took 1.468413403 seconds)
  done (took 4.564626485 seconds)
done (took 15.032721055 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.112131364 seconds)
    (2/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.112204564 seconds)
    (3/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.108767562 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.111917191 seconds)
    (5/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.110168862 seconds)
    (6/24) benchmarking ("one", "Float64")...
    done (took 1.108813174 seconds)
    (7/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.111158469 seconds)
    (8/24) benchmarking ("zero", "Float64")...
    done (took 1.109066157 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.108480623 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.11203569 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.11147442 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.110979859 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.112137502 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.111392937 seconds)
    (15/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.111321973 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.108799685 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.108417133 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.111486136 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.109405845 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.108338681 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.109735554 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.113370801 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.110460026 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.10981446 seconds)
  done (took 27.681514943 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.113083434 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.109318741 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.112035927 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.112891446 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.10929016 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.113186078 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.112918483 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.109562068 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.112322951 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.112803052 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.109523068 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.109626875 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.113476017 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.11085847 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.113231596 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.111022809 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.113207799 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.110319573 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.114212023 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.110410416 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.113487392 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.111647321 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.110168463 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.114109278 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.110508671 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.111560842 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.11431055 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.11094781 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.113720302 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.111930396 seconds)
  done (took 34.387583405 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.120624114 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.120311556 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.116361588 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.114459922 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.114296624 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.114546114 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.113649881 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.114807926 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.115098527 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.115225797 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.114952398 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.114842344 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.114628129 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.113857099 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.114535318 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.115816542 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.116485308 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.115253869 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.11475363 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.115395851 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.115501495 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.114590015 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.114625113 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.115057444 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.115626835 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.115275857 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.115824032 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.113975837 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.115261261 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.115026643 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.115595257 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.116663205 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.11621438 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.115611204 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.116628078 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.116545476 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.120902002 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.12204205 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.117225299 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.115467942 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.11545786 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.116781378 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.116051467 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.115595253 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.116361724 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.11682728 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.1159725 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.116366187 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.11735889 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.116965701 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.117565105 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.117127148 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.116411875 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.117353126 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.117291468 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.116938047 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.117496207 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.116935544 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.118280432 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.117230645 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.117472469 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.116857789 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.118239638 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.118097054 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.118334653 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.118442957 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.117532424 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.118145973 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.117794093 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.118800857 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.117624895 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.11857866 seconds)
  done (took 81.420631309 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.118804188 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.116445992 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.115985468 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.115966444 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.116186686 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.119353193 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.116180548 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.120077011 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.11612605 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.120143577 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.118674475 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.115978747 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.115919716 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.119730296 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.118356378 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.117071945 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.120371415 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.116279004 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.12057414 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.119882545 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.118511048 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.116781717 seconds)
  done (took 25.630402796 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.120698154 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.121960088 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.117351002 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.121316631 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.118663943 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.120105812 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.119918533 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.120501047 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.11981182 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.117414642 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.117704293 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.119734945 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.118475471 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.11745392 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.118100739 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.119027172 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.122342614 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.120095231 seconds)
  done (took 21.188289269 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.118433064 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.117692353 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.121541507 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.118209006 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.118177812 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.122806821 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.119522591 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.122273256 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.123175961 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.120563324 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.12293684 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.123869554 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.124888568 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.120951108 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.123560794 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.122445021 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.122372152 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.120133382 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.122135965 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.119969175 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.12035524 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.121334353 seconds)
  done (took 25.706072812 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.12301874 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.122289661 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.121041742 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.119246174 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.119730163 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.122264325 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.12264207 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.121174794 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.123986702 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.122100644 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.120606042 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.123609635 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.121804534 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.12075486 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.120382812 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.119768087 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.122860397 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.12057534 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.122236778 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.119526135 seconds)
  done (took 23.469522739 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.123906861 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.12453149 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.122943552 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.12463098 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.12581023 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.125385026 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.126179975 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.125353137 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.126077404 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.126410851 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.124822208 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.124961563 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.128883102 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.128234593 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.128440541 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.125991866 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.126059263 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.127505608 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.127718545 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.125551881 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.126035863 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.128192069 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.127652682 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.12719895 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.125759182 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.125618652 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.125774129 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.126858691 seconds)
  done (took 32.57342632 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.12730706 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.125717601 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.123495847 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.123842674 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.122689383 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.124944641 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.124263939 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.124001932 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.12619444 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.123583524 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.126319111 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.126223529 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.125534443 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.127329043 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.12587515 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.127011712 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.126797343 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.123875907 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.124220431 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.122984692 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.12609683 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.12694 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.126012504 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.124091276 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.123958886 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.126693384 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.124444794 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.123901739 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.127605565 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.124724234 seconds)
  done (took 34.800394165 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.172539455 seconds)
    (2/2) benchmarking "in"...
    done (took 1.165608251 seconds)
  done (took 3.381421926 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.125463815 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.127769116 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.126905878 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.124767286 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.12535327 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.129032208 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.127040883 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.125441718 seconds)
  done (took 10.056202707 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.127869828 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.128114718 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.128397818 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.128217766 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.128950559 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.128741283 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.134764435 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.146008394 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.129015614 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.130510887 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.136495141 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.136231293 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.130582492 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.128587263 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.128314629 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.130648729 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.129703322 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.129733685 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.130151397 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.130210591 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.130347676 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.131898007 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.131381063 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.130626229 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.133142423 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.142049125 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.13459044 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.130493592 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.130175915 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.13344105 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.130812169 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.128293911 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.131806821 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.130671165 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.13235194 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.130794622 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.13965113 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.150392599 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.137763547 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.131153982 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.132287344 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.129819005 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.131410314 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.132439222 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.133254686 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.131505558 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.131750303 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.128959367 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.130675756 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.135154577 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.136665872 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.130648139 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.128493574 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.135828432 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.134138476 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.137588653 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.14896496 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.136340733 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.141034446 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.143174839 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.144252799 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.153692841 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.132703325 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.132634627 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.142163141 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.155199389 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.140230172 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.148313944 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.130048486 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.132576477 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.140011571 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.14495811 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.155987945 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.133466191 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.133934481 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.133909131 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.133077134 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.132640996 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.141000979 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.153424225 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.133642136 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.134726046 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.144215898 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.156234478 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.133580553 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.133878517 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.134029707 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.134882207 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.13556257 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.144121935 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.15280788 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.134524523 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.134241237 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.134118815 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.13461394 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.134651276 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.134281758 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.134440478 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.13143352 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.134215729 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.134527742 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.139069789 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.142327557 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.134879986 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.135936328 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.14241503 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.134852305 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.135068086 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.142176154 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.134783243 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.135926218 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.137724495 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.140809366 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.132403902 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.13982947 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.14284184 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.136022602 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.138400737 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.135361033 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.136557233 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.149995025 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.161778303 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.136424106 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.135845412 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.141214117 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.147208287 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.137150875 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.138942261 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.136207441 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.134032008 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.134943883 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.138049949 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.136876436 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.137605972 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.137218636 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.13813909 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.134160899 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.136535388 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.137804784 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.139612004 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.138856475 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.137827267 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.138763396 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.13938631 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.137703676 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.139767859 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.144531225 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.136827197 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.13839358 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.138596242 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.135374742 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.138314577 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.139458346 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.13876619 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.13808473 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.138342289 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.138242997 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.137824887 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.138936762 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.139497598 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.139098286 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.139463382 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.143724261 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.138964615 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.142125457 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.137791234 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.136144654 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.138789025 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.139450665 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.139814412 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.141760796 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.139201996 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.1424643 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.146725127 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.140129542 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.139682527 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.142162619 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.139795373 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.140050076 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.13981381 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.144369453 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.148208804 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.140224053 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.148094252 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.140752454 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.141577984 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.141087638 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.141002763 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.139752572 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.14217514 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.144113154 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.148983816 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.153803753 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.164740046 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.142567202 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.144519311 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.142300438 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.145344848 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.145649679 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.142450059 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.142220759 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.141996089 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.141477153 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.140384437 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.143587908 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.141541659 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.141603687 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.143297836 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.143063546 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.142803818 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.143489868 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.142920733 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.143247002 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.139925584 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.142911572 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.142617972 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.143279358 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.140079089 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.142247239 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.142331411 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.143327454 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.142712254 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.148836624 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.141050195 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.143643153 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.144383939 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.144038328 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.142487389 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.144243064 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.145727168 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.144746143 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.151051667 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.162417178 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.145239179 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.151075373 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.161862873 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.142821443 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.146321675 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.144797223 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.143141668 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.147401785 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.152144112 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.143938487 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.145062131 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.143410067 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.145028958 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.144851793 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.151009799 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.141957366 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.144537286 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.145552903 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.145801158 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.14229204 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.146416366 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.145682677 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.145595872 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.147523174 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.146567382 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.146298697 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.145944013 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.145740509 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.147439597 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.146303828 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.148925314 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.153391744 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.151919166 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.145006973 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.147630248 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.146598604 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.150962922 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.146598498 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.146212391 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.146792868 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.160280223 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.169635678 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.153930822 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.167344138 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.148434714 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.154954484 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.168502692 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.152272447 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.149614331 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.149940264 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.149506117 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.149760777 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.146537015 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.14890452 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.1467489 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.148756928 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.149267919 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.15336894 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.147931089 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.147789023 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.148291439 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.147722108 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.148650378 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.146959267 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.149064263 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.150193256 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.15027669 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.146918286 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.149380874 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.156766664 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.167579345 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.149913852 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.148298679 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.149384616 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.14780303 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.148912691 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.147538353 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.15266053 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.156542843 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.153023709 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.157155822 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.151458958 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.158827261 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.149683036 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.154117625 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.156834361 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.146622321 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.148704141 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.150057833 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.149144861 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.157352074 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.167736788 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.151650095 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.154419016 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.151540976 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.15283515 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.150110394 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.150507095 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.151582901 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.150111366 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.158543283 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.170731273 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.154964953 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.151513377 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.14909882 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.150730981 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.152827159 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.151294018 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.154511604 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.152571248 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.152486485 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.151406466 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.151180183 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.152478625 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.150503652 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.152059872 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.148091539 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.151794223 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.157668301 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.171085042 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.155831138 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.152805966 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.15894208 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.15227679 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.158749852 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.170620285 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.151772458 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.151691856 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.153034371 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.152726591 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.152390656 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.15306548 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.152690022 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.153374581 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.156835079 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.152016283 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.154803801 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.153595397 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.152809107 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.153252309 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.163172176 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.175608306 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.155529657 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.157720285 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.151007105 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.154525517 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.157355336 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.153370119 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.152216464 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.157313089 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.164580764 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.161571482 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.154757064 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.154268154 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.153944733 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.153030378 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.154526953 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.154771976 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.153646143 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.155612144 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.154681132 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.154715155 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.625478554 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.1532254 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.154098205 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.15528254 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.155317035 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.164165728 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.154805658 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.154991012 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.154408275 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.156487654 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.155747916 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.155458887 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.155231754 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.155488018 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.154380018 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.156492652 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.162653391 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.16113788 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.157820963 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.154545475 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.155278195 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.155525502 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.155521778 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.155758704 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.155949983 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.155458231 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.157129017 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.154800115 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.156889968 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.154362366 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.156006029 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.155223484 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.156228496 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.159931652 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.163131996 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.156610618 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.154412642 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.155173105 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.156728897 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.154813919 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.156224774 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.163699152 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.160516719 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.167281194 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.166177814 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.160498405 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.158073415 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.160161554 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.165317207 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.156030692 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.1579293 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.156892664 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.158738703 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.158034942 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.161106494 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.15870828 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.164296639 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.157849691 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.157053674 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.166383821 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.178295197 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.158131151 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.160325435 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.162058168 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.158350046 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.155736517 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.157760839 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.157725057 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.165540939 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.177950745 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.158433211 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.159810132 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.157643249 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.16026854 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.163989588 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.159143291 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.16018695 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.156331558 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.16063883 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.158602958 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.159826622 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.156958504 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.159273227 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.159633222 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.162308786 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.167096485 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.15682381 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.160290847 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.160052537 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.159654462 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.159731056 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.159835704 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.157756725 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.158029164 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.160214143 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.159882932 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.160776007 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.162540677 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.160353339 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.162143575 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.16158849 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.161298281 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.164063282 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.171445375 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.167546974 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.158096209 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.160228526 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.162107039 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.162747112 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.160425043 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.160604423 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.162014692 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.16301539 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.162260974 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.162463475 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.162058989 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.164962723 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.177041439 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.181685119 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.161730908 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.162260457 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.164236728 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.162804111 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.159183422 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.161940929 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.163024862 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.165244285 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.168818595 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.162776964 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.168073296 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.180937062 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.164389009 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.166476692 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.166092507 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.169486926 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.165075318 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.163519501 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.162739952 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.167743943 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.179288491 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.162371857 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.173055352 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.19167673 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.182421595 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.164910747 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.163693287 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.163733795 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.163616099 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.165877282 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.163678256 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.164876795 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.164539726 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.164321643 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.16585783 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.169872122 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.165382815 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.166861188 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.163851202 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.164838931 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.165889889 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.162278161 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.165337363 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.165095386 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.164706344 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.166395002 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.166442582 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.165252908 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.177926585 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.18854858 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.165916131 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.165805381 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.163424837 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.168587479 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.16848242 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.176352711 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.174102563 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.166055362 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.166482861 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.167677524 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.165696811 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.166871517 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.166444368 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.165835153 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.166506348 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.164626168 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.17874339 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.189617477 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.171520079 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.165817187 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.167722873 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.167339016 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.166954419 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.166474826 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.167650766 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.167968455 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.16991711 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.171099955 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.167691056 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.166437962 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.171100046 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.175698558 seconds)
  done (took 687.278280133 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.165848927 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.166004178 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.16442185 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.1652265 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.166141988 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.164878257 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.16550497 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.164871482 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.165903637 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.166518815 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.166960971 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.166353299 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.166020835 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.166253062 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.165598027 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.166231665 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.165508088 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.166213181 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.166752464 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.166674679 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.166492523 seconds)
  done (took 25.564649575 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.169723646 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.166451336 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.167415881 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.169454593 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.166951963 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.169760511 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.167105311 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.170001988 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.170209218 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.167747424 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.170149424 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.1717206 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.167137007 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.167855595 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.168017684 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.171017729 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.17038815 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.16871188 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.170398906 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.168348408 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.17031033 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.166679793 seconds)
  done (took 26.797923007 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.171052067 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.170639043 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.169851837 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.168132746 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.171243964 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.168159072 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.170670063 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.170538155 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.170892249 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.172007394 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.170632053 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.171704566 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.179930696 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.17676979 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.17310042 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.172191134 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.171417069 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.171565466 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.171815063 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.169844494 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.178230426 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.187614444 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.171647364 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.171079906 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.172667346 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.173705659 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.172727409 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.172603786 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.173077029 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.176510864 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.173267526 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.173336972 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.173605745 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.172165002 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.173279056 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.177831431 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.173118642 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.170939408 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.173924924 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.182804732 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.194961859 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.173512651 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.179181516 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.191821929 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.17371108 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.177043298 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.181413428 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.172949643 seconds)
  done (took 57.45559448 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.747304519 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.759759073 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.760541326 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.762403799 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.763965758 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.762325212 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.76815041 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.767936874 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.759487025 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.762772103 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.761957479 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.763657082 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.769518366 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.769509842 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.768622507 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.765797352 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.768252752 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.768215607 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.77446368 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.772148144 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.762500569 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.766006666 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.764797915 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.764740015 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.762929601 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.762631636 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.761912596 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.76358267 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.766401189 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.760392529 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.767200355 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.770926631 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.769586732 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.760589499 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.759226148 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.758711455 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.765437627 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.763077966 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.765725003 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.762065167 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.769075869 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.767059453 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.765297673 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.768165942 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.773121082 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.762432993 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.762969754 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.761513308 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.760853644 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.768162372 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.767576238 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.763842354 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.765026642 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.76261654 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.76385978 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.768944252 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.769417703 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.768723678 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.764528586 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.764008252 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.76456937 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.767975156 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.766739999 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.767518158 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.769963302 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.765102756 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.765790915 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.767321181 seconds)
  done (took 121.114507977 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.178557313 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.178665374 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.179926995 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.178459466 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.179017965 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.179535988 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.180139548 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.178268959 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.179984208 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.178964706 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.179370804 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.180126559 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.179077717 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.18033643 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.17995661 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.180213248 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.179440643 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.180797866 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.179976574 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.179979856 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.180374141 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.180455958 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.181327851 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.179806419 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.181148129 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.179864097 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.18190553 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.180047283 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.181764048 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.180512305 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.180705363 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.180608891 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.181945256 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.181486917 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.180895819 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.181620181 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.181257291 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.181762733 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.18205015 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.180778009 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.18197673 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.181833437 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.182229311 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.182295797 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.181399382 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.182230447 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.181445556 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.18195312 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.182325133 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.183106982 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.182866713 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.181786266 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.182733632 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.183216072 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.181253989 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.181764646 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.181868812 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.181888322 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.182738172 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.183694602 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.182964478 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.183515856 seconds)
  done (took 74.315476988 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.183951143 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.183278496 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.180560614 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.179560053 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.182802831 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.180296906 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.183891194 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.184041449 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.183301987 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.183352965 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.184034703 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.182293951 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.1827561 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.184261001 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.179667045 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.183489579 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.180816389 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.181058726 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.184417419 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.180574933 seconds)
  done (took 24.742307131 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.181961129 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.183670023 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.181385882 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.181914824 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.186132313 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.184121964 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.187934106 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.187774178 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.18529536 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.186818654 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.185862016 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.186001737 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.182416936 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.182712046 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.184035756 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.18388014 seconds)
  done (took 20.046911203 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.183290055 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.185309294 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.184249244 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.186580458 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.183409729 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.182163001 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.185351654 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.182783656 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.183986634 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.185956344 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.185982782 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.186748685 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.186827984 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.186235215 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.184498406 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.187781269 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.183944147 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.183202008 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.186068414 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.187574095 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.184436607 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.182894428 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.186142585 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.186532887 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.184812629 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.18620299 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.184760916 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.184844726 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.186421222 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.186985384 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.184700901 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.185558076 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.184045365 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.185485416 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.187194198 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.185887403 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.186958127 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.188356537 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.188330102 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.186937515 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.187101086 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.184689101 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.187520975 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.189108972 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.18548687 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.187962507 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.186398228 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.185447847 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.18614694 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.186450334 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.18810255 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.187941154 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.188395951 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.189800159 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.188037932 seconds)
  done (took 66.326180011 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.189418176 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.188383986 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.186102402 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.188660265 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.188714376 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.188287098 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.18933362 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.188193936 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.186378402 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.189237195 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.186651701 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.191186451 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.186886613 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.189257967 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.186807695 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.18947696 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.18648708 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.187653828 seconds)
  done (took 22.486557566 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.18827946 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.18772228 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.189315059 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.187060615 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.187369568 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.190743109 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.187294804 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.191809991 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.189482184 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.189008375 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.187169482 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.190560116 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.190492325 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.190825307 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.188759696 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.188246722 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.190515251 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.191289704 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.188398312 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.18846617 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.191615303 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.192202127 seconds)
  done (took 27.266824269 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.191357023 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.190905068 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.191653715 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.208213862 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.211282249 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.190916477 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.191989385 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.190642856 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.214547362 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.244975485 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.23978838 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.210927985 seconds)
  done (took 15.579651914 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.18978899 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.192563816 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.188786992 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.193160957 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.193037635 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.190288008 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.18983877 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.188791458 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.192605399 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.189860341 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.190299023 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.193315849 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.192478019 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.190250083 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.192767428 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.192838343 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.190771278 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.190367325 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.19230741 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.192838438 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.190596575 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.192332191 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.190725953 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.191040559 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.190342554 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.19059409 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.195648051 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.19248899 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.191303491 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.193433326 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.1943698 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.192054564 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.193546338 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.191848492 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.193906794 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.194215706 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.19243666 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.194536733 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.195075193 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.191831504 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.194612705 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.194468056 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.195010732 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.192570252 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.194442201 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.192540116 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.193144088 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.191876891 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.193679416 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.195635787 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.195330782 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.19470625 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.195697196 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.195201305 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.195639202 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.196688146 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.193952559 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.193253723 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.19718866 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.193526284 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.193530791 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.195835367 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.193416481 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.193607091 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.196603347 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.192392916 seconds)
  done (took 79.838230204 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.194347488 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.193715627 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.193482968 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.194802283 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.194383745 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.193769343 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.194582306 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.193464278 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.194338482 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.194825934 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.199734769 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.195150852 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.19367666 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.194223824 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.194856447 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.195337032 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.193756599 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.195778467 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.194357865 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.198631688 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.194087064 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.195131867 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.194824306 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.194912613 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.195491968 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.197570999 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.195675988 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.194625545 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.194765653 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.19498649 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.195500777 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.195663038 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.196473218 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.194950547 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.196166487 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.196635289 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.195759341 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.195454976 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.195562257 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.198710676 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.196343925 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.198752496 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.196801476 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.196790502 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.196161851 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.19624341 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.196887174 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.196238031 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.196431178 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.1965949 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.197064302 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.197352745 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.196830242 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.19663274 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.196489614 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.196964369 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.197948474 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.197200824 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.19692707 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.20017636 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.197282817 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.19657728 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.200540795 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.197782797 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.197344487 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.196991865 seconds)
  done (took 80.046275744 seconds)
done (took 1650.184655287 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.365342353 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.316549947 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.199319993 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.210528658 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.199343724 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.223836635 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.209604627 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.198693846 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.199160032 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.200873723 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.200116031 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.387513031 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.193705507 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.201299504 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.201039984 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.300909382 seconds)
  done (took 24.917607442 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.225827232 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.209157052 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.316097709 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.225982651 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.231681592 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.38754006 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.268589169 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.211846427 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.372646128 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.254669778 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.200022674 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.232788477 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.209113155 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.197809173 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.242151215 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.389018399 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.452212744 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.198885871 seconds)
  done (took 26.936623775 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.644656752 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.212283445 seconds)
  done (took 4.971810836 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.227499496 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.209001767 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.211417012 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.208042033 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.199933839 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.219456697 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.208183331 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.205151096 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.200212591 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.350979148 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.214068056 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.218747208 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.227961277 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.209415699 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.206707482 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.247829236 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.361154567 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.20744542 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.206558599 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.215053398 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.209985963 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.315482773 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.2508089 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.207926847 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.329408992 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.21434131 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.212565253 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.217246024 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.346404386 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.208029361 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.207957424 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.210863925 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.212614539 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.118708076 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.696977125 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.201026792 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.235265197 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.220050357 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.207654075 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.364034793 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.211104243 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.216726641 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.207035756 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.678671604 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.375295547 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.328453264 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.229912981 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.218410848 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.212535865 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.278472108 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.212406239 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.212830623 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.253825047 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.031853389 seconds)
  done (took 78.528271652 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.219373534 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.203949983 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.383615022 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.229543578 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.203439708 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.202952403 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.22177277 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.485072696 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.237081919 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.203505549 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.53077997 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.766259346 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.221930101 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.250180997 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.054230218 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.267399413 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.205827763 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.219313615 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.206333532 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.206664619 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.749615808 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.209779743 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.205480386 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.370404903 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.243294098 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.713059366 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.217518948 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.204644775 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.206485838 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.204119483 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.722468068 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.228341316 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.259547876 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.209353746 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.474345695 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.576987921 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.538860527 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.214648539 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.245706879 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.207171509 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.217773217 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.701252952 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.55812445 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.207299917 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.208234262 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.710877241 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.207657094 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.215872919 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.217608532 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.456757332 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.208136012 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.207208021 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.224269268 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.228785362 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.205596895 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.275345319 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.280389794 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.717244492 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.207463602 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.206681708 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.232970387 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.20831494 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.214025612 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.210246809 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.20809623 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.561401673 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.354245813 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.206714071 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.559416017 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.719032862 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.223953603 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.788581303 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.228597801 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.236492103 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.42802296 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.219210617 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.220732615 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.707825122 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.210074443 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.208218384 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.543701053 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.209014688 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.532893834 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.228178275 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.210107587 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.763641844 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.215501731 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.274725941 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.21178124 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.225862881 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.209235416 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.212655621 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.486204336 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.262182332 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.207410489 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.206111422 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.224029397 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.207328052 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.207177761 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.215957048 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.784238443 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.233085375 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.207679908 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.210653839 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.207960068 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.225337739 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.208858258 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.21130045 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.474001 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.211288996 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.212032577 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.2082876 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.207270618 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.230709 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.392711974 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.209993715 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.5105273 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.2125833 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.212114921 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.214929394 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.208121821 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.211928139 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.209364695 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.20938779 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.088556206 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.509756541 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.227395902 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.225976257 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.210520691 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.210338106 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.208994228 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.21033917 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.251414103 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.21477635 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.965665622 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.234780054 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.222166268 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.209926826 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.220730337 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.212027059 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.220102536 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.210451474 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.500091132 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.491158814 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.3628129 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.210869693 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.210324779 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.970556137 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.278295775 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.391173553 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.231883335 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.211591526 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.461063279 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.436264803 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.211280049 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.211629959 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.212028571 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.490661459 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.212117167 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.529872301 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.750591706 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.232586842 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.216277201 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.977727991 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.919304843 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.219704334 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.215736546 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.545002059 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.234569496 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.213043355 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.211719121 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.212229928 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.212562835 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.234341721 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.214865272 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.21317655 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.212581219 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.256986327 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.405080841 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.231418483 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.221463818 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.71613868 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.222565406 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.212505036 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.221833854 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.217410522 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.214312633 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.275727492 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.216931578 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.216516386 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.213525567 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.216155615 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.769808998 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.214667985 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.214415113 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.405256017 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.898623075 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.229524281 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.214117593 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.231382656 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.108049167 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.741941877 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.262063166 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.518990892 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.220000843 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.253608653 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.213484829 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.222303322 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.743132956 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.219120291 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.230999767 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.87063943 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.230827167 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.813995966 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.215417636 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.217877026 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.825160229 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.231545261 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.218952773 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.214168686 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.216003671 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.511673525 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.220711182 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.224307341 seconds)
  done (took 470.831735548 seconds)
done (took 607.294248933 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.215052288 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.215421696 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.208740876 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.223140449 seconds)
  done (took 9.992297324 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.225928423 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.222797837 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.223348215 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.22350473 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.224706964 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.222952395 seconds)
  done (took 8.475139292 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.216129238 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.217524653 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.223105102 seconds)
  done (took 7.786911248 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.421907408 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.244842906 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.546604124 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.251471361 seconds)
  done (took 8.597576193 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.224527258 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.22562169 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.224260048 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.225692279 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.227530217 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.228845332 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.225132052 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.226715578 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.228317167 seconds)
  done (took 12.16860043 seconds)
done (took 48.149010038 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/224) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.869549289 seconds)
    (2/224) benchmarking ("map", identity, BigInt, true)...
    done (took 1.366740546 seconds)
    (3/224) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.233981891 seconds)
    (4/224) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.218303201 seconds)
    (5/224) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.355098194 seconds)
    (6/224) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.401234218 seconds)
    (7/224) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.218665664 seconds)
    (8/224) benchmarking ("map", abs, Int8, false)...
    done (took 1.246972081 seconds)
    (9/224) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.257794044 seconds)
    (10/224) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 1.419668541 seconds)
    (11/224) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.318664921 seconds)
    (12/224) benchmarking ("map", identity, Float32, true)...
    done (took 1.317727629 seconds)
    (13/224) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 1.398683298 seconds)
    (14/224) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.233801192 seconds)
    (15/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.373783349 seconds)
    (16/224) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.307786228 seconds)
    (17/224) benchmarking ("map", abs, BigInt, false)...
    done (took 2.205742855 seconds)
    (18/224) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 1.606849246 seconds)
    (19/224) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.325922602 seconds)
    (20/224) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.879329049 seconds)
    (21/224) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.295300503 seconds)
    (22/224) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.230196513 seconds)
    (23/224) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.873922879 seconds)
    (24/224) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 1.324126296 seconds)
    (25/224) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 1.338107013 seconds)
    (26/224) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.225609742 seconds)
    (27/224) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.23969348 seconds)
    (28/224) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.225149568 seconds)
    (29/224) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.331755018 seconds)
    (30/224) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.27353596 seconds)
    (31/224) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.243692649 seconds)
    (32/224) benchmarking ("perf_sum", Float32, false)...
    done (took 1.230004495 seconds)
    (33/224) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.25749514 seconds)
    (34/224) benchmarking ("perf_sum", Bool, true)...
    done (took 1.228703409 seconds)
    (35/224) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 1.418002239 seconds)
    (36/224) benchmarking ("map", identity, Bool, false)...
    done (took 1.240855033 seconds)
    (37/224) benchmarking ("map", abs, Bool, false)...
    done (took 1.241133109 seconds)
    (38/224) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.251266876 seconds)
    (39/224) benchmarking ("map", abs, Float64, false)...
    done (took 1.286024376 seconds)
    (40/224) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.247790686 seconds)
    (41/224) benchmarking ("map", *, Int64, (false, false))...
    done (took 1.31570878 seconds)
    (42/224) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 1.434438863 seconds)
    (43/224) benchmarking ("map", *, Float32, (false, true))...
    done (took 1.350348003 seconds)
    (44/224) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.305685006 seconds)
    (45/224) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.209959962 seconds)
    (46/224) benchmarking ("map", abs, Bool, true)...
    done (took 1.273503236 seconds)
    (47/224) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.089363614 seconds)
    (48/224) benchmarking ("perf_countequals", "Int8")...
    done (took 1.276071079 seconds)
    (49/224) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.279823812 seconds)
    (50/224) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.285967022 seconds)
    (51/224) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.238402237 seconds)
    (52/224) benchmarking ("perf_sum", Bool, false)...
    done (took 1.229319214 seconds)
    (53/224) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.03426138 seconds)
    (54/224) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.323394903 seconds)
    (55/224) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.21056604 seconds)
    (56/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.423095909 seconds)
    (57/224) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.30476687 seconds)
    (58/224) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 2.236104791 seconds)
    (59/224) benchmarking ("broadcast", abs, Int64, true)...
    done (took 1.967341556 seconds)
    (60/224) benchmarking ("map", abs, Float64, true)...
    done (took 1.387835103 seconds)
    (61/224) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.216693699 seconds)
    (62/224) benchmarking ("perf_sum", Float64, false)...
    done (took 1.235616123 seconds)
    (63/224) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.208524169 seconds)
    (64/224) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 1.972975524 seconds)
    (65/224) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.380607339 seconds)
    (66/224) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.251438901 seconds)
    (67/224) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.233703156 seconds)
    (68/224) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 1.525693143 seconds)
    (69/224) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.315195034 seconds)
    (70/224) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.926180894 seconds)
    (71/224) benchmarking ("broadcast", identity, Int64, true)...
    done (took 1.971198246 seconds)
    (72/224) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.255438735 seconds)
    (73/224) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.292211868 seconds)
    (74/224) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.346444746 seconds)
    (75/224) benchmarking ("map", *, Int64, (true, true))...
    done (took 1.417112195 seconds)
    (76/224) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 1.942770893 seconds)
    (77/224) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.241885268 seconds)
    (78/224) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 1.972844669 seconds)
    (79/224) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.261619677 seconds)
    (80/224) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.236862119 seconds)
    (81/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.380156262 seconds)
    (82/224) benchmarking ("map", abs, Float32, false)...
    done (took 1.277585087 seconds)
    (83/224) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.342117456 seconds)
    (84/224) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.300956954 seconds)
    (85/224) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 1.377001924 seconds)
    (86/224) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.890584431 seconds)
    (87/224) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 1.923148767 seconds)
    (88/224) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.303992103 seconds)
    (89/224) benchmarking ("perf_countequals", "Float32")...
    done (took 1.250587542 seconds)
    (90/224) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 2.236794332 seconds)
    (91/224) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.241370276 seconds)
    (92/224) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.303314051 seconds)
    (93/224) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.347905349 seconds)
    (94/224) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 1.969121802 seconds)
    (95/224) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 1.445140492 seconds)
    (96/224) benchmarking ("perf_sum", Int8, true)...
    done (took 1.237288724 seconds)
    (97/224) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.335816142 seconds)
    (98/224) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 2.237068786 seconds)
    (99/224) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.25437738 seconds)
    (100/224) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.210628175 seconds)
    (101/224) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.244894741 seconds)
    (102/224) benchmarking ("map", *, Float32, (true, true))...
    done (took 1.353434582 seconds)
    (103/224) benchmarking ("broadcast", identity, Float64, true)...
    done (took 1.969489435 seconds)
    (104/224) benchmarking ("perf_countequals", "Int64")...
    done (took 1.275468023 seconds)
    (105/224) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.311966838 seconds)
    (106/224) benchmarking ("perf_countequals", "Bool")...
    done (took 1.257020252 seconds)
    (107/224) benchmarking ("perf_sum", Int8, false)...
    done (took 1.23485668 seconds)
    (108/224) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.238989988 seconds)
    (109/224) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.88189886 seconds)
    (110/224) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 1.975593805 seconds)
    (111/224) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.385410284 seconds)
    (112/224) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 1.329875841 seconds)
    (113/224) benchmarking ("perf_sum", Float32, true)...
    done (took 1.236785425 seconds)
    (114/224) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.240058725 seconds)
    (115/224) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.211841427 seconds)
    (116/224) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.354216199 seconds)
    (117/224) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.242435745 seconds)
    (118/224) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.306687533 seconds)
    (119/224) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.374427267 seconds)
    (120/224) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.291890806 seconds)
    (121/224) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.372148465 seconds)
    (122/224) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.295641158 seconds)
    (123/224) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.279726778 seconds)
    (124/224) benchmarking ("perf_sum", Int64, true)...
    done (took 1.234838094 seconds)
    (125/224) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.213750126 seconds)
    (126/224) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.219978633 seconds)
    (127/224) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.27333704 seconds)
    (128/224) benchmarking ("map", identity, Int8, true)...
    done (took 1.280862612 seconds)
    (129/224) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.306132405 seconds)
    (130/224) benchmarking ("map", identity, Int64, false)...
    done (took 1.295781978 seconds)
    (131/224) benchmarking ("map", abs, Int8, true)...
    done (took 1.276464008 seconds)
    (132/224) benchmarking ("map", *, Float64, (false, false))...
    done (took 1.32295745 seconds)
    (133/224) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.116087521 seconds)
    (134/224) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.255589723 seconds)
    (135/224) benchmarking ("map", abs, Int64, false)...
    done (took 1.296935064 seconds)
    (136/224) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 1.566582076 seconds)
    (137/224) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.262442289 seconds)
    (138/224) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.308849282 seconds)
    (139/224) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.214146884 seconds)
    (140/224) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.345427027 seconds)
    (141/224) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.350948969 seconds)
    (142/224) benchmarking ("map", identity, Float32, false)...
    done (took 1.297699674 seconds)
    (143/224) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.248902815 seconds)
    (144/224) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.229550253 seconds)
    (145/224) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.271799354 seconds)
    (146/224) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.247606467 seconds)
    (147/224) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.302908395 seconds)
    (148/224) benchmarking ("map", identity, Bool, true)...
    done (took 1.276089867 seconds)
    (149/224) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.094366089 seconds)
    (150/224) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.370999039 seconds)
    (151/224) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 1.427351107 seconds)
    (152/224) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.411138388 seconds)
    (153/224) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.244639688 seconds)
    (154/224) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 1.454815943 seconds)
    (155/224) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.217869177 seconds)
    (156/224) benchmarking ("perf_sum", Float64, true)...
    done (took 1.243214 seconds)
    (157/224) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.304573279 seconds)
    (158/224) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.319943892 seconds)
    (159/224) benchmarking ("perf_countequals", "Float64")...
    done (took 1.25072995 seconds)
    (160/224) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.310213434 seconds)
    (161/224) benchmarking ("map", abs, Int64, true)...
    done (took 1.376177764 seconds)
    (162/224) benchmarking ("map", *, Int64, (false, true))...
    done (took 1.406274407 seconds)
    (163/224) benchmarking ("map", identity, Int64, true)...
    done (took 1.392462056 seconds)
    (164/224) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.271178664 seconds)
    (165/224) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.267690511 seconds)
    (166/224) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.3628062 seconds)
    (167/224) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.277665122 seconds)
    (168/224) benchmarking ("perf_sum", Int64, false)...
    done (took 1.238972008 seconds)
    (169/224) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 1.562422998 seconds)
    (170/224) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.37620117 seconds)
    (171/224) benchmarking ("map", identity, BigInt, false)...
    done (took 1.311779989 seconds)
    (172/224) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.475747648 seconds)
    (173/224) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.23932331 seconds)
    (174/224) benchmarking ("map", identity, Float64, true)...
    done (took 1.392853269 seconds)
    (175/224) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.319108167 seconds)
    (176/224) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.240942253 seconds)
    (177/224) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.317825552 seconds)
    (178/224) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.244244475 seconds)
    (179/224) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.215162063 seconds)
    (180/224) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.364438382 seconds)
    (181/224) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.35323314 seconds)
    (182/224) benchmarking ("map", *, Float64, (true, true))...
    done (took 1.403494714 seconds)
    (183/224) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.235800937 seconds)
    (184/224) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.261495123 seconds)
    (185/224) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.361494591 seconds)
    (186/224) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.244935452 seconds)
    (187/224) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.267665684 seconds)
    (188/224) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.217980508 seconds)
    (189/224) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.078064069 seconds)
    (190/224) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.338165758 seconds)
    (191/224) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.230069261 seconds)
    (192/224) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.230985351 seconds)
    (193/224) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.250341569 seconds)
    (194/224) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.246905114 seconds)
    (195/224) benchmarking ("map", *, Float64, (false, true))...
    done (took 1.407636975 seconds)
    (196/224) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 1.461974894 seconds)
    (197/224) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.29602235 seconds)
    (198/224) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.28145948 seconds)
    (199/224) benchmarking ("broadcast", abs, Float64, true)...
    done (took 1.973782824 seconds)
    (200/224) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.289031671 seconds)
    (201/224) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.882777283 seconds)
    (202/224) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 1.437835724 seconds)
    (203/224) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.360894082 seconds)
    (204/224) benchmarking ("map", abs, Float32, true)...
    done (took 1.332807882 seconds)
    (205/224) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.255461546 seconds)
    (206/224) benchmarking ("map", identity, Float64, false)...
    done (took 1.299082774 seconds)
    (207/224) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.374883244 seconds)
    (208/224) benchmarking ("map", identity, Int8, false)...
    done (took 1.269257001 seconds)
    (209/224) benchmarking ("map", abs, BigInt, true)...
    done (took 2.24997469 seconds)
    (210/224) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.896089276 seconds)
    (211/224) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.313307436 seconds)
    (212/224) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.373040633 seconds)
    (213/224) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.245936718 seconds)
    (214/224) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.411961443 seconds)
    (215/224) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.929871547 seconds)
    (216/224) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.312433631 seconds)
    (217/224) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.2846699 seconds)
    (218/224) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.45340802 seconds)
    (219/224) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.317281831 seconds)
    (220/224) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.071863623 seconds)
    (221/224) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 2.253604194 seconds)
    (222/224) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.898850241 seconds)
    (223/224) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.422825652 seconds)
    (224/224) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.306737521 seconds)
  done (took 344.325591933 seconds)
done (took 345.45714905 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.289113376 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.419794648 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.258996196 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.260829529 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.287327477 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.233255193 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.284246387 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.248816416 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.244900812 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.246417899 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.248329286 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.254192846 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.266579361 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.27648403 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.355878608 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.251660167 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.261847538 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.245215244 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.285408903 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.302902117 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.286015833 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.288735541 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.255300886 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.261679518 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.291056828 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.290723342 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.266462294 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.243876376 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.243167904 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.285872261 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.235303717 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.272551462 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.294367562 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.296112651 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.286656027 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.246370816 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.287741125 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.420198221 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.278793666 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.28011428 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.248179751 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.293417651 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.254704455 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.255191098 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.294843739 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.256054736 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.292435233 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.367330888 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.235376382 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.248484201 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.297875807 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.306338391 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.249417199 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.246348097 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.246958681 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.367679103 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.247032036 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.293674891 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.247685947 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.289256734 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.360648388 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.293649879 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.307563254 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.29281555 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.249072104 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.267404468 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.247896099 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.306167241 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.246744016 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.290923387 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.290208094 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.253218583 seconds)
done (took 101.225409991 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.309367912 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.244500837 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.345971047 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.24512143 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.343080932 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.3475945 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.242878808 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.242960339 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.243284832 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.620347894 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.243922916 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.244073495 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.23910823 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.245021626 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.328784592 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.246632512 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.244277647 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.614721092 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.246166369 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.316857659 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.240219651 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.24379951 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.246116474 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.632516493 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.244761469 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.246389889 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.325288099 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.248030329 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.590660449 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.242638713 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.245562655 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.597236899 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.347124967 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.264241951 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.256311056 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.254106893 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.348015454 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.263847526 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.335618154 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.328931652 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.357234589 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.285804188 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.245711794 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.240396794 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.248774726 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.248175962 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.244277398 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.274595317 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.245844454 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.246289454 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.584753668 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.257595586 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.255568207 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.245512671 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.245089835 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.268567472 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.246041704 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.249391138 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.33709186 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.248235136 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.317066455 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.625600941 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.632837525 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.251682108 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.24970226 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.248066802 seconds)
  done (took 98.708185568 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.315985182 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.323920763 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.359609209 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.265966421 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.300914597 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.363747153 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.265137059 seconds)
  done (took 10.348093275 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.253709814 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.25110318 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.298507696 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.298196917 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.249437758 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.464200784 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.250459453 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.260695397 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.247377752 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.328146758 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.252177614 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.25133088 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.256205776 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.249636848 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.298728439 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.262261853 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.365805808 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.253270095 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.251611021 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.404288261 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.249275019 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.258049392 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.32776946 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.262558655 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.253089279 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.258202855 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.194980871 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.250590746 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.249348791 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.250902994 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.248534345 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.36474864 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.252847032 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.252531888 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.24945433 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.410973073 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.251511586 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.249243202 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.253281967 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.25314504 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.251500834 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.251993387 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.253082554 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.248121639 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.253076351 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.2771704 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.252942772 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.252761432 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.253001041 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.253116143 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.328551076 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.254100615 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.250072693 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.251398677 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.329952465 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.260539947 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.254118306 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.249592965 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.253406115 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.250250662 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.406728279 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.302364754 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.253674509 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.302475837 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.25362689 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.254523105 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.25209258 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.253524845 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.345775227 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.252741939 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.301873295 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.251056094 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.474664055 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.276265901 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.255553902 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.258889298 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.257115013 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.254358256 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.252580933 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.260428945 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.253461987 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.25598168 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.260401633 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.251003821 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.252061084 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.447146453 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.411887703 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.252244753 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.269424556 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.262857681 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.253136952 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.331150486 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.25556408 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.252825993 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.306187838 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.370350058 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.334549327 seconds)
  done (took 130.215518764 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.259835754 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.26471348 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.259197808 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.27847396 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.257503893 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.254705901 seconds)
  done (took 8.732577069 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.257777381 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.258652993 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.257584451 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.256245003 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.255931213 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.257307504 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.257017483 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.259603527 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.260616619 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.257129128 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.255670669 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.259048062 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.258322492 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.258429255 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.25722128 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.258807209 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.256821168 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.255322282 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.257292776 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.25761883 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.258665074 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.257180524 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.258420652 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.258929099 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.263079468 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.25859663 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.26634214 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.258970933 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.257585758 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.267067256 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.278086899 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.259346762 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.260676425 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.265309526 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.262265498 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.261839305 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.261336735 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.26044355 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.25765896 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.260246872 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.260796031 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.258495598 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.25984705 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.259932926 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.261637904 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.265740703 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.263948791 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.26735 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.260756023 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.262650169 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.261749426 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.259298375 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.260306172 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.262942186 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.263298467 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.281124322 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.264371405 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.260772712 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.260346659 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.261665353 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.262047712 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.259740567 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.263661892 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.264144732 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.258870378 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.262577416 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.26317272 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.263993861 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.263530141 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.261543867 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.262657505 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.260302702 seconds)
  done (took 92.950667886 seconds)
done (took 342.104848882 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 3.176955576 seconds)
  done (took 4.341335978 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.274390194 seconds)
  done (took 3.441679729 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 21.765266149 seconds)
  done (took 22.93321237 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.319013924 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.2837195 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.257948542 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.25510178 seconds)
  done (took 10.282909322 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.522441142 seconds)
  done (took 3.68765812 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.256027356 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.268410571 seconds)
  done (took 5.691204095 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.508964378 seconds)
  done (took 3.67479072 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.574613426 seconds)
  done (took 3.741317305 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.278657404 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.271627407 seconds)
  done (took 5.724991725 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.255862718 seconds)
  done (took 3.422254273 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 15.085675945 seconds)
  done (took 16.253773569 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.258034691 seconds)
  done (took 3.428795126 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.296283809 seconds)
  done (took 3.462902908 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 4.88439529 seconds)
  done (took 6.051000411 seconds)
done (took 97.302919172 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.255046153 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.257421763 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.256229332 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.256435636 seconds)
  done (took 10.191932932 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.315269337 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.315722991 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.315315 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.315368386 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.315105747 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.315628856 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.290466538 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.290246099 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.315670826 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.316741835 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.316058563 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.315567276 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.315323313 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.290154141 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.317673378 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.32096211 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.316021579 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.317508375 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.289836109 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.319255144 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.2668518 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.320133024 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.316028015 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.266268731 seconds)
  done (took 32.561440469 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.78025876 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.336958713 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.419045588 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.315459321 seconds)
  done (took 7.019603689 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.343159476 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.343745079 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.355509719 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.394947068 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.407571256 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.355683033 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.291493131 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.287367129 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.272582374 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.343216068 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.393867159 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.335280896 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.422757066 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.266851192 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.473516897 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.265622348 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.265458049 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.344466668 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.39591569 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.408376178 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.26712257 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.345810664 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.3450452 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.347037098 seconds)
  done (took 33.441525833 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.274029527 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.279742419 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.265448032 seconds)
    (4/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.282353205 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.265687515 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.266434206 seconds)
    (7/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.267092984 seconds)
    (8/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.27292257 seconds)
    (9/20) benchmarking ("sum", "Int64")...
    done (took 1.265179922 seconds)
    (10/20) benchmarking ("mean", "Int64")...
    done (took 1.265124133 seconds)
    (11/20) benchmarking ("mean", "Float64")...
    done (took 1.266339353 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.281276963 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.269656266 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.265832895 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.274474984 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.268389012 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.273431489 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.270193761 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.266798162 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.27344739 seconds)
  done (took 26.585440557 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.261403179 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.260336928 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.613709206 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.517464932 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.260583819 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.265737246 seconds)
  done (took 13.350197101 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.339757747 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.499222955 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.272202418 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.627242871 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.71998801 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.275059831 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.269233308 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.515293652 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.83853589 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.816633902 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.331553594 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.344242166 seconds)
  done (took 19.022336437 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.26667199 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.267152294 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.272615389 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.285247536 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.324610191 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.293720726 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.276052286 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.262612715 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.330806957 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.349605069 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.296511483 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.325504705 seconds)
  done (took 20.724114026 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.360620773 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.262237853 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.264076336 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.345668002 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.264101585 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.106182304 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.270021606 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.96206622 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.286416353 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.538135033 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.265316425 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.363866252 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.519339073 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.280215105 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.271301981 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.264566389 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.496157775 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.756283898 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.266981124 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.276030399 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.304124133 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.267976213 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.269916333 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.481714069 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.273989811 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.265476055 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.527728416 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.264893146 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.551366219 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.27960683 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.277358431 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.265614762 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.540555858 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.945357846 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.382658497 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.478642303 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.277295292 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.268387868 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.261812888 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.267507516 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.271316041 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.268741391 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.277915316 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.265335351 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.267395309 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.265751822 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.984703779 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.294995725 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.267356576 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.271231824 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.533955822 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.367431119 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.272714849 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.268485705 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.323572372 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.267621112 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.27265907 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.358711217 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.858386216 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.268541878 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.292216558 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.291845746 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.276361339 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.270165534 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.881082295 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.274547741 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.274444443 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.272704209 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.269028261 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.277017107 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.290017381 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.269269541 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.293372199 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.270391925 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.990876153 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.272946148 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.271736767 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.820738752 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.278989995 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.276556593 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.502152278 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.269499437 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.269674339 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.268997352 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.270882524 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.97467316 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.27879352 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.255315196 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.313386737 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.97603257 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.507684083 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.298255375 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.300849103 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.495868479 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.258308908 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.272121831 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.284589909 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.275377217 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.294422494 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.977550112 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.290077419 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.278372905 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.531529511 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.485179389 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.284161922 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.269981041 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.745505977 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.297440959 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.29425186 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.283688314 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.495358877 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.867656767 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.289612737 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.274244044 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.313292692 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.273467433 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.018969495 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.279355704 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.381326998 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.274877972 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.558367663 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.065965905 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.275960445 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.342987668 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.279335794 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.274688114 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.27734037 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.27703632 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.275563763 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.483570953 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.311920942 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.292413567 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.275492297 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.275685368 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.273310952 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.2960451 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.275865702 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.49916632 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.277185573 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.556437465 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.276028097 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.275741702 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.276060422 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.499728168 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.286231613 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.610852754 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.538021099 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.28676795 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.295251141 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.292801954 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.29635676 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.379838258 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.298028496 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.287123517 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.53795489 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.281153864 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.281518374 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.275430265 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.304418129 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.282051373 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.284327992 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.291698765 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.86157037 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.259417782 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.282340526 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.164108321 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.2896177 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.343318269 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.281234454 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.490506472 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.286718623 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.279488136 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.282376546 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.281238309 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.500263694 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.284351668 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.282547004 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.359024134 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.738742553 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.877988689 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.294738829 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.275098445 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.273187937 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.272120119 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.274672618 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.27452592 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.275466433 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.486012368 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.294399782 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.288675293 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.863444511 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.28257447 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.274133068 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.285237121 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.286742364 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.280472861 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.2750103 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.271732202 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.274116456 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.295796668 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.292787557 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.418096925 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.289027044 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.276871225 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.791685372 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.280334345 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.275513335 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.274024618 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.309927303 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.273662585 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.072305674 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.539487031 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.278903922 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.537119526 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.28213105 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.314148315 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.274279481 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.278983928 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.282500053 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.286748477 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.301114263 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.286296741 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.273708046 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.296414044 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.85490626 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.002056302 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.806917918 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.281242312 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.279933818 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.27915193 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.975446308 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.292725317 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.27468638 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.510201168 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.981737684 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.293453788 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.739616657 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.291016409 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.020619896 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.535656543 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.513912097 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.273786278 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.276348606 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.537480979 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.493633799 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.311820238 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.286953668 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.280951231 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.262164795 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.817030402 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.304599069 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.35875249 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.975496152 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.292915849 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.283520974 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.304594663 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.275501233 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.667659295 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.293671083 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.276807738 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.274178183 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.296685667 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.119452546 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.28284417 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.277202361 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.889555496 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.294067037 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.74384291 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.294874578 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.4875726 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.295233991 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.283022982 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.275930813 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.28101582 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.538555411 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.535335944 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.284039284 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.278030416 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.813543336 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.152374631 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.284347678 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.277553254 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.008215851 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.27870878 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.564822873 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.285953455 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.309564929 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.286467428 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.278985004 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.278132952 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.275925611 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.287057335 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.253023449 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.761576878 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.285065779 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.2927961 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.296575424 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.284775906 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.534547264 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.293374658 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.853421462 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.516317082 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.29899038 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.30431356 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.284378943 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.283549405 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.272761229 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.279093399 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.281292889 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.369577253 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.503758552 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.284936898 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.267268481 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.353357416 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.509228891 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.280939239 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.286740299 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.522685713 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.285269719 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.280896909 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.029053843 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.320720085 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.28912088 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.288128679 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.300824695 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.30176717 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.352598757 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.4905953 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.300326264 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.293903791 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.674448829 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.305164306 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.306896851 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.296440816 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.37828403 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.28198764 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.287998979 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.07634223 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.860090329 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.015021332 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.866539961 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.545444712 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.289010745 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.291243163 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.285222427 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.445503431 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.283327341 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.558193567 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.281917293 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.299783057 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.306298429 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.292125815 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.287871427 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.50028642 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.558102491 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.282922045 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.282932382 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.289579103 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.283381762 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.295239243 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.495403625 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.765917389 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.830260382 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.285422778 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.284533772 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.006524919 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.576759715 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.285242917 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.283780767 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.284941779 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.307569011 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.30912638 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.292077991 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.285800209 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.450706154 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.539125444 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.936542599 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.313370565 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.314107798 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.058376598 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.300611479 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.544153672 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.283269204 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.501073099 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.873515878 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.980244807 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.557310199 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.354542962 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.494489346 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.290464639 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.4483713 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.293168217 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.290898681 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.285983365 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.287953085 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.283511294 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.298524664 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.867012418 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.552898184 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.290224208 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.294538366 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.323951535 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.297613363 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.509543825 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.987667076 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.510339338 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.295985722 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.290582342 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.286699236 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.86728804 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.545106007 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.293670304 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.291683518 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.520805945 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.293396709 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.309808031 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.804526554 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.284089195 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.827693335 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.259638294 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.309911276 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.300666469 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.987274973 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.867984642 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.28714838 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.791727865 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.290498129 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.287913011 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.568264424 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.292561788 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.301720672 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.569100245 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.292191975 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.300487154 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.50432446 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.867675283 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.038206836 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.301634329 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.321428968 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.292168238 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.289085089 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.349400283 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.307000846 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.290867558 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.695889677 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.306742001 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.289299932 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.302254248 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.287580046 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.290581221 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.307792751 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.289740438 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.296312843 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.291927454 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.277404692 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.319407204 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.387308809 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.837600482 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.308707293 seconds)
    (460/481) benchmarking "2d"...
    done (took 1.962022744 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.616942809 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.544992855 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.290763386 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.283376988 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.296066093 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.291881388 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.291234242 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.291969769 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.291809966 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.853924365 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.294523434 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.307445217 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.295124247 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.291678368 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.502709204 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.294245979 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.501748806 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.309985031 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.314331128 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.27850054 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.291451689 seconds)
  done (took 930.678741636 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.318009483 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.29875285 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.309671417 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.330596848 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.341975466 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.338068396 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.297391193 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.364420657 seconds)
  done (took 19.798665361 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.306518912 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.306921968 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.307264078 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.303624343 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.303679529 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.755661978 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.317142783 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.301664194 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.309582865 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.296475701 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.300918172 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.280938414 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.306323507 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.30591539 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.30319717 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.309592073 seconds)
  done (took 31.517933152 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.159680327 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.406445272 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.02348688 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.305498289 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.323734281 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.297770611 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.482122026 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.325624732 seconds)
  done (took 25.528788449 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.307129979 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.307197036 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.306780855 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.308550447 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.307740293 seconds)
  done (took 7.741661345 seconds)
done (took 1179.329601591 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.300940777 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.304289067 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.302399755 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.304070243 seconds)
  done (took 6.416103704 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.285450539 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.285720197 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.284743765 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.297929486 seconds)
  done (took 9.358019551 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.979177893 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.927233481 seconds)
  done (took 5.110613676 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.77188967 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.772610274 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.776015006 seconds)
  done (took 6.522732393 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.604067239 seconds)
  done (took 2.808541549 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.197406408 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.300330597 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.96699446 seconds)
  done (took 7.669340382 seconds)
done (took 39.088503451 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.302211754 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.545961653 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.455070587 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.296452774 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.458516946 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.453368717 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.030712121 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.300905442 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.305983143 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.303931266 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.302587503 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.45872076 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 3.017389302 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.546778395 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.01700562 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.640800367 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.458751799 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.296448503 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.312815238 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.297385397 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.031552491 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.304177584 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.29615398 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.297185652 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.463750056 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.442015914 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.306910099 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.642433093 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.302757603 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.297769107 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.458684941 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.302159568 seconds)
  done (took 80.15220922 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.30655906 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.298736496 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.311933892 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.299784026 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.298479356 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.310363486 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.297199836 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.299952615 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.309734165 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.310159424 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.300633259 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.29793968 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.301769081 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.308694861 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.299189936 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.310273746 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.297380184 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.312372557 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.29966902 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.313704485 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.301186397 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.310882019 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.298668086 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.298317175 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.31446869 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.315732556 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.299891841 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.299692744 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.299242342 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.300011829 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.315500681 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.301128718 seconds)
  done (took 74.945094701 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.304438028 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.298737502 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.299874637 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.305164475 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.313274917 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.30043513 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.304486247 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.302379856 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.312917162 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.314859543 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.303019021 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.300843303 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.317443138 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.309675802 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.301288862 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.299597341 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.301633804 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.310853864 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.302821512 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.314670359 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.304340754 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.301744232 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.302381476 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.300893313 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.301507493 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.30280719 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.301455011 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.317938487 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.304888937 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.302786579 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.319412849 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.302838005 seconds)
  done (took 74.989035978 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.581009742 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.310305637 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.310735487 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.30317947 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.310879819 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.310781777 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.303888794 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.586177891 seconds)
  done (took 14.226172823 seconds)
done (took 245.516702808 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.302307759 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.511561564 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.335658592 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.302897102 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.334316944 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.331212189 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.527252095 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.351014483 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.526121012 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.324844296 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.329616022 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.303233591 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.578693565 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.464541642 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.226506683 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.311004313 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.64431559 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.321736802 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 1.572280658 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.579843184 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.336849897 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.30625045 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.2068473 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 1.65645437 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.311771772 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.389322363 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.412731117 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.52417519 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.467893955 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.386645061 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 1.532210698 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.308570688 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.311456589 seconds)
  done (took 59.540152299 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.311168347 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.428107448 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.312625697 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.314097857 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.435224812 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.3126291 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.3112508 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.312657265 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.313598832 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.311836934 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.315883436 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.318871264 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.319655669 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.363178642 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.441008968 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.332613745 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.314222577 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.433684654 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.311456816 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.30638478 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.355676385 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.312202524 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.315609012 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.358005279 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.313095836 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.314615919 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.436590713 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.314830439 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.311281874 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.433324004 seconds)
  done (took 41.497458765 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.315697961 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.561195647 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.746835706 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.3267029 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.315474946 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.321395721 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.389295545 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.319172657 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.318874014 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.320279176 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.466420925 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.31860634 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.352940055 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.765705829 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.32550278 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.317206175 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.316673758 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.317444343 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.570312593 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.333226265 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.410998602 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.324011509 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.392059213 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.333912196 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.338429464 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.320058736 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.321814739 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.890032662 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.32683349 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.46757178 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.052924016 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.39280947 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.867596694 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.753651461 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.06935151 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.3253476 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.318130159 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.473175847 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.318565472 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.319001128 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.39355868 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.322670078 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.752313091 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 1.972027134 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.337201776 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.317665321 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.906660397 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.478007499 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.549929971 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.335020302 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.772899169 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.321828612 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.319538988 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.320302455 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.552573873 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.320472149 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.317949269 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.915004901 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.343399288 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.393436347 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.325693197 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.321542412 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.571043408 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.325623731 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.56561128 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.328285723 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.327721206 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.338909932 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.746601591 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.327169593 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 1.985329408 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.347227248 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.322501479 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.472554269 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.568312153 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.950647483 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.345924952 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.574568779 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.882962605 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.398229377 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.332300109 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.882361257 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.403513607 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.330474339 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.322561947 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.323614738 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.32143339 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.374567021 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.393371167 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.923115627 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.978928344 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.935132772 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.412201849 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.332798454 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.322680833 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.917413153 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.337124261 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.322255055 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.743422713 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.980748387 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.338889229 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.328601065 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 1.991718118 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.341627949 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.398908318 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.333641953 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.764050004 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.327058663 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.372592959 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.325028312 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.329823708 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.346210256 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.39734377 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.332756651 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.322924455 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 1.968831422 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.495952915 seconds)
  done (took 174.827802818 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.33090294 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.316011161 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.327004561 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.316700627 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.315809813 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.325984887 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.316563835 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.318414863 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.322690614 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.316299509 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.316101324 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.325362621 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.323247473 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.316163102 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.317828072 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.316386569 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.31697328 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.324655336 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.322832773 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.317060084 seconds)
  done (took 43.624315294 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.32474093 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.865025289 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.456030869 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.350997004 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.322191868 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.3258971 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.378486823 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.323412457 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.322083625 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.615865458 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.495929002 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.347279308 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.323253102 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.322485811 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.449734343 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.340670418 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.61550342 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.874684277 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.332603877 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.863297754 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.316198666 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.327373292 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.324630021 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.871274952 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.622118545 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.402657557 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.389145669 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.867820385 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.322842071 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.324878403 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.863049164 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.328286249 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.325478525 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.86045881 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.342509671 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.331865306 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.322873712 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.382307767 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.387009737 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.622592419 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.937644826 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.398436328 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.344977489 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.67718355 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.32888658 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.316581356 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.86889359 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.346046546 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.316572979 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.327649603 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.335124504 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.467645538 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.334414223 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.467510556 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.331369486 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.329834157 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.869627269 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.4680398 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.460739828 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.519449255 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.34971561 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.400410741 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.334488881 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.870379097 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.345731535 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.329496174 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.329994921 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.494727378 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.892422767 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.400998354 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.625947603 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.62046577 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.329112693 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.385812641 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.349592878 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.682237114 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.382815989 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.759006674 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.622442165 seconds)
  done (took 117.96318677 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.57696746 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.442360383 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.485468041 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 1.935648023 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.325946593 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.44653901 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.440151407 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.584187145 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.329673027 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.420833867 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.536640324 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.409451991 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.026299916 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.400887153 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.422550847 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.472484501 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.469886698 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.329763239 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 1.987326902 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.512219694 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.350268491 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.541260117 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 1.918390872 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.510491412 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.33009206 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 1.899987658 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.244672749 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 1.975743248 seconds)
  done (took 50.55390173 seconds)
done (took 489.215334994 seconds)
SAVING RESULT...
DONE!
