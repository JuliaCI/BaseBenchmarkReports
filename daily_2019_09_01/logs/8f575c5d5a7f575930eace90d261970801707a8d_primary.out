cset: moving following pidspec: 7745
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.351474304 seconds)
loading group "string"... done (took 0.551487247 seconds)
loading group "linalg"... done (took 7.036307013 seconds)
loading group "parallel"... done (took 0.159413085 seconds)
loading group "find"... done (took 1.110913304 seconds)
loading group "tuple"... done (took 1.747849935 seconds)
loading group "dates"... done (took 1.247636678 seconds)
loading group "micro"... done (took 0.220692468 seconds)
loading group "io"... done (took 0.912848488 seconds)
loading group "scalar"... done (took 36.150216873 seconds)
loading group "sparse"... done (took 11.059338652 seconds)
loading group "broadcast"... done (took 0.908804839 seconds)
loading group "union"... done (took 11.806731834 seconds)
loading group "simd"... done (took 4.130677069 seconds)
loading group "random"... done (took 8.507982554 seconds)
loading group "problem"... done (took 1.865519123 seconds)
loading group "array"... done (took 19.781255029 seconds)
loading group "misc"... done (took 1.660833907 seconds)
loading group "sort"... done (took 3.085130992 seconds)
loading group "collection"... done (took 16.621487494 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.485549256 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.122767481 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.114225915 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.118541266 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.134409544 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.114157184 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.122285508 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.0835595 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.784591868 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.146602325 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.118359187 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.415272111 seconds)
done (took 5.073836339 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.173758429 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.082910889 seconds)
    (2/2) benchmarking "String"...
    done (took 0.081823447 seconds)
  done (took 1.291324817 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.065317231 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.122019294 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.065689198 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.066328558 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.066721551 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.065919948 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.066426883 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.065902876 seconds)
  done (took 1.647265246 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.072708624 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.068589372 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.068564513 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.067997485 seconds)
  done (took 1.409887194 seconds)
done (took 5.725640741 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.763405428 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.202572747 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.182559974 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.398735373 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.128216321 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.153724387 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.648552991 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.310004724 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.18569222 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.084402282 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.10402468 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.317720204 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.10711082 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.644071778 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.074149472 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.089658456 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.137911161 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.414603653 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.066913178 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.081638788 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.088544922 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.12857675 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.085086359 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.0743493 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.14432508 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.068138144 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.130055631 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.079810988 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.066273937 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.207073212 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.172148563 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.653784455 seconds)
  done (took 10.163569575 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.096099786 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.097154004 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.068749822 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.136526464 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.095759261 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.069365718 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.070569488 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.06718153 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.086420152 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.127986733 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.088701413 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.101120999 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.065260982 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.068382563 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.084206722 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.203861176 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.079985591 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.081780671 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.070033875 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.075127906 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.116386017 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.077836701 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.077762844 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.077503639 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.1281029 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.179774105 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.098203729 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.097454195 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.066540691 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.08023608 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.114248892 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.125698582 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.065236423 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.066049752 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.124430126 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.094140775 seconds)
  done (took 4.595107188 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.926511802 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.14027138 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.090568161 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.131075586 seconds)
    (4/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.083410863 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.064228609 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.10705522 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.065348853 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.083159425 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.199679236 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.370186739 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.571149395 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.110458791 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.100621261 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067193538 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.068063006 seconds)
    (16/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.090680651 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.06621261 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.339330885 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.105547199 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.102915291 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.080569027 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.069169549 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.067940316 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.341148245 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.06713281 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.063266772 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067391549 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.057567425 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.122417085 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067481919 seconds)
    (31/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.06326849 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.921625587 seconds)
    (33/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.124869262 seconds)
    (34/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.066991885 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100543528 seconds)
    (36/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.169067002 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.218021699 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.142529857 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068493385 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.064773655 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.150060873 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.072765341 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.065794764 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.083540807 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.103694166 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.112308491 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.065034947 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.066924198 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.16235719 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.064850235 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.078314786 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.998592417 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.152658097 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.075711043 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.064222542 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.247568244 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.085766373 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069819179 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.065060894 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.208393497 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.137491739 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.067443561 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.066801668 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.06791946 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.069346278 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.348942177 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.065987107 seconds)
    (68/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.063739444 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.066896954 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.077279741 seconds)
    (71/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.996483235 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.069013007 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069013512 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.072592108 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.071924358 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.085489739 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.065733451 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.075316652 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.06561174 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.065868157 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.066571317 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.0845703 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.358866023 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.066180646 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.067901012 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.06435738 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.085650397 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.096524047 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.066137417 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.064576278 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.099657798 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.175528093 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.066520815 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.105800387 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.067024757 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.084788496 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.069142882 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.116172774 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.067900169 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.112108569 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.066005446 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.096713158 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.070169895 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.098904734 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.08122694 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067947861 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.396643241 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.06460422 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.064618377 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.068060447 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.065800609 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.067288175 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.066381592 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.078925484 seconds)
  done (took 21.209631313 seconds)
done (took 38.024805995 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.270609995 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.074882654 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.075320238 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.075063354 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.074989133 seconds)
  done (took 1.791368448 seconds)
done (took 2.99738238 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.119883458 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.098299422 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.063952925 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.095673047 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063687604 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.09960948 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.09876468 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.080607602 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.098763163 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.064212003 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.09550724 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.063933849 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063948685 seconds)
  done (took 2.32925822 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.083052147 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.083695962 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.069508176 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.0814986 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064030745 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.081581411 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080363772 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.087827253 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.080390405 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.07165922 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063532188 seconds)
  done (took 2.045464872 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082698617 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.083266734 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.069448049 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.081015856 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063260917 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.080926379 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080529163 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.084725898 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.080760326 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.072978551 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063410373 seconds)
  done (took 2.036512198 seconds)
done (took 7.604480248 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.078711077 seconds)
  done (took 1.261878499 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.591945456 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.195002265 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.081000213 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.112097243 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.184001223 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.119408273 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.279874086 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.086488866 seconds)
  done (took 9.015415526 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.089005501 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.069577739 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.082978748 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.070959717 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.068236968 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.072026099 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.071130847 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.068260529 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.070412321 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.068840848 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.068355576 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.071285546 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.071287864 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.068622709 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.070535036 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.068943807 seconds)
  done (took 2.407480235 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.091845105 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.09027933 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.072809563 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.074282973 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.071796068 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.071672245 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.074230457 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.072771527 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.070444174 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.071357936 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.074413009 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.073445121 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.071324269 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.06487259 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.073718127 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.075354974 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.070733131 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.073936438 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.074837366 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.074914772 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.074107795 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.064219269 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.070974539 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.073270698 seconds)
  done (took 3.065052174 seconds)
done (took 16.944410649 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.113001239 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.072131698 seconds)
  done (took 1.376085444 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.081863495 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.082442288 seconds)
  done (took 1.364008476 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.082915827 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.065277527 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.090306402 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.077584842 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.065990109 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.065882503 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.08696078 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.066045433 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.065860098 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.066161631 seconds)
  done (took 1.932617789 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.068863221 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.078072926 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.069999637 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.080813634 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.073400256 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.064312066 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.072713848 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.06756701 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.077553193 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.062341537 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.070959595 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.082004584 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.070982224 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.083307488 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.071959559 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.068213981 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.070874338 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.066733168 seconds)
  done (took 2.505655175 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.066606476 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.067083468 seconds)
  done (took 1.343161927 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.067322841 seconds)
    (2/7) benchmarking "second"...
    done (took 0.063353948 seconds)
    (3/7) benchmarking "month"...
    done (took 0.066703635 seconds)
    (4/7) benchmarking "year"...
    done (took 0.067014276 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.062892337 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.062290793 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.063013124 seconds)
  done (took 1.657378627 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.383340788 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.110687387 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.293105909 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.06993276 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.08121402 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.249957851 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.065343141 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.070353266 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.070762426 seconds)
  done (took 2.642604028 seconds)
done (took 14.029769268 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.07879528 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.084963705 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.093715751 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.364344029 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.091586679 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.065548655 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.113702644 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.188020089 seconds)
done (took 2.30205517 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.21155287 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.612110074 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.378671868 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.193765963 seconds)
  done (took 2.394575333 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.323785728 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.086207703 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.058373451 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.06621028 seconds)
  done (took 1.755675598 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.06627089 seconds)
    (2/2) benchmarking "read"...
    done (took 0.068870652 seconds)
  done (took 1.349034439 seconds)
done (took 6.93117359 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.066823875 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.065709352 seconds)
    (3/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.081893894 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.063027497 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.065883148 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.063362958 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.063444294 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.065284332 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.065668213 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.065470821 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.068014028 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065276767 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.062960422 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.062945113 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065447207 seconds)
    (16/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.062953467 seconds)
    (17/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063325574 seconds)
    (18/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.065254784 seconds)
    (19/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.062952741 seconds)
    (20/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.068650425 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063149481 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065340769 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.063173354 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.063248556 seconds)
  done (took 2.81657206 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.083164175 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.065920773 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.071019105 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.07089753 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.069936972 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.071215855 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.070832771 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.066055084 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.07109006 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.067713723 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069718318 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.069711348 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.067671374 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.069413078 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067961839 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.070014475 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.071217553 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066222258 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067835536 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.069614227 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.070428332 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065946947 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.069779715 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070955028 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.069162534 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069514072 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.068238319 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.065986507 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.071040656 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.06906448 seconds)
  done (took 3.3102426 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.070087644 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.062766099 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.064156239 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.069869371 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.063460237 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.06471512 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.063528219 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.063941417 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.064142726 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.062955622 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.064168898 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.062581165 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.063449699 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.064464162 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.064072203 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.06679655 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.079741068 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.063936322 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.063628731 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.064224744 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.067114279 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.063156331 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.063714824 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.063107498 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.063132613 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.063244467 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.064103513 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.063248911 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.063762146 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.063064941 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.066235374 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.066535533 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.063065759 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.070078054 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.067061943 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.062917438 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.067060758 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.062840566 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.063593694 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.062813909 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.06279717 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.06341525 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.063461157 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.181849019 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.063295302 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.064586416 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.063463704 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.064376394 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.06360805 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.065735441 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.062557541 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.06308635 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.065221006 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.064398315 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.067002034 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.062617317 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.063945255 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.062416261 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.064038048 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.062658351 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.062464003 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.062440604 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.065371081 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.063371736 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.076975501 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.069663578 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.062720147 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.064969962 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.064140301 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.06554189 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.064231439 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.075660253 seconds)
  done (took 6.013282093 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.090893055 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.086165443 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.065083801 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.064629761 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.062352769 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.063781115 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.067195173 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063605568 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064959486 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.069423002 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063782323 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.064987599 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06498031 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.075991397 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.063637604 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.064813571 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.06958279 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061796287 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.063596028 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.067002365 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.063756236 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.067124345 seconds)
  done (took 2.725287996 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.154743298 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.06965579 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.104152769 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.07314012 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.067523084 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.072399111 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069211083 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.069756969 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069552314 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068248032 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067726061 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069608535 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.067362398 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067641377 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067708482 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.067805987 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.070021061 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.067809461 seconds)
  done (took 2.596957408 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.078091006 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.066338177 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.08511275 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.066321777 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.065956102 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.06830936 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069989617 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.074044151 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.067574585 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.06552636 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.073863442 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068030255 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.06791269 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065549033 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068096718 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.065566499 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.067642681 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065804071 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.07386481 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070344063 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.070209259 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.073668593 seconds)
  done (took 2.768982157 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080927406 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.067543607 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.082246228 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.068232259 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061728924 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.063972316 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.069706812 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.065572821 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.06975491 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.06731146 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065463441 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.063862493 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.0691424 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.065493282 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.069552936 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065634565 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.067407739 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.065647468 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066886042 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061310527 seconds)
  done (took 2.590250618 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.086087315 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.068019069 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.066897285 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.075485699 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.067220621 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.066879011 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.074909949 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.067021782 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.066670127 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.086871462 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.066924542 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.06650341 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.074634703 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.071930478 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.066556151 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.074606014 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.074516368 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.074909076 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.067067152 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.066894982 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.087368098 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.066939258 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.074514361 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.06718816 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.066855758 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.066740433 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.066973118 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.071771184 seconds)
  done (took 3.232372451 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.066818841 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.065648187 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.063239791 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.063934443 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.063012766 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.062770238 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.063581088 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.063267431 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.065938978 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.062902085 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.065235926 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.065234633 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.065212597 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.065329926 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.065936979 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.065550413 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065924458 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.063473407 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.062816883 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063205648 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.065334066 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065234649 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.065316973 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.063119174 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063111369 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.065160602 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.062784514 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.063044265 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065316997 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.06295237 seconds)
  done (took 3.168432316 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.075627386 seconds)
    (2/2) benchmarking "in"...
    done (took 0.072681914 seconds)
  done (took 1.385827381 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.063776875 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.08039923 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.062471193 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.069051476 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.069088825 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.065859852 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.073218592 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.06950502 seconds)
  done (took 1.78614108 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.081465906 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.077365716 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.067285915 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.079893266 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.076117454 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.082399284 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.131050488 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.06651768 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.072426173 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.064129938 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.079398527 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.065305273 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.072051291 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066611094 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.071351055 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072288742 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.0635517 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.071786131 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.068431847 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.064818538 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066996829 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074817735 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068283069 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.061349185 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.066760604 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.087545658 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.07626468 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.065407976 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.068771832 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.073449727 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.071557636 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.060305214 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.065856602 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.066493063 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.063963959 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.075540937 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.081002371 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.068950644 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.074530858 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066995517 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.076861191 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.061016141 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.070251203 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.072612111 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.075892483 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.066391904 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.066453862 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.060923332 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.063458705 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.067785003 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.060938829 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065929501 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.060772487 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.075055218 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.06920992 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076274153 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.064470949 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.067115999 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.068656532 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.069125247 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.07204336 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.067546297 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067979265 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.065474397 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.072273391 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.070370203 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.074507813 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.060876796 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.060052058 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.063701992 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.075387211 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.088470021 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.072191611 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.066653687 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.06667315 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.063842191 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069347878 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067531788 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.071901468 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.072310346 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.066301106 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.071797673 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073489252 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066325498 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.068516921 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.074796048 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.064497131 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.069015549 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.06446084 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.082732272 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.065367585 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.064665662 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.064134066 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.07693889 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.06991261 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.066190834 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.064302807 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.073422009 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.060527888 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.067057828 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.067426749 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066243571 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.0754437 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.06930236 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.070083622 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.073740552 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.072195081 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.06600309 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.067897637 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.062010866 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.065829476 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.064162893 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.072026985 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.059313148 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.067871661 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.065662248 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.065277117 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.198122708 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.065806459 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.067721618 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.074924235 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.072364107 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.066083528 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.063387116 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.069861377 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.066784184 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.070101665 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.075026348 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.065097707 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.061761271 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.062024801 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.06994591 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.06645416 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.069722507 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.071443845 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.069573372 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.060993976 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.065280113 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.071949019 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.075358825 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.066560256 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.067290524 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.072491314 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.067321796 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.066700944 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.073026283 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.071853868 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.065281391 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.072045083 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.067234659 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.062139344 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.070053102 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.069445736 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.065119864 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.069966942 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.070187439 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.068598606 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.0676399 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065695855 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.073803222 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067595145 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.065600293 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.06639741 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.065493996 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.077278681 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.068594367 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.062043369 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.063301958 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.075427278 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.064735049 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.066183582 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.065068637 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.0687797 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.066835489 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.064330368 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.065995708 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.068798268 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.077162941 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.070318544 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.067239886 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.072251178 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.078339267 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.06603752 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.068851996 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.066305045 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067530626 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.067200938 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.075279511 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.07188237 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.07135355 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.068824371 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.063267518 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072120676 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.073812808 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.065513942 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.064120345 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.065480669 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.070409056 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.071770219 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.070214744 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.066683999 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064490084 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066907027 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.069379319 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.068755096 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.065928844 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.065495153 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.072762842 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.064380342 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.073066985 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.066968967 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.076164333 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.069291588 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.061325767 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.069140379 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064012044 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.072305922 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.06124317 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.064372458 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.065310788 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.066983848 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.064774781 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.068290388 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.060119387 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.072095526 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.072218248 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.065171147 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.064296255 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.064845604 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.071638109 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.066591485 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068263191 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.068048844 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.070418059 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075188135 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.06429558 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.068325585 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.074955049 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.064968881 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.186475061 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.072442662 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.065865042 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.06560894 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.065673632 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.064504582 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.070161077 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.075849023 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.073067773 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.060196931 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.068940417 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.06551432 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.065180555 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.062007101 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.07184008 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.069425404 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.068440495 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074031894 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.068786959 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.067474381 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.070553417 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.065782792 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.067695275 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.068072187 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.070163364 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.068119643 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.068766564 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.065806781 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.069531684 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.065752578 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.064884452 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.068834593 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.066685714 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.067304077 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.072043295 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.066441089 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066981452 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.069125875 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.066884349 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067584407 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.066690842 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.065717759 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.070084366 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067883186 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.067078054 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.068951743 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.062266435 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073203221 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.065995402 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073788551 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.066403906 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.063179401 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.074099267 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.068723222 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.072504292 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.067548421 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.06754072 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.067883976 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.065588156 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.06893962 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073648908 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.064508086 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.077000825 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.074303687 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067063848 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.069275727 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.066714984 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.067821407 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.065922085 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.06685552 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.067571078 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.066979127 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.066031432 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.071211798 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.068337677 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.066162112 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067609539 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.066884298 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.066304717 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.066807898 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.060730295 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.065352435 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.065313352 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.065757719 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.07549111 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.066760499 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.065997061 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.065059603 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066889622 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.065338503 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.063083944 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.074417901 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.07541741 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.066886121 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073273897 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.065936027 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.067871071 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.076719832 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.060906851 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.064596876 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.063981882 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.064299025 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.073157287 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.066630137 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.075077126 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.066092369 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.065249478 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.063340504 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.066163595 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.063990222 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.060139716 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.062866254 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.068390285 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.063756753 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.063648045 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.064851055 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.067440969 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.065621336 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.073836203 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.063974029 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.065868413 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.064800267 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.06234673 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.064062736 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.06429447 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.199135566 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.067002982 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.064078473 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.064807448 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.065597899 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.067475609 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.068316744 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.066106667 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.068563496 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.076395334 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.066412644 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.069565434 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.069595955 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.060940376 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.069646524 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.066262208 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.065996597 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.065435012 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.069949411 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069745479 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.067895115 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.075676991 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.066763767 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067535258 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066982971 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.064691752 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.066162202 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.066244046 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.067215574 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.06628709 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.067037522 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.07474119 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.064646719 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.068984992 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067138809 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.067612118 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.073550313 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.06718175 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.069512665 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.072926837 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.067206219 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.068270205 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.074122935 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.070702215 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.069585558 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067802045 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.067869224 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.071889269 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.065617187 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.072850645 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.066769344 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.066861182 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.067724443 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.064266981 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.066579538 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.065587097 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065066096 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.072249738 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.067494335 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.065436207 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.06576644 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.064297331 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.067740371 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.069874582 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074073868 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.069018344 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.069452876 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.061687808 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.063667605 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.067562936 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.064469855 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.067920494 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.068460283 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.07128614 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.068114538 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.066386244 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.06480495 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.074859872 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071581005 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.069570982 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.064500241 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.069694014 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.066653507 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.068484737 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.066939845 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.066550828 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067101198 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.070033116 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.067820618 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.065204439 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.07284587 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.069585747 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.06701351 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.067754918 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.067043646 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.066940881 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.061293305 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.066720927 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.068034187 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.071300586 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.068624277 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066556042 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.076839778 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.064258341 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.066833243 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069755281 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.06561198 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.070863228 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.061243669 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.067282851 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.066423636 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.066456967 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.060869924 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.064614528 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.062870436 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.067283087 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.064186989 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.06065136 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.075227521 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.073580127 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.068026769 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.064335656 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.063916064 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.060168119 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.060325123 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.194605062 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.06840601 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.068960111 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.076710454 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.065534545 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.065571149 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.062069718 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067383825 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.069512076 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.070042747 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.063360218 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.061721634 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.065681562 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.069244282 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.072044738 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.065130556 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.066512581 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.069860914 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.068781877 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.064696634 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.070038795 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.06427223 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.069396099 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079378586 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.067130057 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.06711083 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.072864901 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.075247402 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.067417393 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.062125419 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.066733383 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.069525087 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.067287417 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.06740608 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.068391561 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.082062756 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.069658868 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.06557056 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.065126911 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.06882632 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.065695225 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.07522561 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067128609 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.067190348 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.070894418 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.068779153 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.075888679 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069802052 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074462834 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.069503098 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.069754077 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.065568649 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067250838 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.064247485 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.065495172 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.067477562 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.067800317 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.07149572 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.074655915 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.066300534 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.077260419 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.076041295 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.068145733 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.063183375 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.065130022 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.06626621 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.062008372 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.06762643 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.064641718 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.064630462 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.064715856 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.065044604 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.067278712 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.071427478 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.066695171 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.067132364 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.065802192 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.060482679 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.068508716 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.068396476 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067175842 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.063094553 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.066198628 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.066714486 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.070060818 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069614991 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.063815994 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.067620014 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.067622986 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066723059 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.061784024 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.072254359 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065080926 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.067977503 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.065179051 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066306701 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.067017496 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.069608678 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.070966336 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.067404297 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.068017731 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.069951077 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.068375943 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.063797414 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.063702111 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.071574992 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.064059596 seconds)
  done (took 42.437388153 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.099972121 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.062970976 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.061328284 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.061360947 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.073838552 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.062913922 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.061563137 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.062765189 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.062645359 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.065321188 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.061875607 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.062094853 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.07051292 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.0773168 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.073353518 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066193172 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.061883005 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.062659149 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.061717025 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.06250462 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.070408372 seconds)
  done (took 2.739672777 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.073891688 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.069750876 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.072193846 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.075705826 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.066919832 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.069964724 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.072743186 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070541134 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.075968281 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06695305 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.075656665 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.07012725 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.066704124 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.06702703 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066813349 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070387022 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.075679721 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.066971445 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.079045827 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.072876434 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070562538 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.072152818 seconds)
  done (took 2.881292656 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.068462517 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.065644261 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.067441056 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.061338689 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.065452461 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.060537362 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.069298107 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.063448949 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.068998311 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.065178735 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.064776278 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.065209701 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.067115127 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.060888465 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.06563985 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.063202138 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.107890799 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.068805511 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.065256773 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.066658608 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.061218393 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.067349907 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.06100984 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.061758529 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.064441993 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.068993088 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.066429369 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.064073239 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.064986775 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.064635739 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.065393866 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.063644979 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.067027769 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.065705279 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.064907022 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.064573052 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.065251769 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.065218758 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.060882629 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.063508956 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.065728589 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.061538454 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.065682329 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.066664809 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.063805671 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.063093594 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.067232741 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.065241202 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.060396065 seconds)
  done (took 4.536253038 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.080383814 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.107079183 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.068054182 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.08754826 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.079930789 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.075363419 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.068764474 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.088818469 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.063156215 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.063802944 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.081089443 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.079403764 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.065755574 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.06982824 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.069074216 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065571827 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.066675476 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.06432509 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.069127384 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.065094487 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.069563464 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.071501747 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.079449566 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.078433504 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.069426247 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064863472 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.064803925 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.06944487 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.077844062 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.07014438 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.070192609 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.070666679 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.080453827 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.067170852 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.06475224 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.067304222 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.081045052 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.065799483 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.067788593 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.06304614 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.067315887 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.069357297 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.071500708 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.081529806 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.065562158 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.070629807 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065388008 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.062391341 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.078140382 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.067515498 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.0733058 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.07925797 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.069005461 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.06557327 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.069819352 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.080103526 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.065457427 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.063651427 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.068248637 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.077372946 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.062877539 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.069001684 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.07869932 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.067315204 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.072018423 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.079558429 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.070478084 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.069425775 seconds)
  done (took 6.324102982 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.074616682 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.072449347 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.080827535 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.079507039 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.071754914 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.072019012 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.07197675 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.071883321 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.071627032 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.076553923 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.072045569 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.092681372 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.067118682 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.074507473 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.071907631 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.071808818 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.071966743 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.07188275 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.071966667 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.071861423 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.072168513 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.079816546 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.072174355 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.079882536 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.097809148 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.06739894 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.071634279 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.071895231 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.080308808 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.072009494 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.078972077 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.07196479 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.072143808 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.080149854 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.079002275 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.071695161 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.06468625 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.071523529 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.071921626 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.071782995 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.067704788 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.080371979 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.071653229 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.067447481 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.072734144 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.071676492 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.080104006 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.078880331 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.074605591 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.076791795 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.072034603 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.080149762 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.0722004 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.072288469 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.080074062 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.105232403 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.079824028 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.079997039 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.072256163 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.079804917 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.079786897 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.086100427 seconds)
  done (took 6.019849965 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083994068 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.074800919 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.076352717 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.061487628 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.063783541 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.070186479 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.063984897 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.064606936 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.074305875 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.07420643 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.07659376 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069679116 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072624766 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.076522818 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.069703555 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.073025545 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069750536 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.069587754 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.074342333 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.069534572 seconds)
  done (took 2.767931584 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.074626118 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.083049621 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.06676457 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.072305525 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.068446029 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.071436775 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.068122475 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068791934 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066831438 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068980287 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.076083146 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.076096071 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066963602 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.071641192 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.075783722 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.071564736 seconds)
  done (took 2.479857834 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.074841357 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.072277223 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.080026635 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.066562678 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.063904835 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.062517339 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.065823925 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.061275505 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.062652163 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.077618316 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.065842831 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.068283276 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.06600487 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.064074923 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.063019409 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.068689319 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.062354907 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.063091809 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.065904313 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.077824645 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.076444126 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.064139655 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.066492763 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.065778576 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.066014985 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.071123731 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.065679618 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.063454876 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.063513168 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.065886341 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.066656368 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.069399363 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.062776608 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.063386928 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.064073325 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.062878237 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.065429336 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.065743448 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.068253853 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.065455941 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.063741176 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.065012288 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.06581202 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.066250956 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.061664985 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.065576347 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.061927112 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.067615341 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.063371244 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.06572166 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.065242463 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.067996052 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.065977675 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.071811158 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.068371784 seconds)
  done (took 4.995029103 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079029394 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.069127722 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.062216624 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.063355256 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.068068749 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.067848013 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069091702 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.067453669 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067695655 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.063609232 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.067884588 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.068249582 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067348716 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.069233031 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.067547814 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069250132 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061759099 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.067489972 seconds)
  done (took 2.562081618 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.071051577 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.065930477 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.072708927 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.065719651 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.065389844 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.06757847 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061955713 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.064173804 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064699622 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.065742287 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065483174 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.067685396 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064662221 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.068622882 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.065548387 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065717516 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.068021507 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064393273 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.066189074 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061984252 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.068011435 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064406193 seconds)
  done (took 2.795020376 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.072348401 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.092225934 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.137071189 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.083363267 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.081232685 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.078096385 seconds)
  done (took 1.884868841 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090469556 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078503615 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.066052047 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.087335618 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07353098 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067335952 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06776918 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06740224 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075621034 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075971525 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067282488 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07583916 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075668415 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075500645 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073003095 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072620389 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067383598 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067125914 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066056318 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.083770088 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06737304 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075536057 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067259482 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06682742 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067097373 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074999717 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075691684 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075423816 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066794016 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075599301 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072562586 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067216946 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075828989 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075913552 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068586091 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075677253 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.0672188 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.083724332 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07330942 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075440685 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.0687985 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073619603 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076322513 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072177914 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076094486 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067906798 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072117375 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06773582 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068051935 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.086008462 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072978797 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074959313 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073130278 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076003006 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076086559 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085828837 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076136548 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075313596 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073185699 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078563985 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075589815 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07306703 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074915049 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075654105 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073140652 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075144698 seconds)
  done (took 6.205152911 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.081264068 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.085180187 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.06771025 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075668712 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075326042 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067467108 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067605404 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067365991 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067365207 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067414995 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107537422 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067758924 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.0754167 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075680735 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067687076 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067351347 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067489425 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075542565 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067231908 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.085794043 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067443507 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075421655 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075594536 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075451325 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076018767 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073190875 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067409188 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067509308 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067305811 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067793379 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072552813 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067951764 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075504606 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.06689782 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075133496 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067344566 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067155197 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072192859 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067420491 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072769622 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075472332 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.083760256 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067498895 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067149121 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075661367 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.0670882 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066989285 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06668667 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067448669 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067004484 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075803742 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076052951 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076248826 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075284563 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067733765 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067584704 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067524942 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067356506 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067344967 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072743769 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075383053 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066978488 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.08579659 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067177031 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067221242 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075394122 seconds)
  done (took 6.113964427 seconds)
done (took 128.346159546 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.184022809 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.169009587 seconds)
  done (took 1.689528822 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.068901841 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.097533478 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.076825935 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.12832174 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.067058961 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.100210038 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.099282143 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.078134377 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.066630273 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.066323294 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.065781385 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.068310112 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.131392456 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.066587305 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.066096754 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.068582495 seconds)
  done (took 2.665701435 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.096668442 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.157281126 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.098973344 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.065354542 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.096525915 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.072821545 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.064321132 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.075033896 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.070799546 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.065018901 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.072529945 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.070996041 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.064826902 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.070543418 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.070958345 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.072703054 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.064726675 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.072952504 seconds)
  done (took 2.777392385 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.100791144 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.090639738 seconds)
  done (took 1.549212816 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.155980747 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.105423739 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.149224984 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.34473549 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.166608666 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.228941732 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.12635995 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.127113619 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.116257374 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.123328011 seconds)
  done (took 2.99823482 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.097944214 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.151165229 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.255408837 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.114922783 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.072358884 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.094953179 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.115586224 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.077754987 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.080531201 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.080156874 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.079710062 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.076006358 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.098357464 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.073126614 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.073066657 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.075995284 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.101930106 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.072027228 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.0736924 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.076238176 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.098840225 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.06565367 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.073240344 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.072538014 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.077145382 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.077481082 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.065451162 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.065562824 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.076769537 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.07417364 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.076714417 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.093857991 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.077345416 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.107214646 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.070144096 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.108126562 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.076403941 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.074011209 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.074141828 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.07360892 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.07892561 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.078478349 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.071931063 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.075812414 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.06523394 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.076336291 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.065126167 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.065391724 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.078103861 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.066720333 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.077760545 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.076890359 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.107123123 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.066587033 seconds)
  done (took 5.951517865 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.10142182 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.105603744 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071127225 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.1084385 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.097611215 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.07138015 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.100941593 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.091668447 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.102393528 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.092647515 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.08966824 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.070378581 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.081830626 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.083655108 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.110151933 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.101842448 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.094883035 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.070825944 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.101326225 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.102715838 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068604525 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.0947187 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.090573369 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.101576873 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.067668394 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070015545 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.067947237 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.07046464 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.077283141 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.078104807 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069916949 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.102312642 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.084423886 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.078168143 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.066995771 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.067658473 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068198178 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.078985411 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.097298494 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078831834 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.077671169 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067426565 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.067392137 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.069537719 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.090757333 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067657028 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.079183797 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.080119365 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.08038399 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069535639 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070098735 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.068159837 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.06996167 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.080165231 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.078220225 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.081109124 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.079813129 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068252116 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068532929 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.071474668 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080518069 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.078833637 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.079113279 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.092430298 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078996767 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.068086592 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.080338307 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.084148518 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.068235187 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.069835324 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068647439 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069513497 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.069675604 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.07824856 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.078312419 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069971096 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.070047933 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068192676 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.08025801 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.078573115 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.06796765 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.077218212 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.067251761 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068487677 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069723391 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070197183 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.078187362 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.080178172 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.070510665 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068046676 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069192979 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068071858 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.066220981 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.0755158 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.078285767 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.077198362 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.077108688 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068262244 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.077777164 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.077075591 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068883964 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.078055948 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.1955974 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.07027655 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070488789 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.079963305 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.078691352 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.080652015 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.070465909 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.068709744 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.079043293 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.080963337 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.06913709 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.078981207 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.081237106 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.080067287 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.068603197 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.081210152 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068763084 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.079753443 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070611052 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079633208 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.06962357 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.079686666 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068887656 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.06894735 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.068790044 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.07991927 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070538747 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068333871 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070704429 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.0700422 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.079923609 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.083547803 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071577595 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.081151144 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.078426114 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070258184 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.079504299 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069009433 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.079088957 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069924749 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069895112 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067374158 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.082887902 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068802404 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.069291173 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.069653017 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.081123127 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.068425188 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.0799705 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.078637637 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068087409 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081574324 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.080577594 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.077072617 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.081295309 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070417488 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.069297574 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068782133 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.07017911 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.077732706 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.07985968 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.071261969 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.069171975 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.078650812 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.079395738 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.067205404 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.078244245 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.078225366 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.078526269 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.068435331 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.070012807 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.080999094 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.081190499 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.078097911 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.078213063 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078182938 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068861779 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.077423131 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.078420626 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068427558 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.083946373 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068003113 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.082109008 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.079007773 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.077030722 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.079197724 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.080874321 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.080307147 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.0800793 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.082194779 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067663707 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.068134733 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.07982493 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068071388 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068903306 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.076687696 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.068766482 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.068372096 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.081958484 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067466335 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.07796515 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.066626838 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.076874357 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.066256015 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068630559 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.212431574 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068968067 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.070770861 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.080061299 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.07033723 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.077777002 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081621529 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.079220082 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.069103242 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070966747 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.080204652 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.079674241 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.06828377 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068338939 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070818812 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.078827769 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.078498615 seconds)
  done (took 18.780439477 seconds)
done (took 37.774588091 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.208406482 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.150523725 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.178996752 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.117862212 seconds)
  done (took 2.10523828 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.121465448 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.100257842 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.094825821 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.06489117 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.101417871 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.064500665 seconds)
  done (took 1.940794219 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.311997081 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.211166242 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.181901421 seconds)
  done (took 2.094776653 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.197714016 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.186901987 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.392953272 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.251784867 seconds)
  done (took 2.527539556 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.142305505 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.088590686 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.066495072 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.082497843 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.134416699 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.161205501 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.101366989 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.125798299 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.07800314 seconds)
  done (took 2.424052391 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.14711216 seconds)
done (took 12.630519301 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.121612947 seconds)
    (2/309) benchmarking ("sort", Float64, false)...
    done (took 0.144772874 seconds)
    (3/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.193709964 seconds)
    (4/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.170444602 seconds)
    (5/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.238273716 seconds)
    (6/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.149056391 seconds)
    (7/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.072744331 seconds)
    (8/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.081405043 seconds)
    (9/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.098124323 seconds)
    (10/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.197184948 seconds)
    (11/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.205199107 seconds)
    (12/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.076823013 seconds)
    (13/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.095136733 seconds)
    (14/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.072991311 seconds)
    (15/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.157074026 seconds)
    (16/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.08732412 seconds)
    (17/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.071125357 seconds)
    (18/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.180861227 seconds)
    (19/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.14695131 seconds)
    (20/309) benchmarking ("sort", BigInt, false)...
    done (took 0.196112089 seconds)
    (21/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.072336974 seconds)
    (22/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.162070319 seconds)
    (23/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.166526681 seconds)
    (24/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.09531269 seconds)
    (25/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.134531736 seconds)
    (26/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.159465598 seconds)
    (27/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.071138908 seconds)
    (28/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.173210043 seconds)
    (29/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.074904867 seconds)
    (30/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.076549231 seconds)
    (31/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.080449397 seconds)
    (32/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.080704587 seconds)
    (33/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.108960667 seconds)
    (34/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.074582702 seconds)
    (35/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.072572918 seconds)
    (36/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.081469558 seconds)
    (37/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.14426948 seconds)
    (38/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.081357671 seconds)
    (39/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.107588601 seconds)
    (40/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.076284429 seconds)
    (41/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.15810097 seconds)
    (42/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.194909208 seconds)
    (43/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.158429817 seconds)
    (44/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.099978656 seconds)
    (45/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.074661605 seconds)
    (46/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.163520706 seconds)
    (47/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.072756143 seconds)
    (48/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.072005715 seconds)
    (49/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.071766545 seconds)
    (50/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.177523527 seconds)
    (51/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.066023492 seconds)
    (52/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.073210303 seconds)
    (53/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.193276562 seconds)
    (54/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.155557166 seconds)
    (55/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.179764306 seconds)
    (56/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.066926515 seconds)
    (57/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.073951213 seconds)
    (58/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.073603939 seconds)
    (59/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.070656293 seconds)
    (60/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.087941848 seconds)
    (61/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.050932306 seconds)
    (62/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.118774905 seconds)
    (63/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.051494604 seconds)
    (64/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.051978892 seconds)
    (65/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.075354898 seconds)
    (66/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.079782508 seconds)
    (67/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.094413068 seconds)
    (68/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.072298354 seconds)
    (69/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.091863034 seconds)
    (70/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.076878643 seconds)
    (71/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.060853747 seconds)
    (72/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.051624838 seconds)
    (73/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.089267892 seconds)
    (74/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.132715871 seconds)
    (75/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.107541447 seconds)
    (76/309) benchmarking ("sort", Float32, false)...
    done (took 0.124997062 seconds)
    (77/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.219807916 seconds)
    (78/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.090278496 seconds)
    (79/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.168509412 seconds)
    (80/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.070266498 seconds)
    (81/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.173327898 seconds)
    (82/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.051726004 seconds)
    (83/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.071474148 seconds)
    (84/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.340171208 seconds)
    (85/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.051537721 seconds)
    (86/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.075902913 seconds)
    (87/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.070349861 seconds)
    (88/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.061153144 seconds)
    (89/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.065803579 seconds)
    (90/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.180954484 seconds)
    (91/309) benchmarking ("sort", Int64, false)...
    done (took 0.066254577 seconds)
    (92/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.175365096 seconds)
    (93/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.066982943 seconds)
    (94/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.052162679 seconds)
    (95/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.067500505 seconds)
    (96/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.068638624 seconds)
    (97/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.142791532 seconds)
    (98/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.098783667 seconds)
    (99/309) benchmarking ("sort", Int8, false)...
    done (took 0.141013294 seconds)
    (100/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.060834517 seconds)
    (101/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.095402757 seconds)
    (102/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.172453242 seconds)
    (103/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.064354043 seconds)
    (104/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.068396901 seconds)
    (105/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.102386537 seconds)
    (106/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.095177656 seconds)
    (107/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.150054784 seconds)
    (108/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.067728663 seconds)
    (109/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.071096086 seconds)
    (110/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.368638159 seconds)
    (111/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.072876465 seconds)
    (112/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.061043718 seconds)
    (113/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.064660363 seconds)
    (114/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.052535001 seconds)
    (115/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.062099046 seconds)
    (116/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.091737689 seconds)
    (117/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.174629443 seconds)
    (118/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.151120599 seconds)
    (119/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.068863862 seconds)
    (120/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.070852063 seconds)
    (121/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.150810939 seconds)
    (122/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.064949984 seconds)
    (123/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.138210277 seconds)
    (124/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.111154225 seconds)
    (125/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.068442085 seconds)
    (126/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.172580341 seconds)
    (127/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.141253318 seconds)
    (128/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.088315117 seconds)
    (129/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.051577449 seconds)
    (130/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.07392602 seconds)
    (131/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.075588495 seconds)
    (132/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.125565264 seconds)
    (133/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.147816854 seconds)
    (134/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.147144158 seconds)
    (135/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.088790041 seconds)
    (136/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.072673531 seconds)
    (137/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.078361305 seconds)
    (138/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.153826715 seconds)
    (139/309) benchmarking ("sort", Bool, false)...
    done (took 0.132081826 seconds)
    (140/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.072758359 seconds)
    (141/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.070389715 seconds)
    (142/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.088425345 seconds)
    (143/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.071569269 seconds)
    (144/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.065889307 seconds)
    (145/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.174346072 seconds)
    (146/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.182929756 seconds)
    (147/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.095199404 seconds)
    (148/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.070652054 seconds)
    (149/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.087809437 seconds)
    (150/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.071112423 seconds)
    (151/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.148960341 seconds)
    (152/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.067497294 seconds)
    (153/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.075299706 seconds)
    (154/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.085613241 seconds)
    (155/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.065060788 seconds)
    (156/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.071581988 seconds)
    (157/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.051406351 seconds)
    (158/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.051962712 seconds)
    (159/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.064891941 seconds)
    (160/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.072101151 seconds)
    (161/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.142857734 seconds)
    (162/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.051284111 seconds)
    (163/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.07199233 seconds)
    (164/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.050887384 seconds)
    (165/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.06503568 seconds)
    (166/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.071538631 seconds)
    (167/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.072235514 seconds)
    (168/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.073276678 seconds)
    (169/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.052134801 seconds)
    (170/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.088760047 seconds)
    (171/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.097260682 seconds)
    (172/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.073914205 seconds)
    (173/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.091016121 seconds)
    (174/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.179137098 seconds)
    (175/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.06543649 seconds)
    (176/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.064340357 seconds)
    (177/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.156032313 seconds)
    (178/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.101839133 seconds)
    (179/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.052129934 seconds)
    (180/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.110815545 seconds)
    (181/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.062209084 seconds)
    (182/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.126598482 seconds)
    (183/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.06416151 seconds)
    (184/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.087673802 seconds)
    (185/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.066650419 seconds)
    (186/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.05046873 seconds)
    (187/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.052973304 seconds)
    (188/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.182598453 seconds)
    (189/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.228387195 seconds)
    (190/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.052668614 seconds)
    (191/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.063196064 seconds)
    (192/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.140770187 seconds)
    (193/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.16105293 seconds)
    (194/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.067184076 seconds)
    (195/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.07254403 seconds)
    (196/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.065528327 seconds)
    (197/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.107594069 seconds)
    (198/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.078183444 seconds)
    (199/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.052760732 seconds)
    (200/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.065805747 seconds)
    (201/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.137380748 seconds)
    (202/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.073856642 seconds)
    (203/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.051720333 seconds)
    (204/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.053711886 seconds)
    (205/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.065949285 seconds)
    (206/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.067869498 seconds)
    (207/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.053847025 seconds)
    (208/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.064141773 seconds)
    (209/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.06463321 seconds)
    (210/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.064644418 seconds)
    (211/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.067430542 seconds)
    (212/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.117792536 seconds)
    (213/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.064342875 seconds)
    (214/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.051898331 seconds)
    (215/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.097422236 seconds)
    (216/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.080142695 seconds)
    (217/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.051539347 seconds)
    (218/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.070038082 seconds)
    (219/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.051938889 seconds)
    (220/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.07433882 seconds)
    (221/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.072645101 seconds)
    (222/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.051073905 seconds)
    (223/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.088850139 seconds)
    (224/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.052144476 seconds)
    (225/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.051352954 seconds)
    (226/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.052519745 seconds)
    (227/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.112958936 seconds)
    (228/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.06556051 seconds)
    (229/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.051609764 seconds)
    (230/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.065525896 seconds)
    (231/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.051292082 seconds)
    (232/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.051444822 seconds)
    (233/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.070591284 seconds)
    (234/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.078849968 seconds)
    (235/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.072142155 seconds)
    (236/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.088047046 seconds)
    (237/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.168597963 seconds)
    (238/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.051075815 seconds)
    (239/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.051245655 seconds)
    (240/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.063233271 seconds)
    (241/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.064696408 seconds)
    (242/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.088592201 seconds)
    (243/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.066159438 seconds)
    (244/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.075082698 seconds)
    (245/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.072380526 seconds)
    (246/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.0859682 seconds)
    (247/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.052774092 seconds)
    (248/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.050880656 seconds)
    (249/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.051977834 seconds)
    (250/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.135807542 seconds)
    (251/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.051129008 seconds)
    (252/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.051267778 seconds)
    (253/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.136577905 seconds)
    (254/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.097443973 seconds)
    (255/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.052878294 seconds)
    (256/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.074384818 seconds)
    (257/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.105616306 seconds)
    (258/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.051017212 seconds)
    (259/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.065496419 seconds)
    (260/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.099265416 seconds)
    (261/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.108037782 seconds)
    (262/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.071646344 seconds)
    (263/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.051025681 seconds)
    (264/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.052422692 seconds)
    (265/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.064696377 seconds)
    (266/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.094877455 seconds)
    (267/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.088002214 seconds)
    (268/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.069474656 seconds)
    (269/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.0856248 seconds)
    (270/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.071054195 seconds)
    (271/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.071732274 seconds)
    (272/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.136101622 seconds)
    (273/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.061441466 seconds)
    (274/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.066225683 seconds)
    (275/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.07246391 seconds)
    (276/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.070408705 seconds)
    (277/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.065502603 seconds)
    (278/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.064943048 seconds)
    (279/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.052056893 seconds)
    (280/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.065160203 seconds)
    (281/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.106592857 seconds)
    (282/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.066058225 seconds)
    (283/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.085114638 seconds)
    (284/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.06507233 seconds)
    (285/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.072035801 seconds)
    (286/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.066006683 seconds)
    (287/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.063456299 seconds)
    (288/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.052475843 seconds)
    (289/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.063386045 seconds)
    (290/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.054562253 seconds)
    (291/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.05151811 seconds)
    (292/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.072401449 seconds)
    (293/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.088292042 seconds)
    (294/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.089224898 seconds)
    (295/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.071907992 seconds)
    (296/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.066555942 seconds)
    (297/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.070722192 seconds)
    (298/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.065263262 seconds)
    (299/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.065035793 seconds)
    (300/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.079234018 seconds)
    (301/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.06501537 seconds)
    (302/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.061049724 seconds)
    (303/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.06434892 seconds)
    (304/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.050741407 seconds)
    (305/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.070194974 seconds)
    (306/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.070897943 seconds)
    (307/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.050974622 seconds)
    (308/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.050516675 seconds)
    (309/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.060190169 seconds)
  done (took 30.368394693 seconds)
done (took 31.772151775 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.08470472 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.091775297 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.073975626 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.091185814 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.07970461 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.075574533 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.071623479 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.077110784 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.078663593 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.080614972 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.077701891 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.054548366 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.073214969 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.073620204 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.073381198 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.090234247 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.07751924 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.071747436 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.072070252 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.064004494 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.072349577 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.064973681 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.066752816 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.05454973 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.076594498 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.070937799 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.071617061 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.073261036 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.06495607 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.065331044 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.068633545 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.072490069 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.064917406 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.076955519 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.071332802 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.072105938 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.073439788 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.075602717 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.067057758 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.065364811 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.073644638 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.065137825 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.071919101 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.073178938 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.071151973 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.07057129 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.072167957 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.077133181 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.090457594 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067386196 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.073622854 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.074818316 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.075718954 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.071374558 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.068514 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.071951699 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.06970515 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.090158278 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.072599421 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067198288 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.073093005 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.073261128 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.070176413 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.072138281 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.072214656 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.074320791 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.074270775 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.070431146 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.07433256 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.070598622 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.064692618 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.072044182 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.068064989 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.06475768 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.074685813 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.076064999 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.06381447 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.070305046 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.071713793 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.07104277 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.064192917 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.067054855 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.066405667 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.070640228 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.066865733 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.053987782 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.068127823 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.070653256 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.063728849 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.07218618 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.070818105 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.071070798 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.066184446 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.074618292 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.06413025 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.06961578 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.064983072 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.064867706 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.066124085 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.068533792 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.064407749 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.066816264 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.073125771 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.066028119 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.070407075 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.078166158 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.064559667 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.070839658 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.063630645 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.06431738 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.078386154 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.073988652 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.065004504 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067198976 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.063783435 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.072165105 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.0641649 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.064803673 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.064671114 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.065520617 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.070529845 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.064215314 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.065806749 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.070578493 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.075329707 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.063477205 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.067023887 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.065912937 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.064079483 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.068844214 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.063849098 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.063998553 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.198690187 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.061867836 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067546784 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.06636231 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.071950748 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067301513 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.072437409 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.066396789 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.072667354 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.069665327 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.070328733 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.07020523 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.063571947 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.058377212 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067627608 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067995278 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.067039921 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.06539428 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.066587221 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.06499825 seconds)
done (took 12.322754003 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.067909527 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.141627911 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.097965251 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.09532048 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.084938909 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.066086678 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.075098128 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.101156559 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.067001689 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.101811572 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.086654806 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.08438513 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.112012649 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.064023794 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.06546599 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.068975319 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.066880796 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.080688704 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.100210614 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.08545965 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.114662079 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.064672238 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.093730911 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.089078789 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.086441664 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.100597271 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.066680424 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.06937619 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.068577663 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.090136851 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.08533988 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.06906 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.065828632 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.099970637 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.091364211 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.082637352 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.065847214 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.081821703 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.066070354 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.065155847 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.06674083 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.097400493 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.078942078 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.079436343 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.069358104 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.068329649 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.066599838 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.082598329 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.088739067 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.078057923 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.086020818 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.101873633 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.068032064 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.065403107 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.063914041 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.08451497 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.064765533 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.068156103 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.065849734 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.06742887 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.065467765 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.068667307 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.080364617 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.082019417 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.069254308 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.079698976 seconds)
  done (took 6.74787237 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.083578726 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.089810865 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.082410057 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.082456307 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.065258905 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.065954861 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.065594666 seconds)
  done (took 2.03117999 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.066774007 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.087224818 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.087796652 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.088418165 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.083614993 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.086624277 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.07487733 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.066101933 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.080044301 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.066836524 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.086666267 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.100933996 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.06663153 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.072352107 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.090279277 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.066255114 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.08947079 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.06604278 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.06873496 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.088988295 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.068076443 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.081224716 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.069422906 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.066338391 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.079891027 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.066143689 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.112718114 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069966048 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.067423171 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.068851633 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.063887266 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.10608634 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.079624751 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.075020686 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.06555543 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.080013713 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.080022808 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.064309114 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.081953935 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.071220065 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.079282151 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.066309662 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.066869029 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.063958387 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.069972438 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.076506421 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.066714778 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.066664742 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.068235886 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.085334875 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.066454936 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.078977477 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.070707959 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.068413024 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.067185108 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.069648974 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.075600665 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.06672025 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.085597031 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067457331 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.082718469 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.082204175 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.079645948 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.082284208 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.068730956 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.079551727 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.080076462 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.068683423 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.067879215 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.069333806 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.082109609 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.06478453 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.068122272 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.076629361 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.068116088 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.088421383 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.088407775 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.067356072 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.074663796 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.06664626 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.06615969 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.066054921 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.088445447 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.068253057 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.065840441 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.070789864 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069131962 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.064148915 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.065199305 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.069607821 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.064408424 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.067280352 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.068495807 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.069027112 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.068544659 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.082295818 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.068731229 seconds)
  done (took 8.704450114 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.068553536 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.067604822 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.068392334 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.067110448 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.066903317 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.06779755 seconds)
  done (took 1.92469265 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.094047532 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.069168997 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.079646987 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.071772909 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.103276756 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.086462424 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.086361803 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.078124596 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.08318922 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.07833903 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.086141081 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.087349286 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.092035243 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.071942502 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.085842279 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.071107212 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.086338415 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.075450769 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.077832415 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072645618 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.086351023 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.072628316 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.072583853 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.081351244 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.075161919 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.071737992 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.066960214 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.078559235 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.077972163 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.078495032 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.071850778 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.07500634 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.070420882 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.0777848 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.086253257 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.070000865 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.071580209 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.076916987 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.072085811 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.07524213 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.087169097 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.072677606 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.074346606 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.076547004 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.078243717 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.070042622 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.07641836 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.075691025 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.085463408 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.076401739 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.077077479 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.071150149 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.074823571 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.077031173 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.070054387 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.078047224 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.076870765 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.086339331 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.072045462 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.070229441 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.069104985 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.075353581 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.077885263 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.075219289 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.078614416 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.07677155 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.070188438 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.072495087 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072750044 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.071814512 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.076878389 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.068999905 seconds)
  done (took 7.053664162 seconds)
done (took 27.948404279 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.545831986 seconds)
  done (took 2.027742795 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.595577549 seconds)
  done (took 2.104978648 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.594777254 seconds)
  done (took 8.102245264 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.399490644 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.484485117 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.694253538 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.13152507 seconds)
  done (took 3.257942773 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.671367931 seconds)
  done (took 2.191373892 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.211022057 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.197266553 seconds)
  done (took 1.935555091 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.377034036 seconds)
  done (took 1.885723985 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.111018114 seconds)
  done (took 2.620740388 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.263372394 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.163648748 seconds)
  done (took 1.940428016 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.46304431 seconds)
  done (took 1.975116312 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.873816831 seconds)
  done (took 6.387338427 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.213698238 seconds)
  done (took 1.769629006 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.243065234 seconds)
  done (took 1.75737403 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.694638125 seconds)
  done (took 3.210752866 seconds)
done (took 42.682785921 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.081520957 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.080486058 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.080567884 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.077738238 seconds)
  done (took 1.819320606 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.078199878 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.071781077 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.075778316 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.071650239 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.076549685 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.072134973 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.073800903 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.076309007 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.071736824 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.072535602 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.072114798 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.072079592 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.074230901 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.073782433 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.070665598 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.074321495 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.075236945 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.07228437 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.074813004 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.072211019 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.070833544 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.073975983 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.074170887 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.071594947 seconds)
  done (took 3.281362204 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.078252769 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.072597377 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.074040927 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.071377449 seconds)
  done (took 1.821735307 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.079322224 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.091679744 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.088770354 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.077152606 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.091665509 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.085592967 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.068574027 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.068767965 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.072937474 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.076535108 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.067922565 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.095536099 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.087438942 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.076588593 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.078509815 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.065261285 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.067956924 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.086624088 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.076904788 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.077030227 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.069374017 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.076700621 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.06744357 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.087371868 seconds)
  done (took 3.401565948 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.078661518 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.102651539 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.076655474 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.086522053 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.088708132 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.064996132 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.074229299 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.088509569 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.122056976 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.065110408 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.069547325 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.064772761 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.071814729 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.064651485 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.075927203 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.103985757 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.107481259 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.068040203 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.095107985 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.065060113 seconds)
  done (took 3.168196949 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.074463088 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.069218058 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.065190264 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.068330804 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.076722212 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.072473389 seconds)
  done (took 1.958604647 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.069831202 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.067258712 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.066752725 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.066935415 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.07104687 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.066665168 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.065343205 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.066686169 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.066800988 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.066563477 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.066258139 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.065635592 seconds)
  done (took 2.332939857 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.422233264 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.068654322 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.06843236 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.06541563 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.070610127 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.066328638 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.079523118 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.067290949 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.089787046 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.065972454 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.066222873 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.067886627 seconds)
  done (took 2.728687016 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208722819 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075876871 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236611114 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136093394 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111331293 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114669571 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103662251 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111951954 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.143175058 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.101103176 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166793975 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164699647 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106471836 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136343183 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.088836892 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.097472077 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1548449 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161696972 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1026112 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164689808 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142953357 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.123951385 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.145632225 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100655657 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105700532 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121192516 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.070573679 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.079403107 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1694874 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130989651 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145866781 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110300656 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092809365 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175961084 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170289234 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141882818 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132960075 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.082705544 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.101464922 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.131740819 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196374135 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.086908447 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160668099 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.243133603 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.081090528 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133108785 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120131187 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.119056937 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.105883094 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.088671384 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14550936 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182792005 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.13850468 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.0857788 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111687338 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115034481 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.115592795 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103025222 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181472551 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160149031 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126401818 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.070560748 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.09912983 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152200324 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.131028566 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.10791114 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.126392956 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093145849 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132308127 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.153483149 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117625773 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142448514 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.128336625 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088203517 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118794232 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.138763508 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127626567 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169743471 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123685718 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.071975664 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124649993 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102525919 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080471208 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.141153804 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074702827 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174020252 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097322651 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.105104782 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.111827042 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107790734 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107987174 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159787663 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140945046 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.241057796 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.065827465 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103837426 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.120349828 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147698024 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087146783 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108864342 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116027052 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.078098869 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138614641 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.074132169 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122429602 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.075012424 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1249255 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132512902 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.075230855 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.120541957 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100562948 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.100216379 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13181655 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158554077 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088242557 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.08199618 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165739545 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122634938 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.10418796 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.142778861 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.155145916 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.098585464 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10224235 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.148751198 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178556598 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.089021726 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162130742 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106958666 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.082932061 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.087176594 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123047916 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111646628 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.121335741 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081644194 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.118623563 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168354409 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.075574353 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.095192171 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133448983 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078435877 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080094523 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102838119 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099423056 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.094390974 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.099229134 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.103242253 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135797788 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121739121 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102934014 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.266676836 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098512871 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169097216 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088621721 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.099736205 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.103889195 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.069002422 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.136730242 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156049949 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.079509632 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162854161 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.123558787 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103919233 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11890999 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082648464 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.139021832 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.079070778 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.069697591 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.144367131 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.110767084 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109842689 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.148813036 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103648294 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.127483128 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.119199014 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135301474 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130900538 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.1281961 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104608321 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.087715248 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110550888 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12536541 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.072263029 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.090652797 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.079678896 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102785892 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094892655 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.082609621 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142160941 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124417844 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.099822021 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111002846 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096022526 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.146741312 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.076267887 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128808169 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.118513726 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092780428 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.151281158 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151123648 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130664474 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097974035 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.144015069 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.069833782 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.072850712 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.087598461 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.11980584 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.081030354 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.081666686 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113691464 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.142920626 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12490901 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132045025 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108056259 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116390189 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.149689975 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.067983201 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.112160828 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142221624 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116550033 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.102069027 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.086447523 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.094784276 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.133534438 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10163587 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168757924 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108523783 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120165618 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143757877 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.095103299 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.076588222 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103197678 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127087278 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098408604 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134429627 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.095117308 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083843284 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103965408 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.07046339 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094190024 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118886261 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112448287 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126102031 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.108908146 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123646697 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.073741587 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.10941776 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.114680436 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114212461 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.061876367 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113121819 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148693936 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.089609185 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112701786 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143394874 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.075718984 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.119516516 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.423556652 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147701518 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.085811478 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110138002 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.119278095 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.128822949 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121594531 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.141451141 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108238308 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.136459644 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108987665 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.085853985 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087552656 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.097623805 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105237355 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.0951207 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.10874324 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.11463207 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.094153866 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13145129 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103416215 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109088701 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118478015 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.096442901 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.088988597 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096432499 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173809671 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118738368 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17032067 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.098210299 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.144807872 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163250085 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074257942 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078664601 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.077705295 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138998216 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08319232 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130240971 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.097102221 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104562802 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123513991 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14391387 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.094661012 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.068167005 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107442743 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133803935 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111184145 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098020055 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.104430979 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160880814 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.099705312 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.078286752 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.11256309 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103484133 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101366941 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.319734104 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.061368097 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.096638202 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075829867 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080971853 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.126962254 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.152675219 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.08097426 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.102750537 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118743716 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.109828383 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.127228081 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100385975 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098465317 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.114046231 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.149349574 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128487238 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.089437504 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111708338 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129452699 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155889207 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104664862 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.094775068 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170534386 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151499306 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.160126832 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.088234925 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130559589 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113321785 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10745425 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138399092 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.08270228 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162846426 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081037129 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135429028 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103486077 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090350602 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129498028 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.098197452 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.08754077 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146595282 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116850979 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082000892 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.077177688 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117068094 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119901849 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106274473 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.074574157 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138164029 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.072286945 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130804429 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167130309 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080438691 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.102885076 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.241544561 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078739561 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108529652 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103169911 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088884696 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.097740268 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172434681 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.088119189 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149303657 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.14115223 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112865328 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.136352278 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099327295 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.635423456 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.077636465 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15069395 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.116388941 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171227639 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.096932539 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116970456 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108737106 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122918971 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143168849 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104651054 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.175703242 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.131248161 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.115758826 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.079010281 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102007006 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102006399 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.088312612 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.104585223 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11262044 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115285612 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.093325912 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.115084342 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.122666851 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.081245625 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.094439776 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154892583 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.116154975 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143497939 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139542045 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.084469555 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117421084 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136867992 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078937346 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.120845514 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.150953331 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105346627 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.096710694 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.22422352 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.102020245 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170133149 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.072640183 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162043317 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119100198 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108251399 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112776571 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.114300436 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130464131 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106735519 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120112934 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093025894 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.109838996 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.111814774 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081216242 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.076488917 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103699195 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111447715 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.096282887 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09757502 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.097103914 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150327359 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.070804016 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094853281 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102343755 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14457321 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173242351 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.08763318 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082106369 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118350156 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112336593 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.112460669 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119755515 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.078894945 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081813714 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.081074524 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.076566359 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.10805466 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111733641 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103408817 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11052361 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163191979 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.081866871 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.223306174 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.094876286 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104266194 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.069285661 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.078389906 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095084457 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09689962 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107689153 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100178081 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169267276 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.093140606 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.088782139 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09156968 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.072553598 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082104387 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.272895786 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110641175 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11875599 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.09733816 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.06250632 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108307509 seconds)
  done (took 58.277569186 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.108481662 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.081725896 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.097220495 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.148814003 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.121835845 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.211500249 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.156089632 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.199004116 seconds)
  done (took 2.796935492 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.068975009 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.093742886 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.098409804 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.082830018 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.065858421 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.068181829 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.223729453 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.079732789 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.065728498 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.087716441 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.078935327 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.068799124 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.420920065 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.065762506 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.068880747 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.062381932 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.066646142 seconds)
  done (took 3.43214311 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.362155653 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.359682029 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.370239736 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.072717259 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 2.801909872 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.088304659 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 2.083156847 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.096131297 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.070389968 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.279651123 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.70042434 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.093912827 seconds)
  done (took 14.055020095 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.075626449 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.069515245 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.083499292 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.082336568 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.071655476 seconds)
  done (took 2.052511456 seconds)
done (took 102.677249982 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.080812265 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.38927239 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.053688198 seconds)
  done (took 2.143148217 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.082475677 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.083468268 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.083626974 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.082357919 seconds)
  done (took 2.017640542 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.073946845 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.075701103 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.083402544 seconds)
  done (took 1.912013482 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.222248005 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.138056314 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.086240848 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.081939584 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.077151283 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.077573932 seconds)
  done (took 1.921396792 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.072120122 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.074455607 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.071883497 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.074975196 seconds)
  done (took 1.971106538 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.076285323 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.052374739 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.055106297 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.054844591 seconds)
  done (took 1.916327461 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.085967251 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.078377301 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.078425426 seconds)
  done (took 1.922506792 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.107235807 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.083706225 seconds)
  done (took 1.871948508 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.081961756 seconds)
  done (took 1.761386424 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.098665211 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.112510863 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.127323593 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.108511706 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.135229346 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.10782325 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.085083053 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.086116047 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.076494107 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.086450452 seconds)
  done (took 2.704158817 seconds)
done (took 22.340011058 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.079032484 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.364997845 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.359205942 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.090447462 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.667594893 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.355610838 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.986857658 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.091027561 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.113074001 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.066981644 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.083057169 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.646704687 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.97850786 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.323337798 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.964303182 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.318305667 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.649479541 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068053757 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.066995618 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.067311407 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.971906717 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067294694 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067158089 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.067592144 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.647291866 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.370116956 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.067810543 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.323204898 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067123337 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.068980069 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.35450705 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.067809877 seconds)
  done (took 16.146226295 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.070245119 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.116594794 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.072670857 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.083376986 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.070044306 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.069173962 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.071172699 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.068657208 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.118794427 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067177755 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084378054 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.067366438 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.071465588 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068092683 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.086858507 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.067850623 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.068359742 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.06802539 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067659587 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068011133 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.085535597 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067592723 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067761725 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068000343 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.067529345 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.079005181 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.067879597 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.067622858 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067812999 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069356044 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.070713722 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068252052 seconds)
  done (took 4.065217323 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.114266037 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.123880501 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073840569 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.102534869 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.11094006 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.069550423 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.142237645 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.092337577 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.126545518 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067776274 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.083967079 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.067923833 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.100397477 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068681627 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.087178193 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068211186 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.068774868 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068396872 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067966903 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068493494 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.086957269 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067373457 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068385677 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068312546 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.068355854 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.081063155 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068466372 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068272805 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068321824 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069850701 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071391914 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.06828255 seconds)
  done (took 4.319887809 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.072392055 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.074593084 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.082882066 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.083358618 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.06895198 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.071740942 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.072271704 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.069297465 seconds)
  done (took 2.290743196 seconds)
done (took 28.509333888 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.078538438 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.068036446 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.071909473 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.08023424 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.072977317 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.078148858 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.066605308 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.074137038 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.071491857 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.072364996 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.074298211 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.06777376 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.070927234 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.066773265 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.073187356 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.06737167 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.079352744 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.071085614 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.078737682 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.079750417 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.069228604 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.072447727 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.073621862 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.078436485 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.078481105 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.078511749 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.076607143 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.072177946 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.068489203 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.069754859 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.07647437 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.083617366 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.068057543 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.079199407 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.06717672 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.067374135 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.070632136 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.067315548 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.078728907 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.075851018 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.068958593 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.075545615 seconds)
  done (took 4.752906851 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.086583435 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.090474269 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.083248111 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.061323528 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.066165768 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.064074396 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.087704361 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.059489822 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.059405106 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.087140894 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.055776103 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.05895929 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.062087143 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.05415251 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.058639163 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.05636449 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.061339924 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.055605364 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.058921992 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.059477858 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.057568583 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.053914678 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.059851737 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.064774907 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.055909019 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.061575293 seconds)
  done (took 3.386342816 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.073851469 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.083424583 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.087882541 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.12606215 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.103329824 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.076682296 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.077370274 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.092015832 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.084547496 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.06639877 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.070829431 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.093899536 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.087634672 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.073714813 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.067558834 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.084243836 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.0814402 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.06860682 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.073080986 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.090463843 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.08427231 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.083336709 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.092460271 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.080472148 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.066542204 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.069455354 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.070813348 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.080999732 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.07214016 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.076373611 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.071549747 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.070639894 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.068941397 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.078553089 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.071175115 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.069001432 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.089954839 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.076838075 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.077187356 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.068053517 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.070875447 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.067952596 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.08883134 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.121595894 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.066965341 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.073319007 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.074935393 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.076166254 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.06706511 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.085611223 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.078002447 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.066606225 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.070011306 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.066704716 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.066956962 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.080351998 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.068814026 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.069454942 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.075871067 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.070073411 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.084987406 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.0709902 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.082129847 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.066810137 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.074364773 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.066251214 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.067918936 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.066299107 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.09146122 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.068463985 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.107158979 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.067965946 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.068219557 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.076531951 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.074825501 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.072922743 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.067666995 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.081500959 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.077214344 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.070541134 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.075387086 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.070441865 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.069894265 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.086815852 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.069401878 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.068302491 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.068530387 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.073081438 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.069613959 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.068466385 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.080650386 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.066871172 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.069873914 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.083474245 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.067338433 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.068479244 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.073594478 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.071686506 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.066678893 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.078219838 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.072182371 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.068164772 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.076407411 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.0672229 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.070151297 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.077439195 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.073175187 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.066786091 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.071737775 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.073277971 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.067872727 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.069011237 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.069996514 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.069276603 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.074901797 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.073289722 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.071457572 seconds)
  done (took 10.559826474 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.161127165 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.152588187 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.069211433 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.143649249 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.075704025 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.078592351 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.158002535 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.093524317 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.067520545 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.067834075 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.068722547 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.109188327 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.105006352 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.11491623 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.078356844 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.067191397 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.082573931 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.112949421 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.148762256 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.142639755 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.082763223 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.076124901 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.069284568 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.068378863 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.071072682 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.077929082 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.085128615 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.075794219 seconds)
  done (took 4.44098777 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.081158883 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.100370479 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.072817366 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.088478196 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.089901213 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.067115209 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.069708256 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.069228297 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.079740721 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.078342098 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.067363145 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.073217409 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.074252075 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.070930976 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.068408154 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.074041955 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.074330085 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.068884137 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.070130208 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.072578649 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.076759558 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.080231528 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.071094388 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.066632246 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.074308576 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.0666609 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.064421954 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.084428802 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.067614881 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.089773772 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.065086342 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.074453229 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.081060076 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.068004236 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.067653339 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.067199424 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.067333183 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.067071737 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.069155282 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.066047651 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.066214094 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.057135938 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.066500005 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.079257429 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.073139936 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.05615553 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.071967968 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.072412739 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.072384293 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.064683493 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.069817584 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.069583412 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.070574838 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.074368479 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.072249446 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.072126128 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.068107332 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.065223292 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.075000276 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.067285487 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.063959408 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.065886978 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.071291125 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.066105526 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.075026383 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.071638417 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.065498054 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.067267844 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.068948796 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.073018728 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.067040248 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.069859404 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.06462693 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.068869723 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.071714762 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.068623501 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.067712643 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.06555133 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.06699279 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.067143719 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.055159776 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.06718908 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.053419462 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.069925426 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.065239825 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.065946806 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.06689757 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.071637801 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.079351219 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.068482512 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.072660494 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.067765842 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.065912913 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.070074759 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.060184276 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.070075919 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.082837756 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.081924234 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.066837158 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.06502148 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.081541454 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.071688008 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.066516258 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.055838561 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.074800716 seconds)
  done (took 9.141737698 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.094872052 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.087184128 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.069242956 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.082910737 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.090053943 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.085773244 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.074059385 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.076051252 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.068846197 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.08186213 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.072947205 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.075799726 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.067799946 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.076776054 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.092983666 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.07644677 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.0696018 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.076676605 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.071310024 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.099746111 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.082255814 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.081224104 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.074264551 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.067906564 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.075105675 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.079716204 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.088585352 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.079828782 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.078198962 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.075080701 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.079138864 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.088691667 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.073593618 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.07139614 seconds)
  done (took 4.429696142 seconds)
done (took 38.400868036 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.781798855 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.943192443 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.770300079 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.153936648 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 7.045743049 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.881379894 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.843263741 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.767241613 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.982557279 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.807415395 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.027964492 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.827194608 seconds)
done (took 65.543045724 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.799519061 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.920261866 seconds)
    (2/2) benchmarking "String"...
    done (took 2.048874648 seconds)
  done (took 5.679404461 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.069292968 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.303098633 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.017476213 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.772833298 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.778085152 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.065538867 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.569366564 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.312515485 seconds)
  done (took 30.53115405 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.962720303 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.973101416 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.426425209 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.459676023 seconds)
  done (took 15.577349158 seconds)
done (took 63.446231285 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.779305605 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.813265127 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.771654863 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.755438953 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.830760937 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.793034023 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.944226822 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 8.005699534 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.770826165 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.756836356 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.772017443 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.210070392 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.778922307 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 7.147326592 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.773371629 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.778862409 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.835991822 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.204366019 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.928804392 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.780582791 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.77992524 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.791809087 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.77204123 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.781019023 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.775283621 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.77513553 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.211635565 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.774788825 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.58705052 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.774699307 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.829954613 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.291189848 seconds)
  done (took 205.285536571 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.774327243 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.767971483 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.847767023 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.813303809 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.271321397 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.985467772 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.926602071 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.311322831 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.777234605 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.78664095 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 3.035006393 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.776603171 seconds)
    (13/36) benchmarking "trsv"...
    done (took 3.056501887 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.774443882 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.779397723 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.863096934 seconds)
    (17/36) benchmarking "trmv"...
    done (took 3.070158996 seconds)
    (18/36) benchmarking "symv"...
    done (took 3.053395394 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.777814936 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 3.065621349 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.774424764 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 4.169647139 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 4.133293467 seconds)
    (24/36) benchmarking "symv!"...
    done (took 3.004247593 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.809083151 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.782788006 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.777593675 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.802116062 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.972514944 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 3.050056472 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.791817308 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.779968488 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.980805191 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.647637676 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.799685619 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.793204166 seconds)
  done (took 171.298131141 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.917723891 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.775747203 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.775733988 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.775303798 seconds)
    (4/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.775604835 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.780434103 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.7770658 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.899251168 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.899436892 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.244354078 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.262405084 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.826531856 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.592927488 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.775086973 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.843366957 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.788656867 seconds)
    (16/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.776144338 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.777534745 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.791126538 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.804736256 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.777372649 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.776139521 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.901322618 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.789949352 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.966809884 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.783319865 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.777538295 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.78184701 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.146297511 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.776475806 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.78190509 seconds)
    (31/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.77708944 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.021234837 seconds)
    (33/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.775371231 seconds)
    (34/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.777446456 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.666198092 seconds)
    (36/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.115292698 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.865438093 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.777842524 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.782586473 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.777727541 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.999003454 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.77747714 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.777738316 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.781287355 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.949065561 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.775890625 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.901682677 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.777470506 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.274865579 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.776824864 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.778833033 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.486028058 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.436584445 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.778480195 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.776814682 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.780102012 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.778316481 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.77858078 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.783938768 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.527243174 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.851594409 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.780615696 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.782006105 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.783742088 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.780273145 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.985328416 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.779219264 seconds)
    (68/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.778581641 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.838907767 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 3.007086093 seconds)
    (71/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.296956274 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.902828059 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.779933299 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.84749538 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.875242616 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.777237834 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.778975944 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.779126028 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.779303343 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.859802163 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.779350305 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.902692961 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.786691976 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.78101704 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.830120503 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.851472707 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.780787675 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.676813039 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.780738694 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.782118004 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.085737305 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.845971626 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.779962858 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.781114537 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.781753448 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.900026446 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.904925082 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.568086477 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.780861401 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.592245934 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.781008016 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.916559274 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.77989144 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.960348737 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.779612374 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.862940287 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.782925263 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.782227054 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.779457469 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.810206705 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.780487013 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.837759095 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.781370488 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.149880119 seconds)
  done (took 403.760232675 seconds)
done (took 784.028765834 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.452222244 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.406551262 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.526442937 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.435355876 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.4129777 seconds)
  done (took 13.950408903 seconds)
done (took 15.667832429 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.862841173 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.86715714 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.801072697 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.866525518 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.798093409 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.865481077 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.84798627 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.80206317 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.832474667 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.80189274 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.833685198 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.800673274 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.787735667 seconds)
  done (took 25.481093708 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.0047728 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.016151698 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.8447856 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.016026036 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.822002725 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.025059348 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.940223273 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.928109616 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.92907348 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.791852492 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.789615581 seconds)
  done (took 22.824199013 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.010081018 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.017728106 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.850334531 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.012774964 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.823357221 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.016832895 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.941120666 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.927468418 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.928011894 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.789527419 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.789541375 seconds)
  done (took 22.823240133 seconds)
done (took 72.843132051 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.782902955 seconds)
  done (took 3.494846226 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.803853971 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.942288123 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.788457914 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.78468474 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.781848593 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.782848181 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.786003214 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.782124877 seconds)
  done (took 16.168489868 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.779340687 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.777626316 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.780051997 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.782056222 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.777398599 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.781721317 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.781512346 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.778599676 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.782322291 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.77960096 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.779210583 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.781320287 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.780168421 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.777905052 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.781053561 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.779669019 seconds)
  done (took 30.194169249 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.78242258 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.779079902 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.779856066 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.780100627 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.778892986 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.78033186 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.780124589 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.779049884 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.777772312 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.779678638 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.780142726 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.779890782 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.780897594 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.77910912 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.781056384 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.780212901 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.779690726 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.780846346 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.785137087 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.781132148 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.781701297 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.780355168 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.779985342 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.78028441 seconds)
  done (took 44.446075488 seconds)
done (took 96.01944571 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.489729895 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.414755438 seconds)
  done (took 8.618781415 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.788755181 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.786645185 seconds)
  done (took 5.333261355 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.78658929 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.786559467 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.787132983 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.787435709 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.78558315 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.785884788 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.785608509 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.786269106 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.787434586 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.785300373 seconds)
  done (took 19.582814765 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.786454008 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.785321389 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.784232269 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.78703369 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.785228003 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.784152799 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.785844758 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.786392396 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.785481805 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.783328497 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.787123835 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.784252961 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.78528644 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.783794209 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.786609155 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.783078098 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.783326446 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.78257236 seconds)
  done (took 33.848169605 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.786835571 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.78814574 seconds)
  done (took 5.294145326 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.780332777 seconds)
    (2/7) benchmarking "second"...
    done (took 1.780098492 seconds)
    (3/7) benchmarking "month"...
    done (took 1.781308166 seconds)
    (4/7) benchmarking "year"...
    done (took 1.779164006 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.779482101 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.780401699 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.779210999 seconds)
  done (took 14.178759579 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.781900605 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.93966411 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.014969025 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.463992217 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.778007441 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.780424028 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.740660835 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.783212548 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.781675207 seconds)
  done (took 19.780343454 seconds)
done (took 108.352064328 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.629988018 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.774878037 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.140935831 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.834036912 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.82644025 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.069213231 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.798680691 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.999584556 seconds)
done (took 42.787205863 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.869339411 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.22848738 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.260277708 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.262791536 seconds)
  done (took 12.463482145 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.757604443 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.289409093 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.810453405 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.365175437 seconds)
  done (took 19.952663455 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.166759357 seconds)
    (2/2) benchmarking "read"...
    done (took 2.133018755 seconds)
  done (took 6.018285717 seconds)
done (took 47.018680657 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.779698099 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.777301003 seconds)
    (3/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.774518925 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.777489117 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.778891729 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.774447322 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.776243982 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.777939787 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.776795307 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.776920657 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.776506228 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.777722486 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.775846621 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.773736307 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.777613942 seconds)
    (16/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.773613686 seconds)
    (17/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.773698798 seconds)
    (18/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.777580348 seconds)
    (19/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.773563694 seconds)
    (20/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.776210033 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.774487056 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.778192387 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.773829183 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.776585252 seconds)
  done (took 44.344211786 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.777396835 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.775961053 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.778542618 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.777912732 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.775367407 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.776929559 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.776132189 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.773513424 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.775792987 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.777433922 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.774498851 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.771804252 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.77479351 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.772274497 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.773709009 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.774144046 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.775548777 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.773486694 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.775380667 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.773004009 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.777333751 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.772717212 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.772308553 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.774950334 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.77197095 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.772535053 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.776154046 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.771931034 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.773196144 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.770613739 seconds)
  done (took 54.949009173 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.778385297 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.783090069 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.773765682 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.773457447 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.771944984 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.773124434 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.773912501 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.771072529 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.770946137 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.771234276 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.770291708 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.772481778 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.771569769 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.771500042 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.770858791 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.771298954 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.773295999 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.770697944 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.771014468 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.771895011 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.771206038 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.771676919 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.772243416 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.772068397 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.77210537 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.771652149 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.772496494 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.770891778 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.771754109 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.77172039 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.771515071 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.77187638 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.771642625 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.771544085 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.771523153 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.772558553 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.775687704 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.780527816 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.771784583 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.772138652 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.773156446 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.771537716 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.770628283 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.770085222 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.769925348 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.771125527 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.771027822 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.77057666 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.771329533 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.770003145 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.770443144 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.771773057 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.769207691 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.770973705 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.771568919 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.772678096 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.771740028 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.773406242 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.770395261 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.769860509 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.770376518 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.770565499 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.770241883 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.770419298 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.772295479 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.769943046 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.770861885 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.771634743 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.770686208 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.771395618 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.770426283 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.772290841 seconds)
  done (took 129.288034517 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.769525331 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.768778478 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.768708038 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.767127335 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.76759113 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.769575087 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.768302305 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.77098466 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.766477745 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.771399444 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.771162747 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.768311904 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.767955066 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.771368534 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.771034927 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.766467933 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.768914963 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.767446229 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.770887399 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.769193932 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.769644452 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.767623524 seconds)
  done (took 40.623946606 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.770308266 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.770291819 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.767264857 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.770649291 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.766773271 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.771423165 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.771622834 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.769690124 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.770464597 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.767610624 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.767012606 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.770530736 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.769555896 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.766882059 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.767806083 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.767284501 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.770122212 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.767017849 seconds)
  done (took 33.547588388 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.768117386 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.768279816 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.769783089 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.768057641 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.768782443 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.769473873 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.768321459 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.770811589 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.769551363 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.767522207 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.771717487 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.768892078 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.769523831 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.767176529 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.770828055 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.767320459 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.770302908 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.76733633 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.768944084 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.768583331 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.767807599 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.771482314 seconds)
  done (took 40.624416601 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.768582634 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.770028387 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.766354511 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.766442537 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.76807064 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.770304846 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.769646561 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.767216512 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.769777299 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.768513939 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.768117922 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.769426047 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.766114292 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.76802563 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.76711596 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.769329445 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.770639064 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.768398027 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.769081592 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.767510801 seconds)
  done (took 37.071657726 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.773243403 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.770308744 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.770026548 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.770900543 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.770701458 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.772090025 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.771780448 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.770582039 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.768746524 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.770062232 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.770888023 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.771160995 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.771439745 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.769121445 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.770205527 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.769495698 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.769538616 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.771446063 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.770391881 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.768939411 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.771160163 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.770176291 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.770167539 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.770456204 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.769558484 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.769810118 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.769499734 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.76999482 seconds)
  done (took 51.277512598 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.76910716 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.768753507 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.766694211 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.766432002 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.767089258 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.768841903 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.767745173 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.766199868 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.769450388 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.766712715 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.770577007 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.770582869 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.76867198 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.768976415 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.768944321 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.769162886 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.771580994 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.76641534 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.765645244 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.767265051 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.768176236 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.769109374 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.769690631 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.765463086 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.764468909 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.767137299 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.764923434 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.765350401 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.769985 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.766015864 seconds)
  done (took 54.741402594 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.787271745 seconds)
    (2/2) benchmarking "in"...
    done (took 1.787937277 seconds)
  done (took 5.277973856 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.766165228 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.768824257 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.768703127 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.765399456 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.765780286 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.77078804 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.768730973 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.767575788 seconds)
  done (took 15.847230892 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.769445196 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.769094056 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.769593161 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.770014805 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.769004721 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.771356981 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.777935373 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.770789753 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.773078769 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.771873649 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.776643511 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.778543674 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.775576999 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.77190242 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.770924327 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.774341171 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.769774706 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.769611761 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.770554199 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.771972406 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.770138792 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.774194368 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.773465492 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.766967238 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.773683235 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.785166328 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.77596498 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.770834593 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.772384744 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.777561779 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.773377105 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.767945154 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.771394041 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.771437766 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.769937463 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.771898166 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.782568576 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.773199469 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.779788496 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.770685753 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.76990389 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.769873239 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.773892692 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.776636408 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.774147969 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.77115046 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.770904286 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.768640458 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.772145312 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.774654906 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.775303286 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.772280961 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.769876831 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.779587069 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.775095088 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.781343867 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.773407641 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.775617555 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.781960668 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.783849207 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.787714994 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.78034822 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.773670327 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.773110633 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.781012933 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.793382855 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.781436859 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.768796056 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.768809377 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.770592692 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.781752119 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.787828964 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.7816222 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.772382852 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.773212762 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.773620895 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.774039538 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.772220892 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.78228126 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.776986404 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.773552738 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.774366726 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.783253598 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.79369899 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.774357791 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.773872206 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.775591262 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.771895984 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.774508112 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.786227776 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.772724561 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.772294809 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.774857251 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.775512332 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.777552494 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.775619712 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.775472286 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.777377243 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.769609075 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.772532906 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.77397618 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.777249553 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.781710261 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.775157133 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.772812451 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.785693742 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.774179485 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.774680683 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.785590599 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.775132923 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.773366419 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.776802425 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.783449454 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.770827591 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.780378724 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.783013507 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.774345827 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.777679526 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.775885237 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.773799533 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.784035216 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.800861619 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.775666388 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.774693217 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.779890927 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.78485874 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.775944692 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.780964507 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.774765421 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.772058971 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.771194622 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.779433208 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.775062635 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.778055929 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.775126824 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.779638604 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.771774345 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.776434411 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.776317264 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.778606318 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.78034462 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.778078138 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.778695253 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.780892295 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.776066948 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.778949758 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.786835265 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.775054803 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.780243324 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.778286285 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.772302703 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.778477327 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.779999879 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.777183014 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.780831028 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.777598164 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.777299677 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.777665223 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.777595225 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.777833608 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.776551735 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.777737232 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.782307843 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.777328415 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.783440355 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.779214375 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.775501524 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.777149579 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.776127392 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.778902183 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.777053225 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.778659104 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.781268382 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.784386291 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.777443988 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.777373805 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.785645882 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.778650335 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.776992555 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.777641458 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.780922777 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.785916058 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.779039884 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.787042896 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.778201236 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.778941943 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.777498815 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.780278126 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.777880638 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.777462126 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.780670201 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.783673649 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.792986945 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.791887107 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.779932931 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.781833366 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.780157087 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.78089121 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.785740962 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.781126142 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.778238346 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.779059198 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.778912525 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.779407878 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.785093548 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.779146081 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.779003052 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.778233115 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.777806722 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.779097277 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.781413403 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.781962219 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.783270421 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.777068516 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.778406334 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.779917569 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.779816267 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.775622139 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.78164633 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.779908335 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.779383488 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.780278237 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.79180911 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.77641221 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.780778166 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.783222754 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.780103204 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.780580412 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.780405323 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.783150772 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.781877027 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.789441654 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.783005294 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.782461591 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.789306667 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.781375462 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.779919387 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.784732914 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.782054172 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.77771903 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.783859275 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.787607617 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.780889068 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.781204317 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.781619957 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.783416163 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.780779287 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.789997617 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.779879116 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.78257998 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.782133112 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.7865989 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.778323214 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.783517556 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.782910873 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.784268973 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.78481975 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.780555676 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.781762101 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.785227711 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.78152941 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.781295916 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.781450499 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.784603737 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.788306341 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.789558935 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.786015343 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.787179253 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.7839116 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.785364551 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.784777271 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.782354881 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.790736679 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.799699147 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.789150652 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.791737534 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.787197555 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.787005518 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.789416949 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.783910601 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.787783774 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.784016227 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.783788068 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.786985073 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.781528512 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.77935384 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.786067754 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.781430416 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.785960296 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.785420488 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.786721379 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.782214122 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.782153992 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.782315879 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.786852001 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.782652189 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.784819381 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.782465712 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.789160978 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.784644852 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.786598907 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.784774038 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.793492237 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.785360363 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.787162399 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.789359971 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.78256122 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.782026159 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.783565378 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.781832916 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.784497291 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.789469044 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.784435986 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.793116298 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.783920397 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.794482246 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.787632866 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.786034283 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.788509311 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.779920297 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.781781953 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.784667558 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.784606978 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.791425189 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.782326946 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.783414735 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.785150631 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.783207901 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.788549062 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.781816329 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.782633208 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.782580045 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.783672906 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.798335378 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.78435562 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.787266524 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.785826747 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.779836805 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.781797261 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.786403193 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.781470317 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.789577328 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.781846989 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.785150204 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.78610529 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.784582225 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.78154492 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.78245203 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.782426204 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.778124738 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.783805241 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.790066589 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.783535546 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.78728317 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.782863345 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.79487708 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.785078572 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.793768037 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.782926383 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.785468183 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.78251267 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.786174773 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.787514364 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.784461838 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.786847896 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.783079482 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.786085078 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.786744981 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.78383664 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.789814908 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.788206948 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.784278327 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.788181891 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.79196894 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.805972015 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.786491981 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.787464477 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.780563561 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.78776123 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.788903947 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.784720243 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.784162573 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.786352624 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.79547534 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.793632929 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.787418012 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.785334297 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.787735665 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.786545776 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.787089723 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.78496875 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.785310544 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.784863901 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.788708946 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.786815346 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.794271873 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.785716653 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.786762776 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.789919296 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.786580568 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.80088944 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.785608998 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.789357387 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.787328503 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.78505294 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.786947345 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.788950672 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.786260987 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.788332799 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.786338665 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.786843981 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.793175134 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.794995576 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.793014914 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.78787011 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.786367911 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.788495158 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.790802609 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.786918392 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.786908308 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.78771366 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.789826504 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.7861655 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.794057704 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.786459497 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.785957278 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.788484849 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.787185832 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.789781498 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.793803562 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.78801261 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.78305079 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.785464926 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.784983369 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.789511802 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.789076211 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.800763797 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.790365421 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.796287176 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.795056398 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.792250319 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.790645191 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.790042016 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.798107965 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.787272572 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.791602068 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.78815744 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.791825167 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.789777297 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.792301417 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.788372769 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.799744492 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.788618549 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.788953663 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.798153441 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.790098876 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.78846565 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.788880166 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.791868391 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.790266369 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.78493987 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.786343997 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.791006208 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.79670187 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.791227408 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.787327222 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.791133299 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.788793983 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.789459435 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.79057477 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.788270557 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.790042918 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.785204321 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.790468467 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.788583275 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.788672379 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.784200699 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.788218154 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.789378649 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.795472138 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.79798938 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.786727897 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.79295161 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.791152391 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.795066539 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.790569331 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.790103016 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.78698114 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.785847025 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.792465586 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.793220856 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.793754529 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.794018715 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.792516211 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.792702407 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.792831848 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.790671385 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.795047628 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.79895987 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.796482734 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.787638367 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.794370402 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.793379613 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.794742593 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.791064264 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.789016467 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.79347378 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.79732219 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.79142868 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.79207003 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.7915917 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.795609124 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.810073225 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.791654721 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.793800939 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.795129794 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.800483838 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.7906838 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.791647146 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.792450353 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.798591917 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.796292462 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.798471032 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.795572426 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.802063186 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.792643275 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.794184344 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.796661622 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.795451654 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.804194583 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.798446252 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.79338172 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.793187851 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.798912568 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.812897352 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.79316603 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.803468003 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.82351546 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.796139338 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.798251475 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.797053547 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.794703628 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.794349545 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.799936292 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.795382664 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.795372952 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.795418256 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.794897623 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.796418727 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.801599891 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.798584268 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.797361083 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.795788775 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.795894682 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.80035489 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.79328254 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.795701595 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.799522213 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.795541315 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.795571776 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.796725315 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.798836272 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.814617394 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.807630816 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.79628119 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.795775398 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.793574448 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.801868256 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.800205555 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.806023259 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.800939938 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.79660943 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.797116047 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.801320865 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.79686299 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.794794718 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.798658444 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.798757912 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.797490114 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.795067402 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.8110907 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.804512001 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.804774418 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.79865129 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.798584645 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.79563028 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.799422811 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.796306565 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.797164375 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.802329713 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.798529019 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.797875521 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.7962293 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.79558738 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.799380497 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.802817719 seconds)
  done (took 1065.687721115 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.79378156 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.794006104 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.793627167 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.794424357 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.793333027 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.793625834 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.794058948 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.795189898 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.794449403 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.796203456 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.793827915 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.794354163 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.795515872 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.795967535 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.795452933 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.795803054 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.794992145 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.793787354 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.794924438 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.794965055 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.794774886 seconds)
  done (took 39.417207751 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.796913585 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.79443897 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.795144977 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.79783689 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.795875823 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.796071098 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.793322192 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.798199298 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.798578657 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.794685261 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.797583877 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.796987956 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.795332424 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.795317131 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.795725295 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.797159004 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.798377467 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.796295193 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.798771686 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.79444538 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.797815458 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.797689582 seconds)
  done (took 41.254054855 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.8002734 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.797654306 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.799898985 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.796332279 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.799780405 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.795743214 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.797881447 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.799488834 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.799109889 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.803525271 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.799993103 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.800891231 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.80618913 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.80371574 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.803311886 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.799864244 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.943832645 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.800468231 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.800621415 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.800436938 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.79939486 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.808714413 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.79588331 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.798740488 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.801141904 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.798646579 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.799007737 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.797814191 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.799419371 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.801441646 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.802757164 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.800378511 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.802264263 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.805458955 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.803354269 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.801904618 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.804790528 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.805209556 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.797941687 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.800427833 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.810711231 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.81832664 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.801679498 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.8130506 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.801569075 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.801817517 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.806064364 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.807904994 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.801503501 seconds)
  done (took 90.167847998 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.802417721 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.802870508 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.799452419 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.801883392 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.802893255 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.802268015 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.803297916 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.801459507 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.798018408 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.80116391 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.8021663 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.799096431 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.798980484 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.80166401 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.801339208 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.798713416 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.797965955 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.799013851 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.800178674 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.798645768 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.799819702 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.801898619 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.802813919 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.79866758 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.800785811 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.79877624 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.80021587 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.800922241 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.800016979 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.798952018 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.803297174 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.802640104 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.801685164 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.799851181 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.79984475 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.802682008 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.803400188 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.801673971 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.802262938 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.800844286 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.802434034 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.803279317 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.801528002 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.8030314 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.799910146 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.79993463 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.79945627 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.799765932 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.801077245 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.803646163 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.802928384 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.801298336 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.803658749 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.80091936 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.803376325 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.803087293 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.799898097 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.801474414 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.803580826 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.803427859 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.802683671 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.801748039 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.800579643 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.802634382 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.803523482 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.803106632 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.800172233 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.803157103 seconds)
  done (took 124.226347196 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.804008308 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.806204097 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.804075049 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.803832311 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.805720089 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.804834627 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.804521705 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.805801676 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.805631585 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.805620754 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.807262306 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.806659649 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.808703387 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.8073041 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.805568946 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.807333926 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.80814976 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.807181479 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.809311599 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.80795127 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.808014556 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.808184539 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.806813137 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.809997867 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.808138834 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.806503345 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.807274507 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.807233986 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.807780076 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.811089254 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.807264467 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.809059052 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.809406481 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.808805135 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.809093201 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.808314881 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.807667877 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.809626481 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.807483963 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.808646681 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.810303504 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.808010044 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.809645716 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.809134055 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.809504618 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.809837879 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.810173048 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.808833209 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.809781631 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.808721397 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.808938044 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.812958402 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.809425317 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.810194278 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.810555303 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.808087736 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.808352915 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.810421351 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.808543611 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.809523774 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.809786209 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.810403902 seconds)
  done (took 113.841379829 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.809290323 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.809398032 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.806864197 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.807420463 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.81119954 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.807527919 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.810240756 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.808802866 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.80843723 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.80934541 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.809694607 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.805924701 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.80525381 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.808870607 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.805119863 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.806568828 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.805703723 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.80588472 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.807632855 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.805565833 seconds)
  done (took 37.897846135 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.806112513 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.808605875 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.80690556 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.807039854 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.809587625 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.806857395 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.810097751 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.808997118 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.806538503 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.809946431 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.809886463 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.811193367 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.807029657 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.808731447 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.808949612 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.807638338 seconds)
  done (took 30.676018934 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.807530757 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.810108795 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.809843203 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.811653345 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.807483765 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.807728636 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.811505028 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.807011477 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.805884731 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.811209707 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.811015146 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.811815133 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.811681424 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.812333264 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.808638202 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.810030658 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.808698862 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.809282565 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.810673351 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.811885869 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.810684768 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.808618201 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.811785448 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.811555062 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.807754504 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.811108424 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.810520947 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.810888695 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.80960784 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.813182076 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.809726499 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.810419447 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.809350933 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.811199735 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.813757166 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.811652475 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.811241494 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.814233231 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.811736808 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.812315209 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.813077296 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.809202984 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.812961323 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.812191588 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.809780063 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.812828575 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.808415235 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.809890677 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.811005399 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.810723552 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.813281773 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.811937125 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.815228786 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.814845946 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.813691673 seconds)
  done (took 101.339267251 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.814574372 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.811495893 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.81030921 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.811794527 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.814862505 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.813623837 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.814125386 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.810576298 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.811264071 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.814486564 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.812903618 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.814779437 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.81152508 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.813473152 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.811314405 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.813545646 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.809286076 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.811893781 seconds)
  done (took 34.371952128 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.812618333 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.812832679 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.81592298 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.812112276 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.814395191 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.815925266 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.811225229 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.814797948 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.815084147 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.811583624 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.813066331 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.814536722 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.81519852 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.817428446 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.813736503 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.814167042 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.814314839 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.813507468 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.81284068 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.811485146 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.81437472 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.814718399 seconds)
  done (took 41.651461686 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.815539294 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.817273677 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.832263956 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.856250728 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.842615416 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.81729091 seconds)
  done (took 12.727005864 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.815454032 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.813592096 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.812516505 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.816035626 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.814883718 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.813356078 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.81162783 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.810761828 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.813510907 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.812085118 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.812056816 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.815788352 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.816057196 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.8120384 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.814481078 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.814158908 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.812595488 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.810956074 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.81339745 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.815029106 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.811886893 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.815324957 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.814564798 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.812159048 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.813006931 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.812575011 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.816048169 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.812731687 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.814169205 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.81558255 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.816392761 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.813273627 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.815189505 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.814354849 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.816013544 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.817308799 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.813131625 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.815239181 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.815143139 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.814983767 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.816543697 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.817736126 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.816058078 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.812329565 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.816704773 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.812616818 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.813539336 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.813475823 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.814825216 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.816826866 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.816146049 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.812472238 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.815201558 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.815729813 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.817222673 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.817665225 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.814763833 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.814477372 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.817655341 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.815270632 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.813570731 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.81645175 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.815197676 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.813587622 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.81721152 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.814288152 seconds)
  done (took 121.506936289 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.814259543 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.816791727 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.81508889 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.816382628 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.81655033 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.816994681 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.814831022 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.814548773 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.815371542 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.816063792 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.818281093 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.815963633 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.817894743 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.815448115 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.81518386 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.816341951 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.815706135 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.815911051 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.816464182 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.819501935 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.817173789 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.81657314 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.815408376 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.818331788 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.816593634 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.819475202 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.815888184 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.816955453 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.817050646 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.816217004 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.816462799 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.816089281 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.81651369 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.818474558 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.815743807 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.817515974 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.817857414 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.817346631 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.81697323 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.82051712 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.816918114 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.818852846 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.815916504 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.816927898 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.819784719 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.817400664 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.81873271 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.816646653 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.817602641 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.817886443 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.818848426 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.81749369 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.817345146 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.81688223 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.818850041 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.81786955 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.818342066 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.818020807 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.818029959 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.819606943 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.81783124 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.818487103 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.820828818 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.818553773 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.818088024 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.818156512 seconds)
  done (took 121.687750813 seconds)
done (took 2485.759418846 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.88521894 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.838793757 seconds)
  done (took 15.47503369 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.985992053 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.93929632 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.825082939 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.839879934 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.823484757 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.820731657 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.837641292 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.822524467 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.82512986 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.823707991 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.825273863 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.010266398 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.827897122 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.824646644 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.82458547 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.919478879 seconds)
  done (took 51.538836281 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.826996527 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.828455996 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.838647846 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.828716324 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.827233749 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.839239594 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.860582246 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.83171977 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.860086446 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.840560923 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.894740732 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.836969738 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.828837065 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.877347724 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.83960532 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.843748174 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.916334637 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.899538805 seconds)
  done (took 35.079226416 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.902881045 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.834212696 seconds)
  done (took 10.504406059 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.828614741 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.826223353 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.859553526 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.840520399 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.824036849 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.820288529 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.827676795 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.826496064 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.837663829 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.842095951 seconds)
  done (took 70.097423151 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.833137788 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.8287614 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.829152497 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.82694999 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.820220438 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.824506334 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.826969663 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.825932662 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.50098067 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.864966524 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.835045453 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.834200007 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.829143466 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.83077535 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.827642824 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.851709531 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.945706646 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.826051619 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.826049561 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.834213146 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.831121823 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.925366404 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.841867715 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.827651381 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.857491111 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.505374104 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.836914486 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.835133899 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.965975061 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.825959398 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.831630557 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.830946001 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.832209021 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.221266544 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.118683609 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.830702253 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.839352243 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.837266008 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.826560793 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 2.007090628 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.830526442 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.836049438 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.80935445 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.112079875 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.911983076 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.871369319 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.184994476 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.834195818 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.833201486 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.860944162 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.832383409 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.834394087 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.844706378 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.33869056 seconds)
  done (took 130.549367856 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.825833455 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.401780358 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.990575758 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.829245374 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.107354187 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.068493251 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.829226933 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.873792991 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.829060832 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.075562394 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.004685535 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.945944034 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.828017161 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.827207115 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.824520617 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.825317632 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.979949122 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.896968358 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.829533156 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.825808559 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.862266154 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.092184034 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.954366116 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.830579095 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.851649063 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.053777723 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.952802932 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.943529121 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.48291463 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.824609838 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.89539604 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.829234659 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.828629598 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.826610347 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.991333566 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.936127967 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.925161184 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.828407501 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.827055904 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.827521729 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.490482919 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.049377555 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.938761402 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.96442431 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.075395403 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.05687778 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.47388247 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.826832217 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.466106389 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.024210355 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.036289483 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.080048827 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.956813448 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.829135155 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.073714141 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.826932646 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.827085462 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.08919325 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.055255698 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.93999502 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.828983085 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.82707759 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.826083672 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.140215404 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.829453114 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.937304512 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.830696147 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.828723669 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.939533284 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.945453865 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.057072815 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.06884325 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.859560871 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 3.702014254 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.334282775 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.11132413 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.898639029 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.092050109 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.830872122 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.828020659 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.921550856 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.579582435 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.00205488 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.142905361 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.092743766 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.870687596 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.431934748 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.828631917 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.076980293 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.077193022 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.057486101 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.072620118 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.993797127 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.130885947 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.828647772 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.829093971 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.028323255 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.961237351 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.830845661 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.19070648 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.078758515 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.557930217 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.860621465 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.133609517 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.966142778 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.832103871 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.454911582 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.829078062 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.032059439 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.871809144 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.830857456 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.833106628 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.076777807 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.70250109 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.829409868 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.613195129 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.89518486 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.833250389 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.094436938 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.833707526 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.072034638 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.830773406 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.13990438 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.358283592 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.873482126 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.022644499 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.073484886 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.613416254 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.098637163 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.143624922 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.954275591 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.089559555 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.663296865 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.832549131 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.113718276 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.832436026 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.831765381 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.001054023 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.83201413 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.985745229 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.83338532 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.091128228 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.857661883 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.00046208 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.832976021 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.104127789 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.876806253 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.882857653 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.833733912 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.949850349 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.832600681 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.875989563 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.015489732 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.833839785 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.831385204 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.422090127 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.832696319 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.979955969 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.130428299 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.856987164 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.902973821 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.357797059 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.832431299 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.926352766 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.86086636 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.429102154 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.830726021 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.003022338 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.833913016 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.804258707 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.832436502 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.143830862 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.063419668 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.835461448 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.832842112 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.625134215 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.5180785 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.832537278 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.009186374 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.078803576 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.480481229 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.053545392 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.836466073 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.966784418 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.834991132 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.910632685 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.182580648 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.832906197 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.833065677 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.832105335 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.833544316 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.834502299 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.059428062 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.862366487 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.518041552 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.971489633 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.077809428 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.145672358 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.097368051 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.882056279 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.833668602 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.101098547 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.836181495 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.901884857 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.835196216 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.859468335 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.082317209 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.838109766 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.063950952 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.122091426 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.884454363 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.885072682 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.835738962 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.836593872 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.834008661 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.979183374 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.934376465 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.835519134 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.834763581 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.952208095 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.959822862 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.024235457 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.419587704 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 4.008321704 seconds)
  done (took 895.398120226 seconds)
done (took 1210.395571831 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.836279605 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.836533538 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.820953693 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.837573004 seconds)
  done (took 29.10587732 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.843601761 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.841644637 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.842949372 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.841400832 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.84245255 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.841461408 seconds)
  done (took 12.827540294 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.907391352 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.836380605 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.838919317 seconds)
  done (took 21.35767984 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.909752357 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.240539053 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.945811255 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.276265142 seconds)
  done (took 10.1473432 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.842643672 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.843537946 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.84269197 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.844767532 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.844880798 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.845559729 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.844017897 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.844673188 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.84627444 seconds)
  done (took 18.375229194 seconds)
  (6/6) benchmarking "26942"...
  done (took 3.987558554 seconds)
done (took 97.57481122 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.973023411 seconds)
    (2/309) benchmarking ("sort", Float64, false)...
    done (took 5.658269729 seconds)
    (3/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.012438864 seconds)
    (4/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.181911668 seconds)
    (5/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.421629581 seconds)
    (6/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.836521505 seconds)
    (7/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 3.449855911 seconds)
    (8/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.997688885 seconds)
    (9/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.51691789 seconds)
    (10/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.090856813 seconds)
    (11/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.419824665 seconds)
    (12/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.876598167 seconds)
    (13/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.072333915 seconds)
    (14/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.863309864 seconds)
    (15/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.963090606 seconds)
    (16/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.845753567 seconds)
    (17/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.050859784 seconds)
    (18/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.035176458 seconds)
    (19/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.136665359 seconds)
    (20/309) benchmarking ("sort", BigInt, false)...
    done (took 6.842834379 seconds)
    (21/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.863990805 seconds)
    (22/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.835387141 seconds)
    (23/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.928362927 seconds)
    (24/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.966381756 seconds)
    (25/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.821431317 seconds)
    (26/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.115841661 seconds)
    (27/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.943194063 seconds)
    (28/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.197908744 seconds)
    (29/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.938073579 seconds)
    (30/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.473545721 seconds)
    (31/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.950053748 seconds)
    (32/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.400613953 seconds)
    (33/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.843639778 seconds)
    (34/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.945372689 seconds)
    (35/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.762920664 seconds)
    (36/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.729582158 seconds)
    (37/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.855983329 seconds)
    (38/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.638633841 seconds)
    (39/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.980697415 seconds)
    (40/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.924732923 seconds)
    (41/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.041096406 seconds)
    (42/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.826801782 seconds)
    (43/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 3.67730673 seconds)
    (44/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.977805469 seconds)
    (45/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.841958797 seconds)
    (46/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.272712818 seconds)
    (47/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.715919234 seconds)
    (48/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.949971712 seconds)
    (49/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.09580621 seconds)
    (50/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.913308116 seconds)
    (51/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 8.222645475 seconds)
    (52/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 2.023046937 seconds)
    (53/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.190535838 seconds)
    (54/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.35551261 seconds)
    (55/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.360503983 seconds)
    (56/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.895435219 seconds)
    (57/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 8.226525882 seconds)
    (58/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.946482095 seconds)
    (59/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.025388482 seconds)
    (60/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.713699732 seconds)
    (61/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.033127828 seconds)
    (62/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.844608249 seconds)
    (63/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.018555633 seconds)
    (64/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.968668557 seconds)
    (65/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.848618167 seconds)
    (66/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.500760251 seconds)
    (67/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.142656788 seconds)
    (68/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.86765535 seconds)
    (69/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.520270244 seconds)
    (70/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.875729271 seconds)
    (71/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.109229892 seconds)
    (72/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.840757694 seconds)
    (73/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.557736735 seconds)
    (74/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.099566224 seconds)
    (75/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.048446314 seconds)
    (76/309) benchmarking ("sort", Float32, false)...
    done (took 5.615065195 seconds)
    (77/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.129211007 seconds)
    (78/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.206147192 seconds)
    (79/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.840381258 seconds)
    (80/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.867253959 seconds)
    (81/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.839888894 seconds)
    (82/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.105554506 seconds)
    (83/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.867438884 seconds)
    (84/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.825257136 seconds)
    (85/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.731539027 seconds)
    (86/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.84275533 seconds)
    (87/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.94401269 seconds)
    (88/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.338801295 seconds)
    (89/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.826725817 seconds)
    (90/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 7.918317831 seconds)
    (91/309) benchmarking ("sort", Int64, false)...
    done (took 5.559340793 seconds)
    (92/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.159801662 seconds)
    (93/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.24478682 seconds)
    (94/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.408698793 seconds)
    (95/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.841999184 seconds)
    (96/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 3.086412934 seconds)
    (97/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.334493214 seconds)
    (98/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.980948293 seconds)
    (99/309) benchmarking ("sort", Int8, false)...
    done (took 4.800495349 seconds)
    (100/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.009970621 seconds)
    (101/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.224443696 seconds)
    (102/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.843698421 seconds)
    (103/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.94478688 seconds)
    (104/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.903081576 seconds)
    (105/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.825379669 seconds)
    (106/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 3.617983158 seconds)
    (107/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.071589973 seconds)
    (108/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.911246896 seconds)
    (109/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.85531072 seconds)
    (110/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.94298895 seconds)
    (111/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.868239872 seconds)
    (112/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.015506399 seconds)
    (113/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.987649327 seconds)
    (114/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.828209552 seconds)
    (115/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.925822047 seconds)
    (116/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.088165602 seconds)
    (117/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.841980572 seconds)
    (118/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.93383115 seconds)
    (119/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.843770915 seconds)
    (120/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 4.612493754 seconds)
    (121/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.870157209 seconds)
    (122/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.165800047 seconds)
    (123/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.844031479 seconds)
    (124/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.919415846 seconds)
    (125/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.905533326 seconds)
    (126/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.139900101 seconds)
    (127/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.845629923 seconds)
    (128/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.874100219 seconds)
    (129/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.170713177 seconds)
    (130/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.970308594 seconds)
    (131/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.169094548 seconds)
    (132/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.953507943 seconds)
    (133/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.826785082 seconds)
    (134/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.146568103 seconds)
    (135/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.490074477 seconds)
    (136/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.857973621 seconds)
    (137/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.987986962 seconds)
    (138/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.431569762 seconds)
    (139/309) benchmarking ("sort", Bool, false)...
    done (took 2.291628911 seconds)
    (140/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.86566784 seconds)
    (141/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.948830905 seconds)
    (142/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.828507654 seconds)
    (143/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.131783309 seconds)
    (144/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.926354634 seconds)
    (145/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.210662516 seconds)
    (146/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.310282636 seconds)
    (147/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.951596028 seconds)
    (148/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.062587981 seconds)
    (149/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.750674694 seconds)
    (150/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.110278517 seconds)
    (151/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.827891175 seconds)
    (152/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 3.363485978 seconds)
    (153/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.845339676 seconds)
    (154/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.872280176 seconds)
    (155/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.847195793 seconds)
    (156/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.983155471 seconds)
    (157/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.010067927 seconds)
    (158/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.447597041 seconds)
    (159/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.139328115 seconds)
    (160/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.855573357 seconds)
    (161/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.944475206 seconds)
    (162/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.011895508 seconds)
    (163/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.972340149 seconds)
    (164/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.948847584 seconds)
    (165/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.087025574 seconds)
    (166/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.871829311 seconds)
    (167/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.869564637 seconds)
    (168/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.868025537 seconds)
    (169/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.976145774 seconds)
    (170/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.095982645 seconds)
    (171/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.895077342 seconds)
    (172/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.866276659 seconds)
    (173/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.893547609 seconds)
    (174/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.845691323 seconds)
    (175/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.849138216 seconds)
    (176/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.174160326 seconds)
    (177/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.049830388 seconds)
    (178/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.059388763 seconds)
    (179/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.889161154 seconds)
    (180/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.922911775 seconds)
    (181/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.174302067 seconds)
    (182/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 2.031658339 seconds)
    (183/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.133467989 seconds)
    (184/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.896816181 seconds)
    (185/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.846529532 seconds)
    (186/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 3.228296251 seconds)
    (187/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.902491318 seconds)
    (188/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.90890742 seconds)
    (189/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.921001396 seconds)
    (190/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.831145828 seconds)
    (191/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.402651128 seconds)
    (192/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.867753193 seconds)
    (193/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.028959375 seconds)
    (194/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.964864557 seconds)
    (195/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.870909125 seconds)
    (196/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.230443948 seconds)
    (197/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.784117027 seconds)
    (198/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.932918245 seconds)
    (199/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.222128868 seconds)
    (200/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.226408808 seconds)
    (201/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.848752728 seconds)
    (202/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.892320621 seconds)
    (203/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.144792284 seconds)
    (204/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.835227987 seconds)
    (205/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.857086477 seconds)
    (206/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 2.001666995 seconds)
    (207/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.935811789 seconds)
    (208/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.933333486 seconds)
    (209/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.061000563 seconds)
    (210/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.981773492 seconds)
    (211/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.974076798 seconds)
    (212/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.83411014 seconds)
    (213/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.911311329 seconds)
    (214/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.978437811 seconds)
    (215/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.510437123 seconds)
    (216/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.407652183 seconds)
    (217/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.040116735 seconds)
    (218/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.737156385 seconds)
    (219/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.24144488 seconds)
    (220/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 3.582420455 seconds)
    (221/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.064438925 seconds)
    (222/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.444885057 seconds)
    (223/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 8.523527225 seconds)
    (224/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.896393134 seconds)
    (225/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.01230749 seconds)
    (226/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.278445736 seconds)
    (227/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.955966564 seconds)
    (228/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.230414495 seconds)
    (229/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.153161519 seconds)
    (230/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.436688037 seconds)
    (231/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.141504219 seconds)
    (232/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.201217329 seconds)
    (233/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.872865258 seconds)
    (234/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.354547524 seconds)
    (235/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.252768089 seconds)
    (236/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.759385642 seconds)
    (237/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.817981461 seconds)
    (238/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.1546624 seconds)
    (239/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.947807376 seconds)
    (240/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.891756993 seconds)
    (241/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.091834519 seconds)
    (242/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.641972864 seconds)
    (243/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.916120581 seconds)
    (244/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.934201083 seconds)
    (245/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.197704478 seconds)
    (246/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.867555365 seconds)
    (247/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.222366792 seconds)
    (248/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.134055839 seconds)
    (249/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.834562352 seconds)
    (250/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 4.87338168 seconds)
    (251/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.910102718 seconds)
    (252/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.160783772 seconds)
    (253/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.854507211 seconds)
    (254/309) benchmarking ("map", abs, Int8, false)...
    done (took 2.006634966 seconds)
    (255/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.835209057 seconds)
    (256/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 8.100362036 seconds)
    (257/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 8.882798634 seconds)
    (258/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 4.231106138 seconds)
    (259/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.979505923 seconds)
    (260/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.946160661 seconds)
    (261/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.929793978 seconds)
    (262/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.875451469 seconds)
    (263/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.044148065 seconds)
    (264/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.364948625 seconds)
    (265/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.954239813 seconds)
    (266/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.8384436 seconds)
    (267/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.935735401 seconds)
    (268/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.933673775 seconds)
    (269/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.855874594 seconds)
    (270/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.886399807 seconds)
    (271/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.126274413 seconds)
    (272/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.852176374 seconds)
    (273/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.138777044 seconds)
    (274/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.958494966 seconds)
    (275/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.237805352 seconds)
    (276/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.976617904 seconds)
    (277/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.98780794 seconds)
    (278/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.253579283 seconds)
    (279/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.199125107 seconds)
    (280/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.856158576 seconds)
    (281/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 8.37186695 seconds)
    (282/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.975701838 seconds)
    (283/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.78986312 seconds)
    (284/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.111651916 seconds)
    (285/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.93709133 seconds)
    (286/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.959846244 seconds)
    (287/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.933115761 seconds)
    (288/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.712992752 seconds)
    (289/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.960611926 seconds)
    (290/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.834832807 seconds)
    (291/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 3.132225699 seconds)
    (292/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 5.006343085 seconds)
    (293/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.101396702 seconds)
    (294/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.645569804 seconds)
    (295/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.88389576 seconds)
    (296/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.869449207 seconds)
    (297/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.896538654 seconds)
    (298/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.137113359 seconds)
    (299/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.20911352 seconds)
    (300/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.769743852 seconds)
    (301/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.512264151 seconds)
    (302/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.130327445 seconds)
    (303/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.253662922 seconds)
    (304/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.910504936 seconds)
    (305/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.872651737 seconds)
    (306/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.875589934 seconds)
    (307/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.213214109 seconds)
    (308/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.468971415 seconds)
    (309/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.043472947 seconds)
  done (took 1015.219788916 seconds)
done (took 1017.011272814 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.884782961 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.879612085 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.860227762 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.880974147 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.974314673 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.89391802 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.871945274 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.860819297 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.907123641 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.908920873 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.861224014 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.892696221 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.862419614 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.861325641 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.85806898 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.875380207 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.163440481 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.883126702 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.877902862 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.868070579 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.877586666 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.86013406 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.908252914 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.891383693 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.862741413 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.862760131 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.864838924 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.881291254 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.974036503 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.864226656 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.86256591 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.873710002 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.163098258 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.878462797 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.853313784 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.880353628 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.872677162 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.868551842 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.862780811 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.892990196 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.288646935 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.866676041 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.862246143 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.859673219 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.859198305 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.862676524 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.862403041 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.865512923 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.874851323 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.875544829 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.288848855 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.881425521 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.864467944 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.859857747 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.869666705 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.861036118 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.862426277 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.879382436 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.880445032 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.877396838 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.151809519 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.886016256 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.861610713 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.878211913 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.869829671 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.32387495 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.859437932 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.862806952 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.288188966 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.869713275 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.324278429 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.874130803 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.859900128 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.876658063 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.893691701 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.163645588 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.875429541 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.858296807 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.869081788 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.861174459 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.868578225 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.874325547 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.864746591 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.859818728 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.875367661 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.892105661 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.869908354 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.86429762 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.869787386 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.881328948 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.870210241 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.873403595 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.863659894 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.855842581 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.869110214 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.863638874 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.864956149 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.865690489 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.864439415 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.870202685 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.286628218 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.883584235 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.856570159 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.857005934 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.859414249 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.875384774 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.28738124 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.867293309 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.881625197 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.907269819 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.862037277 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.152806746 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.887410635 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.87856126 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.868959207 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.862659062 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.855996038 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.152977162 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.309071886 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.883032388 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.862642668 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.861109782 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.877868878 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.861345175 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.856621102 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.164845394 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.882961639 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.876603338 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.983740578 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.8725044 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.894497456 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.862966762 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.862861537 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.889191144 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.878552893 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.893677254 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.863823306 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.878992037 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.878694757 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.857723005 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.874659497 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.870242893 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.862391634 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.866575669 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.854529184 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.890022235 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.875033424 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.875660127 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.880667703 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.98333465 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.857453102 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.153628314 seconds)
done (took 292.453619327 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.928302576 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.849139797 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.958031916 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.855854088 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.941383276 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.943150275 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.853291615 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.853620394 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.853423284 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.235548804 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.853648704 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.86307636 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.851088174 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.853138812 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.941216502 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.855872063 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.853138662 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.198274317 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.856475515 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.927441623 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.85203078 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.85383307 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.856575477 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.244337849 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.849911841 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.857042638 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.928536183 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.856678091 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.205952619 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.856294032 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.859061876 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.205992231 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.949010107 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.874412758 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.867177959 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.863070685 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.943356135 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.859750561 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.940014154 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.939886477 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.959026633 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.897736155 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.854761139 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.852805321 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.859921363 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.857947097 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.85426995 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.884996835 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.859658074 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.854189135 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.199676996 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.866902992 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.855103102 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.853970786 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.854318427 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.888229062 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.854320176 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.858202741 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.948365644 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.858543348 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.920894912 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.244834267 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.236377362 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.857567888 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.854033169 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.854909783 seconds)
  done (took 183.519953717 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.925047978 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.932072554 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.925858717 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.861405307 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.908741068 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.931124703 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.862003798 seconds)
  done (took 15.135725388 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.864634428 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.857231584 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.908952191 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.908071472 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.858128347 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.011126487 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.857102929 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.869817009 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.855418769 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.910658547 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.859250179 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.855696962 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.862378147 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.855953101 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.902871948 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.866035955 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.968542086 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.857808894 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.857173586 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.009755074 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.849408226 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.858089609 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.907628388 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.86931754 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.852773193 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.857377799 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.434966062 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.851235334 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.851350325 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.847145162 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.845341591 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.891988982 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.848450517 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.843664161 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.844145855 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.964170326 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.849051882 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.840750312 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.84481052 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.848430677 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.84538926 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.843003526 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.843268855 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.840667188 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.844124052 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.863348565 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.840194899 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.839967759 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.839874119 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.840823383 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.893405679 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.840196484 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.836524391 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.837117893 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.898138499 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.848435015 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.839263176 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.836464753 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.83844724 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.836295566 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.994650986 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.887013601 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.837848173 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.886438873 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.838439686 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.839345003 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.838846078 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.83884236 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.893026079 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.838081462 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.887266486 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.836790599 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.997019938 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.862102171 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.838950681 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.841470141 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.841083876 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.840606473 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.837519257 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.846057385 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.835542442 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.84098338 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.844200935 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.835029147 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 2.243638106 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.954434867 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.946991833 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.834791229 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.851502506 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.847249082 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.837742328 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.892667469 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.838013975 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.835223709 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.89134444 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.95465184 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.894222157 seconds)
  done (took 203.835274192 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.8435789 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.847179373 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.839478531 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.856434885 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.839332413 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.839976766 seconds)
  done (took 12.832942622 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.841443535 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.840537135 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.838549487 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.839193673 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.838373252 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.841093588 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.839387213 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.842403921 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.844220596 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.838390658 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.839576483 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.841234105 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.841379121 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.841873381 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.839113992 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.839801818 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.839712788 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.837105431 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.838146148 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.839707724 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.983853086 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.838822691 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.841631899 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.841879583 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.843844425 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.839419035 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.848339624 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.839770613 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.838734772 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.849072208 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.841005964 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.842158033 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.842306545 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.845453737 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.843550912 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.842076337 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.844372038 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.8417322 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.836478848 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.841984676 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.842047206 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.840224768 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.839462893 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.842711716 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.840719236 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.844840411 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.845177403 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.849799487 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.839747681 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.84449769 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.840540821 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.838995292 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.842404208 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.842427952 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.845304004 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.847752852 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.845178449 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.84135093 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.842074479 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.84282847 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.84309923 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.842225492 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.843532502 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.845765177 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.846638443 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.842063888 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.842349681 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.841112711 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.838274604 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.838049095 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.839463431 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.837072191 seconds)
  done (took 135.515862202 seconds)
done (took 552.639136902 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.981080445 seconds)
  done (took 8.744453722 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.916905911 seconds)
  done (took 8.810384373 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.247282556 seconds)
  done (took 10.040512788 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.85943566 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.88186709 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.863896916 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.853826702 seconds)
  done (took 29.257791955 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.870866255 seconds)
  done (took 8.649593768 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.850801112 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.831878411 seconds)
  done (took 15.490922385 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.844296683 seconds)
  done (took 8.614905352 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.354427218 seconds)
  done (took 9.122937715 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.841543988 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.841905701 seconds)
  done (took 15.460407595 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.815073496 seconds)
  done (took 8.57521386 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.465535473 seconds)
  done (took 11.236520154 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.821940731 seconds)
  done (took 8.591028232 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.88714101 seconds)
  done (took 8.641526701 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.812818339 seconds)
  done (took 9.563851078 seconds)
done (took 162.565470227 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.818032663 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.812076586 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.810887166 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.811256889 seconds)
  done (took 29.001858469 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.849989453 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.85234407 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.853300237 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.860671005 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.855073692 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.85130189 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.843432657 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.84872745 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.859576535 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.852269982 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.852705816 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.851651407 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.849078837 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.844283306 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.851924388 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.85025161 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.857536765 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.848500422 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.841071993 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.847309815 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.815518333 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.858637324 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.848483202 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.817314778 seconds)
  done (took 46.110052278 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.010677343 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.881603192 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.968108645 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.866740039 seconds)
  done (took 9.468618544 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.862814769 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.867143947 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.877530009 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.916277688 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.948075108 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.87596276 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.839507413 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.833149442 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.818748911 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.867153917 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.938839655 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.879868205 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.946869222 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.810774826 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.000024242 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.813078849 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.812079051 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.866323624 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.91714879 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.930355574 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.816377059 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.865445796 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.869398048 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.881639047 seconds)
  done (took 46.798988051 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.810395051 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.818733849 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.819198076 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.813209717 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.812539114 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.810759488 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.81519747 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.811646029 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.832012538 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.810259551 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.809788144 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.810413208 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.810743453 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.812044211 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.809615116 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.823772704 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.82422731 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.810059553 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.813416897 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.818022535 seconds)
  done (took 38.037479858 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.806305129 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.661612186 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.157498294 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.062160823 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.807396581 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.805130777 seconds)
  done (took 31.042140939 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.82503836 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.874500036 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.819585593 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.867543225 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.949446533 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.820369828 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.813948848 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.881031072 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.91859316 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.878798061 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.830856392 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.838172039 seconds)
  done (took 24.060958993 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.808461065 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.81037495 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.807389182 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.82569522 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.823615452 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.820553552 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.822544216 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.808929782 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.822496742 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.828309454 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.821097232 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.824337714 seconds)
  done (took 43.569417293 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.894530751 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.855640827 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.830740866 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.50377872 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.18786415 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.019262854 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.414819794 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.140354273 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.813944056 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.082280644 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.821397159 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.914548081 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.069348081 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.167610817 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.841988609 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.29413995 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.111853411 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.01775391 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.838815812 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.510164435 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.924862311 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.893949898 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.66134656 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.918572589 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.070517633 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.988362661 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.121008932 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.85949247 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.999444033 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.899264945 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.871219689 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.861196994 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.134643137 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.239814728 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.965082598 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.870548593 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.480973077 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.572948056 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.849797013 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.636863312 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.606431291 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.990428011 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.873231542 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.861860843 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.796611182 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.863068989 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.231588636 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.869367868 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.572682162 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.864082385 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.874418589 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.95771619 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.868048491 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.678947987 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.783352247 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.864381514 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.859584932 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.869350581 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.436522012 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.993292645 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.896842322 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.832681628 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.954091368 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.638516427 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.248618375 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.012326969 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.865965635 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.868991738 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.801546565 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.562480031 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.92258276 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.194461951 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.885934064 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.518064923 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.165312371 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.959219479 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.805738536 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.132491168 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.255706117 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.83289919 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.094560783 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.865686342 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.801363097 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.813803055 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.801826428 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.125181637 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.904565813 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.622868557 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.909749618 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.194085828 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.879140744 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.888934837 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.890607885 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.089948487 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.751632786 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.868081842 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.691523452 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.008663465 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.8884938 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.194551941 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.803409044 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.872346436 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.124245553 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.082438602 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.790889793 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.372918847 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.029857928 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.294504087 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.913746531 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.872675769 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.909566675 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.134734771 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.92557393 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.001653497 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.927144159 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.875978925 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.165012515 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.322832429 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.005978655 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.96979241 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.999538535 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.1955154 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.903805771 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.957962801 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.884298822 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.876018618 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.656350309 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.431544964 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.878936846 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.881181617 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.800099774 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.919450819 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.880159424 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.822917614 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.498433537 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.925303953 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.890831835 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.10166423 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.310522171 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.185225486 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.812071822 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.207138021 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.933575312 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.101742369 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.527397684 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.960570803 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.138944007 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.807019669 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.833995869 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.922252702 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.89926714 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.977927609 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.901871185 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 4.883368302 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.169853486 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.884336331 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.88472799 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.682278719 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.920044292 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.883045529 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.889144724 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.63445078 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.173133366 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.906711221 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.889566711 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.773396522 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.897787141 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.948937555 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.889732243 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.895362358 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.420408334 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.595289509 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.891344153 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.464317932 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.108402956 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.89410406 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.674095311 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.998383865 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.967036867 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.155179615 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.944271322 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.819293916 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.596753945 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.578282843 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.886132896 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.819669261 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.885712197 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.895332371 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.896949993 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.082927651 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.156222956 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.930796104 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.588379739 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.927121934 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.89715231 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.891105316 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.886655843 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.392275718 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.020242157 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.927032567 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.926865259 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.03013525 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.900611888 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.820639617 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.890259195 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.892037605 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.887356483 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.886890382 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.919291431 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.593338653 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.261819319 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.147561996 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.498010949 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.901121611 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.64322825 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.945929804 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.891666013 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.720970278 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.91008318 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.974020372 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.899908195 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.897727325 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.668941044 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.592743971 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.457779787 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.191552269 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.184197972 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.32018573 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 4.954151533 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.912293347 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.220801152 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.821120497 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.444092387 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.944603326 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.226705036 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.832082638 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.976221217 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.537113977 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.235746735 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.902266785 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.115711595 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.272881005 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.628840646 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.059409607 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.099831061 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.922834571 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.8939425 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.845254552 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.412636707 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.029881957 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.613187373 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.097410341 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.225737018 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.600533078 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 7.015783624 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.886398363 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.555367761 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.966270958 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.592396468 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.054520162 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.928381011 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.823667638 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.354918674 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.889871994 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.107982456 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.227342786 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.898757139 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.000205763 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.818924653 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.893572407 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.894617654 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.88600357 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.876154616 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.763742711 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.137950321 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.894690072 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.817994214 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.850877063 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.166071757 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.785116628 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.889135045 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.883512375 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.172869115 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.28696295 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.05134155 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 4.834043032 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.393806094 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.892112981 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.818590909 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.818751493 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.57707049 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.88971762 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.858553244 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.086684467 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.986567184 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.795971849 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.813464928 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.12981803 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.141398653 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.898475425 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.152000023 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.158683709 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.582475317 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.909964532 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.985426361 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.56242224 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.998966732 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.884489274 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.121061754 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.637946152 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.111370309 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.907167548 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.83933769 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.886586306 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.09936634 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.886542138 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.790019995 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.120636294 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.607825122 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 7.025920803 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.216587038 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.961657325 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.847004394 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.942130713 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.983389229 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.902010103 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.97154245 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.903063189 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.903879061 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.903680942 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.938559825 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.849235579 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.021996525 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.906562396 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.985913892 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.030466189 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.410240745 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.898048245 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.186406691 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.255454947 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.212454318 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.950465701 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.89321415 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.893650847 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.827200582 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.042005536 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.119747536 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.167500837 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.021809328 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.008238589 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.916765609 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.58221766 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.956406574 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.131412334 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.16849435 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.788338853 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.262549063 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.928966239 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.89411352 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.905121565 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.105829925 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.100358623 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.188921635 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.040742421 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.826603158 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.247506638 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.167975718 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.894800661 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.894574231 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.487411863 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.894017916 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.693921578 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.935649714 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.849987094 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.174364508 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.904905789 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.276218364 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.919575327 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.055283047 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.667457265 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.616908781 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.185730988 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.88289568 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.959637868 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.164237968 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.271812443 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.208498304 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.961833506 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.906207571 seconds)
    (390/481) benchmarking "6d"...
    done (took 4.007166343 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.043219326 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.784557457 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.896273355 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.896702901 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.943911888 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.6062842 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.905171911 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.168085812 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.205791108 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.894320161 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.781404579 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.919383655 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.906960742 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.120416226 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.155261099 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.14739535 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.90697242 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.902621905 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.711494866 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.164643106 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.95336913 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.831344426 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.900926559 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.994957472 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.146322617 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.917479518 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.350276519 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.609891533 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.161985835 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.897669593 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.920930565 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.908826365 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.250123431 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.214145602 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.426904567 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.10052767 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.485879809 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.379914174 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.194975198 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.90354247 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.909297055 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.198496411 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.902255357 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.830976488 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.931849003 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.161314598 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.207425095 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.911506919 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.722532902 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.867241914 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.24213956 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.470172113 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.837304443 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.909029173 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.959801701 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.89967759 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.028630734 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.911066872 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.776357056 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.91211764 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.678459275 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.171943751 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.904405815 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.891830754 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.617296765 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.044296186 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.929495187 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.042205555 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.902090213 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.573899577 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.249544125 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.156388971 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.83554656 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.905419951 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.902627663 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.90053678 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.88659301 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.095820014 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.098052211 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.170792279 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 4.860823181 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.933705196 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.904651934 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.116628848 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.112681183 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.827733598 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.039943504 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.832973386 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.939811397 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.807027278 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.4087554 seconds)
  done (took 1675.463559314 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.913083722 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.952888359 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.905944192 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.952288249 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.907283057 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.993382519 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.954261205 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.929731275 seconds)
  done (took 57.346398503 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.899585882 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.116526069 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.910346246 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.905316809 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.909062509 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.899912827 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.064070789 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.90573461 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.909834023 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.906399363 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.898218103 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.896477343 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.221017023 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.915859296 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.894579801 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.907555553 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.907303011 seconds)
  done (took 74.906332541 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.894984113 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.099933342 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.915620936 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.913446401 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.870687837 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.907367713 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.662573514 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.895124853 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.893819278 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.98705706 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.519341731 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.906971046 seconds)
  done (took 87.297354419 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.891290127 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.887955451 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.887997706 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.888354226 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.888089481 seconds)
  done (took 11.264115861 seconds)
done (took 2176.143716072 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.132900733 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.092457999 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.113053347 seconds)
  done (took 6.015776575 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.028616036 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.074122773 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.193820299 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.214725146 seconds)
  done (took 10.324673654 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.160347794 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.262641258 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.090936915 seconds)
  done (took 8.325307748 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.266371592 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.884534449 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.982623666 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.869936028 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.873257578 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.87038224 seconds)
  done (took 22.423021736 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.868522644 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.871830977 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.869021997 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.872324966 seconds)
  done (took 9.28297231 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.848493123 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.64454559 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.849805616 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.861142502 seconds)
  done (took 21.004102792 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.610513114 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.621123883 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.605539681 seconds)
  done (took 9.632565929 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.537784118 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.789778697 seconds)
  done (took 9.122519156 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.12522304 seconds)
  done (took 3.920918516 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.993095684 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.127591011 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.328265469 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.36383908 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.421374312 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.696812043 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.157886756 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.095637422 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.261621241 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.290003019 seconds)
  done (took 24.531428778 seconds)
done (took 139.667308363 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.234635998 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 8.096013634 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.060130074 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.193255276 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.083264745 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.059965272 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.080094205 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.174879852 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.701067772 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.699320282 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.190828282 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.082396068 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.02749091 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 8.095810755 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.027008596 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 8.098787507 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.080261812 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.24897814 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.887195456 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.098082976 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.083020393 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.829489931 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.039617762 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.842036509 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.082487556 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.011171492 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.422141686 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 8.101547817 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.041897733 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.430707677 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.012710688 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.249089708 seconds)
  done (took 172.162185539 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.771471221 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.862276955 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.86271489 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.862100857 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.387676682 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.864167381 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.864737023 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.863063575 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.032458084 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.018129626 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.864380462 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.329838136 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.864275185 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.862092632 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.865277405 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.862495928 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.161227392 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.832829927 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.876450338 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.882279562 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.885962486 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.250582189 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.891121133 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.297194453 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.216718539 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.893166758 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.86321475 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.896339389 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.873900784 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.877865517 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.882217291 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.863899963 seconds)
  done (took 208.281814506 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.863586749 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.864964796 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.863041518 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.864791553 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.865698163 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.869989359 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.865255885 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.863435726 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.62353056 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.61985873 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.871443025 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.870142319 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.87857526 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.861644383 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.870730038 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.862232156 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.87479522 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.874555427 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.872719683 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.876609299 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.881499918 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.674997951 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.888884065 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.665606419 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.889779708 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.872842865 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.86274585 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.336724484 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.872963583 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.879806284 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.881698487 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.874398166 seconds)
  done (took 221.277763868 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.065862771 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.876187597 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.876874834 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.809597373 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.877855224 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.876349532 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.873491689 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.066436518 seconds)
  done (took 19.147513348 seconds)
done (took 622.674014363 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.447426634 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.226436995 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.061586309 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.90171991 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.154875394 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.940663826 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.896727165 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.966181119 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.624035479 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.969534887 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.601779381 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.917487728 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.687335691 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.920741718 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.023903573 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.95578747 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.449622828 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.541413782 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.076836232 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.981944642 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.075164598 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.888319247 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.972497651 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.648029325 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.710708554 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.903321896 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.080062214 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.45920658 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.908296383 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.060304372 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.639425097 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.293611038 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.911549689 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.897263814 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.951191113 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.931815371 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.251365849 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.909590608 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.025201027 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.667689075 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.968209568 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.504488429 seconds)
  done (took 103.811048125 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.868163244 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.86704706 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.866144261 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.86720188 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.867681982 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.866701131 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.866133386 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.866178968 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.86736778 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.866226134 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.867187942 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.868534085 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.867388333 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.867365827 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.866533773 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.866914202 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.866714381 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.869472248 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.867163228 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.866942161 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.868359021 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.867034168 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.868053237 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.868012577 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.868268393 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.868130855 seconds)
  done (took 50.370358099 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.880711648 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.023639144 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.106148792 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.900822981 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.88108748 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.88474036 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.90191346 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.886301185 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.88395856 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.883562313 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.97808436 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.885170029 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.899450379 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.106064926 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.896859325 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.88019787 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.88110833 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.881461054 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.029276412 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.89659176 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.901968355 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.885313506 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.900982579 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.895670242 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.883186544 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.882875416 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.885400827 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.319362579 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.890034617 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.977807791 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.961243094 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.903735796 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.275944247 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.116209255 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.947811742 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.887993139 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.881251651 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.984324272 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.888386071 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.882207419 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.900958874 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.886569882 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.105626029 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.383655567 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.897107004 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.881092214 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.331600723 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.992224678 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.924782874 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.894629811 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.109431181 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.899878448 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.883097318 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.883276497 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.920405417 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.894032686 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.883018457 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.191043668 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.894113809 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.900977618 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.888388084 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.883559078 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.036131987 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.89074378 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.02421601 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.891144337 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.889033221 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.883646916 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.105070263 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.898552992 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.382699673 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.897553303 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.883357212 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.979054968 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.031667267 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.358653253 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.897275899 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.039545666 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.293592753 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.909617821 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.893047549 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.31108416 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.91175966 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.893983482 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.884845804 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.884981255 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.884070359 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.926918067 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.901192422 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.324641112 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.392534323 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.205554592 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.91224528 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.901385141 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.887528782 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.194044887 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.892599117 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.884487569 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.103005074 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.401347773 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.898732774 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.894039919 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.371418848 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.900022446 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.904568122 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.895271619 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.115202356 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.902343251 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.929295961 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.885254547 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.891635342 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.888489333 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.904579215 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.895042128 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.885113425 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.363326926 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.00102838 seconds)
  done (took 233.370095213 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.882618385 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.881768689 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.880476397 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.882080461 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.880395785 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.887348673 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.888475592 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.881459106 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.885581771 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.880753391 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.880257447 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.883764342 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.884488158 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.889767206 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.920549967 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.8887499 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.49576247 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.88205574 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.881591358 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.89088873 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.533660717 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.884978896 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.878534565 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.891864798 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.879548605 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.880745112 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.882640351 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.908097465 seconds)
  done (took 167.88663054 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.880750993 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.99848158 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.898184678 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.909772148 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.891498995 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.878812126 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.905920583 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.897709025 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.887839741 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.879171936 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.880457571 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.943334327 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.893451073 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.983681966 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.916157164 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.913567905 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.989305345 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.889835508 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.880227563 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.879511216 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.91206224 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.878385612 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.943984242 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.011302458 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.897871478 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.998395121 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.8868256 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.883350461 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.882639334 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.998987936 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.895105283 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.95081639 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.912622973 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.902757753 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.004285999 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.998552507 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.988346073 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.912655132 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.889679359 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.881032714 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.881847189 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.872356649 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.000638028 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.898735832 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.885468813 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.990644927 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.90128747 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.882978954 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.891837144 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.881781267 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.89698481 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.903270894 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.952722001 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.017255812 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.916070182 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.909631039 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.909359638 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.173242362 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.893846726 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.984850036 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.876784814 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.001652537 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.903147347 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.874291505 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.884801186 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.889567891 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.913770852 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.922444767 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.991164795 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.891088164 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.984565047 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.917316681 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.892426014 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.879096784 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.882079026 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.998825178 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.997829216 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.920181247 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.918226981 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.912641686 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.875452371 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.880874965 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.870975677 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.8985667 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.885069678 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.997904552 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.99630711 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.886168513 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.882820156 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.881377775 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.881077296 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.907267983 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.003533456 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.916498169 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.977702556 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.948399023 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.955889354 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.894164977 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.893403214 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.884467527 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.946145601 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.89319696 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.890612059 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.219366597 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.954042991 seconds)
  done (took 203.959736152 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.975501309 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.355916707 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.93803205 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.936422434 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.175654101 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.302190337 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.6787453 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.929578602 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.929239586 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.958283557 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.091308091 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.987955592 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.94452656 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.918632169 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.338486204 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.921964945 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.928419974 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.954950811 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.934406326 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.51950318 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.239576961 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.051628849 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.929577789 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.031350188 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.910335157 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.215982466 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.253855601 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.314301269 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.965370803 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.275951968 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.255530043 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.622238611 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.137744246 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.172030222 seconds)
  done (took 74.911742729 seconds)
done (took 836.116551809 seconds)
SAVING RESULT...
DONE!
