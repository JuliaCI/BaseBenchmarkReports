cset: moving following pidspec: 10009
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.23981923 seconds)
loading group "string"... done (took 0.59182952 seconds)
loading group "linalg"... done (took 8.072795573 seconds)
loading group "parallel"... done (took 0.181256393 seconds)
loading group "find"... done (took 1.228861369 seconds)
loading group "tuple"... done (took 2.016157769 seconds)
loading group "dates"... done (took 1.295079641 seconds)
loading group "micro"... done (took 0.198611062 seconds)
loading group "io"... done (took 0.934991571 seconds)
loading group "scalar"... done (took 39.538096476 seconds)
loading group "sparse"... done (took 12.275360222 seconds)
loading group "broadcast"... done (took 0.961422733 seconds)
loading group "union"... done (took 13.85394478 seconds)
loading group "simd"... done (took 4.81156906 seconds)
loading group "random"... done (took 9.098816883 seconds)
loading group "problem"... done (took 1.558442053 seconds)
loading group "array"... done (took 21.653681013 seconds)
loading group "misc"... done (took 1.630861254 seconds)
loading group "sort"... done (took 3.366466966 seconds)
loading group "collection"... done (took 18.225736162 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.540003903 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.124541452 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.138140344 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.12035706 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.150048229 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.117363736 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.125575015 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.084696849 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.89348832 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.148272371 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.114516307 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.416218779 seconds)
done (took 5.383530821 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.175858687 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.088048779 seconds)
    (2/2) benchmarking "String"...
    done (took 0.079752218 seconds)
  done (took 1.250329723 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.065831195 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.128289718 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.067151719 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.068066765 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.067740984 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.067311972 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.067030806 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.067221429 seconds)
  done (took 1.616934999 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.073149187 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.069538326 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.066676797 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.06874087 seconds)
  done (took 1.360467695 seconds)
done (took 5.561766237 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.799238169 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.21037194 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.189484881 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.410558155 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.135369371 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.179054653 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.656633473 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.324456754 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.193958174 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.094355439 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.1128505 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.391428554 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.124242682 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.661455724 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.081059392 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.095999215 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.140687118 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.443126412 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.071930675 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.085699906 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.093409539 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.130882863 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.080620685 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.077061553 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.151743592 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.071152872 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.143962036 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.086389282 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.069147035 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.256520271 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.175188859 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.655414558 seconds)
  done (took 10.515013122 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.101768636 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.101022345 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.069675832 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.125416473 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.098697471 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.070536583 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.075846097 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.06862508 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.090091457 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.129405651 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.091635004 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.108723241 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.066414136 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.070180482 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.083667952 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.197377367 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.084736384 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.082489681 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.068806708 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.079118213 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.107839342 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.078896903 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.080173989 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.080224765 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.129165782 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.171174443 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.09647821 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.098208146 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.06694463 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.08419644 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.116123286 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.129231901 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.067300419 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.067079523 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.126352683 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.095376908 seconds)
  done (took 4.587319302 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.009125544 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.152645118 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.090727897 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.13598728 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.065458204 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.110704258 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.066268014 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.082960938 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.23421227 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.468833674 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.626802636 seconds)
    (11/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.147745382 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.117039064 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.105091387 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.07122208 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.069532282 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.068386309 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.275069423 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.098932202 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.108713025 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.088594223 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.071289892 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.070017374 seconds)
    (23/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.065607284 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.072221173 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.067147169 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.06948784 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.087726595 seconds)
    (28/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.077053391 seconds)
    (29/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.334875933 seconds)
    (30/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.126107183 seconds)
    (31/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.069267474 seconds)
    (32/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.093033554 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.956028464 seconds)
    (34/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.166007485 seconds)
    (35/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.068364419 seconds)
    (36/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.105895426 seconds)
    (37/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.160489786 seconds)
    (38/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.093953461 seconds)
    (39/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.140834285 seconds)
    (40/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067842857 seconds)
    (41/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.064000362 seconds)
    (42/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.160185597 seconds)
    (43/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.06336112 seconds)
    (44/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.070021866 seconds)
    (45/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.065892146 seconds)
    (46/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.083129486 seconds)
    (47/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.107685862 seconds)
    (48/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.11665977 seconds)
    (49/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.06419298 seconds)
    (50/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.064568853 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.165388517 seconds)
    (52/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.063790873 seconds)
    (53/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.080481584 seconds)
    (54/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.159940459 seconds)
    (55/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.149621702 seconds)
    (56/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.063644564 seconds)
    (57/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.283764817 seconds)
    (58/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.089091988 seconds)
    (59/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069358342 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.063084841 seconds)
    (61/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.177149512 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.112949583 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.066270205 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.065951016 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067443414 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.066142213 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.376458901 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.063769618 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.956353933 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.068764585 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.077790598 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.06841529 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069716515 seconds)
    (74/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.063217611 seconds)
    (75/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.076535559 seconds)
    (76/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.076830847 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.08931508 seconds)
    (78/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.065826204 seconds)
    (79/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.071433042 seconds)
    (80/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.064831149 seconds)
    (81/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.064547034 seconds)
    (82/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.064957176 seconds)
    (83/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.091061555 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.37488491 seconds)
    (85/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.065740591 seconds)
    (86/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.070485097 seconds)
    (87/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.062438763 seconds)
    (88/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.063629465 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.090181381 seconds)
    (90/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.09698402 seconds)
    (91/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.065481194 seconds)
    (92/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.064510881 seconds)
    (93/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100787667 seconds)
    (94/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068681966 seconds)
    (95/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.065089038 seconds)
    (96/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.06688451 seconds)
    (97/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.115209887 seconds)
    (98/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.069211656 seconds)
    (99/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.111482308 seconds)
    (100/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.065660261 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.281745097 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.102511451 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.071417695 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.103283817 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.080670284 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.073322798 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.472353399 seconds)
    (108/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.066476928 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.066967677 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.074273469 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.06772419 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.069826589 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.068764959 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.079723755 seconds)
  done (took 21.724777149 seconds)
done (took 38.920216469 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.246093124 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.085469257 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.084211602 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.084493847 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.084002145 seconds)
  done (took 1.787243329 seconds)
done (took 2.971701596 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.127186618 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.099368846 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.064515953 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.097942762 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.06491638 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.101027693 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.103846439 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.083598846 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.100371673 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.065529189 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.098018656 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.065318866 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064997335 seconds)
  done (took 2.335877029 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.083172592 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.083416488 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.069534503 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.085583088 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.062867828 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.081668978 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.081056961 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.088328361 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.08116053 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.072463144 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063220933 seconds)
  done (took 2.02853563 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082386974 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.083181271 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.069927036 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.081804862 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.062779878 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.081110698 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.081520613 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.084665139 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.081585154 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.073774546 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.062906203 seconds)
  done (took 2.018959554 seconds)
done (took 7.551881386 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.076709249 seconds)
  done (took 1.239591094 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.533417355 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.606500356 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.078417709 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.100689101 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.193158971 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.109066781 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.237771731 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.083260847 seconds)
  done (took 8.278917504 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.096864633 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.06952371 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.082770597 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.07029939 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.069709525 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.07022476 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.070708117 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.069353038 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.069862265 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.07068315 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.07009025 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.071040202 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.069652397 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.069271806 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.070724187 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.070287536 seconds)
  done (took 2.409503318 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.097651285 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.09837934 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.075389327 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.075784808 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.073270958 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.072931917 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.074901596 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.074332354 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.071573497 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.073342765 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.076046332 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.074058888 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.073595658 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.065061019 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.075018059 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.077216018 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.071650886 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.074948184 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.075817966 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.077621154 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.076488225 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.064586739 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.074059422 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.074783907 seconds)
  done (took 3.092652775 seconds)
done (took 16.192657884 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.107049613 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.068492523 seconds)
  done (took 1.346310219 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.078749367 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.081196669 seconds)
  done (took 1.339876361 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.078326711 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.063478246 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.084426764 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.074321833 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.063713609 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.063114657 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.082687076 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.06361579 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.063767676 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.063580049 seconds)
  done (took 1.881424029 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.066223003 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.07353996 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.069704369 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.079546372 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.070590355 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.064677477 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.069236846 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.065005593 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.073359658 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.063702976 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.068789826 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.083292209 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.068576886 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.085437023 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.068765077 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.068755198 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.070796143 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.067219775 seconds)
  done (took 2.460000902 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.063777056 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.064527287 seconds)
  done (took 1.313945962 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.067394288 seconds)
    (2/7) benchmarking "second"...
    done (took 0.064072348 seconds)
    (3/7) benchmarking "month"...
    done (took 0.067111999 seconds)
    (4/7) benchmarking "year"...
    done (took 0.067035736 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.064247825 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.063097431 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.063915693 seconds)
  done (took 1.638815028 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.400589537 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.121986275 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.330438904 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.070400332 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.079188724 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.257172493 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.064881271 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.06988894 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.070157515 seconds)
  done (took 2.69043842 seconds)
done (took 13.858585031 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.081080114 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.086470251 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.097539143 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.416744079 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.092990228 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.068408579 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.113826811 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.178821761 seconds)
done (took 2.331132823 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.208470306 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.810391384 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.483177006 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.207491188 seconds)
  done (took 2.687992509 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.344024422 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.080929292 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.077417591 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.066920119 seconds)
  done (took 1.765740261 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.180958953 seconds)
    (2/2) benchmarking "read"...
    done (took 0.070188102 seconds)
  done (took 1.443105572 seconds)
done (took 7.298794699 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.06577402 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.064966999 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.06541986 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.065441177 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.064945197 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.065151228 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.064629126 seconds)
    (8/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.089770488 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.064374296 seconds)
    (10/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.064551651 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.065350883 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.064748922 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064984602 seconds)
    (14/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.064832154 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06504968 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065213164 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064746792 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.065165876 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06548458 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065005332 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.064857745 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.065335399 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.065334492 seconds)
    (24/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.06487774 seconds)
  done (took 2.811021164 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.081949505 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.067364659 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.068894212 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.068996832 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.069138715 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.069137395 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.069161943 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.067543224 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.068781881 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.066540468 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069413652 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.069283519 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.067121341 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.069318028 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067127435 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.069357773 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.068833751 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.0675941 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067451754 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.069237396 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.068971636 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06736665 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.069445849 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.068527799 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.069115048 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069182757 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.067107162 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.067827943 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.069105612 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.069517002 seconds)
  done (took 3.26844184 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.068604643 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.060939724 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.061762309 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.070157483 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.061885872 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.062230113 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.060896556 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.062044095 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.062548548 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.061311466 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.06248679 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.061456716 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.061398652 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.062178353 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.062104384 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.065761284 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.079658474 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.061458394 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.061443764 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.062230127 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.06555373 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.061290396 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.06146811 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.064044534 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.061735518 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.061145295 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.061955266 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.06159328 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.061831014 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.061706355 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.065923922 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.065689349 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.061253478 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.069939003 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.06641272 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.061222446 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.065949267 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.061057182 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.06180565 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.061055567 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.060990948 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.061254933 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.061611158 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.071029204 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.061549043 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.062843556 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.06154759 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.062541998 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.061822845 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.063865475 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.06093175 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.061289872 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.063693093 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.062608876 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.066420537 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.060990728 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.062185161 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.061810357 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.063849765 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.062255069 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.062551266 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.062051316 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.064706566 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.061808974 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.078699642 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.070332231 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.061500956 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.062875067 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.061902282 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.065013228 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.063145775 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.076777812 seconds)
  done (took 5.788164945 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.085632331 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.08806908 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.06656379 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.067216554 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.062603075 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.062228093 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.070113557 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.062036328 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066820559 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.081244008 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.061991634 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.066449178 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067062608 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.066041973 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.06203278 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.067756931 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.070782135 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.062429067 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.061954934 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.06617672 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.062929883 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.072122123 seconds)
  done (took 2.719455543 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.146679383 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.068215821 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.105566069 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.072748578 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.070656682 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.072515198 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.068621523 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.068065742 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068351984 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068609276 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068599654 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068182447 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.07051765 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068877171 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.06842517 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.068398397 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068025652 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.068296547 seconds)
  done (took 2.570145144 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.078670353 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.067694628 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.086653433 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.06762067 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.067399126 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.06703038 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.071431938 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.072108993 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.067220575 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.068012604 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.072323972 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067263617 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.067026663 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067389265 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067027702 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.067489887 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.067023423 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067606037 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.072051828 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.071257651 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.071769426 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.080836935 seconds)
  done (took 2.763378133 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.07852523 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.06670887 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.083558038 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.068865868 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061876253 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.062019482 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.068218366 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.066842181 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.067934826 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.066062357 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066485305 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.062487093 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.069421533 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.067276993 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.069619656 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066607949 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.066214594 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.06699649 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066237838 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.062362338 seconds)
  done (took 2.565380852 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.083342216 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.065147752 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.065559587 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.071572955 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.064794313 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.065155105 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.071161598 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.065163047 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.065222849 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.08564719 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.065627824 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.065255458 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.071330162 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.069206796 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.06504767 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.071708342 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.074235835 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.07152701 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.065314928 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.065116124 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.086018271 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.065092319 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.071421694 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.065139141 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.065188256 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.064978776 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.065289052 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.068893746 seconds)
  done (took 3.15208498 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.064806037 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.064917526 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.065132896 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.065356176 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.065425482 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.065015337 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.065005508 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.065213914 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.064788529 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.064935517 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.064632118 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.064454386 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.064532319 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.064609242 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.064488247 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.064640235 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064821853 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.064848513 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065029197 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065077333 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.064910582 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064566383 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.065179907 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.064771706 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065334756 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.064429292 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065077037 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.06538078 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066442262 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.066555602 seconds)
  done (took 3.167691609 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.076104662 seconds)
    (2/2) benchmarking "in"...
    done (took 0.073212461 seconds)
  done (took 1.368478085 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.063988541 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.079100261 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.062034671 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.072734059 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.070604516 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.065098391 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.071211557 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070656813 seconds)
  done (took 1.768639169 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.085196349 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.076409545 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.064922624 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.076188585 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.074933881 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.08504908 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.126156211 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.063759788 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.074337735 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.065012911 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.083007414 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.066553916 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.074204803 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068859495 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.074280906 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.077737805 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.06186782 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.069085972 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.065768126 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.062490001 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.064350761 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.077414127 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.073489696 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.062377409 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.069667727 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.091120489 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.079763199 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.063526048 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.07067229 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.076235159 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.074189207 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.061333503 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.063777014 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.064012913 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.061944066 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.074941976 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.082507321 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.070776488 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.076252671 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.064468954 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.072395132 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.06177591 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.072888416 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.074777072 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.079587289 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.064055676 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.064466247 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.061665315 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.064820891 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.069710895 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.061719085 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068654532 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.061415476 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.075676501 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.071300328 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.078628237 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.062218247 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.069716511 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.070411125 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.070965114 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.074896843 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.06985364 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.073041416 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.063130233 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.079289518 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.073017728 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.075383665 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.062079598 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.061261828 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.061904649 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.07799232 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.092383272 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.073441244 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.064002412 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.064600992 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.061996239 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.071009327 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.064718173 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.072612852 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.075326465 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.06325565 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.068001912 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.075607411 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068214697 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.069992221 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.069691904 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.062029671 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.066996992 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.065285504 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.083435397 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.0623557 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.062317778 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.064815066 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.078975363 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.073622689 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.06347065 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.065062437 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.075608263 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.06103336 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.064617543 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.064545958 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069697879 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.07697065 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.067609528 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.068440845 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.077137664 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.073174699 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069008878 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.070447582 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.061284684 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.064391126 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.066069156 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.075333298 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.060808152 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071247178 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.067908591 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.063926347 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.075389032 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.062055154 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.063592844 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.076300784 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.075178415 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.062202957 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.060998397 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.070762227 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.063725157 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.065930799 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.076852557 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.061969182 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.061873908 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.061743234 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.070913668 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.062394358 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.070272069 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.066957557 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.070188999 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.060274834 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.061607713 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.066184842 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.204464546 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.068499979 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.070833563 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.07504935 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.070647961 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.063635606 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.077308744 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.071120919 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.066767052 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.074418387 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.068301846 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.062113745 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.066223634 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.07072107 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.062355728 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.071275486 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.067475578 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.070422537 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.064379062 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.063165273 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.070247998 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.064985298 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.06643265 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069281785 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.062699483 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.079438878 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.07064527 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.062316053 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.061712345 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.071546869 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.065949406 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.063898438 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.067159132 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.070973741 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.064495774 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.063185311 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.063487921 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.070902456 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.072062729 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.067479493 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.064845412 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.073522956 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.081147436 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.063639063 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.071872012 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.06339644 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.064949045 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.064331077 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.078224456 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.074193242 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.067848372 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.070695441 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.06134346 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072764257 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075917976 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.066561535 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.062198448 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.066363098 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.0676548 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.075930829 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.067441204 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.06481879 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.062458333 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069557012 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.066458891 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.070752935 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.0634315 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.066220569 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.068809535 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.06311452 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.069330228 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.064395341 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.078275475 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.07129029 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.061997983 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.06613024 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.062611131 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.074763623 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.062385774 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.065140886 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.066227317 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.064510119 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.062722536 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.070413633 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.061341591 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.076075528 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.076365804 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.069234397 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.066181942 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.063615594 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075956576 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.069835968 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.071846034 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.070850391 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.073564366 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.079041543 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.065931604 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.070600011 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.078432125 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.063803989 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.060997195 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.076005569 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.062532759 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.063415192 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.063306396 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.062475683 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.070976665 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.070417284 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.073342002 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.060654781 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.070092458 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.061813096 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.065933291 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.06183407 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.071760423 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.070529441 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.067868201 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.075431875 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.063847901 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.063622049 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.071078449 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.063246525 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.063906333 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.063967167 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.0704209 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.063923189 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.069143246 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.065681046 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.069196451 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.065661081 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.062121364 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.069414434 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.063372746 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.068410839 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.072834382 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.063268736 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070219449 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.070557965 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.063498981 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069989782 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.06673004 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.06551905 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069618176 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.068305345 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.067078439 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.202750732 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.063046738 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.075960156 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.063764135 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.077229122 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.069063111 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.061885921 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.070191139 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.071187602 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.068892486 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.06465747 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.064786973 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.069406247 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.063331223 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.070857712 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.076459915 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.065880622 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.079555059 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.075624123 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.06981848 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.071341889 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.069378775 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.070452616 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.067552154 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.068487291 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.064604936 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.069697663 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.063484007 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.072643912 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.071178952 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.068891647 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070073893 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.06420489 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.069317164 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.06532438 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.061810982 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.068113754 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.068112125 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.065765276 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.07921426 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.066826486 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.068564475 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.064666103 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.06650813 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.064881551 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.063134646 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.072774887 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.073913293 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.066163252 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076180197 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.06649424 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.070044906 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.079460614 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.061455454 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.062726405 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.06228092 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.065227986 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.076537624 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.064835697 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.077297601 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.06929278 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.066104928 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.061676497 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.064593337 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.062955757 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.061362029 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.061755512 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071841345 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.066072174 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.063195438 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.06406433 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.071450882 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.064517835 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.076256756 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.063163452 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.068202523 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.06433274 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.06135497 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.066457715 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.06595805 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.070591722 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.064386356 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.065255631 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.061134367 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.063480992 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.06860849 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.069875906 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.063415717 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.069422743 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.076300596 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.064040962 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.07066295 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.066305834 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.061829108 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.070784742 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.063969953 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.063969664 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.066450533 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.071336652 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.070974406 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.064787618 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.07763049 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.066024956 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069602959 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.063705158 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.062262209 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.063372404 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.063644747 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.063540203 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.066097752 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.064336443 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.076604368 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.061825249 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.069603665 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068780433 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.067240135 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.073456406 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.064156889 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.069817485 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.068638564 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.065154067 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.069845674 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.077003045 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.06705331 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.070711312 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.064111524 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.069139368 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073060162 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.065607218 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.07491572 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.06900727 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.064186773 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.069082486 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.064680418 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.0635445 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.063683597 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.062580581 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.072901174 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.063696569 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.065772443 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.066064138 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.06203008 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.067626028 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.065294356 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.076009972 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.069602561 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.069952483 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.197613274 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.062812583 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.065830052 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.066308341 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.069763895 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.071192781 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073822633 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.071082751 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.068592613 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.063389315 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.078063362 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.074205992 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.071704576 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.065395525 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.071309076 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.064555585 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.070415192 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.06888122 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.06962078 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.065701429 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.071524073 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.070177635 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.066955792 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.074517338 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.072070075 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.065582769 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.069588996 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.069987006 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.068858595 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.062332033 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.064956118 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.070902832 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073268757 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.071291807 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.063994901 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079483401 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.065032484 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.06901534 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066781081 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.063721659 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.072738533 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.063369803 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.070870788 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.06507731 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.065257503 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.062973904 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.066421685 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.064998794 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.070942517 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.066503306 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.062352904 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079656908 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.078248123 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.06997095 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.063244716 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.063334246 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.062399301 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.061992752 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.06643329 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.065230539 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.069653719 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.078776431 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.066135008 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.066386105 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.062203309 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.063628357 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071131782 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.071983185 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.061341217 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.061981294 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.066073133 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.069768132 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.075200568 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.062626931 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.063893756 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.071179299 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.070544377 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.062227567 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066375256 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.061436015 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.072048717 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.080802769 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.064402447 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069789191 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.073539 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.076378448 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.064163937 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.061937268 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.06412316 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.070017489 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.069650627 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.064439188 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.064580115 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.083195557 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.07074486 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.065958797 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.062613246 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.070856918 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.066283262 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.077450141 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.064741407 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.064472151 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.074745437 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.070077085 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.070562939 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.073715459 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074813127 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.069911076 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.070933687 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.063266725 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068582169 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.062976855 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.066538773 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.06456195 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.064906615 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.068183748 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.086649955 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.06728631 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.078547362 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.077279986 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.066484613 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.061422533 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.066218132 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.066105985 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.061908933 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.064221515 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.062161459 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.062090624 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.062076981 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.063031845 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.069414287 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072515127 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.067670204 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.064124779 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.063317566 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.060564369 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.072834022 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.06975142 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.06919578 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.06093006 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.063211007 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.063192588 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.070746184 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.065418958 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.064591096 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.068716755 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.067765439 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.20812486 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.062477691 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.075475623 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.063483801 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.070220248 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.066143421 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.064103093 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.06462166 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.071026095 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.068147892 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.065087315 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.070505605 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.071202608 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065692987 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.062001003 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.061682505 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.073199087 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.061858308 seconds)
  done (took 42.524838194 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.099380236 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.063483039 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.062377723 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.062310624 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.072154503 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.063101984 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.062236295 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.063180979 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.063553508 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.06501274 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.062546729 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.062091436 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.069491898 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.07666202 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.072266615 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066487853 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.062556945 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.063462752 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.062532545 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.063246782 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.069943748 seconds)
  done (took 2.711058012 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.0694098 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.078099548 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.07459289 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.07953796 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.071223087 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.067027278 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.074604921 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067402353 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.074925909 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072750295 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.07537847 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066958397 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.072570863 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.072472657 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.07301756 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.067698313 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.075571849 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.071297884 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.06709737 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.074756659 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.0677617 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.074894633 seconds)
  done (took 2.880967691 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.064064624 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.063156157 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.069443269 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.061679851 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.06278239 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.06198723 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.065890105 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.061624672 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.066195898 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.065716053 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.065661353 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.065438226 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.069912643 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.061664289 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.066604029 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.061755128 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.106558067 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.066505098 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.063204709 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.064025154 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.061785846 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.070283892 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.061607351 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.062554881 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.065311717 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.065583447 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.063869639 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.06191613 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.063022831 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.06560239 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.062702033 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.06107565 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.069432527 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.068774285 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.06536147 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.065439087 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.062729996 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.063136701 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.061799662 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.061856004 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.072057598 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.061942657 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.063486172 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.0698512 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.061714366 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.061559996 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.069893775 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.062960888 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.061284217 seconds)
  done (took 4.498081575 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.07512864 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.110165732 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.068047567 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.092472699 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.078392515 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.071194804 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.069356074 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.094140528 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.065054648 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.066140282 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.077681725 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.077660545 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.065197274 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.067113272 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.069657997 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065435065 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.065985819 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064516776 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.068120605 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.064633149 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.06857386 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.069171564 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.075791215 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.076782926 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.066346538 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064339492 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.064516188 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.066508718 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.076262955 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.069068051 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.067162623 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.068033195 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.076707056 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.068185186 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.064822367 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.064843457 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.077307047 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.065498906 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.064942411 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.063351869 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.064539251 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.066410615 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.069329939 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.077474074 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.065246785 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.070516151 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.06552782 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.062890218 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.076840508 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.064847171 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.069447045 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.077639273 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.066503616 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.065694112 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.066940046 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.076798179 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.065327041 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.063762721 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.065571606 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.076482441 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.064206173 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.066319815 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.077178808 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.064605569 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.069008678 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.077417643 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.070146818 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.066490561 seconds)
  done (took 6.218288621 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.073255832 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.094777456 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.079496426 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.079440816 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.073141757 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.07360886 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.073529036 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.073312781 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.073210208 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.077183234 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.073183922 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.114297222 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.069101689 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.075383036 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.073612119 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.073419687 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.073393939 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.073577483 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.073709712 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.073241377 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.073231563 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.079381961 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.072995378 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.079647146 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.076157773 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.068953019 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.07284136 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.072700674 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.079795799 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.072848189 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.076219039 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.073728275 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.073131005 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.079787892 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.076542085 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.073199638 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.062761087 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.07279699 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.073542176 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.073041891 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.069023231 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.079532642 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.073088918 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.069636582 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.073129652 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.072934564 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.079318809 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.076066918 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.075168737 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.076741948 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.072944737 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.079286498 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.072662637 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.073200084 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.079817052 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.08188185 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.078884089 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.079117421 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.072828786 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.079192456 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.079102186 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.0817076 seconds)
  done (took 6.024656924 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.077642146 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.071196464 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.081355048 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.062187607 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.061518076 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.072196129 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.06181833 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.064501954 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.070350318 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.07010255 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.072523069 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.072094323 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.074846153 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.072329938 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.072139154 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.074914229 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.07166136 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.071975688 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.070054769 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.071514594 seconds)
  done (took 2.739783785 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.076050172 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.081195485 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.067695443 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.071889154 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.067327926 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.072072852 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.066931706 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067455125 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068752036 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067479418 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.073473693 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.073423836 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067796053 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.071939662 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.073323364 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.072163551 seconds)
  done (took 2.448275477 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.083983231 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.070250217 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.077508608 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.063650548 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.067603641 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.062403371 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.063724996 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.061605975 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.062865791 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.076368073 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.063056898 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.074902176 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.063367326 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.062235471 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.063002923 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.068871771 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.062245525 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.06340928 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.06300577 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.076615396 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.070606712 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.064559345 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.067420601 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.063318246 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.068747818 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.070838491 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.065322121 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.067230668 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.062956777 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.063811869 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.068787722 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.070268033 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.062792899 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.064138007 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.06221162 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.063706391 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.063256573 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.063683336 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.086354277 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.063303134 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.061685524 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.068145668 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.063893724 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.064688424 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.063011929 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.063702268 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.062402135 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.069163872 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.063653413 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.068818478 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.062911655 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.065519738 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.06395042 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.070645635 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.066107925 seconds)
  done (took 4.973365925 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078587127 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.067772418 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.062562974 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.061958639 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.066889513 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.067571699 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.06735607 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.067466144 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068105981 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.062148477 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.068172106 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.067631009 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068139956 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.067225761 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.067729511 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067470111 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061644035 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.067655634 seconds)
  done (took 2.53416296 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.072392637 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.067872192 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.072359113 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.066773926 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.066783402 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.066257046 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.062463832 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.062112934 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.062255751 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.066729453 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067007426 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.066206373 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.062177692 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.066282703 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.067212368 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066818981 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.066085185 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.062037208 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.066827255 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.062081723 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.066252745 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.062192662 seconds)
  done (took 2.764786562 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.095556533 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.083563791 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.139835948 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.079538879 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.086372849 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.071852602 seconds)
  done (took 1.876441455 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092738759 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098412474 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.067900327 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.068034801 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073113879 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070815524 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071165148 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070759199 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074884039 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075023053 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070511297 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075273549 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074592173 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076647519 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072784276 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075521041 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070117551 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070246046 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066962209 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079570891 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070612439 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075132908 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070586917 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070540639 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070360109 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076798202 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074621205 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075489612 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070902501 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074933526 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073076902 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070692596 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074889166 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075528772 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067120872 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074920296 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07082884 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079593697 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072687004 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076557035 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.067148632 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072845647 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075433661 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074201667 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07504103 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070867493 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074172152 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070816893 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070775984 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081627028 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072885335 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076357083 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072874194 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075417937 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074982341 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081382483 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075385428 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076519721 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072547661 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075082886 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076664472 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072504686 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076256459 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075591666 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07235 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076993113 seconds)
  done (took 6.221265067 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.104465248 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.067744088 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070892765 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075227011 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07721079 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07068284 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070522388 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071221937 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070854804 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067853844 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.105164445 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071085574 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077122414 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077064058 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070814025 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070712303 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070864958 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077166452 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067627383 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.081434285 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070420928 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076521345 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076747631 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076876525 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075545318 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073162176 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070822491 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070527189 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070520921 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07049202 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074281366 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070575231 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076582413 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.067686033 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076918767 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070712301 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070465583 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074946072 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070505088 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072863907 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077153973 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079776583 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07049932 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070303 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075241937 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070145197 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070478909 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067772717 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070312278 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067316491 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075514663 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075330309 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075144093 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076289974 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070145492 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070162683 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070100148 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070400734 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070207021 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072675277 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077802123 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070641765 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.081395425 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070269112 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07049752 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076899771 seconds)
  done (took 6.207784297 seconds)
done (took 127.759751114 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.208481726 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.184805357 seconds)
  done (took 1.703163256 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.073804141 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.104813244 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.082546384 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.13321852 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.071366954 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.105971592 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.104513865 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.083338626 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.070937894 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.070922887 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.070875496 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.07422319 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.136837628 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.071218899 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.071299069 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.073936776 seconds)
  done (took 2.72780946 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.104062381 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.166413106 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.108235228 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.069116935 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.103855286 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.077379743 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.069332562 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.081744905 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.075865398 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.071023298 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.077186845 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.077468813 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.070935137 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.075477909 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.075871204 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.076965354 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.070726985 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.077086904 seconds)
  done (took 2.85807323 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.103530005 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.094155374 seconds)
  done (took 1.529940245 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.171751674 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.133087742 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.202116883 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.345453824 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.153594066 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.419133992 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.137827865 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.139478776 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.112528479 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.136163637 seconds)
  done (took 3.278021922 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.104034456 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.168901522 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.293326936 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.120119982 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.075684366 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.090632071 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.121527208 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.081513925 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.083690133 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.08312156 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.083632733 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.078227175 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.102775405 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.076514283 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.075740384 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.077881799 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.105858904 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.074975029 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.075969555 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.07882349 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.106194007 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.070171624 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.07660237 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.074791221 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.080826441 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.08090177 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.071253971 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.07015637 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.078027884 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.07552473 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.079180302 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.087856495 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.080892673 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.106031289 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.074137466 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.106448964 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.078125865 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.076175116 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.075967432 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.076136046 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.080025951 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.080173302 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.078682987 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.078378407 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.071576684 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.078813565 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.071242124 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.069759078 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.0803976 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.07084061 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.08008608 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.078867877 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.105734512 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.070845958 seconds)
  done (took 6.12830819 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.107945352 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.107046512 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071090523 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.113185173 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.104088461 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070319858 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.106183182 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.098790254 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.107801884 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.07129054 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.069552776 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.070829714 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.07996201 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.081129848 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.116038471 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.107748309 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.072910988 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.070263827 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.107734193 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.107299258 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069339525 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.102529061 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.098141539 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.107404271 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.068926617 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.071217892 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.069269063 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.070641636 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.076294508 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.077622053 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069457958 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.079883502 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.083308365 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.077318943 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068710996 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.069030775 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.069446801 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.078202944 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.078367147 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078325008 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.07666539 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068497109 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.068781396 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.070078893 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.069868252 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067909073 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.077307491 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.078785654 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.077468365 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069065166 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070634433 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.06897368 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.070405748 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.078197834 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.076089012 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.078797419 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078805225 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.069207918 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069624594 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.072079018 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.07921708 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.078243368 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.078290551 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069765549 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078315524 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.068920385 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.079100655 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.084812198 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.06964223 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.070492687 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.069467314 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069461138 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.070217978 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.076519936 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.076330321 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070558675 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.068890849 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069000566 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.079270723 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.076838006 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.069343263 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.076318323 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068660553 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.069200312 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070918776 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070310265 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.076018109 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.078142902 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.070257555 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068970883 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.068682877 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069028201 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.068202329 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.075942197 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.078072719 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.077713526 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.076958719 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070267895 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.077958767 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.077024647 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070837235 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.077360884 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.069224978 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070525667 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070204728 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.077525526 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.076233282 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.07815554 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069420718 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.069466984 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.076604472 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.078885454 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.069205119 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.076751156 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.078492314 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.076495636 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.067875462 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.078929602 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069100081 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.076796898 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.06764848 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.076749834 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.06860044 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.21014081 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.070796843 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.06964651 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.069926469 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.07842065 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.071401569 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069794183 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070400584 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069650857 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.078211747 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.081151011 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071096457 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.077767946 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.077450846 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.071066405 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.078555242 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069581017 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.078256113 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069849312 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070910199 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068637222 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081037775 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.070018785 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.069539973 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.069174602 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.079438402 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070039307 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.080411838 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.076567764 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068769224 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.080661569 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.079551665 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.076689886 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.079707355 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071279541 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.069277992 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069106321 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.068991486 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.076651272 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.079240995 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070672269 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.069522957 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.076472738 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.078920501 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.069079801 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.077533126 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.077043184 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.07748426 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.069917204 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.070093812 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.080210173 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.07991996 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.077794171 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.077522841 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078120632 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.069905218 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.076821276 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.077702663 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069890539 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.083179358 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069851716 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.081279878 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.077509297 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.075884883 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.077843529 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.079130131 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.079401485 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.078990234 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.081805929 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068761795 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.069397596 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.077712004 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.069366751 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069502348 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.077061131 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.070915307 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.07073428 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.081647969 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.069596561 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.079438399 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.068639464 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.077727642 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068600619 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070493346 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.082386179 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.069720141 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.070689776 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.078036628 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.069249884 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.076853644 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.079274956 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.079610339 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.069117314 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.07061004 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.078257558 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.078023279 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.069696774 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069004854 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070410785 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.076651098 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.076434669 seconds)
  done (took 18.506062513 seconds)
done (took 38.075632197 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.205253908 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.152963563 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.182765244 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.114552543 seconds)
  done (took 2.085450489 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.107386827 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.098182623 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.088189511 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.065631822 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.09410519 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.06576895 seconds)
  done (took 1.883378274 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.285573297 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.195077402 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.177811235 seconds)
  done (took 2.01906762 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.208906988 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.190919959 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.458369857 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.28214487 seconds)
  done (took 2.595430803 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.140668131 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.082219869 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.064839259 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.082908037 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.123218759 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.149161784 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.093004003 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.117540501 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.075776436 seconds)
  done (took 2.342158359 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.145775545 seconds)
done (took 12.453183868 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.208222156 seconds)
    (2/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.237856949 seconds)
    (3/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.179485426 seconds)
    (4/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.097630581 seconds)
    (5/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.199220305 seconds)
    (6/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.068742758 seconds)
    (7/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.191580819 seconds)
    (8/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.07557432 seconds)
    (9/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.088865009 seconds)
    (10/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.07584896 seconds)
    (11/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.198668255 seconds)
    (12/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.239454603 seconds)
    (13/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.076790288 seconds)
    (14/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.104125031 seconds)
    (15/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.214279803 seconds)
    (16/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.084868647 seconds)
    (17/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.390658002 seconds)
    (18/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.068383017 seconds)
    (19/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.099352882 seconds)
    (20/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.116495678 seconds)
    (21/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.185007885 seconds)
    (22/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.074924172 seconds)
    (23/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.074756412 seconds)
    (24/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.233703837 seconds)
    (25/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.112721451 seconds)
    (26/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.070207195 seconds)
    (27/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.074624781 seconds)
    (28/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.168640325 seconds)
    (29/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.168605611 seconds)
    (30/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.104814584 seconds)
    (31/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.098727496 seconds)
    (32/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.139955252 seconds)
    (33/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.084825497 seconds)
    (34/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.165846829 seconds)
    (35/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.194324468 seconds)
    (36/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.134835849 seconds)
    (37/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.073155794 seconds)
    (38/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.163495885 seconds)
    (39/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.125683638 seconds)
    (40/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.073882903 seconds)
    (41/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.07484924 seconds)
    (42/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.065138771 seconds)
    (43/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.224131828 seconds)
    (44/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.135102788 seconds)
    (45/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.144149764 seconds)
    (46/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.066200956 seconds)
    (47/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.079130056 seconds)
    (48/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.094004292 seconds)
    (49/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.074408191 seconds)
    (50/309) benchmarking ("sort", Bool, false)...
    done (took 0.156086105 seconds)
    (51/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.080172158 seconds)
    (52/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.088222767 seconds)
    (53/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.07450914 seconds)
    (54/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.066185436 seconds)
    (55/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.077410291 seconds)
    (56/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.070301323 seconds)
    (57/309) benchmarking ("sort", Int64, false)...
    done (took 0.066684264 seconds)
    (58/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.082803556 seconds)
    (59/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.170327501 seconds)
    (60/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.076822506 seconds)
    (61/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.191062443 seconds)
    (62/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.065411907 seconds)
    (63/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.074386639 seconds)
    (64/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.168456589 seconds)
    (65/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.086793632 seconds)
    (66/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.079183372 seconds)
    (67/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.064561699 seconds)
    (68/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.08223914 seconds)
    (69/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.075844249 seconds)
    (70/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.192771251 seconds)
    (71/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.234291804 seconds)
    (72/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.077269525 seconds)
    (73/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.067022722 seconds)
    (74/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.091028463 seconds)
    (75/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.164346977 seconds)
    (76/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.07651368 seconds)
    (77/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.071965948 seconds)
    (78/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.077886757 seconds)
    (79/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.073024803 seconds)
    (80/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.066341964 seconds)
    (81/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.168245525 seconds)
    (82/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.127700021 seconds)
    (83/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.076050505 seconds)
    (84/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.073609637 seconds)
    (85/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.120816307 seconds)
    (86/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.065740055 seconds)
    (87/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.214606114 seconds)
    (88/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.179137542 seconds)
    (89/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.083440671 seconds)
    (90/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.064924953 seconds)
    (91/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.073447686 seconds)
    (92/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.091218616 seconds)
    (93/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.124922042 seconds)
    (94/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.079671932 seconds)
    (95/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.137186067 seconds)
    (96/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.347000021 seconds)
    (97/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.069583187 seconds)
    (98/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.074085189 seconds)
    (99/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.132352619 seconds)
    (100/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.180688447 seconds)
    (101/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.175230708 seconds)
    (102/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.066624565 seconds)
    (103/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.220638784 seconds)
    (104/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.137630378 seconds)
    (105/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.074407059 seconds)
    (106/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.078574538 seconds)
    (107/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.127027842 seconds)
    (108/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.072737971 seconds)
    (109/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.066313065 seconds)
    (110/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.067520782 seconds)
    (111/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.122164131 seconds)
    (112/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.090008627 seconds)
    (113/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.066081056 seconds)
    (114/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.11368482 seconds)
    (115/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.078975108 seconds)
    (116/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.086446907 seconds)
    (117/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.170812238 seconds)
    (118/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.07644213 seconds)
    (119/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.13180273 seconds)
    (120/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.066752333 seconds)
    (121/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.084065071 seconds)
    (122/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.066285945 seconds)
    (123/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.074576411 seconds)
    (124/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.142525857 seconds)
    (125/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.104088057 seconds)
    (126/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.074800928 seconds)
    (127/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.074691437 seconds)
    (128/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.080508531 seconds)
    (129/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.09100133 seconds)
    (130/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.087756057 seconds)
    (131/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.076677883 seconds)
    (132/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.128536896 seconds)
    (133/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.06634346 seconds)
    (134/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.076064838 seconds)
    (135/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.073948986 seconds)
    (136/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.138158026 seconds)
    (137/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.0674724 seconds)
    (138/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.066734152 seconds)
    (139/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.075551386 seconds)
    (140/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.067529423 seconds)
    (141/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.073844647 seconds)
    (142/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.079598196 seconds)
    (143/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.06655951 seconds)
    (144/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.192285051 seconds)
    (145/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.074348862 seconds)
    (146/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.065897114 seconds)
    (147/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.068374986 seconds)
    (148/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.066152092 seconds)
    (149/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.090243386 seconds)
    (150/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.130666797 seconds)
    (151/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.073194894 seconds)
    (152/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.066722913 seconds)
    (153/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.089786049 seconds)
    (154/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.065219095 seconds)
    (155/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.07050473 seconds)
    (156/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.216508597 seconds)
    (157/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.070263159 seconds)
    (158/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.066284595 seconds)
    (159/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.092340481 seconds)
    (160/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.091208429 seconds)
    (161/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.102472906 seconds)
    (162/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.065475232 seconds)
    (163/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.064734591 seconds)
    (164/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.173040418 seconds)
    (165/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.139796381 seconds)
    (166/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.167922071 seconds)
    (167/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.089301688 seconds)
    (168/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.067177994 seconds)
    (169/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.177326449 seconds)
    (170/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.077904292 seconds)
    (171/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.066254433 seconds)
    (172/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.067481706 seconds)
    (173/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.065421911 seconds)
    (174/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.193613162 seconds)
    (175/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.066781864 seconds)
    (176/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.066705608 seconds)
    (177/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.065702118 seconds)
    (178/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.073693914 seconds)
    (179/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.08156773 seconds)
    (180/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.171424199 seconds)
    (181/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.067097587 seconds)
    (182/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.074630019 seconds)
    (183/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.066475396 seconds)
    (184/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.070257171 seconds)
    (185/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.066039917 seconds)
    (186/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.064708177 seconds)
    (187/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.0871679 seconds)
    (188/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.078373238 seconds)
    (189/309) benchmarking ("sort", Float32, false)...
    done (took 0.1313045 seconds)
    (190/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.092201323 seconds)
    (191/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.065845048 seconds)
    (192/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.065713125 seconds)
    (193/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.130321381 seconds)
    (194/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.105734003 seconds)
    (195/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.066878513 seconds)
    (196/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.135219955 seconds)
    (197/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.132612111 seconds)
    (198/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.167035733 seconds)
    (199/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.073190716 seconds)
    (200/309) benchmarking ("sort", BigInt, false)...
    done (took 0.190103208 seconds)
    (201/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.073807417 seconds)
    (202/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.066994927 seconds)
    (203/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.065486203 seconds)
    (204/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.193446503 seconds)
    (205/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.065571762 seconds)
    (206/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.071789378 seconds)
    (207/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.072317996 seconds)
    (208/309) benchmarking ("sort", Int8, false)...
    done (took 0.142535964 seconds)
    (209/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.077280045 seconds)
    (210/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.073243438 seconds)
    (211/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.074781075 seconds)
    (212/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.072943782 seconds)
    (213/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.079409435 seconds)
    (214/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.133425008 seconds)
    (215/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.071469764 seconds)
    (216/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.283221592 seconds)
    (217/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.06664266 seconds)
    (218/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.216485216 seconds)
    (219/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.066452961 seconds)
    (220/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.074358608 seconds)
    (221/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.067463182 seconds)
    (222/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.066679057 seconds)
    (223/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.074324819 seconds)
    (224/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.067332546 seconds)
    (225/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.079839645 seconds)
    (226/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.066250239 seconds)
    (227/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.0661524 seconds)
    (228/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.066649437 seconds)
    (229/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.066628172 seconds)
    (230/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.12369698 seconds)
    (231/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.078889649 seconds)
    (232/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.137472203 seconds)
    (233/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.072780707 seconds)
    (234/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.069584043 seconds)
    (235/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.066043296 seconds)
    (236/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.067402831 seconds)
    (237/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.218453116 seconds)
    (238/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.088562075 seconds)
    (239/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.08270369 seconds)
    (240/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.06636384 seconds)
    (241/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.066522842 seconds)
    (242/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.068143015 seconds)
    (243/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.180200767 seconds)
    (244/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.066758151 seconds)
    (245/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.066685961 seconds)
    (246/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.066739116 seconds)
    (247/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.088796133 seconds)
    (248/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.065592215 seconds)
    (249/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.066570299 seconds)
    (250/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.079372104 seconds)
    (251/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.067912744 seconds)
    (252/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.113650273 seconds)
    (253/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.074964883 seconds)
    (254/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.066962451 seconds)
    (255/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.178908325 seconds)
    (256/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.071449513 seconds)
    (257/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.065347626 seconds)
    (258/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.065861838 seconds)
    (259/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.068768657 seconds)
    (260/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.087706775 seconds)
    (261/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.07279364 seconds)
    (262/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.13665569 seconds)
    (263/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.069814944 seconds)
    (264/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.067282591 seconds)
    (265/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.075815161 seconds)
    (266/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.079726121 seconds)
    (267/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.066976939 seconds)
    (268/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.067258784 seconds)
    (269/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.091234014 seconds)
    (270/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.073064486 seconds)
    (271/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.067766318 seconds)
    (272/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.06692541 seconds)
    (273/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.066590789 seconds)
    (274/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.06986576 seconds)
    (275/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.073346261 seconds)
    (276/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.067633744 seconds)
    (277/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.076583984 seconds)
    (278/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.068856816 seconds)
    (279/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.06734683 seconds)
    (280/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.066370346 seconds)
    (281/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.06704514 seconds)
    (282/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.117059785 seconds)
    (283/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.088889953 seconds)
    (284/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.073927923 seconds)
    (285/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.065749221 seconds)
    (286/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.089121063 seconds)
    (287/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.067201986 seconds)
    (288/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.067217533 seconds)
    (289/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.066171074 seconds)
    (290/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.065699664 seconds)
    (291/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.074070813 seconds)
    (292/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.065928817 seconds)
    (293/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.066539504 seconds)
    (294/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.066746166 seconds)
    (295/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.06595503 seconds)
    (296/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.065981599 seconds)
    (297/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.122653322 seconds)
    (298/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.066857557 seconds)
    (299/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.073252269 seconds)
    (300/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.069939222 seconds)
    (301/309) benchmarking ("sort", Float64, false)...
    done (took 0.131768223 seconds)
    (302/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.066341892 seconds)
    (303/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.132915326 seconds)
    (304/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.066973758 seconds)
    (305/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.131975183 seconds)
    (306/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.066374669 seconds)
    (307/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.142639662 seconds)
    (308/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.117743981 seconds)
    (309/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.06638803 seconds)
  done (took 32.824188989 seconds)
done (took 34.196243676 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.086355853 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.099281797 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.073858443 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.093203527 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.081999393 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.096032284 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.074485781 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.079055075 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.081384326 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.080129764 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.078973709 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.072676905 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.075474939 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.076161553 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.074062769 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.09689708 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.079978517 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.07390513 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.074602179 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.066155907 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.074283246 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.066245076 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.065538585 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.072481278 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.0769967 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.073153989 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.07561118 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.075783666 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.066589161 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.066366617 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.071241007 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.074875913 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.066045859 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.078678353 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.074833492 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.074406181 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.075605502 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.078769571 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.065837315 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.066338007 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.075764676 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.065955658 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.073783178 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.072674632 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.070928158 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.072204742 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.073919721 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.078434778 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.097129869 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.070351396 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.075839747 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.076479915 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.07773759 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.071292994 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.071285581 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.074096182 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.072161883 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.096734332 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.074693016 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070570402 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.075540124 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.075039225 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.072327947 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.074161733 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.07427075 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.077007621 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.078201683 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.0725591 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.076115324 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.072870832 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.066034083 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.073996829 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.070704311 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.066195973 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.076917766 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.07852833 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.065174971 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.070683077 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.076459687 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.074303839 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.066203905 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.070038551 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.065505139 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.070746797 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.07032561 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.072215027 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.071247909 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.073140009 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.06580718 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.074391776 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.073330514 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.073577691 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.065920315 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.078731473 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.065973165 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.072555726 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.066381899 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.066443766 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.065220993 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.07142259 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.065797808 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.070221314 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.07448279 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.065198388 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.070200922 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.079343708 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.065398744 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.072742448 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.065248188 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.065339153 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.076811014 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.075730667 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.065493371 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070474189 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.065135345 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.070832742 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.065719452 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.065157674 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.065393981 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.066016949 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.069805465 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.066017405 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.069813002 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.070649139 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.07767051 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.065192683 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.070123664 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.069873701 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.065469273 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.072286851 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.065905677 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.065823941 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.065166476 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.079239191 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.070110461 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.065809262 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.070778349 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.069991569 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.073383428 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.064590895 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.073759565 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.071125076 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.069649021 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.071531277 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.065153528 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.076467052 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070187754 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.070248725 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.065219212 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.066037954 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.064334085 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.064922046 seconds)
done (took 12.505671833 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.06918992 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.116802951 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.092386241 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.092432 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.082068204 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.066984624 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.074207774 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.091764169 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.068796357 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.096056984 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.088175955 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.088031104 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.108880582 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.065790177 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.066402777 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.067684508 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.06802232 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.078492029 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.093845488 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.088244768 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.104953311 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.066985112 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.08590181 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.086591336 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.083131331 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.090041046 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.067832086 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.067700307 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.069561911 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.087043471 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.091188308 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.069420103 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.067545629 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.089952577 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.084540651 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.079765268 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.067771895 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.075118601 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.067122254 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.066315863 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.068321324 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.087112882 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.074780379 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.077540596 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.067871972 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.074369647 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.068247278 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.082550281 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.085013439 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.074877372 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.082482877 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.090630499 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.07059163 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.082979143 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.065868494 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.082397543 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.075626472 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.066849602 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.067356301 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.071660018 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.067117217 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.069098696 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.078071938 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.075697105 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.071551164 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.081247904 seconds)
  done (took 6.607475218 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.084835248 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.094141952 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.083770848 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.083915452 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.066437061 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.066928428 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.069735597 seconds)
  done (took 2.006563212 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.066953151 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.087552743 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.090597119 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.090618902 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.083075173 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.093808658 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.077614462 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.06949183 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.099038348 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.066100127 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.086586015 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.097495924 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.070674221 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.078763033 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.091967054 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.067083147 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.091424228 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.067028741 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.06776045 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.090891664 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.071474886 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.094566307 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.07902448 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.067388964 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.079815575 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.067465646 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.099328047 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.074990791 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.06850326 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.068382768 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.068387029 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.093725537 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.07903984 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.080947664 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068321852 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.082253607 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.080753012 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.0703986 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.077995147 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.076366169 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.080439326 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.068418724 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.066719414 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.068583476 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.069972831 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.079059436 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.066606369 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.068578169 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.068269818 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.086583829 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.066178854 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.079547181 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.070696033 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.072979191 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.072775792 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.071940515 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.075061005 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.068747757 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.086241696 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.068470061 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.084435962 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.083106133 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.080356399 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.083534478 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.067541419 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.079325992 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.080543728 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.068126561 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069232492 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.068554387 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.083144739 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.07112856 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.06914303 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.078672064 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.067113411 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.090961151 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.090765183 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.066781862 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.080285496 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.068125093 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.068454163 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.079249788 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.090909693 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.072516323 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.068000027 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.071203941 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069000525 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.070634476 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.065959442 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.070896537 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.068628571 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.072454014 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.068110423 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.070571822 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.069400353 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.083065922 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.066463212 seconds)
  done (took 8.837878446 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.069261469 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.068481826 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.069554695 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.068457889 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.067704749 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.068437463 seconds)
  done (took 1.896397342 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.090614343 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.067984689 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.081388756 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.068183887 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.103928611 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.083579422 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.0837196 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.077468699 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.081696221 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.079998956 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.08354773 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.08626399 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.087444701 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.070425686 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.083280083 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.068996473 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.08340286 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.072515659 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.079169585 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.070727281 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.081168997 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.070221848 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.070576647 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.086525611 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.0716746 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.069166866 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.077265057 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.079996569 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.079509274 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.077602345 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.069912697 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.071608317 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.074652502 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.077246364 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.084239679 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.074804132 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.068045598 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.074204893 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.070985433 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.071679537 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.086115672 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.071009834 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.072885926 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.074224293 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.077734813 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.074641453 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.074273243 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.076876464 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.083621222 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.0745014 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.074437701 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.068530454 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.07135061 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.074226368 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.074875296 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.077336512 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.074654015 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.083616988 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.070002281 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.074904366 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.0682576 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.071675861 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.077207748 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.071191199 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.075927055 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.074441832 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.074736388 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.070357003 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.070413814 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.067898541 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.074688788 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.068777576 seconds)
  done (took 6.933133038 seconds)
done (took 27.752615491 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.516908296 seconds)
  done (took 1.958337452 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.611559471 seconds)
  done (took 2.080812531 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.634385193 seconds)
  done (took 8.097164702 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.383746184 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.461992969 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.739606954 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.133348736 seconds)
  done (took 3.221273537 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.705577195 seconds)
  done (took 2.179924973 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.235370875 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.225721666 seconds)
  done (took 1.946875738 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.348535091 seconds)
  done (took 1.816858 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.080671883 seconds)
  done (took 2.548294377 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.236346798 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.160408648 seconds)
  done (took 1.867518545 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.443113196 seconds)
  done (took 1.910600034 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.216572265 seconds)
  done (took 5.688902428 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.224849887 seconds)
  done (took 1.730845474 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.236260718 seconds)
  done (took 1.709115812 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.7435616 seconds)
  done (took 3.214625674 seconds)
done (took 41.452631242 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.083911489 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.085992224 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.086062671 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.081636803 seconds)
  done (took 1.792395874 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.075569935 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.071405742 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.07497429 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.071620321 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.075062725 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.070979259 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.073032224 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.073862201 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.071338089 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.071625859 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.07105648 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.071149479 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.074340726 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.072640286 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.070021632 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.074539559 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.075031593 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.071426748 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.073916095 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.071360304 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.069602753 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.073941445 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.07416642 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.070577548 seconds)
  done (took 3.219271996 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.0796901 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.074590568 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.076456469 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.073013047 seconds)
  done (took 1.786559626 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.077760642 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.089205267 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.086841701 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.077933536 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.089028096 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.084276436 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.067999018 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.067959457 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.069105884 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.077354419 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.066771167 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.093453796 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.086445249 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.077539156 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.079761503 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.064018729 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.066049744 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.085528213 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.078293413 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.077924661 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.069215402 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.07748628 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.067669095 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.087260389 seconds)
  done (took 3.343910063 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.082277152 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.066939782 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.081465458 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.093176856 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.093745115 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.06919647 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.083712593 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.097553197 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.140647869 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.069255018 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.075194662 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.069165174 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.115142489 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.069314592 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.084406407 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.112938707 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.116605292 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.072913484 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.104881819 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.069387267 seconds)
  done (took 3.254951817 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.084297327 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.070579562 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.071410589 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.06690215 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.076641702 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.073605408 seconds)
  done (took 1.928449832 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.068859309 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.068904 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.068492655 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.06786453 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.073335051 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.068472377 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.067359748 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.069064752 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.069049901 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.068415277 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.067726669 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.06727086 seconds)
  done (took 2.310976543 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.193760301 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.069107848 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.07113145 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.067603797 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.071475969 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.067648345 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.08266158 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.068656552 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.094155809 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.067797623 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.067459208 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.069655395 seconds)
  done (took 2.478918824 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192575976 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075252847 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.221878949 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144892089 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102682969 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109347573 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111717379 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108258423 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.133010776 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098205778 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153013759 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.15884934 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.103644752 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129240519 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.087663658 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.120514499 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143847626 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155285971 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099694206 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154030891 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134765928 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.122695213 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.142180445 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097091411 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.101168331 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112812995 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.072306942 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.077148652 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158229693 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122855655 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135811412 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105018591 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090139236 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165125313 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160859045 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131389346 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142450782 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.081775808 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.117607669 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.129209984 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193613746 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087636218 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151862871 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103720877 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.078583223 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124969704 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110756321 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.115081692 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.099705778 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.086868095 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130898455 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.317630401 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.129791766 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.085409519 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117935444 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106141253 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.110578786 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115577446 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169488239 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149773091 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122710903 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.070780448 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10694383 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142759445 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.12643549 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.105259622 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.119078317 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091124053 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125018676 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.151026568 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118585689 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133027529 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.112630375 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085054681 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115333849 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.131273546 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120634499 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162541983 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117832199 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.071751022 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115601713 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095719493 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078872348 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.142588723 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074306025 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16473727 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.096175776 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.121185763 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.126214007 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105445208 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105264576 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149615154 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133820433 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.101392036 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.084467647 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09953647 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.114348379 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136715834 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.084967772 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104685041 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110189969 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.07772608 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127749021 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.074809529 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116093836 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.093504248 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115345837 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121035878 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.077322673 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115856847 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.096626867 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.096811595 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.27016671 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150985481 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.08735058 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.079836292 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157949183 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117867778 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.101202191 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.136593711 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.15019996 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.118893651 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09517209 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137706357 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163497025 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.0879322 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152419094 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100121656 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.081684723 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.102678552 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117477919 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107008281 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.118914672 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079107247 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.115799572 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15429528 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.0733174 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.093780819 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127132204 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079542303 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078977154 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101959197 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100543364 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.094576652 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.098625054 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.101156794 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130511195 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117976879 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102683495 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118671878 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097102632 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.156099168 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.085720248 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.100358372 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101258714 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.071403108 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.126015642 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146740256 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.076900854 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150747577 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.116858783 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111503394 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114002697 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081464394 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.1307406 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077465029 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.07131364 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.13351924 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.109825556 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104557619 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.142356046 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108266287 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.116429471 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.263456337 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127201439 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124546518 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.124700568 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104398582 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.087881904 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.11081303 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124516249 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.072084643 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.089723066 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.080736655 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099910581 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.091473815 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.081616653 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132857025 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116510003 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106975546 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.11105052 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09382767 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141322629 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.077393248 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118758869 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.116769377 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092915768 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.145568411 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143783862 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126518519 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098132585 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.130016171 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.072508019 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.073082407 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.08675867 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.118015522 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.082178108 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.082250629 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.109164376 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.141288468 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120144518 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129043501 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118533219 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112102212 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.14904631 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.071665038 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.116637498 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136014175 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116009644 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.101404592 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.08928698 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.09489806 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.134948069 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099705516 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170162061 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109963666 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118231454 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148176623 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.099198932 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.077431286 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.101099294 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12517474 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097199198 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133581833 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.094465249 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083223226 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.254440562 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.078250829 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.100887481 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122657569 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113833293 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130620828 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.109124066 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126207094 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076533968 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.108394106 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.1186267 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116705138 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.082265919 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112964535 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156464715 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.094499825 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111694414 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142406156 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.077206892 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.134460774 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161684267 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136210318 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082855308 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101143331 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.116597799 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.120837544 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11302775 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.131740481 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101184338 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.130822335 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107346178 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.083253858 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084345253 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.092882237 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.100336582 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.10945732 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.100888963 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.110667675 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.093278149 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123236748 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.099387851 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107389413 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.112965516 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.097256534 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.09322357 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09357136 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163949841 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113622784 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158197112 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.097119572 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.135077317 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150950651 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.07361103 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.07709698 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.078500364 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.130875409 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082569852 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124301626 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.107809984 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110440473 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116046687 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127040344 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.242116801 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.071530023 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106887113 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128190771 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120259548 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.094591238 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.101167659 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150161125 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.115156917 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.077485167 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109050951 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112155085 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101329164 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164725743 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.080754441 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106902295 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075316727 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.077880629 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.120171308 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142868838 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.080992089 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.100732938 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114618515 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.106353231 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.12031839 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094722979 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107784331 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.125290406 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138623493 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120632891 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.087608881 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107007332 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.122971367 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145216234 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100710353 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.097638566 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164576719 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146263978 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.150439904 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.085614618 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109733832 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110249547 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105639687 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129928136 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.081852066 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151286112 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.07929592 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.127837643 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097596493 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.087069645 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12246651 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.108829106 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.085611121 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136798783 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111982275 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080691977 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078434969 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10750436 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113840742 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097993923 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.072748117 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.27987749 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.074200498 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131296847 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162103507 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079630094 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.103266183 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.093686135 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.08134695 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100100009 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098821915 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084251304 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.097119629 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160894083 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.085900343 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13966479 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.126481298 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105990675 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.129322098 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100571577 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.640159707 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.078440958 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142866208 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111122185 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16629246 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.096125321 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113773698 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107543104 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11617985 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134585831 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099017252 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.175183323 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.123595764 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.113353042 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.077609966 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098404679 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100126433 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.086617348 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.103085565 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109762456 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109303862 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.092530414 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.11363584 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116518115 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.08063502 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.093629335 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146409587 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111186606 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134590797 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.130969215 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.08235758 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112911574 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129550347 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.077874078 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.113059187 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142825963 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.101975078 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.09736063 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.081089535 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.097679452 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161863898 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.071392903 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14307503 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111962953 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10675803 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105850555 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.102333213 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119674419 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.09646484 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112615615 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.087536876 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.137686667 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106676535 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079504639 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.075711908 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.099127201 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102506913 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.09307386 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091737801 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.09475604 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137200313 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.069652407 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.091994652 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106983039 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130522753 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153866867 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.100907268 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.079863754 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10958245 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110225675 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.106185816 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112310064 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.077903207 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.077471567 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.077207178 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.099823934 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.117173253 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.106875025 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11111954 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100824664 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140257645 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.079519019 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.219403949 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.089687305 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.097617329 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.085746114 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.075843138 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.08963162 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.089023799 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095156671 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102680413 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.151957856 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.089586583 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.084004172 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.085824259 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.071553959 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078349005 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.113362746 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098894806 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107022281 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.096020391 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.078337636 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.094093119 seconds)
  done (took 56.393135201 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.12956801 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.086374602 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.102052699 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.148676309 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.126217009 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.205047746 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.155930933 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.193937874 seconds)
  done (took 2.883433804 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.072389321 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.098107785 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.108844563 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.089504153 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.070277818 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.073280971 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.23258301 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.086797377 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.069623152 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.094380085 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.082557978 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.073146571 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.453247313 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.06892061 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.070076785 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.078539527 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.070444594 seconds)
  done (took 3.488103467 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.386801075 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.618389938 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.351432643 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.07689915 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.998128969 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.089817432 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.223000703 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.139512872 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.082329247 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.537788995 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.370817608 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.136752081 seconds)
  done (took 18.617666538 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.083116502 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.076664797 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.091878993 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.091090719 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.079269403 seconds)
  done (took 2.026423838 seconds)
done (took 105.051322062 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.082480334 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.434348624 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.070327999 seconds)
  done (took 2.137881922 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.09167477 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.090168544 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.089911551 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.087488062 seconds)
  done (took 1.977885528 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.075047922 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.078065831 seconds)
  done (took 1.7643747 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.228862333 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.176842288 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.096762099 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.084214791 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.081841902 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.081347858 seconds)
  done (took 1.863850722 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.073470229 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.073450635 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.073758269 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.074542164 seconds)
  done (took 1.906630587 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.069120514 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.067687046 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.069607036 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.072517077 seconds)
  done (took 1.892183595 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.084659887 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.084842602 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.080574739 seconds)
  done (took 1.863083754 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.101485377 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.091292581 seconds)
  done (took 1.806606353 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.0822878 seconds)
  done (took 1.696598971 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.0898262 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.100196004 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.133810712 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.115543241 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.139668217 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.115650968 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.084838997 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.085994155 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.079396525 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.08658173 seconds)
  done (took 2.644305036 seconds)
done (took 21.742283396 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.079269838 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.368446587 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.360617273 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.091633723 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.671392388 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.357582612 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.994358238 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.09370383 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.142521182 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.069070348 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.086333478 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.649647314 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.981919066 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.324630197 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.970488142 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.321843247 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.650254443 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069712164 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.069505801 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.069205932 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.977142964 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.069002274 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.069070589 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069728511 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.649251709 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.373103052 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.069456384 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.324703284 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.069600046 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.071025942 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.356550384 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069636555 seconds)
  done (took 16.182052946 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.071562922 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.122675124 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073814019 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.085771307 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.071590022 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.070870258 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.073287786 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.070429269 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.121982061 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.069866209 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.086193831 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.069271477 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.072878183 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.070317 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.088825469 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.069457317 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.070245564 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069975837 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.069821643 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.069478443 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.088004435 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.069598794 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.072025617 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.070169332 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.069506142 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.081670087 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.069932938 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.069872657 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.069751932 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.071214516 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.072609633 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069765816 seconds)
  done (took 4.067418125 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.11718999 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.126405793 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074404939 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.10739216 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.113626543 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.071438289 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.147811365 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.09410397 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.128559311 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.069274426 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.087002803 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.07010549 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.104395858 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.070409566 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.089356335 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.070000077 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.070641164 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.070401574 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.069610072 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.069880466 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.088774292 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.069624684 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.069219351 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069933715 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.069402878 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.082794371 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.070068792 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.069453922 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.069909463 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.071732008 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.073989666 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.070727798 seconds)
  done (took 4.323663852 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.071678076 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.07416824 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.0807277 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.082175422 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.068160007 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.070820541 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.072073255 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.068406084 seconds)
  done (took 2.216672836 seconds)
done (took 28.407602122 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.079064101 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.069349639 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.072765132 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.087720049 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.075087859 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.080198411 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.066165791 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.075263809 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.072803291 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.073447526 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.075104468 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.069174208 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.072122986 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.067231117 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.074624596 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.068204757 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.082458076 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.072847344 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.081682707 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.08168246 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.070215644 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.073825858 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.075928514 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.08106161 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.081199341 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.081188844 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.076986264 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.07372089 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.068401678 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.071181596 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.070684747 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.079545095 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.081542418 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.081785502 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.067988038 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.06769396 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.071778 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.069286799 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.082405314 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.076859026 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.070093901 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.077174554 seconds)
  done (took 4.748219648 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.085055411 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.089753865 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.083204142 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.080632519 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.090861496 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.082957609 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.087418587 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.078100467 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.078323542 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.08720536 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.075096963 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.08224936 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.079446749 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.074320702 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.078153835 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.07611063 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.080830224 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.074829301 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.078927436 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.079015599 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.088030478 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.073607678 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.087995931 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.08038135 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.075501986 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.081415865 seconds)
  done (took 3.745881516 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.074390309 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.086892148 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.093359471 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.14398749 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.111560291 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.080754053 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.082571603 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.092692519 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.097066877 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.069195072 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.073849246 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.093928049 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.093532807 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.075316683 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.068926555 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.085041937 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.084723398 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.07101983 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.075677876 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.097797794 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.089795049 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.086472505 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.095382258 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.08574737 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.068596685 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.072241874 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.074052669 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.088273451 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.07164874 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.080668251 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.07199529 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.073519365 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.070623088 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.080135246 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.072279979 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.068950576 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.094033685 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.081253257 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.082177583 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.070026342 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.079082995 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.070767331 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.094591703 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.130520017 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.068891056 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.073327027 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.072793984 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.080032419 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.068776577 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.097255051 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.080665511 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.068719424 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.069468158 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.068123155 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.068230757 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.070839182 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.069879547 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.070764378 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.078584837 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.075213463 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.09028038 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.073715267 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.086341365 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.068194894 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.078859824 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.067956232 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.070221987 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.067663156 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.096984157 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.070162839 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.112925295 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.069924741 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.067105987 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.079623255 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.079217386 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.074555125 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.068406031 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.086456862 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.080673056 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.072622133 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.077122077 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.071832261 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.072316832 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.099187756 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.06892612 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.068292978 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.067267882 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.072182646 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.071883677 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.069288687 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.080674595 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.067955554 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.071808229 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.086768987 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.068259944 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.069667826 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.072059763 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.070828009 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.067929922 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.079520063 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.072570181 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.069871411 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.079254891 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.069436895 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.072170102 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.081871716 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.075493783 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.067229796 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.071306399 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.072274326 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.070044152 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.069905682 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.072488444 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.07052569 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.075145778 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.075223791 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.074132337 seconds)
  done (took 10.800636605 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.164380805 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.157760178 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.071350194 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.149595975 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.077795406 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.081391698 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.152590549 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.095830218 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.069509546 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.071258415 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.069390561 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.110644524 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.106296161 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.116568763 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.081548149 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.069625496 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.091710075 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.115745609 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.154270011 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.148094466 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.092096666 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.077440376 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.072276913 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.071197713 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.071287988 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.079035396 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.086138268 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.077815949 seconds)
  done (took 4.453348332 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.078626814 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.103276961 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.07373149 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.091974467 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.089044096 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.069791173 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.071811201 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.071454503 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.086365131 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.07871143 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.069947658 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.074891957 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.073294332 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.072798925 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.070756278 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.076422186 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.076298483 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.068778607 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.073790599 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.075207141 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.079241406 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.094365606 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.072742897 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.06939278 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.072040367 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.069468862 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.077214206 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.084267513 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.069659833 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.104159901 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.067021979 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.074157997 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.083431839 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.069676867 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.068647007 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.069704047 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.069571804 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.069502827 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.070769934 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.067843559 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.068005828 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.074224169 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.068191022 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.077237285 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.082041573 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.071128776 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.071507768 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.07218221 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.072080896 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.067076998 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.072554642 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.072077667 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.072388468 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.076414442 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.073615993 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.072126889 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.069897788 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.095950923 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.074964624 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.068738346 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.068600088 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.068052538 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.071353244 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.079120026 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.084635572 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.071430908 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.068368704 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.06956865 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.081976113 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.082070725 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.068671645 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.074257276 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.067112269 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.071016401 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.072198356 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.071702089 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.069979695 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.067965706 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.069548736 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.069415398 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.070371648 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.068711758 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.06849974 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.075218834 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.067660773 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.067784872 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.07026464 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.071223313 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.077853418 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.068303063 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.072848691 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.070081558 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.067936634 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.072498001 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.074707468 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.07286323 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.080046205 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.080937781 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.069753275 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.067574078 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.083223668 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.071987729 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.068952843 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.075161693 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.073898896 seconds)
  done (took 9.439922321 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.092074632 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.069891454 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.085848329 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.093124647 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.079777098 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.075340457 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.079707342 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.069313831 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.085453848 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.074214242 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.077453098 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.068214042 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.079972841 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.079114131 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.069906337 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.079656032 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.072249517 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.086954287 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.08383277 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.068183047 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.077913902 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.081625433 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.081034613 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.084166353 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.083057808 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.084465953 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.081239297 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.078815191 seconds)
  done (took 3.902495924 seconds)
done (took 38.712979731 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.71852326 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.953725136 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.704733666 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.926066472 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.749906808 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.92739696 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.785407458 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.693453647 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.944604253 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.739675471 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.009017769 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.966503835 seconds)
done (took 64.89519744 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.750780621 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.850235095 seconds)
    (2/2) benchmarking "String"...
    done (took 1.953031357 seconds)
  done (took 5.441347298 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.887720887 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.616160941 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.936108639 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.698310825 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.705628752 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.974188886 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.476678061 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.142561438 seconds)
  done (took 30.189394219 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.876322382 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.924663793 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.407304065 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.441018148 seconds)
  done (took 15.334488982 seconds)
done (took 62.330798492 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.723954554 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.731521529 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.702477919 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.699186271 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.791102922 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.706294173 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.785264925 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.934884648 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.700458635 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.707603153 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.704278303 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.185699716 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.707032453 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.814795486 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.70173028 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.70179768 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.726502712 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.199447917 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.85241523 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.712731983 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.711007024 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.746688615 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.709364404 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.700564713 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.746768337 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.706664371 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.091662954 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.705934644 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.522943661 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.709511801 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.749290696 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.990697902 seconds)
  done (took 202.520646283 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.701505104 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.464319124 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.610968958 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.749890121 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.93455797 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.881388079 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.805042844 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.079724039 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.705822963 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.716757866 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.826883273 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.702289215 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.848142558 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.648534213 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.738609625 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.78872474 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.847750587 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.878184985 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.745994586 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.864130886 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.716240639 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.684739477 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.614877324 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.824599261 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.747336796 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.802598161 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.724767951 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.720139367 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.895429104 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.803620619 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.743912466 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.71212098 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.906099927 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.571181353 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.721699734 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.705529471 seconds)
  done (took 166.075772875 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.883117005 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.703814181 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.701753917 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.702548112 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.708319833 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.70230614 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.823261507 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.826468818 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.352778693 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.452274224 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.760103741 seconds)
    (11/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.703142295 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.461846922 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.705272508 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.767073701 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.716394156 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.705015916 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.717829248 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.730110168 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.702922176 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.70448198 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.825433618 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.718933233 seconds)
    (23/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.706096117 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.712443746 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.703349542 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.709320529 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.089701567 seconds)
    (28/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.702114787 seconds)
    (29/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.869991871 seconds)
    (30/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.707930379 seconds)
    (31/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.708888494 seconds)
    (32/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.704130002 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.943555154 seconds)
    (34/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.704698031 seconds)
    (35/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.704806577 seconds)
    (36/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.526638274 seconds)
    (37/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.226617725 seconds)
    (38/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.785040899 seconds)
    (39/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.705673186 seconds)
    (40/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.710327636 seconds)
    (41/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.703452717 seconds)
    (42/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.92177218 seconds)
    (43/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.704169594 seconds)
    (44/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.705168975 seconds)
    (45/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.704936046 seconds)
    (46/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.706805218 seconds)
    (47/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.813430035 seconds)
    (48/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.704981118 seconds)
    (49/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.825725156 seconds)
    (50/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.709067017 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.17387068 seconds)
    (52/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.704749582 seconds)
    (53/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.705396153 seconds)
    (54/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.346589076 seconds)
    (55/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.260532807 seconds)
    (56/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.707913957 seconds)
    (57/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.707658109 seconds)
    (58/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.705862912 seconds)
    (59/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.705006364 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.71106978 seconds)
    (61/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.237955552 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.777348198 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.707746412 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.706875184 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.712002277 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.706158338 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.91376025 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.70641397 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.103390602 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.721515225 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.943373313 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.827898968 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.709059306 seconds)
    (74/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.705726849 seconds)
    (75/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.770790498 seconds)
    (76/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.798809338 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.707297081 seconds)
    (78/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.706305257 seconds)
    (79/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.706141723 seconds)
    (80/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.70513269 seconds)
    (81/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.786843823 seconds)
    (82/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.706407962 seconds)
    (83/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.791555016 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.714695958 seconds)
    (85/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.707973733 seconds)
    (86/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.7603404 seconds)
    (87/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.706892532 seconds)
    (88/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.775017252 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.706981818 seconds)
    (90/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.521907302 seconds)
    (91/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.709457465 seconds)
    (92/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.706811525 seconds)
    (93/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.939895665 seconds)
    (94/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.773037354 seconds)
    (95/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.706513993 seconds)
    (96/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.707125245 seconds)
    (97/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.792957623 seconds)
    (98/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.829554535 seconds)
    (99/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.421413662 seconds)
    (100/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.710313899 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.081849388 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.783860019 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.709257857 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.814583174 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.710537807 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.786494086 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.713541639 seconds)
    (108/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.707896407 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.709167033 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.742838937 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.709319665 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.722691068 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.708035318 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.079247552 seconds)
  done (took 393.331731027 seconds)
done (took 765.511220293 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.334420551 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.29765659 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.392612534 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.318029075 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.287516706 seconds)
  done (took 13.276048797 seconds)
done (took 14.923753316 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.7845339 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.791294662 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.727360737 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.787194884 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.723775406 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.786675739 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.771666919 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.730780433 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.756633307 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.732298297 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.759582028 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.730197197 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.716909534 seconds)
  done (took 24.446265661 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.933898213 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.942876101 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.773289655 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.936520926 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.748448626 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.933821315 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.857606931 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.850130495 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.847917626 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.719189108 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.716833119 seconds)
  done (took 21.908947287 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.937251293 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.95177265 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.780018607 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.940225662 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.752224855 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.938409712 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.863288527 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.857052742 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.847360328 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.719902387 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.716430724 seconds)
  done (took 21.951544066 seconds)
done (took 69.954513565 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.711696662 seconds)
  done (took 3.360412644 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.732177669 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.885941909 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.71322691 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.713787861 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.712183292 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.713256265 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.712319208 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.712258014 seconds)
  done (took 15.545093283 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.712509697 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.712799463 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.712675679 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.712216586 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.711842122 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.712813163 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.713466094 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.71228253 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.711865848 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.713804805 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.712251222 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.712791862 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.712199445 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.71248907 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.713317498 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.713571382 seconds)
  done (took 29.053274768 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.716178538 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.713923271 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.713312922 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.713187917 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.7140074 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.713938606 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.714462685 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.713458915 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.713963546 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.714807824 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.713887138 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.713918656 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.714397928 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.7144875 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.714289482 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.714651118 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.714030446 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.713906272 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.717734417 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.713627947 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.713573987 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.714330847 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.713143239 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.714005269 seconds)
  done (took 42.793342225 seconds)
done (took 92.401864723 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.432401937 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.371618958 seconds)
  done (took 9.454550667 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.718328687 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.714993093 seconds)
  done (took 5.148233823 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.715178958 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.713554798 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.714049915 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.715046703 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.714098158 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.713635288 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.714522159 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.71434682 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.714783093 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.714741742 seconds)
  done (took 18.795489482 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.71446568 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.714865727 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.714747423 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.714092451 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.715720925 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.71542613 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.715186114 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.715714291 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.715688017 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.715581758 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.715640801 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.715324595 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.716439538 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.716635213 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.715451507 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.714918575 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.715578801 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.716939936 seconds)
  done (took 32.530900517 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.714385626 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.71575132 seconds)
  done (took 5.083093264 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.717082957 seconds)
    (2/7) benchmarking "second"...
    done (took 1.715940234 seconds)
    (3/7) benchmarking "month"...
    done (took 1.716280697 seconds)
    (4/7) benchmarking "year"...
    done (took 1.715877314 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.716378706 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.715869982 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.71690125 seconds)
  done (took 13.666474654 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.717153724 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.870381735 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.936018347 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.290884707 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.717485995 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.719413538 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.641446118 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.719199323 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.720407975 seconds)
  done (took 18.98551906 seconds)
done (took 105.317072681 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.569864899 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.71528634 seconds)
  (3/8) benchmarking "parseint"...
  done (took 2.934346916 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.768787773 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.747025305 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.057790258 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.743288006 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.999717735 seconds)
done (took 42.190798553 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.793382158 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 3.421508163 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 3.645194253 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.806638812 seconds)
  done (took 15.527345606 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.71416413 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.113644134 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.742991881 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.571276968 seconds)
  done (took 21.799583715 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.077058558 seconds)
    (2/2) benchmarking "read"...
    done (took 2.067493217 seconds)
  done (took 5.803082023 seconds)
done (took 51.579968652 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.717405251 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.717411947 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.718084486 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.717291013 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.71762404 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.717921548 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.71815289 seconds)
    (8/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.717924289 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.718555125 seconds)
    (10/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.717700483 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.717253027 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.718676819 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.718660849 seconds)
    (14/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.718158413 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.718133843 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.718466889 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.718414829 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.718349814 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.718183569 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.719375523 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.718557497 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.718653165 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.718397358 seconds)
    (24/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.718435332 seconds)
  done (took 42.889819387 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.719406705 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.72014009 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.719322135 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.71879997 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.720104899 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.719113036 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.71884192 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.718972853 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.720081241 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.718875675 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.719372023 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.720323303 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.720789136 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.719517234 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.719515572 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.720433131 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.720189815 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.719042142 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.721117502 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.720730934 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.719730441 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.720697006 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.719448474 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.719499679 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.719740293 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.720205323 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.719754874 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.720725589 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.719469407 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.720402566 seconds)
  done (took 53.251166479 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.723449024 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.728740223 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.719658967 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.720241134 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.720197163 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.720542362 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.720462178 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.720860614 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.720277499 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.720189583 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.720450326 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.720868794 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.72060783 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.720714184 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.721092806 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.721060892 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.721298186 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.724097679 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.721781287 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.720717343 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.720840421 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.720978607 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.721432023 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.721632162 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.721608928 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.720708692 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.721909456 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.7210692 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.72075836 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.721886622 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.721814724 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.722421568 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.721416753 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.722420658 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.722550238 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.721929776 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.726117711 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.729567145 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.722837247 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.721568659 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.722158024 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.722659535 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.722063512 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.721904516 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.721919988 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.721515018 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.722653225 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.722397466 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.722754866 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.722905619 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.723255891 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.722179617 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.722541813 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.7215447 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.723427297 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.722214343 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.722072061 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.722437426 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.722621631 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.722347458 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.722568052 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.723559295 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.722932034 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.723008636 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.722075299 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.723206392 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.723201336 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.72324213 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.723476214 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.723035893 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.723964072 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.723503097 seconds)
  done (took 125.65791121 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.724012087 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.724277555 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.724096712 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.724476366 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.722671055 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.723428174 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.724238712 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.724400372 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.723907093 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.724620911 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.723710685 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.724205715 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.724572743 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.724802885 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.723241055 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.724243724 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.72472121 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.723991451 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.724978035 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.724502415 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.72434637 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.724370256 seconds)
  done (took 39.593016604 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.725669737 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.724434803 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.725343675 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.725463959 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.724722163 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.724414179 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.725627044 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.725903267 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.725921192 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.725545849 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.726004829 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.724895673 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.725373194 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.725126846 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.725174656 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.725386505 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.725681303 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.72651144 seconds)
  done (took 32.718783852 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.72526313 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.726688923 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.726015951 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.726829805 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.726026242 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.727310522 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.72567985 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.726269159 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.725562901 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.727055184 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.724944768 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.725577817 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.725687518 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.726178007 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.725652124 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.727141887 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.727517522 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.725967188 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.726121944 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.725617322 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.726155636 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.72589708 seconds)
  done (took 39.637671396 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.726297135 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.726744739 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.72657026 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.726017534 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.726493012 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.726539675 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.725582307 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.727030923 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.727393295 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.72657697 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.727370364 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.726920737 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.727669811 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.727024103 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.727624304 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.72771999 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.727594903 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.728233467 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.728459993 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.728258059 seconds)
  done (took 36.206254251 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.72740779 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.728214206 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.72904163 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.728345462 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.727962769 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.729027058 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.727330445 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.727436444 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.727904328 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.728429619 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.727806822 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.727694814 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.728165109 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.728291137 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.727823248 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.727764768 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.728835496 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.726541335 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.729040848 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.728196991 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.728251261 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.728769692 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.72886689 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.728603099 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.728010499 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.727895583 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.728767703 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.728044934 seconds)
  done (took 50.05354717 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.729338343 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.728770376 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.729565294 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.729087786 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.729492767 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.730874102 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.729285684 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.729024191 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.729411843 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.72891271 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.728540964 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.728940733 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.729673623 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.729333724 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.729440914 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.729626714 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.729756861 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.729956539 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.729179519 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.730618544 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.729714823 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.729299079 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.730219651 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.72906326 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.72852263 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.730080544 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.730288063 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.729768723 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.730063337 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.729429232 seconds)
  done (took 53.551644159 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.750950828 seconds)
    (2/2) benchmarking "in"...
    done (took 1.750847278 seconds)
  done (took 5.168137007 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.731073794 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.730450538 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.731156475 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.730702717 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.730848588 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.731208358 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.730344324 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.729965412 seconds)
  done (took 15.512700192 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.730661812 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.730620721 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.730880191 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.731353861 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.73131226 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.731857327 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.738009424 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.731903958 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.733360034 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.73304556 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.73830603 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.740848869 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.735181317 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.731998322 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.732446842 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.733001119 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.730754231 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.732063324 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.732122232 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.730127452 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.731725843 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.734232557 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.734081123 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.731304564 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.733813745 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.742096395 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.737055164 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.731110372 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.732540487 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.736052959 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.731921966 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.731172215 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.73232966 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.732754202 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.731573228 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.732487753 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.740711318 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.733112471 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.738058849 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.732759934 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.732651241 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.732748197 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.735086417 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.734643343 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.735176972 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.733694228 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.733179157 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.732698786 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.733258773 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.736940068 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.740168005 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.734035408 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.733523513 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.737975493 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.735572113 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.741028521 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.735132562 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.737315743 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.743096064 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.744683541 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.745418614 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.742772826 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.735186919 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.73457256 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.742549176 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.759191533 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.740698976 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.733958801 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.732511759 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.73490928 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.740945602 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.745568453 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.744661582 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.734710787 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.734241092 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.733840175 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.735594113 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.734425831 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.741740709 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.737893013 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.734757011 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.735095776 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.743920629 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.758907481 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.73472882 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.733964589 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.73509175 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.734822642 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.736645473 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.746914279 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.736669667 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.735876195 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.737000192 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.736976939 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.737998189 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.73543415 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.735743993 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.736681807 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.734782466 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.735152774 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.735474767 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.738912932 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.744705239 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.735853381 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.735976377 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.742280028 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.735704288 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.736492248 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.742035734 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.736231463 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.736552844 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.737818508 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.743345741 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.735825157 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.738678721 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.745394708 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.735924076 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.738440148 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.737012682 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.736924438 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.746391119 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.763076048 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.73600325 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.736087243 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.740793126 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.748996257 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.736733796 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.740272367 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.736858291 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.736962609 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.736927563 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.738769316 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.73656448 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.738234843 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.737238678 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.739095962 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.736417578 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.736801715 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.73691061 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.739691992 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.74049709 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.738382508 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.739509207 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.740986082 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.737681274 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.740624252 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.746411243 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.739137225 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.73808012 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.740198148 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.738101821 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.739285307 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.740135888 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.738040273 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.739938349 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.738218751 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.739131961 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.739234879 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.738886648 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.739111044 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.739258698 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.740643933 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.74445431 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.738645665 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.742841855 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.739269022 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.738965744 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.739139095 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.738632811 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.74012238 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.739089507 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.738657585 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.742435759 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.74702573 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.738427573 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.739747 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.742612946 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.739144366 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.740155235 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.739546068 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.741281539 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.748363026 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.74025163 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.745597108 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.739695277 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.739624443 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.739710284 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.741115283 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.739791826 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.739669307 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.743355025 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.747557523 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.751753627 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.750631375 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.742012203 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.743622382 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.743071564 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.744312304 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.744169708 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.740669061 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.74024244 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.740064426 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.740722593 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.740493593 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.743102533 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.740757398 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.740904233 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.741129535 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.74110737 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.741569868 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.740786586 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.743178718 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.743558432 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.741373339 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.74071282 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.741530402 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.741686039 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.741412489 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.741948242 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.74242527 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.741659069 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.741730254 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.74798251 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.740523717 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.743203573 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.743658093 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.741440972 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.742286293 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.741239104 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.744281739 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.742781308 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.748581292 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.742372434 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.743394582 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.748844876 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.743341718 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.742915008 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.7452695 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.741673365 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.742161112 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.745795644 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.749130993 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.741959223 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.743209213 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.742559151 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.742929468 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.743338935 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.747547741 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.742301808 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.742576708 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.742126017 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.744925737 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.742396403 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.744921123 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.743888399 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.744592545 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.74506999 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.742894067 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.743322269 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.744312354 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.742275565 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.743201924 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.743362079 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.746750633 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.751749027 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.748355227 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.744689517 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.746267532 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.745321451 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.747297354 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.74504872 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.742975459 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.744036666 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.755443447 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.753404273 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.751490945 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.746448391 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.743755575 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.74995443 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.746631922 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.749717657 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.745352131 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.745025034 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.746025538 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.744964138 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.743996005 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.748295598 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.747732602 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.745768926 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.746107151 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.74823667 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.743929787 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.744271181 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.743175547 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.744816828 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.744225071 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.744831473 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.744166934 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.74718679 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.748249073 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.746351416 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.745422334 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.751157346 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.746832642 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.748073264 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.746544274 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.746414766 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.746960224 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.747915418 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.745418859 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.749240969 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.754062222 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.748320964 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.755807976 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.746921147 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.755151342 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.745864751 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.750553862 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.754033704 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.745731486 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.746105077 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.747872921 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.746091535 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.753532593 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.74729865 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.748390959 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.752244583 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.747227244 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.746982918 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.747433448 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.746474187 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.745544965 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.748199987 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.753948511 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.74997698 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.753260391 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.749466051 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.74705157 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.748008378 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.748019349 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.748022955 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.751991697 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.746902489 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.748379401 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.747669371 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.748134885 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.746793452 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.748388644 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.746686486 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.747472341 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.746352658 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.754352974 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.749552309 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.752263431 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.747626459 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.755682687 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.748979129 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.754672942 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.749090997 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.749863148 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.74770404 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.748236801 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.750378077 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.749394638 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.750400929 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.7482323 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.752000375 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.752547265 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.748208205 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.7506596 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.749656511 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.749106947 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.748905887 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.758492626 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.77205403 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.751266652 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.75378659 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.749507104 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.753115159 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.755940985 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.750843973 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.751487866 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.753555496 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.761513439 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.757452851 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.750562926 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.748200334 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.749500045 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.748232552 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.74840591 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.749643406 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.749552798 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.749486602 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.751274966 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.749983513 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.754200871 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.748914963 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.75153963 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.752763439 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.752462155 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.759914724 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.749376413 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.75213589 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.750659414 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.749373653 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.750643714 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.751529435 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.750732245 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.754505795 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.751756643 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.752339107 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.757529504 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.758588144 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.752831731 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.750969031 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.750167532 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.751520889 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.751637905 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.750425096 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.74996111 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.750563086 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.752819033 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.751111581 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.752626649 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.752027257 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.750192312 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.752013557 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.750618974 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.754189505 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.759210547 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.751761751 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.751681871 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.750575756 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.750550629 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.751285511 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.753152484 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.759126095 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.755665882 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.763121621 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.76131301 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.755426269 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.753034965 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.755479062 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.760995389 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.752304448 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.753353723 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.751962579 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.7551356 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.75416705 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.757554092 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.753118595 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.758544465 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.753421345 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.753410136 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.760696886 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.754646108 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.752961025 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.753782819 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.756745478 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.752719659 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.751012299 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.752585486 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.753403885 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.759325888 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.755446907 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.753045603 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.756029078 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.753153176 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.754515661 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.756981536 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.752968139 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.75458517 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.753211272 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.753992368 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.75270802 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.752943687 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.7532405 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.753903972 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.754177917 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.756646211 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.761328467 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.752726492 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.75493509 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.754522932 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.755764395 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.75473214 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.754327618 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.754588429 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.753131763 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.754834355 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.753938963 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.754807001 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.757132398 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.754992614 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.756287928 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.758284355 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.755483972 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.759569008 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.765910773 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.761681734 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.754437944 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.755680057 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.755763332 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.758795893 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.755014094 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.754829216 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.756694624 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.757617501 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.754126724 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.754821376 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.754982595 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.757698432 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.771536622 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.755420937 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.756152383 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.755480145 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.759020837 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.754984451 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.755030895 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.755607087 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.75817291 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.758312715 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.763443456 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.754766295 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.763410854 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.757006963 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.757465109 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.759977584 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.759474281 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.76501179 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.758631131 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.755173792 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.756121217 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.760116661 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.772138967 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.754811989 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.765794698 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.786750547 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.758654618 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.758865002 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.756510465 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.757056119 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.757045178 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.75958828 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.756555062 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.755944204 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.756828963 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.755774199 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.758614364 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.763661042 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.759195296 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.755978955 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.757737871 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.757566347 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.75869444 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.756737772 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.756508808 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.757187503 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.758304703 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.757630695 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.757158301 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.759560186 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.76985225 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.769378845 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.757747789 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.757682561 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.758319345 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.761823308 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.762170188 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.768931129 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.765690764 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.758247596 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.758089099 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.759786622 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.758283001 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.758171374 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.759589526 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.758754331 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.758737072 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.759172107 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.76945355 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.766361657 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.762879574 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.760065517 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.758675885 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.758019888 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.760226497 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.758590837 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.758815235 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.760918767 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.760067032 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.762223983 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.759955953 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.758997 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.762286815 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.766061014 seconds)
  done (took 1043.114087546 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.759206161 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.758561855 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.759113152 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.759249705 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.760000288 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.759189082 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.759135947 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.7601869 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.758729116 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.759062608 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.760301113 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.759806231 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.759843857 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.76131928 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.75961186 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.759900125 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.760913421 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.759556985 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.760284671 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.760618529 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.75869816 seconds)
  done (took 38.648374207 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.76014611 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.759403516 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.760553964 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.760550106 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.760146626 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.759918668 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.760801062 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.760913878 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.75970596 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.760548906 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.760849335 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.759749019 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.759932709 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.759510062 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.760559778 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.760301028 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.760250611 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.760459754 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.761039049 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.761452117 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.760236281 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.760369915 seconds)
  done (took 40.424147286 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.761063307 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.761340915 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.761612079 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.760933853 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.761020023 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.760957426 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.761963378 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.76142429 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.760790214 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.762283352 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.762198144 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.765177684 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.768857687 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.768806738 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.764520062 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.760653191 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.90650444 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.761775343 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.762257782 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.763376881 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.762743501 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.768330378 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.763517534 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.76204645 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.762063153 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.762030105 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.763174527 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.76212477 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.762826247 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.765238199 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.767253002 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.762060631 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.763463902 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.76578335 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.763075427 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.763908673 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.766783953 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.762822442 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.761267637 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.762253466 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.771231625 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.78596155 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.761474251 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.769456514 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.762590115 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.761108885 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.764648475 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.770240467 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.761480501 seconds)
  done (took 88.276430608 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.762589282 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.762262098 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.762256325 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.763086981 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.762150004 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.76204828 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.761662178 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.761826887 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.762444589 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.761553757 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.761723727 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.762245848 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.761714869 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.762423347 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.76218193 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.761073915 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.760615166 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.760768756 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.761135432 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.761532761 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.761979906 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.760872197 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.761931272 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.762304611 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.761142081 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.761861909 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.763067924 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.762114139 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.762028115 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.761346473 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.761675859 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.762382158 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.76167277 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.762173547 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.76185541 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.76216448 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.761258089 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.761462751 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.761669137 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.760695142 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.762772758 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.761442084 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.762217066 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.756924763 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.756080515 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.757056929 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.756812292 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.756948657 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.756040149 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.755313008 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.755533094 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.754940824 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.754886591 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.754677744 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.755860363 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.754728878 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.753506396 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.753592769 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.753923792 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.755433251 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.754055988 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.753305494 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.754544291 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.754222575 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.753588705 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.755251431 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.754078702 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.754390669 seconds)
  done (took 121.33499094 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.75470224 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.754800415 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.755640207 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.754973537 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.754720866 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.754883906 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.754711655 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.755821185 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.754973095 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.755603348 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.755935803 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.754837272 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.755581181 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.754821351 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.755051208 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.755703107 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.755492556 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.756593663 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.75644947 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.756039743 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.755746887 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.756815728 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.756719355 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.75702162 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.756555644 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.756522154 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.755140486 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.755240156 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.755714105 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.756183968 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.758011254 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.755129568 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.755062303 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.755828724 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.756630318 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.755853975 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.755377119 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.75611393 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.756256444 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.756207967 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.755623717 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.75660957 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.757095588 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.755845769 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.75608658 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.756132577 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.756348075 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.758350612 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.756133033 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.755924445 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.756479038 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.756245155 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.756706528 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.757871803 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.756819839 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.756303501 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.757463484 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.75753963 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.756844727 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.758799607 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.756397774 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.75553843 seconds)
  done (took 110.569220931 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.756034267 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.755218475 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.75585254 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.756528164 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.756422395 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.756043697 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.756693357 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.758410392 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.758904487 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.7582995 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.758175781 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.75763014 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.759630954 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.757233619 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.755148717 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.755692907 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.754646861 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.755425852 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.754494753 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.755491334 seconds)
  done (took 36.823869654 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.75419356 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.752948089 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.753167906 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.754442017 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.747432834 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.747574538 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.748243734 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.748517172 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.748302747 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.748192369 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.750460273 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.747834032 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.747653863 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.748178787 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.747895333 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.748179464 seconds)
  done (took 29.682098681 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.745129147 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.746130816 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.746181053 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.746231375 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.74497069 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.744413899 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.744064701 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.745219406 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.744196637 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.745229032 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.743856656 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.743371621 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.74366415 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.744373006 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.743476399 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.744253546 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.744382592 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.744590052 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.745607252 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.744753527 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.744841038 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.744731942 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.74386242 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.74371539 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.744224196 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.745501936 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.744207414 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.743832519 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.744585331 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.744830848 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.74431991 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.745182295 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.744678463 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.745576287 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.745065629 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.745165017 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.744708292 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.744962551 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.745763338 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.744145457 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.744565641 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.74575176 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.744997096 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.745390536 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.746259892 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.745255048 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.745790327 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.74574457 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.746146713 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.74599063 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.745130419 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.745313654 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.745779621 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.745979173 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.744092505 seconds)
  done (took 97.653348058 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.744772841 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.743921714 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.74393865 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.744433192 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.744188208 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.744974424 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.744436146 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.743202001 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.744198987 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.743887185 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.744037399 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.744018278 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.743804409 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.744094186 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.743308865 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.743716595 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.745316834 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.742496489 seconds)
  done (took 33.073909407 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.741938163 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.743223294 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.742934831 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.742219944 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.741940682 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.741827797 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.742188074 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.741713507 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.74197926 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.747499716 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.74154893 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.741834823 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.741307413 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.741375977 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.742715998 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.742427629 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.741122363 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.740242814 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.740607786 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.743660511 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.743852743 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.74020778 seconds)
  done (took 40.006629942 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.74052967 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.739534494 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.754958533 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.761496071 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.760171434 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.773510164 seconds)
  done (took 12.204738585 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.740202958 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.741134073 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.741726646 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.739779915 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.740592097 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.74110038 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.740433259 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.741556041 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.740754807 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.740451122 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.740556097 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.740708541 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.740707377 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.741621939 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.7396692 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.739748509 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.7408434 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.740818137 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.740013596 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.741211415 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.741014821 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.739202897 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.740328164 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.740590208 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.740843735 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.739910843 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.739129877 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.740896022 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.740409659 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.740259672 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.74018898 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.740001767 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.740105927 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.740665262 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.740998986 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.740409161 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.740592037 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.741286187 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.739849247 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.740058942 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.740914938 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.741235272 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.742565433 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.740297008 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.741512309 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.740578075 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.741598482 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.740008862 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.741746188 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.740827261 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.741106246 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.740820678 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.741700169 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.740600561 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.741352564 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.741039648 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.741104417 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.740237352 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.741779488 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.741801243 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.740844236 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.740725237 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.740746551 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.740301302 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.740103684 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.740668731 seconds)
  done (took 116.564152058 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.73974829 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.741185275 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.741005763 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.74010929 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.741793779 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.739800812 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.740019281 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.739525703 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.740479695 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.741001864 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.741454649 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.739862731 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.740435668 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.741606553 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.742556731 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.743137178 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.738917529 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.740516192 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.74136988 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.740479894 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.739603737 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.739614628 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.739622437 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.739717503 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.739375805 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.739273223 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.740756459 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.741966747 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.739806222 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.740359873 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.739424881 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.739422611 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.74054855 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.741161265 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.740591102 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.740372165 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.740323677 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.741274041 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.741478696 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.739691317 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.740708681 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.739468691 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.740215439 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.740694916 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.741864765 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.739936956 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.739714299 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.740188483 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.740590606 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.740594759 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.741270874 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.739608486 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.740791494 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.741064212 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.740879545 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.740176259 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.740435129 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.740683366 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.740089327 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.739417228 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.741156557 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.740391285 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.740797452 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.740128186 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.741204087 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.741255561 seconds)
  done (took 116.55032942 seconds)
done (took 2420.826487146 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.746624489 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.755842788 seconds)
  done (took 15.177620516 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.901053515 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.855967992 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.742938663 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.752164286 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.740746736 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.764608095 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.764344185 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.740841585 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.740946672 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.740752716 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.742844439 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.925312972 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.744793485 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.741229239 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.739989101 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.832440561 seconds)
  done (took 50.149747449 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.743305163 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.74350047 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.754253541 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.745716419 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.743562432 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.75510885 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.77372838 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.747390383 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.775718368 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.754146982 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.811134589 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.754055137 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.741265073 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.793430929 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.755264863 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.757214157 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.836634496 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.816793278 seconds)
  done (took 33.478118543 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.819456562 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.755643989 seconds)
  done (took 10.255989612 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.774043073 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.747100034 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.759141468 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.754341088 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.757621053 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.755655788 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.780362396 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.791849727 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.771634097 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.749947982 seconds)
  done (took 69.319340311 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.746873992 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.742507857 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.74134943 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.739330451 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.736958526 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.74413775 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.740643098 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.743162473 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.401359559 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.77482497 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.750103971 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.74618979 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.740129396 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.742104105 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.739844505 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.761446354 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.849985757 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.738534804 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.738193548 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.746536665 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.742881714 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.793316005 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.752689395 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.742411817 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.770360735 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.400432237 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.747127542 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.746785906 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.852238866 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.739768197 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.739928103 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.927141415 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.742751214 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.210576781 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.005246312 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.747740905 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.753979834 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.748105581 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.739638046 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.860683871 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.741884455 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.746765603 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.654738017 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.985489309 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.834086306 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.784193019 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.056000198 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.758221399 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.741853787 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.771103597 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.743587459 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.743013671 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.756981142 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.246335513 seconds)
  done (took 125.666978162 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.740481827 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.084069997 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.905249841 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.742377544 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.021159542 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.944735332 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.740847371 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.785615814 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.741979538 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.967524298 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.993734965 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.843640966 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.741707338 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.742109135 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.743050764 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.740698705 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.892184793 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.810238988 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.7443778 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.738408334 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.766886362 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.979413518 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.86159282 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.742479708 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.766423731 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.94936408 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.86276963 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.842203437 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.528158066 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.739449296 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.801226819 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.742619421 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.739840532 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.740656912 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.895590955 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.83361257 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.828659572 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.742954742 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.74081886 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.739602651 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.396654752 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.938569084 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.834846342 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.870963769 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.992254103 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.944146496 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.518152216 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.739787734 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.472273205 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.902319159 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.968250984 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.97024196 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.860066591 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.743532665 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.078903403 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.74099538 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.741563517 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.990506394 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.963833652 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.836359355 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.746917201 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.742316437 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.741222984 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.978271166 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.746167957 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.836318768 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.746759568 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.743398123 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.83823854 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.841073953 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.973154253 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.954084181 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.771700839 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.08212161 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.241954793 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.987285277 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.805776039 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.992871074 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.746116171 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.741871279 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.820234891 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.585223312 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.994298519 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.984482131 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.986747679 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.778303429 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.461625723 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.743608913 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.968102683 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.962815384 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.001349212 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.987083976 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.97599246 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.056820007 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.743169122 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.742354483 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.069389972 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.86554243 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.745297143 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.083393545 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.979590993 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.262994993 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.768746779 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.044357213 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.870791749 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.745281841 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.371161868 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.742006979 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.972534439 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.781318955 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.744952677 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.74559466 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.960725539 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.735649975 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.744059489 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.386341693 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.804020338 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.747626794 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.975069044 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.746742263 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.011954293 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.748152341 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.97522143 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.217093557 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.773868442 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.916770616 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.989255921 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.745973806 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.985370531 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.985135922 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.857517989 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.963957523 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.459226629 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.745664232 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.028496715 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.745988832 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.745760584 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.911812089 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.747032903 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.885159023 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.745756765 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.036061267 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.765093916 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.97543052 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.750065923 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.998348991 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.777161023 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.795171793 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.748654519 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.863635708 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.746463003 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.659163488 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.901304251 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.748330929 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.746854744 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.309276433 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.747164884 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.892024678 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.972368614 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.76586814 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.231385572 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.408904491 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.745527464 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.825493887 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.768015205 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.131807951 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.74680764 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.995806404 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.74889777 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.746502535 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.745059978 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.980326409 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.927762339 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.747018837 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.747012199 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.64879817 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.747172887 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.746970893 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.926077912 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.059192823 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.746901186 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.946814363 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.751169883 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.873981982 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.749441805 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.821058989 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.079383996 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.745965782 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.745771962 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.747150285 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.746159797 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.748957563 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.953943516 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.772194614 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.237085064 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.883111104 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.01701573 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.055832279 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.986061727 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.788339654 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.748507024 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.000428896 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.75084517 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.808051064 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.750587183 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.76651723 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.97145945 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.752426067 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.955618542 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.015422637 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.59948595 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.794261981 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.75048825 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.747626213 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.747268933 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.89099413 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.831388031 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.751175238 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.747665653 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.861475775 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.869167217 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.956598328 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.749606715 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.799626823 seconds)
  done (took 874.664153845 seconds)
done (took 1180.388607271 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.749328328 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.751767652 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.74876502 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.751973148 seconds)
  done (took 28.688799004 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.753946898 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.752445358 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.753492982 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.751877078 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.750200778 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.752148946 seconds)
  done (took 12.200073518 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.795793539 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.749425345 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.750744118 seconds)
  done (took 20.982635256 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.820810048 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.133543508 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.88205079 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.16494261 seconds)
  done (took 9.687582336 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.752887554 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.75195562 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.751599775 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.751106077 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.752961458 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.753107926 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.75194647 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.751574319 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.753363756 seconds)
  done (took 17.458197834 seconds)
  (6/6) benchmarking "26942"...
  done (took 3.8082775 seconds)
done (took 94.511310902 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.760063571 seconds)
    (2/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.118051666 seconds)
    (3/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.756132021 seconds)
    (4/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.815763847 seconds)
    (5/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.191210918 seconds)
    (6/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.888627899 seconds)
    (7/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.863018962 seconds)
    (8/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.776171828 seconds)
    (9/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.752765795 seconds)
    (10/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.748800771 seconds)
    (11/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 3.611221131 seconds)
    (12/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.751905007 seconds)
    (13/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.855742338 seconds)
    (14/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.140476331 seconds)
    (15/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.751888988 seconds)
    (16/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.941386216 seconds)
    (17/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.854527115 seconds)
    (18/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.751468492 seconds)
    (19/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.180883275 seconds)
    (20/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.765132323 seconds)
    (21/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.182336757 seconds)
    (22/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.912898666 seconds)
    (23/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.773205935 seconds)
    (24/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.051898681 seconds)
    (25/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 2.832697551 seconds)
    (26/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.818812557 seconds)
    (27/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.885549766 seconds)
    (28/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.85632314 seconds)
    (29/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.840880975 seconds)
    (30/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.405217168 seconds)
    (31/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.630030364 seconds)
    (32/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.879787759 seconds)
    (33/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.836135065 seconds)
    (34/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.855365676 seconds)
    (35/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.081763332 seconds)
    (36/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.791221868 seconds)
    (37/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.974178263 seconds)
    (38/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.754495282 seconds)
    (39/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.067181202 seconds)
    (40/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.926022882 seconds)
    (41/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.761957571 seconds)
    (42/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.855279983 seconds)
    (43/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.006703277 seconds)
    (44/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.881737772 seconds)
    (45/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.756376495 seconds)
    (46/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.03234591 seconds)
    (47/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.395057665 seconds)
    (48/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.793322061 seconds)
    (49/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.905900768 seconds)
    (50/309) benchmarking ("sort", Bool, false)...
    done (took 1.967964292 seconds)
    (51/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.754155207 seconds)
    (52/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.851239746 seconds)
    (53/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.776112266 seconds)
    (54/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.109703922 seconds)
    (55/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.888181775 seconds)
    (56/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.850595392 seconds)
    (57/309) benchmarking ("sort", Int64, false)...
    done (took 5.417153047 seconds)
    (58/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.005697203 seconds)
    (59/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.932280717 seconds)
    (60/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.759009507 seconds)
    (61/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.138491343 seconds)
    (62/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.910625762 seconds)
    (63/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.773862475 seconds)
    (64/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.628987648 seconds)
    (65/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.014503965 seconds)
    (66/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.303205242 seconds)
    (67/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.854757403 seconds)
    (68/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.753235276 seconds)
    (69/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 2.48525649 seconds)
    (70/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.058505183 seconds)
    (71/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.757445739 seconds)
    (72/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.773145398 seconds)
    (73/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.754723969 seconds)
    (74/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.626697741 seconds)
    (75/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 1.999492551 seconds)
    (76/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.775133667 seconds)
    (77/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.772407256 seconds)
    (78/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.923597839 seconds)
    (79/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.833649038 seconds)
    (80/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.063367672 seconds)
    (81/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.75763537 seconds)
    (82/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.757964897 seconds)
    (83/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 7.032368167 seconds)
    (84/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 2.252335114 seconds)
    (85/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.774493075 seconds)
    (86/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.158453908 seconds)
    (87/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.816808958 seconds)
    (88/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.76041831 seconds)
    (89/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.130015013 seconds)
    (90/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.856336212 seconds)
    (91/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.780141348 seconds)
    (92/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.754706717 seconds)
    (93/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.160592377 seconds)
    (94/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.0667713 seconds)
    (95/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.89581783 seconds)
    (96/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.131897277 seconds)
    (97/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.839847523 seconds)
    (98/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.998186263 seconds)
    (99/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.662260212 seconds)
    (100/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.975872433 seconds)
    (101/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.869323093 seconds)
    (102/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.758434873 seconds)
    (103/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 3.71035394 seconds)
    (104/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.887685451 seconds)
    (105/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.911682365 seconds)
    (106/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.918059152 seconds)
    (107/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.891181152 seconds)
    (108/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.771496021 seconds)
    (109/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.895554129 seconds)
    (110/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.760458311 seconds)
    (111/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.98542516 seconds)
    (112/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.756214668 seconds)
    (113/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.327968698 seconds)
    (114/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.891147241 seconds)
    (115/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.755077064 seconds)
    (116/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 4.059569323 seconds)
    (117/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.00996534 seconds)
    (118/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.761177878 seconds)
    (119/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.862513515 seconds)
    (120/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.833856625 seconds)
    (121/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.946122274 seconds)
    (122/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.757379694 seconds)
    (123/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.873260742 seconds)
    (124/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.274857952 seconds)
    (125/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.758360773 seconds)
    (126/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.875739779 seconds)
    (127/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.780077584 seconds)
    (128/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.243235335 seconds)
    (129/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.059782121 seconds)
    (130/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.650412028 seconds)
    (131/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.761784674 seconds)
    (132/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.997951798 seconds)
    (133/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.757748773 seconds)
    (134/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.883758358 seconds)
    (135/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.007285543 seconds)
    (136/309) benchmarking ("map", identity, Float32, true)...
    done (took 1.957612754 seconds)
    (137/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.761796465 seconds)
    (138/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.043527381 seconds)
    (139/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.759218138 seconds)
    (140/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 8.124772276 seconds)
    (141/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.0943399 seconds)
    (142/309) benchmarking ("map", abs, Int64, true)...
    done (took 1.98970989 seconds)
    (143/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.893205871 seconds)
    (144/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.935712435 seconds)
    (145/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.782922721 seconds)
    (146/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.965008827 seconds)
    (147/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.759608752 seconds)
    (148/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.504281302 seconds)
    (149/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.425303515 seconds)
    (150/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.861165818 seconds)
    (151/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.02332431 seconds)
    (152/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.762207121 seconds)
    (153/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.12217517 seconds)
    (154/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.781247581 seconds)
    (155/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.886902329 seconds)
    (156/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.199652335 seconds)
    (157/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.825016883 seconds)
    (158/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 1.995998631 seconds)
    (159/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.76282739 seconds)
    (160/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 4.174369262 seconds)
    (161/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.379640728 seconds)
    (162/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.023636099 seconds)
    (163/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.853370287 seconds)
    (164/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.758097285 seconds)
    (165/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.76002471 seconds)
    (166/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.875497584 seconds)
    (167/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.440894543 seconds)
    (168/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.760114659 seconds)
    (169/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.497155734 seconds)
    (170/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.763200766 seconds)
    (171/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.897518615 seconds)
    (172/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.760131613 seconds)
    (173/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.703724347 seconds)
    (174/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.934917201 seconds)
    (175/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.763116425 seconds)
    (176/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.815569362 seconds)
    (177/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.23714012 seconds)
    (178/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.761850828 seconds)
    (179/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 3.311884523 seconds)
    (180/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.943670914 seconds)
    (181/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.764122896 seconds)
    (182/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.993646455 seconds)
    (183/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.067048589 seconds)
    (184/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.853967377 seconds)
    (185/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.093569809 seconds)
    (186/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.841707208 seconds)
    (187/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.755817129 seconds)
    (188/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.261040385 seconds)
    (189/309) benchmarking ("sort", Float32, false)...
    done (took 5.465521784 seconds)
    (190/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.78970084 seconds)
    (191/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.862883026 seconds)
    (192/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.081685745 seconds)
    (193/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.889423392 seconds)
    (194/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.726267316 seconds)
    (195/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.958374257 seconds)
    (196/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.899314479 seconds)
    (197/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.763575932 seconds)
    (198/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.949993902 seconds)
    (199/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.836436468 seconds)
    (200/309) benchmarking ("sort", BigInt, false)...
    done (took 6.759446428 seconds)
    (201/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.844491639 seconds)
    (202/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.760487114 seconds)
    (203/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.351550298 seconds)
    (204/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.500762244 seconds)
    (205/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.111704048 seconds)
    (206/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.98927718 seconds)
    (207/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.899685318 seconds)
    (208/309) benchmarking ("sort", Int8, false)...
    done (took 4.668791591 seconds)
    (209/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.017815133 seconds)
    (210/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.790719733 seconds)
    (211/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.415979775 seconds)
    (212/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.964880481 seconds)
    (213/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.571764797 seconds)
    (214/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.765142206 seconds)
    (215/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.77153325 seconds)
    (216/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.762232506 seconds)
    (217/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 3.5290632 seconds)
    (218/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.765195395 seconds)
    (219/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.31192974 seconds)
    (220/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.790635668 seconds)
    (221/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.144814314 seconds)
    (222/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.768611354 seconds)
    (223/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.935424198 seconds)
    (224/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.893413277 seconds)
    (225/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.641170936 seconds)
    (226/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.010047411 seconds)
    (227/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.95134603 seconds)
    (228/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.094351948 seconds)
    (229/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.398682556 seconds)
    (230/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.867236379 seconds)
    (231/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.762495283 seconds)
    (232/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.024231347 seconds)
    (233/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.783019697 seconds)
    (234/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.824290549 seconds)
    (235/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.438930901 seconds)
    (236/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.766542714 seconds)
    (237/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 3.896264969 seconds)
    (238/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.65908525 seconds)
    (239/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.581911902 seconds)
    (240/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.956859455 seconds)
    (241/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.95137951 seconds)
    (242/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.864675525 seconds)
    (243/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.76165429 seconds)
    (244/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.078488142 seconds)
    (245/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.068171857 seconds)
    (246/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.000401656 seconds)
    (247/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.53143192 seconds)
    (248/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.768366315 seconds)
    (249/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.842369881 seconds)
    (250/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.004769523 seconds)
    (251/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.768031355 seconds)
    (252/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 2.025691798 seconds)
    (253/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.76561857 seconds)
    (254/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.761988752 seconds)
    (255/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 3.643251101 seconds)
    (256/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.867899211 seconds)
    (257/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.925845622 seconds)
    (258/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.86020569 seconds)
    (259/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.920704241 seconds)
    (260/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.702317839 seconds)
    (261/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.778714344 seconds)
    (262/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.763882739 seconds)
    (263/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.925433716 seconds)
    (264/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 1.986355826 seconds)
    (265/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.089864613 seconds)
    (266/309) benchmarking ("map", abs, Float32, true)...
    done (took 1.94201412 seconds)
    (267/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.989305569 seconds)
    (268/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.542612252 seconds)
    (269/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.375182687 seconds)
    (270/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.784355131 seconds)
    (271/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.091415985 seconds)
    (272/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.085929037 seconds)
    (273/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.68845523 seconds)
    (274/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.081429679 seconds)
    (275/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.775762246 seconds)
    (276/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.100925416 seconds)
    (277/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.220525835 seconds)
    (278/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.861007156 seconds)
    (279/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.7602183 seconds)
    (280/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 3.260429807 seconds)
    (281/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.871405778 seconds)
    (282/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.768718669 seconds)
    (283/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 2.963452674 seconds)
    (284/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.791716922 seconds)
    (285/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.915645733 seconds)
    (286/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.654810335 seconds)
    (287/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.160885832 seconds)
    (288/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.717027855 seconds)
    (289/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.158500247 seconds)
    (290/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.91210369 seconds)
    (291/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.521059811 seconds)
    (292/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.109432858 seconds)
    (293/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.844015379 seconds)
    (294/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.876070608 seconds)
    (295/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.138644998 seconds)
    (296/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.096689309 seconds)
    (297/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.89333685 seconds)
    (298/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.125313776 seconds)
    (299/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.799129078 seconds)
    (300/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.820796081 seconds)
    (301/309) benchmarking ("sort", Float64, false)...
    done (took 5.537494646 seconds)
    (302/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.501722793 seconds)
    (303/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.764826064 seconds)
    (304/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.992613771 seconds)
    (305/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.787892464 seconds)
    (306/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.971152071 seconds)
    (307/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.764138836 seconds)
    (308/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.766584605 seconds)
    (309/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 3.578252829 seconds)
  done (took 973.302885222 seconds)
done (took 975.054243527 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.790060755 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.781773418 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.76355598 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.785247047 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.877182737 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.810510551 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.776770072 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.767852036 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.816066457 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.815447256 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.763139715 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.810733244 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.765236888 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.765051006 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.764600062 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.781734793 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.070046856 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.790105273 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.782683847 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.777597551 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.782385217 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.763010518 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.816649932 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.810394468 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.76790355 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.770665744 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.768165977 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.784988254 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.877872812 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.769962215 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.769807691 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.778266808 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.070187407 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.787308769 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.763419119 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.785551357 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.777067038 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.777559745 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.769859879 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.79877066 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.153124774 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.796759507 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.766788482 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.765218441 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.767657529 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.772624539 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.768299698 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.774668304 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.782149066 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.783011954 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.14863783 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.814500266 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.770589694 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.765714598 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.779860415 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.76737214 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.770232888 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.783884317 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.785803598 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.783725191 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.052829068 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.797663252 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.77006399 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.785374655 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.776648953 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.184748137 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.797906372 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.773414102 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.155588962 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.808318671 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.184248541 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.810618342 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.769111596 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.781949935 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.80079193 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.070785862 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.788357861 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.767128739 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.776354567 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.766566797 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.780086175 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.783770612 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.77233173 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.76741501 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.784604089 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.814721573 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.781049329 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.767735053 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.780433734 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.787131246 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.777829006 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.780258656 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.771146265 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.765917721 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.781043909 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.77270973 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.771902282 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.771670016 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.77355947 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.782211328 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.153592465 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.818259691 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.766369451 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.765200074 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.768118989 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.784428373 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.153921583 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.800948962 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.792031354 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.818536112 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.770435834 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.056280446 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.7950983 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.786485959 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.780588562 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.77135857 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.768405089 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.056733284 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.174605054 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.817938999 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.770029765 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.768617798 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.786800856 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.771805961 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.767257779 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.075595877 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.794664265 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.787101369 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.893600966 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.783061318 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.801842303 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.768812915 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.774681618 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.819719537 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.787100824 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.802660587 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.772994677 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.788783111 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.788902524 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.768153916 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.783374472 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.784356215 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.770172989 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.778622749 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.767305808 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.821344562 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.78553106 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.786800346 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.791865645 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.894159178 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.76850592 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.058145416 seconds)
done (took 278.30157036 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.845369811 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.771573238 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.862085046 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.770298417 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.85732497 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.842194872 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.769203619 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.770102401 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.77031748 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.25572738 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.770263089 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.774872796 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.768322558 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.770451093 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.841050662 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.7720992 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.770853294 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.205835776 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.771147827 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.849848547 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.770876781 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.770667617 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.770116299 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.255124049 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.771368741 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.768258261 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.851720045 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.77193342 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.206695312 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.769630749 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.77098204 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.205278825 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.852471995 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.798934991 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.779215047 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.779674371 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.857648422 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.779388664 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.837988577 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.839304696 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.863269855 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.804690299 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.771153374 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.770314844 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.772967601 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.773394219 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.772750172 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.804400015 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.771899301 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.778372121 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.205610034 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.7772846 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.778985246 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.773272472 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.772995845 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.799767283 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.772979023 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.773881912 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.85258483 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.774803069 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.84195632 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.258818303 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.260105902 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.771955372 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.773146108 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.772821172 seconds)
  done (took 178.56584927 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.838600996 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.84959588 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.83875296 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.776032357 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.822020505 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.840964692 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.777135787 seconds)
  done (took 14.449863573 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.778798901 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.774107258 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.829958717 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.830024619 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.77392364 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.929862651 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.772549941 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.784574244 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.777595822 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.801187815 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.77483593 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.774416548 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.781789623 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.773747068 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.830841364 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.785298019 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.889825045 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.776623006 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.775405025 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.922788368 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.779272249 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.780748636 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.800055123 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.787603674 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.774922085 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.781563412 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.338975702 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.777315196 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.774218895 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.77558161 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.775738615 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.81618289 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.775646009 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.77449782 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.775605547 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.905849768 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.775284651 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.775714306 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.775379625 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.777995037 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.775125947 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.775058755 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.775304907 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.774749358 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.773798741 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.797203743 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.774180726 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.775018365 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.776063679 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.775672032 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.801280237 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.776018001 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.774492366 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.780989862 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.818288963 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.780572345 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.776553833 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.776081615 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.775816777 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.775496816 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.923438434 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.834365762 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.776324065 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.834166739 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.776765494 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.777129298 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.776437447 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.776018736 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.865098324 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.776278094 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.833422799 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.776853972 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.934367736 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.799927351 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.778217602 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.779977533 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.780987039 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.776987281 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.776693723 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.784581437 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.777836035 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.780080365 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.784970562 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.782835443 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.777416064 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.887842344 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.916402893 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.777968389 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.778850927 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.784046839 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.778361493 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.821434429 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.776449971 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.777608676 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.843587306 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.893583192 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.804661738 seconds)
  done (took 196.636594804 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.784610739 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.785373238 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.778839204 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.79370808 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.778700242 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.77877552 seconds)
  done (took 12.410932207 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.780640205 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.781170878 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.778015812 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.780199522 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.778142414 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.780606244 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.778542846 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.779389184 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.78216804 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.77778036 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.779230748 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.778734943 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.779661083 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.778858481 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.778209717 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.779397125 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.779671709 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.778253905 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.778955569 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.779563838 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.029357657 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.78037917 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.77944305 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.781139238 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.782790623 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.7799801 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.793870572 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.779639893 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.779980813 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.787441047 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.78433011 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.78032831 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.783173615 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.785106522 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.782586656 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.782908889 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.783150107 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.780645652 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.780439131 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.77997045 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.779267348 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.780461642 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.779971592 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.780451185 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.781893198 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.786330753 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.783448755 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.792874571 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.779316436 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.781403363 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.781435425 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.780247693 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.780239381 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.782781742 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.784638828 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.786163128 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.783510145 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.783772901 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.781675717 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.784459628 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.784589077 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.781167918 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.781485522 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.784434045 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.785898606 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.781187679 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.78543173 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.784131448 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.781343967 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.781620708 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.781622936 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.781849969 seconds)
  done (took 131.247629169 seconds)
done (took 535.029051798 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.063015887 seconds)
  done (took 8.77826486 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.952723635 seconds)
  done (took 8.727194629 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.198688207 seconds)
  done (took 9.915831474 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.803038514 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.8014635 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.794667642 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.780514667 seconds)
  done (took 28.914275992 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.098025194 seconds)
  done (took 8.814319014 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.800010398 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.779383133 seconds)
  done (took 15.364881264 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.940508008 seconds)
  done (took 8.656423647 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.832005214 seconds)
  done (took 8.555084581 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.797874253 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.808448218 seconds)
  done (took 15.347070181 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.784064169 seconds)
  done (took 8.500581541 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.963103065 seconds)
  done (took 9.783220566 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.798180787 seconds)
  done (took 8.57863221 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.794159865 seconds)
  done (took 8.509954144 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.825895056 seconds)
  done (took 9.541157703 seconds)
done (took 159.702324784 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.796932363 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.783904193 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.780033659 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.780469374 seconds)
  done (took 28.857021826 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.815051874 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.814989981 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.816170171 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.826715589 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.819498527 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.815084951 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.809328784 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.808659786 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.826604977 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.819390402 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.81667933 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.819602066 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.815962563 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.808068957 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.818754651 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.819100084 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.827607542 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.817601096 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.808803133 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.820696037 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.786659439 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.828736153 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.82180483 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.786153355 seconds)
  done (took 45.283854379 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.974280612 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.852753027 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.936494883 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.835017549 seconds)
  done (took 9.317207253 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.834375868 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.835328126 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.848418884 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.886368079 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.909525142 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.845247471 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.810482748 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.805544703 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.791891481 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.836889466 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.912249618 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.83218558 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.926016389 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.783568849 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.971356858 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.784206137 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.783627514 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.838648619 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.887693554 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.900808722 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.784044016 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.835958645 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.840929855 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.832760546 seconds)
  done (took 46.034850947 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.785235577 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.794035569 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.791905314 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.787408313 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.788405897 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.787016879 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.791847059 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.787070898 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.808870918 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.789190988 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.786747388 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.78632651 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.792759933 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.78674091 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.787394138 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.7994188 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.800211376 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.787498163 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.790037695 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.792931561 seconds)
  done (took 37.5401132 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.784835278 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.632012828 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.129846033 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.03703386 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.78472491 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.78585945 seconds)
  done (took 30.874709253 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.797162918 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.790128653 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.786938401 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.842467283 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.923263103 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.790000717 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.785351293 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.795151902 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.827468949 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.847223011 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.806415365 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.811159915 seconds)
  done (took 23.52353759 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.786672729 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.788002044 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.786424422 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.79769566 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.794962714 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.792691868 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.792833776 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.785767377 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.799222067 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.803017398 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.792712917 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.797092124 seconds)
  done (took 43.238345601 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.864835105 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.662291814 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.226791478 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.243585594 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.308313042 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.988716649 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.788036165 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.870021226 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.786578059 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.057424197 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.180917192 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.29575896 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.04191387 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.799297378 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.892712491 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.263255795 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.087350357 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.008265065 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.825684733 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.412483224 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.908151468 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.394250287 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.468879137 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.911047404 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.004135944 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.925070287 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.057814709 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.748567257 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.848621512 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.802921631 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.805928127 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.800227417 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.072864938 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.920427393 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.871655811 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.806184223 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.211518748 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.505464541 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.813674636 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.417218145 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.308552103 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.921316387 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.80329742 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.800481568 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.726170932 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.39189573 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.892102815 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.803604198 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.501671408 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.80148149 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.806051914 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.875569385 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.802908694 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.607839389 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.484914781 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.070429107 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.801417246 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.802648682 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.362715423 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.805481069 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.487869545 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.734843281 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.885876253 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.52158086 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.251714101 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.956251431 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.80311108 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.802599328 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.727921084 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.474252578 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.913267681 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.938673515 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.818928588 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.441809535 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.105295771 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.204065788 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.853044703 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.068427346 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.67039977 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.734683312 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.019067696 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.7513921 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.729989691 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.652681539 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.728683667 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.011213154 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.834024014 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.393898308 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.834548999 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.884110402 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.807624461 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.818201259 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.805125401 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.017268016 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.698026735 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.80334869 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.087663148 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.061579515 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.820196396 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.888907975 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.730547069 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.804210345 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.047782997 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.006516988 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.129764147 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.268824825 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.888929852 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.803837769 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.815731971 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.804499037 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.807784327 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.065060037 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.863049186 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.805368219 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.920090859 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.755628769 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.044908685 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.848416831 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.902490967 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.153343117 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.043123303 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.1310771 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.049070689 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.866912794 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.806888895 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.807525185 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.483619685 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.414773627 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.021978189 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.818380266 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.376551152 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.812226856 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.804629072 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.739565165 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.610395996 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.158556623 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 4.88498153 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.02027019 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.820918675 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.08010679 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.735407338 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.942816652 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.807583317 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.020235217 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.439846584 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.886118378 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.057327049 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.126714601 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.128036877 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.813630888 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.819768461 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.899135896 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.822801549 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.312433547 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.051870408 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.80734485 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.808165777 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.487859578 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.861018828 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.81112714 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.809455259 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.332823446 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.073751647 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.82788543 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.813507206 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.68230358 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.818570286 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.868287306 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.809691645 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.809467854 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.357703806 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.315255574 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.813756151 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.470627169 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.022517976 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.810691269 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.479838778 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.985555177 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.820324645 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.069289518 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.870474402 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.735613816 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.507683808 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.508454242 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.809221546 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.734913156 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.80775364 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.810705015 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.813190764 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.994513585 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.077066152 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.856444735 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.423052589 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.909333973 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.813228773 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.810514949 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.808310415 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.326325729 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.842595776 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.364670361 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.931449099 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.936900003 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.819868524 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.734473048 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.80971981 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.810677121 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.809399094 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.756418881 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.859524332 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.424077682 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.006447143 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.058128832 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.213986823 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.817374349 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.476839112 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.919928587 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.824480102 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.105053443 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.422454613 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.920464658 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.882403811 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.81550855 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.474056132 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.538613985 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.372780118 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.093540576 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.117223494 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.145266365 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.241624727 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.141585146 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.896696628 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.036206441 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.330105806 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.865692201 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.898125417 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.745772589 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.824641644 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.444012955 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.214232316 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.821850677 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.026329583 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.091832845 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.172119986 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.939160571 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.013776137 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.840130665 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.652317294 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.847212904 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.346501247 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.826831723 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.185645531 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.009212745 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.892074707 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.079927702 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.887419147 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.810719422 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.141751254 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.849450407 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.512832457 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.162875198 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.264284141 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.322837139 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.031224837 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.818651378 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.250441437 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.152192465 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.049260296 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.940943262 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.738331001 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.8171966 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.817813955 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.824447052 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.78685362 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.676998716 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.054408997 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.818349631 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.038142827 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.992274133 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.179194695 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.714915525 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.816968791 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.814506581 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.053633506 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.533550014 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.97697824 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.172173628 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.393756842 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.819795128 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.739740684 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.738941298 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.51364679 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.820526108 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.77701002 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.016989331 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.912743978 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.493420707 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.240433208 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.132063323 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.057433712 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.825518521 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.077544166 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.085499953 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.304759992 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.833923199 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.910525886 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.090334219 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.513594507 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.027456029 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.039721253 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.345408626 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.029829977 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.251768367 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.78161206 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.812996975 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.020385104 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.029469056 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.159748114 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.982745335 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.524240317 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.822464534 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.172915215 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.872634351 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.159890848 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.995879127 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.899932444 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.821199238 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.89064026 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.817912475 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.820679486 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.820239996 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.827719826 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.19265271 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.928081087 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.827395215 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.891311774 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.809920134 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.381813222 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.823665595 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.078764904 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.179853721 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.136163534 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.876994182 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.815585846 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.824402756 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.74240473 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.946002648 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.256925336 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.087991585 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.935719157 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.948963058 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.835977341 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.120050723 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.110451637 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.132575947 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.089506889 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.699973046 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.487302677 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.943214194 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.033484508 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.822611036 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.01928638 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.026655139 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.112242861 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.375167512 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.996068147 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.016570378 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.088943638 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.17556778 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.818103645 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.394571908 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.8285284 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.219075075 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.849468517 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.151583134 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.071414574 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.820713149 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.938837155 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.819986252 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.015814856 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.268198866 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.44492682 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.159145936 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.675427135 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.82074082 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.085051036 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.137743422 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.12073709 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.895742698 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.823883038 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.513631761 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.950945229 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.709527233 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.035341062 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.818555486 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.0216984 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.528525741 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.822295649 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.0844129 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.117753322 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.819699035 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.699714365 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.822071978 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.821548404 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.032347376 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.025163835 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.060337852 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.822727839 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.827527163 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.625893709 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.085513405 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.879100493 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.745548818 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.821466911 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.865121577 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.046911218 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.83771155 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.334550918 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.521374904 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.092597898 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.723214576 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.837822643 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.26656687 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.196293645 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.139160364 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.342252469 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.032707636 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.369601951 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.694729797 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.202706612 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.823022515 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.257477854 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.205772372 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.821971421 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.364269637 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.938496616 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.083585843 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.146134487 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.841277738 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.513814628 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.846303017 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.034344549 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.176092757 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.751654941 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.823128252 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.868714798 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.82165234 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.830388969 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.830752024 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.721697242 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.292707882 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.666587288 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.378871749 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.823827667 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.827860797 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.176178249 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.386140935 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.933941104 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.838301574 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.826011658 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.513698431 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.106076529 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.064612875 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.364782875 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.922293108 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.823455241 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.822426484 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.742186051 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.006025122 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.011160433 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.098444171 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.210795692 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.935321357 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.824638353 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.030023249 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.025298833 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.213142052 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.949753003 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.001365407 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.943367418 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.763230593 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.529110125 seconds)
  done (took 1634.531967165 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.827442421 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.867626889 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.91835475 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.934646808 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.893545315 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.866326234 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.917248798 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.870790323 seconds)
  done (took 56.851879066 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.822977598 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.988349433 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.827021656 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.82421312 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.834988709 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.823904537 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.980800807 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.835621395 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.827255158 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.828581718 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.823995157 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.835570315 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.105361629 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.844873044 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.823210956 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.824971748 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.82888531 seconds)
  done (took 73.514183074 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.824724844 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.083184581 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.859215764 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.828058758 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.800522193 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.826015568 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.89517555 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.860152168 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.831544962 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.079799148 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.12280868 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.841776397 seconds)
  done (took 89.609870736 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.836742956 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.826252631 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.826816887 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.825910933 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.826215262 seconds)
  done (took 10.905713829 seconds)
done (took 2131.888688225 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.062185767 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.020244097 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.066213619 seconds)
  done (took 5.843219739 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.964635886 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.015069093 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.128119374 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.13454819 seconds)
  done (took 10.001102898 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.123694379 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.188577454 seconds)
  done (took 6.068140016 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.143203994 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.855323608 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.196730599 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.827185939 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.827195765 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.828981483 seconds)
  done (took 22.244218823 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.824909024 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.825440981 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.825297895 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.824764177 seconds)
  done (took 9.056889497 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.825442437 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.547580923 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.824508733 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.835275911 seconds)
  done (took 20.788818496 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.971416616 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.939939232 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.967279351 seconds)
  done (took 7.634285975 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 2.045900872 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.62009307 seconds)
  done (took 6.422225608 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.984927579 seconds)
  done (took 3.741709524 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.853364819 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.094763416 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.312635685 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.347920692 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.410794994 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.647647429 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.131598726 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.048222238 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.264914227 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.270716581 seconds)
  done (took 24.139315327 seconds)
done (took 130.955011298 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.159225336 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.856695132 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.022163437 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.17651625 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.053504755 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.023251799 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.050673986 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.163044757 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.852085986 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.842470254 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.176424613 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.060783158 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.000142243 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.846998637 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.002093665 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.847023899 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.04864708 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.179767422 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.862552508 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.080709615 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.061804038 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.821635585 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.020639784 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.839661139 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.054491552 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.980461182 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.368144353 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.846861952 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.00119127 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.38021245 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.979958418 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.217933693 seconds)
  done (took 166.635932479 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.827984973 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.828159038 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.825870618 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.827224923 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.343905089 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.829274805 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.826944198 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.826945701 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.239022887 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.231251354 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.828180289 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.332881348 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.830917532 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.827488752 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.829495628 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.82792692 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.386226538 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.828940523 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.829088144 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.827164579 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.828687368 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.166626652 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.828935995 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.176455994 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.39186024 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.831692141 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.828728663 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.828510352 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.827469478 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.827792526 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.829522363 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.827696022 seconds)
  done (took 207.909418776 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.827796444 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.829323611 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.828658711 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.829095365 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.829663823 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.83040948 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.831496471 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.828435644 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.467346136 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.45774661 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.829847527 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.830880762 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.833007669 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.829314014 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.830850611 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.828871781 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.829914133 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.828081256 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.830132681 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.830218716 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.831130395 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.542480845 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.834692989 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.603326885 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.830290951 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.829208252 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.829096546 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.830031252 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.833754408 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.831710538 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.830429154 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.830481458 seconds)
  done (took 219.07939646 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.077688884 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.831695403 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.832183447 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.750795806 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.831270218 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.832585538 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.80885435 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.078508546 seconds)
  done (took 18.809786891 seconds)
done (took 614.202483673 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.202995599 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.048141309 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.009391453 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.855419532 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.108127765 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.897770043 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.849954126 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.912894999 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.667132278 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.928910209 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.488719986 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.876319968 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.580974178 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.882269964 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.970541746 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.90717821 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.452451277 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.548937574 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.025400064 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.920759929 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.026650262 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.760158181 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.935319546 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.70623368 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.615015366 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.81712188 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.894153035 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.451060506 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.864164751 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.00679393 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.50561163 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.121711786 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.870646322 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.850530217 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.90528114 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.88446765 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.076885061 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.868521058 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.97830856 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.551031903 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.917051582 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.571619663 seconds)
  done (took 101.076419577 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.844906275 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.838397975 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.838664665 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.837457361 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.849268978 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.839477904 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.839365451 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.83909926 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.839095875 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.839067967 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.83899782 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.848092125 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.838600901 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.847868294 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.839446879 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.839392035 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.838770577 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.849168669 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.839244907 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.839242112 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.83938128 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.839358224 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.834158569 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.83927902 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.838687359 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.840440202 seconds)
  done (took 49.632444311 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.833654566 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.985959036 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.07668688 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.854712992 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.834057383 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.838493076 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.8518181 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.840794778 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.838528474 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.837101453 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.933938979 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.841869262 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.852718488 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.075674504 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.851292146 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.834572691 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.835085341 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.836203565 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.99348995 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.851853506 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.854703389 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.841309753 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.855140745 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.848556134 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.837977984 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.837025942 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.839512843 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.306135786 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.846059377 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.935763537 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.881530332 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.85897106 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.253004237 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.086941835 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.891035375 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.845642587 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.836875913 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.938791384 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.844217552 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.838299395 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.853913377 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.842622094 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.076940335 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.379416544 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.850525744 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.836187585 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.316810035 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.948548637 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.878432295 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.845534919 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.078495156 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.853811333 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.838886074 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.837910758 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.873552426 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.843163587 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.836882665 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.20316164 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.849873517 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.855334817 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.843123478 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.838420021 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.000414539 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.846113078 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.988767666 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.846872852 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.844300882 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.838377952 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.077386616 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.855291577 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.387016269 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.852690711 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.838560314 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.936672803 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.994818852 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.341604696 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.85136847 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.001581528 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.271580363 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.861637314 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.846610555 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.2966772 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.865606517 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.845596126 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.840665647 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.840324398 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.83973282 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.880279957 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.854762686 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.298800002 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.390596997 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.220353472 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.865687352 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.854022066 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.839123645 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.20219973 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.847153523 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.839583545 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.070431065 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.397546926 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.854706333 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.846072367 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.369240539 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.855391992 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.857934138 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.847630185 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.085547702 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.855441123 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.881710008 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.840346642 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.845861209 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.842210637 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.858429637 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.84763308 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.840583261 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.368431531 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.95925853 seconds)
  done (took 228.755039495 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.838952506 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.844497048 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.839252443 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.843398067 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.839576145 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.841579198 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.839437141 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.839338546 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.839729656 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.83893571 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.838043273 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.840298813 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.84125358 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.842699876 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.846468625 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.842476927 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.442753729 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.840025876 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.839980907 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.83900235 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.482459297 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.845619861 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.839034915 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.840430645 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.840927493 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.841621541 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.84779458 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.844521908 seconds)
  done (took 166.574621928 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.841585761 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.952795746 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.861338422 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.870316245 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.84827478 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.841921316 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.93852868 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.862014825 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.847262247 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.842005583 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.84264304 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.900662684 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.853066904 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.939413375 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.876013798 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.948808877 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.948990674 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.852485536 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.843337455 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.841964732 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.870609279 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.851180041 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.902197152 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.965776266 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.861312055 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.954221405 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.862980087 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.842861033 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.843009056 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.953851419 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.863653153 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.903611932 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.871569289 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.860573453 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.960166336 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.960165528 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.949938125 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.950160577 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.853169769 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.843703901 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.843493745 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.845360981 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.955735294 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.864095354 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.843619114 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.958773174 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.863059094 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.843109924 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.844603395 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.843672173 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.857263889 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.861507785 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.908438639 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.971895254 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.880130103 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.866696875 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.940833512 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.971388791 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.845249125 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.943604864 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.854407616 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.955985385 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.864369285 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.845538961 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.846345829 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.847409344 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.873306828 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.94972515 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.952611987 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.855224358 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.941651433 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.884173987 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.852292268 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.844972871 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.845613016 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.956756065 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.962074452 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.884637619 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.88081141 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.874389977 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.854459811 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.84464274 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.84709084 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.861743184 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.850227974 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.959801271 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.963797139 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.854746813 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.845531075 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.846340074 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.84557245 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.870863427 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.964962728 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.882327981 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.951570539 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.914297528 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.91743975 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.858144936 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.860496218 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.850486265 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.906509468 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.860083739 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.859736996 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.141667708 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.906888226 seconds)
  done (took 200.098620773 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.21543923 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.897268973 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.901828654 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.165090482 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.204768425 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.740746005 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.890056513 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.89299184 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.917135656 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.07608093 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.970492011 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.915273607 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.879760256 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.867823977 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.891011513 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.913303401 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.903596875 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.22006283 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.111878222 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.004305273 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.882468752 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.196750222 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.207017396 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.496449639 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.94077689 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.277188496 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.454904909 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.026728494 seconds)
  done (took 60.846021706 seconds)
done (took 808.746709418 seconds)
SAVING RESULT...
DONE!
