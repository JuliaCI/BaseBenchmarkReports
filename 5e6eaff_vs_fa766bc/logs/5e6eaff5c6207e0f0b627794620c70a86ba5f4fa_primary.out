cset: moving following pidspec: 14287
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.305736168 seconds)
loading group "string"... done (took 0.590548526 seconds)
loading group "linalg"... done (took 6.814203349 seconds)
loading group "parallel"... done (took 0.159783219 seconds)
loading group "find"... done (took 1.1100456 seconds)
loading group "tuple"... done (took 1.79216319 seconds)
loading group "dates"... done (took 1.311944117 seconds)
loading group "micro"... done (took 0.231634608 seconds)
loading group "io"... done (took 0.943964415 seconds)
loading group "scalar"... done (took 37.805709863 seconds)
loading group "sparse"... done (took 12.704959547 seconds)
loading group "broadcast"... done (took 0.98472968 seconds)
loading group "union"... done (took 12.964816014 seconds)
loading group "simd"... done (took 4.576454092 seconds)
loading group "random"... done (took 9.20676439 seconds)
loading group "problem"... done (took 2.096785461 seconds)
loading group "array"... done (took 22.448173693 seconds)
loading group "misc"... done (took 1.894167866 seconds)
loading group "sort"... done (took 3.577520239 seconds)
loading group "collection"... done (took 18.513714678 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.523068842 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.144641258 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.135037354 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.138184015 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.171777545 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.131390944 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.142692252 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.101973473 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.047874957 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.15438963 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.13329773 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.463900355 seconds)
done (took 5.068377322 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.204308841 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.08711354 seconds)
    (2/2) benchmarking "String"...
    done (took 0.099254064 seconds)
  done (took 0.908809804 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.067510566 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.123783431 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.067653008 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.084438281 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.068893387 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.067030445 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.084370738 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.06869429 seconds)
  done (took 1.296425883 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.075690783 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.069617303 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.086139778 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.069351049 seconds)
  done (took 1.032759419 seconds)
done (took 4.249863457 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.828771882 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.256412608 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.183386908 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.458595514 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.150981454 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.186177606 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.670609394 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.329869874 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.20699217 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.085051296 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.123730858 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.362397815 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.130922811 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.664711162 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.075584379 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.105135055 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.165631609 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.415301168 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.069206782 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.082373128 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.103548684 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.128138772 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.100197165 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.089837783 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.156385409 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.082584769 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.149017498 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.083721759 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.082452345 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.229419547 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.189473912 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.675109882 seconds)
  done (took 10.395820756 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.099271054 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.115850514 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.070373852 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.142967918 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.098394086 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.087456194 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.073152879 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.068652483 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.105844436 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.146337839 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.088510877 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.117785419 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.065482609 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.086626188 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.086548417 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.224498822 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.079428221 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.099307957 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.070597322 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.093351482 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.109391893 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.094521015 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.079894869 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.095632535 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.130861694 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.194790032 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.09815238 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.111796646 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.068129479 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.095958023 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.129146245 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.127354561 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.065483523 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.084555149 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.125868165 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.110665328 seconds)
  done (took 4.48829493 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.03976597 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.159858622 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.093779344 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.153108017 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.069335133 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.127857817 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.082255289 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.087739621 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.235137731 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.161039648 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.470537391 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.131598321 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.100537552 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.071044627 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.068075137 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.085514395 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.515652856 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.14552104 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.103076724 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.102609371 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.07442945 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.085043257 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.371818449 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.068003566 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.066204402 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.083146513 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.058592915 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.140520409 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068572839 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.138978305 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.106744179 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.068356781 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.117944197 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.176756328 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.088644703 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.150680786 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.083360651 seconds)
    (37/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.107359141 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.065764196 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.169372377 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.073976555 seconds)
    (41/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.083220009 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.066902798 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.081912856 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.10233804 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.122690924 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.083200075 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.067592729 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.176154377 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.066901539 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.101415086 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.825523433 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.16427676 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.076487968 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.06550821 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.279110202 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.083918382 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.082909708 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.064505313 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.239052281 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.149426717 seconds)
    (61/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.063624816 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.083596413 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.067248433 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.064921857 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.084462254 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.364765384 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.067688912 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.737277423 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.070590101 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.079668622 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.069912874 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.06639673 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.092070899 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.073539453 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.100639223 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.067133218 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.067778176 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.082893482 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.066463459 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.066947586 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.101112643 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.203918707 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.065952525 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.083985023 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.065036027 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.101321281 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.097463603 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.085140646 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.065682899 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.114084942 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068847173 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.066846341 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.118130149 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.06679834 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.101203709 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.084732508 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.113771311 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.081698793 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.104858732 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.067913038 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.117193513 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.071153477 seconds)
    (103/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.078932101 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.098557628 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.093406331 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.066922365 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.147682671 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.064137705 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.081520748 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.06676674 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.084452223 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.067665225 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.067911722 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.096589021 seconds)
  done (took 20.707758932 seconds)
done (took 37.363407175 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.300992645 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.095513035 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.078058893 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.09612972 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.095887488 seconds)
  done (took 1.47713165 seconds)
done (took 2.258185715 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.121941665 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.117761242 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.064047878 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.111736617 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064552038 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.117131512 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.098035493 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.097445363 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.115601685 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.064809254 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.095660516 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.080470844 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063910801 seconds)
  done (took 2.024663323 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.08445397 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.085640501 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.087232258 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.084535973 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.065281353 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.100123539 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.082011216 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.106931309 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.083027 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.073344471 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.083430437 seconds)
  done (took 1.708845342 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.084791102 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.085904704 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.087124924 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.084317728 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064809238 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.100552934 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.082156263 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.105026969 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.083481076 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.091237705 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065928915 seconds)
  done (took 1.712769921 seconds)
done (took 6.216065648 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.080682098 seconds)
  done (took 0.851720113 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.669657823 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.913882106 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.079192464 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.131860047 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.199256317 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.139139649 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.337098243 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.087007343 seconds)
  done (took 9.528193182 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.1033229 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.087493911 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.069460114 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.087042838 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.069493 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.073582697 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.085430161 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.073211232 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.088290784 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.07307453 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.073298671 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.086529749 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.07262741 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.088052126 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.069972697 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.087206883 seconds)
  done (took 2.131259835 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.093869943 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.109846808 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.074947294 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.094464231 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.073234467 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.071363491 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.072829429 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.091688841 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.071035368 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.08868071 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.07486801 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.089297943 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.072290269 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.080971522 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.073790041 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.09093708 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.070685033 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.089279439 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.07502616 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.090548214 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.075682123 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.0651373 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.089006581 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.075767222 seconds)
  done (took 2.827866957 seconds)
done (took 16.116812823 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.114244625 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.089690836 seconds)
  done (took 0.980943991 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.083331954 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.101674624 seconds)
  done (took 0.967674306 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.084811818 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.082335848 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.091789197 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.093427894 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.066414222 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.081052881 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.103266929 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.065938087 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.066448836 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.081861135 seconds)
  done (took 1.601116608 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.071233405 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.097095482 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.072472868 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.099758021 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.07557168 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.079907518 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.073214507 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.083925031 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.078167815 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.078324888 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.070660971 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.098573223 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.071300782 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.100405198 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.072939185 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.083809762 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.071533739 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.084942073 seconds)
  done (took 2.246689791 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.067115637 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.068744946 seconds)
  done (took 0.914958525 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.068848701 seconds)
    (2/7) benchmarking "second"...
    done (took 0.065776593 seconds)
    (3/7) benchmarking "month"...
    done (took 0.084627931 seconds)
    (4/7) benchmarking "year"...
    done (took 0.068555425 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.081612084 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.06447793 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.081616348 seconds)
  done (took 1.298049813 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.416607788 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.112726264 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.33707877 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.07305192 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.102056079 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.272019667 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.065172765 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.070316291 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.089702039 seconds)
  done (took 2.361696031 seconds)
done (took 11.155614755 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.081558423 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.087527062 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.112398884 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.411173272 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.092093649 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.081074666 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.132720959 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.222013004 seconds)
done (took 2.006444451 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.130437102 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.61742308 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.402335741 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.216132427 seconds)
  done (took 2.025238387 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.337574672 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.10939589 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.060660121 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.085411472 seconds)
  done (took 1.388652654 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.067935611 seconds)
    (2/2) benchmarking "read"...
    done (took 0.070929228 seconds)
  done (took 0.927863012 seconds)
done (took 5.261064792 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.068073474 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.067855089 seconds)
    (3/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.103825771 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.066164563 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.085860658 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.06475611 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.065618529 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.085909949 seconds)
    (9/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.067727222 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.067786771 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.085558214 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.071081869 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068523381 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.081924536 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064940323 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06790462 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.081506304 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065053652 seconds)
    (19/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.065594164 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.081420731 seconds)
    (21/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.065189131 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067360879 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.081131834 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.06596805 seconds)
  done (took 2.586940441 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.085956718 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.084451185 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.073545836 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.076804423 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.088307685 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.073518369 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.089785956 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.069330051 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.089640177 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.069938503 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.088716224 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.072350112 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.070804246 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.088289475 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.07034079 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.088601676 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.073791579 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.084739334 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070087127 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.08867041 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.073924334 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068909748 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.088979461 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.073340883 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.088651659 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.072606045 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.088218172 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.068853448 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.089356695 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.072837946 seconds)
  done (took 3.177530727 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.071583555 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.065401976 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.082501302 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.071858069 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.065899695 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.083462148 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.065433408 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.065611623 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.083386192 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.065623366 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.067390329 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.082821896 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.065941874 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.083253966 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.066323095 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.069305715 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.097580698 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.066596195 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.065643026 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.083144933 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.069004145 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.06526099 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.083711568 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.065685635 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.082045911 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.065285105 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.066423203 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.081944436 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.066559726 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.065610289 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.085385119 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.06841659 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.066179675 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.089069567 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.068851451 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.065127637 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.085417695 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.06523682 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.065188919 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.081924846 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.065465746 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.081116974 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.065485749 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.072267288 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.082770964 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.066794976 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.065618206 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.084277847 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.066507748 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.068286333 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.082167187 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.065860919 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.08389723 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.066941972 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.069593488 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.081507208 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.066050241 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.065347714 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.083144119 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.065739582 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.064937685 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.08198228 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.068685596 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.066304793 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.079323478 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.070662911 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.083427275 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.067888539 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.066972921 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.086043096 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.067475856 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.078821372 seconds)
  done (took 6.050563351 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.093676515 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.106652662 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.067242576 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.084218225 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.064392409 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.082912252 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.069014334 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06745805 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.083673724 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.071925132 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.082586287 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.068006052 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067750742 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.094741095 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.067351637 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.083998616 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.071989578 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.063903337 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.191293213 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.069490502 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.082916681 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.069582433 seconds)
  done (took 2.606252176 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.174557329 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.07230411 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.125264048 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.074414206 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.068034273 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.094263112 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.071838927 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.072146475 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.090553362 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.070240382 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.087242509 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.072531563 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.08657823 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070883687 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.08716674 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.070326609 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.088412888 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.070421955 seconds)
  done (took 2.348488862 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.078835996 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.068168011 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.105146818 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.067970021 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.085631818 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.070273427 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.090169303 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.076811583 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.087585036 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.068342012 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.077023676 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.087523014 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.070711265 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.085528578 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070464949 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.067492936 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.087301714 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068645716 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.094568455 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.07403498 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.089684394 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.077154546 seconds)
  done (took 2.553413521 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081388915 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.070815824 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.102905513 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.07139259 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.081019494 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.06708964 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.089703121 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.068167161 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.072743245 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.086484272 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068567987 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.083623696 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.072026052 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.068947926 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.088710894 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068855105 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.086701287 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.068608303 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.070065372 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.081379595 seconds)
  done (took 2.352735961 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.090375381 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.0863931 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.069654798 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.095365454 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.070466801 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.086421365 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.078531533 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.087149258 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.070293304 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.107188376 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.070141675 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.069451155 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.095888106 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.092081669 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.070102422 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.094492776 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.07850805 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.094841336 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.069956334 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.086333869 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.090706035 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.086386514 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.078427011 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.086916799 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.070298185 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.08633432 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.069748588 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.092560837 seconds)
  done (took 3.127080732 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.068995222 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.068197497 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.082393987 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.065013495 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.065812834 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.082312172 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.064961681 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.065956648 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.084555296 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.065213573 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.068429079 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.084401061 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.067630913 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.068258337 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.084588463 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.067612792 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067747649 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.082849417 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066233178 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065153893 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.084784672 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069348559 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.067382819 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.084506111 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066319767 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.084803271 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065681435 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.065990504 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.084486394 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.065866561 seconds)
  done (took 2.981995477 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.077331671 seconds)
    (2/2) benchmarking "in"...
    done (took 0.074845065 seconds)
  done (took 0.960528393 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.065725795 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.0833045 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.082357842 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.072525508 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.089670588 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.068779275 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.07574086 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.089965262 seconds)
  done (took 1.437234402 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.083281775 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.079883581 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.087229586 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.081370676 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.094171829 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.083741843 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.154071782 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.084477377 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.0736046 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.064384776 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.096899843 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.0662385 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.089366282 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066999554 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.073021853 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071973589 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.062900237 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.092992738 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.069549762 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.065569972 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.087857126 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.077800365 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.087498175 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.064411089 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.068985647 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.107264807 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.095920006 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.068005564 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.072484275 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.093542155 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.074734221 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.078995835 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.068655021 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.069166575 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.083949725 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.078360634 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.101527926 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.071627475 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.094595122 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.070359149 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.098501315 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.063284166 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.073455024 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.092356773 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.078892339 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.0861782 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.069056985 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.064206891 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.083579996 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.071195978 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.063737392 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.086402818 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.06430472 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.093135981 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.072637422 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.081423882 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.085336663 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.070531591 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.08784518 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.07139592 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.072807616 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.084806135 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.06935218 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.082363059 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.076859587 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.070793364 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.092173466 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.062639463 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.07770321 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.065035398 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.076221399 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.105311589 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.072143769 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.065817277 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066320497 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.084245936 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.072069557 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.0689181 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.091084155 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.074563149 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.083269429 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.073197692 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.090522376 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066820182 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.069044524 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.091442487 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.065381628 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.085639701 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.064500068 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.099387723 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.06569716 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.064998363 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.081020625 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.077341803 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.0867569 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.066220043 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.06524297 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.090503405 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.061182385 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.083766464 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.068253053 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067539619 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.094024453 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.072324442 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.089147462 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.075730813 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.090842453 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067041726 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.069352638 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.06253469 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.066792761 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.085443979 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.07490493 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.061835642 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.08805776 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.069300394 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.085759092 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.076952054 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.065546116 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.085138432 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.075823969 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.090368068 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.067250804 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.065377537 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.088136914 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.068307571 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.087814949 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.075004387 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.06492536 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.079088669 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.062355473 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.08660296 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.067119525 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.070033945 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.088763842 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.070066744 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.078229076 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.064936918 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.088760635 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.076818982 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.06650597 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.084373745 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.073200375 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.084984816 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.066310738 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.072569203 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.0853245 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.066638788 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.071724037 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.066707013 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.061611707 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.090986662 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.071460503 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.084644943 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.07173899 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.072563831 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.088446652 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.06983459 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.084401047 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.077064133 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.086795792 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.067828428 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068708057 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.084660486 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.080093123 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.070192089 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.081463705 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.065931471 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.095017639 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.067078989 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.084467744 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.067095179 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.070158068 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.085128125 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.065160756 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.066214216 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.08551819 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.077615227 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.088025276 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.067614206 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.089294336 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.077849219 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.065939968 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.068007206 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.06528934 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.086352025 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.067761225 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.092832983 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.072128437 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.071826921 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.086326528 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.064131338 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.089187329 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.074341954 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.066477556 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.081038971 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.066716748 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.070330661 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.071254388 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.089002746 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.0680714 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.065476475 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.085162069 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.070081363 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.086482889 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.066277307 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.066119107 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.090167332 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.06621487 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.092312941 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.068681218 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.096596953 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.07053073 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.062154303 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.086744948 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.065812092 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.089287469 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.062168315 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.065452748 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.083284269 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.068556697 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.065857726 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.08638259 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.062134687 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.090657055 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.074805766 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.06809037 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.085573656 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.069070782 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.09261064 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.070566004 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.071527458 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.089892674 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.07457838 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.096151062 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.067821743 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.072555994 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.078544027 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.067108756 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.082562158 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.07513042 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.066984982 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.086665515 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.068120637 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.08354645 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.071787732 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.096436801 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.076312793 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.062765339 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.088727741 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.06760219 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.067045732 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.081766165 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.07351814 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.089613005 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.069733823 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076472497 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.086841555 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.070245125 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.089779552 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.068471025 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.06958096 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.088328024 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.072070747 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.087377107 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.07083729 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.067576463 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.089543674 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.068099462 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.083801358 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.070801283 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.068141867 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.086648082 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.074446658 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.084876061 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069060349 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.071555551 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.086859129 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069670539 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.06836086 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.085859877 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.070915526 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.086859944 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.069013165 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.070625563 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.081401868 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.0758883 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.084958113 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.075717723 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.068013324 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.083071071 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.076410488 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.088289977 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.07504746 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.086502058 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.069782759 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.071044492 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.086227861 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.072021462 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.09282309 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.066044092 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.079244848 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.093275789 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.06831831 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.087057315 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.06787247 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.068377774 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.064438849 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.068022221 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.08827641 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.069021557 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.068404483 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.091469048 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.071471782 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.068399414 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068752558 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.068628864 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.088337242 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.069938924 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.062902045 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.085883924 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.068821369 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.086149703 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.079159954 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.069316071 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.086869215 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.068751974 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.087288045 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.066553608 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.064012833 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.093042945 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.07682524 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.085134916 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074371073 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.082980919 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.069025455 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.094702155 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.060785139 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.064893659 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.082533224 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.065571909 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.074283764 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.084759108 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.07591812 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.084162976 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.065862997 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.063602786 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.084358244 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.065809845 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.060879029 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.081853211 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071038751 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.083376841 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065654287 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.067652759 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.085927892 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.068209365 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.09384955 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.066686606 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.067336592 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.084141983 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.064370438 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.082975377 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.06564367 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.070126881 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.08456486 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.064677714 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.063893548 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.082864191 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.067975947 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.085513399 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.066515796 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.068534391 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.089898564 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.06713054 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.086251405 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.070578628 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.064242451 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.086893843 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.067260637 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.083810892 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.066115687 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.07054893 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.087422365 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.068965597 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.092612904 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.067252564 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067952567 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.085228616 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.065335372 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.083848738 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.066778444 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.067924059 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.084000259 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.069169662 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.091564475 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.065286302 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.070289968 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.084722817 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.067843742 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.090577439 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.068157458 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.07008932 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.090792171 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.067814446 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.085827693 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.075018427 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.070915894 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.087215968 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.068390523 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.085870498 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073165747 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.083037211 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.072805688 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.06712358 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.084568298 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.069275358 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.064438758 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.084096417 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.067794213 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.083352547 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.072633467 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.067311208 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.083665132 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.066516775 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.081980588 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.067363569 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.070389724 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.090995038 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.069609333 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.086945349 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.062536491 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.06459353 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.085224987 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.065046567 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.068627452 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.086496374 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072457932 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.086464793 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.067089576 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.065413757 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.093000044 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072342076 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.087715685 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.065534852 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.070236791 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.085126506 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.069293249 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.085274142 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.067164287 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.068229771 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.088083442 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.069002164 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.083548137 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.074599344 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.07006854 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.085614935 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.068672565 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.084820052 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.0670084 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.062263503 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.084945885 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.069196255 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.08922038 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.069243129 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.06766801 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.094588219 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.06479139 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.084269909 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.070973772 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065825242 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.069420744 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.061199934 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.088229966 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069619804 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.068591277 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.081543825 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.068705488 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.066227294 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.089547978 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.068188127 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.081774898 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.080115096 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.09558739 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.071686129 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.068003514 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.085837593 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.064188379 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.063294438 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.085946038 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.070449488 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.088388014 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.079146751 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.067314298 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.086107392 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.064992617 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.085878675 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071684305 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.07120041 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.083181563 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.064566004 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.06751349 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.090152197 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.073583564 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.083255834 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.06738703 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.069437752 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.086335902 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.066052357 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.088704705 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.064224523 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.070727606 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.096784004 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.06783817 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.084878762 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.073843521 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.092255268 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.068630666 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.062177912 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.085263942 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.070490044 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.084738286 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.068152139 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.068329954 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.100604209 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.069718134 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.083981059 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.066235561 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.069400138 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.065276746 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.073677432 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.087849255 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.068044306 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.088747299 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.069484828 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.076733069 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.088146419 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074856099 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.08718377 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.070810232 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.08298719 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067587511 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.065758212 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.083764505 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.068600212 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.067435433 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.090812094 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.075623773 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.083835473 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.077657361 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.09323542 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.069501248 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.062917881 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.083995381 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.066488085 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.080068683 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.068857435 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.065582957 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.064053299 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.063804569 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.064274036 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.087596246 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073352169 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.085539211 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.067972228 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.066888062 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.078599893 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.069475144 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.086147671 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068196752 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.064513243 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.085130357 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.068303744 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.070847892 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.088250504 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.065069794 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.08660796 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.069278091 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067761444 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.080777533 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.073490119 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.083260555 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.068813055 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.066903329 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.084632132 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.068503922 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.069300184 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.090365749 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.068201159 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.086055188 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.070660908 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.086858167 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.064581664 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.064948121 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.090086966 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.065369156 seconds)
  done (took 46.268944589 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.100793065 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.081256176 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.062906265 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.062974759 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.093166852 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.0634352 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.080948528 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.063930189 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.080748559 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.066177896 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.062279518 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.080411 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.072602855 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.096183984 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.075242488 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.085875198 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.062419264 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.081131282 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.062703491 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.062867064 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.089411835 seconds)
  done (took 2.440892803 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.077006461 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.072561614 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.072959385 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.075073626 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.067168154 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.09437847 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.074172245 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.090014867 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.076647503 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.086490592 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.076803531 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.089415877 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.067744375 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.085831293 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067674455 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.089851512 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.076799821 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.086568869 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.071623795 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.091267329 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.071800628 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.091549771 seconds)
  done (took 2.603836626 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.068625215 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.067549714 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.086779988 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.062217889 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.065788167 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.079337241 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.07084194 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.064068675 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.075830688 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.063914233 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.085713456 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.065555769 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.067869421 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.080382476 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.066743304 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.064190915 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.129621433 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.087630842 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.066136292 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.066480082 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.060250703 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.066087437 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.082592421 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.062433032 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.065481321 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.088339561 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.067469427 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.082475327 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.06645258 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.065803672 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.084585342 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.065173792 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.067549421 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.084911276 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.0659828 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.065101281 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.084254106 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.066551403 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.079725145 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.064302795 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.067232401 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.080737847 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.066791426 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.067346169 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.08275863 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.064328868 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.085977814 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.066464633 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.062672893 seconds)
  done (took 4.419562735 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.082659901 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.130272045 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.069233021 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.090633782 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.102934591 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.075870572 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.091118117 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.10953361 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.065480415 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.066409994 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.105480054 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.083802748 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.066813526 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.094357842 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.072102092 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.087996701 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.069667339 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.066621307 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.091192425 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.067534254 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.090979374 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.075759625 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.100739956 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.100806698 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.071441875 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.084795096 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.067653469 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.072832276 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.100399115 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.09179041 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.073701458 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.092768301 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.083574411 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.093566046 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.068369352 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.089421083 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.085581897 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.067152004 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.068535732 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.085445839 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.070496505 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.07255803 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.094064247 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.103818765 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.069611816 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.09203997 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.068205994 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.066102418 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.07879665 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.068509004 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.097357318 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.102701176 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.072101632 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.085273497 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.072496382 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.100053063 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.067891022 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.082195205 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.071179698 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.099320541 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.065123674 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.071162497 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.100397408 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.088600021 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.075351095 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.1010505 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.072018024 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.089257311 seconds)
  done (took 6.660629574 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.078136059 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.094678993 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.084026221 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.103181308 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.075738889 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.073441694 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.094907338 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.075506708 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.094101092 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.081530788 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.09363651 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.116316209 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.071094222 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.096977206 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.07454306 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.093396961 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.074146088 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.091612409 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.074168225 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.092507192 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.075529797 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.102213677 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.094385096 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.083963117 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.099539121 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.068819525 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.094802529 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.075270771 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.10310442 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.09408972 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.083167459 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.094091973 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.076125321 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.1036154 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.08133956 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.093271997 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.065497743 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.092295667 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.073763738 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.073149282 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.068421544 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.104589073 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.093801095 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.070711182 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.093816064 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.075038192 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.10208113 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.082842025 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.096968281 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.09912117 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.075614723 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.102435199 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.075158493 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.094709081 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.103162696 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.109735119 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.102519968 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.103108148 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.076109636 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.103248362 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.102771889 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.090025778 seconds)
  done (took 6.349744944 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.087013343 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.096950217 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.080212819 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.083843247 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.066965527 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.071692545 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.064897907 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.06539162 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.099134532 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.077700767 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.099784431 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.091900226 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.076736733 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099080782 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.073539509 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.09555412 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.073098135 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.092867532 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.077334508 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.09208113 seconds)
  done (took 2.534669249 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.077343733 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.086034625 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.089487672 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.075148038 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.091529187 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.075302506 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.090843939 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071517772 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.087928509 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071283682 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.079518593 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.099166768 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069312838 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.094469805 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.098340247 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.075601123 seconds)
  done (took 2.202288492 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.078854525 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.095008514 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.083113143 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.088431345 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.066609299 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.065232928 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.088254682 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.064408988 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.064415146 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.101176771 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.068203681 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.090585569 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.067173315 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.084056121 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.063614787 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.070671902 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.082187125 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.06556414 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.084986448 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.079182502 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.096502456 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.066353243 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.067461919 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.085924977 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.067479321 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.091431256 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.066909623 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.083783439 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.064340887 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.067655934 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.086360661 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.071609389 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.082620216 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.065372207 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.065882931 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.085864791 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.067735882 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.085883841 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.07090345 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.066113894 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.085363691 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.067961829 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.086020762 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.069330355 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.064339298 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.088594102 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.064575193 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.08905621 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.066710158 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.086221437 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.066740997 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.069639409 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.086638514 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.074186974 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.089286365 seconds)
  done (took 5.084496563 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082403908 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.072027453 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.083853943 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.066695995 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.070788874 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.090521924 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.072390964 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.090440672 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.071184076 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.085068883 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.071092614 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.071943478 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.08964888 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.07321615 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.069433405 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.070237696 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.063625254 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.092152466 seconds)
  done (took 2.25793021 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.074145731 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.068654099 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.09537929 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.069005942 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.068263322 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.092141538 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.065207286 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.087006117 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068187551 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.068768156 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.088098797 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.071385394 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.086332992 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.071484844 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.069728224 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.088333149 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.070499118 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.065319456 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.085869851 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.063596492 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.087425196 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.065967641 seconds)
  done (took 2.543669581 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.074977593 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.09527952 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.163160945 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.104250604 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.082512516 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.07907985 seconds)
  done (took 1.474377028 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.094415902 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.100692355 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.068043371 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.088128519 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.094901804 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068130695 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088676972 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068633087 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097373728 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.095948379 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070110852 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.096732226 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078205813 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.096829055 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.093175137 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074828184 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087721429 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069812382 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067097399 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.083099069 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089980162 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078536172 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088006438 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069210741 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087155991 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07801918 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.096822625 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.09744828 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069048185 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.097053129 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075538232 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087422578 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078488513 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.096775658 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070925651 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096544027 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069941332 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.105305334 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.093326517 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078574026 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.08858078 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075297589 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.096769049 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074360484 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.096407575 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068917406 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.093641656 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06879994 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088292312 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106789046 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076023069 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.096405063 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075654487 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.097244397 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.095993368 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.088475332 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.09708323 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.096601016 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07546448 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.096160594 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077946126 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.094357121 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.09682708 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078498123 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.094009172 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.081421176 seconds)
  done (took 6.542650085 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085150322 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.109046735 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070961895 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.097614085 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077123407 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088565899 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068930421 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087443742 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069345823 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.087698839 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.130475432 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069453113 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.09689126 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078304514 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088656068 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069307121 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.088285462 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.0766954 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088146013 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107322732 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070024536 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.096116769 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077687198 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.09629689 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.096520331 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075498598 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087841558 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069697613 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.08746413 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069449291 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.092561277 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070309512 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.097016696 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068491143 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096427624 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069712295 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089776831 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075090999 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.092066556 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076325304 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.100410107 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108078563 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071277282 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090604551 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.0805801 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.090677121 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071117379 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090233059 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071835049 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.09112068 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080707942 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077534849 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07652227 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074104191 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.091028117 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068968734 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088350427 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069053008 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087883171 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074978535 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.096378095 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.06989119 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107177506 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068902237 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.089099951 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.097569819 seconds)
  done (took 6.457242127 seconds)
done (took 128.816183809 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.219131534 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.195915656 seconds)
  done (took 1.292748885 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.071308861 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.098940378 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.099562163 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.128701973 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.08738598 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.100650506 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.098928404 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.098414307 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.067839291 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.086837817 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.068388428 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.069469659 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.151448635 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.068405518 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.067369061 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.08819275 seconds)
  done (took 2.335789503 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.104216436 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.196257357 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.108348652 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.065704239 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.099764498 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.079159631 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.065758359 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.095493388 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.072629304 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.085314648 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.080004005 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.094517658 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.066321801 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.075272639 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.06987565 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.098641184 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.065868239 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.078977199 seconds)
  done (took 2.488063874 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.104160703 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.138176762 seconds)
  done (took 1.131531366 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.184774311 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.134313032 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.187533058 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.416646827 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.20232209 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.261077743 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.172027605 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.169024527 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.154978785 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.166574223 seconds)
  done (took 2.929658633 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.10178587 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.171791012 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.301340365 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.117203375 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.093441984 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.114940665 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.118201154 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.097580311 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.080891337 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.099287491 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.098280316 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.077987585 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.117388308 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.075851148 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.094478829 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.077534053 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.120908183 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.075106643 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.096069273 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.076100515 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.117195722 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.066904419 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.074634021 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.09354162 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.076634849 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.09624478 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.067067753 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.065478858 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.072899877 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.095888736 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.078759836 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.112442713 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.076809039 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.128753429 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.090752398 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.130326996 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.077625343 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.092077199 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.075146745 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.091296214 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.077412521 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.096679621 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.074173433 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.096306774 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.066889713 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.077097398 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.085873431 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.067347721 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.099272665 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.068828624 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.099209735 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.0792347 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.127592554 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.086971926 seconds)
  done (took 6.073253058 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.71239358 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.127159103 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.072047813 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.131156333 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.116002697 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.073133621 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.756032805 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.113097899 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.199171633 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.093677288 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.108416935 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.071847781 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.100796765 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.086189811 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.130586032 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.102280555 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.114976736 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.072367584 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.121898305 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.120423469 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069202794 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.113913598 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.091475308 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.400976804 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.06850166 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.089862719 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.069127164 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.069966433 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.133570033 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.099074564 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069611885 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.164296257 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.085722065 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.144700163 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.088317241 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.069703015 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068552701 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.104126175 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.206825839 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.183529314 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.154787253 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070175553 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.070237061 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.092325732 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.092586131 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.090406869 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.136740433 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.084298065 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.145252721 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.093953119 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.073426728 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.09015864 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.072850971 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.102658843 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.081162485 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.104344669 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.256375239 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.0878473 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069852359 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.071215797 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.224182112 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.080409887 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.100124638 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.092590429 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.175279661 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.069709651 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.73463814 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.086396217 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.068304826 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.090620252 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.06829152 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.089847761 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.07070474 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.139059011 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.363718537 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.071944394 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.070073383 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.09146448 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.190199078 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.080543231 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.07010267 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.137486416 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.067941572 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.089772465 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.071185835 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.07018204 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.158430234 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.081803358 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.069861882 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.088473071 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.070915901 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.088101542 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.068439637 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.185156436 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.10187113 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.083307528 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.183353949 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.090761791 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.138485215 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.083485619 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.093183667 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.083704784 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.090603492 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.073531659 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.07201764 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.103362733 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.120005637 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.083666489 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.093159699 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.071424464 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.122452003 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.083477335 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.089938502 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.081426782 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.421845554 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.101236878 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.068044127 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.101420452 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069375579 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.134960367 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.091248636 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.184690906 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.06803011 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.103829493 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068854328 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.088258334 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.069447967 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.134469438 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.090821572 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069886582 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069636946 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.06956356 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.078274865 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.180801937 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071690737 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.182885025 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.156450074 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.090096186 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.142844529 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069927957 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.139624526 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069884674 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.090932104 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070537658 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.74523208 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.070120962 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.069081108 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.09152181 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.159966768 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069540533 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.08007489 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.09941328 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.067843325 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.737257233 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.080781616 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.098052415 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.080507376 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.09063524 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.069744928 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.087007844 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.071717737 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.133381916 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.194566351 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.072546602 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.06874808 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.099903371 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.136357223 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.069308188 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.102349981 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.080217776 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.105234841 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.071769426 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.071689329 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.080992197 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.141425756 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.099995308 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.158781774 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.558228804 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.070220526 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.097899715 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.168163111 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068386789 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.106295326 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.06808565 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.103360193 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.1340593 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.096848902 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.254044433 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.136660079 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.16071886 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.080538386 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.103619518 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067904153 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.088834216 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.08150567 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.091483759 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.073027483 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.102228506 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.073319107 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.072089035 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.109099756 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068912521 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.19632724 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.088339103 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.080836362 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.087988579 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.07155501 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.104155969 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.070470326 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069183482 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.101111508 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.070110546 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.10014084 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.671621447 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.098728736 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.069553557 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070553734 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.181225054 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.137814387 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068644717 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.088661451 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071058308 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.132717992 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.180731838 seconds)
  done (took 30.624693638 seconds)
done (took 47.758106802 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.237099054 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.175255929 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.248135082 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.118059748 seconds)
  done (took 1.766805691 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.146556272 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.101441098 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.117516655 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.065180446 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.124006739 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.08576418 seconds)
  done (took 1.554050202 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.387663847 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.26749376 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.229095065 seconds)
  done (took 1.791130267 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.223702332 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.231904978 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.415054589 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.29879214 seconds)
  done (took 2.189455678 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.168657252 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.111817928 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.06833099 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.104980895 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.159468692 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.208181448 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.123612588 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.171279642 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.079618512 seconds)
  done (took 2.156929746 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.190054194 seconds)
done (took 10.556392965 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.213588512 seconds)
    (2/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.091514089 seconds)
    (3/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.094953157 seconds)
    (4/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.13278444 seconds)
    (5/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.212088915 seconds)
    (6/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.216338965 seconds)
    (7/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.089791104 seconds)
    (8/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.141936581 seconds)
    (9/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.083526596 seconds)
    (10/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.084051741 seconds)
    (11/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.100009241 seconds)
    (12/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.099774568 seconds)
    (13/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.067196258 seconds)
    (14/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.198159032 seconds)
    (15/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.074768291 seconds)
    (16/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.187901089 seconds)
    (17/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.171302448 seconds)
    (18/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.122224984 seconds)
    (19/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.20885272 seconds)
    (20/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.10645683 seconds)
    (21/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.163272442 seconds)
    (22/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.218641019 seconds)
    (23/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.104194661 seconds)
    (24/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.115102147 seconds)
    (25/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.166654766 seconds)
    (26/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.194234106 seconds)
    (27/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.134827668 seconds)
    (28/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.19137702 seconds)
    (29/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.113205953 seconds)
    (30/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.102054684 seconds)
    (31/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.075846474 seconds)
    (32/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.130091861 seconds)
    (33/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.069216174 seconds)
    (34/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.104296959 seconds)
    (35/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.083015682 seconds)
    (36/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.201528501 seconds)
    (37/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.116341145 seconds)
    (38/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.150929758 seconds)
    (39/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.070845142 seconds)
    (40/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.125673294 seconds)
    (41/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.17830549 seconds)
    (42/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.052053051 seconds)
    (43/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.108018994 seconds)
    (44/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.162155069 seconds)
    (45/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.102109309 seconds)
    (46/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.072355991 seconds)
    (47/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.091485203 seconds)
    (48/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.150056214 seconds)
    (49/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.159859754 seconds)
    (50/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.170212832 seconds)
    (51/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.075411416 seconds)
    (52/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.076266572 seconds)
    (53/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.096933322 seconds)
    (54/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.215328851 seconds)
    (55/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.069165396 seconds)
    (56/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.122621273 seconds)
    (57/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.108810767 seconds)
    (58/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.120472981 seconds)
    (59/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.076298093 seconds)
    (60/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.094106855 seconds)
    (61/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.099602709 seconds)
    (62/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.09374917 seconds)
    (63/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.15558221 seconds)
    (64/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.137185872 seconds)
    (65/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.052780386 seconds)
    (66/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.065297276 seconds)
    (67/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.100220594 seconds)
    (68/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.075463415 seconds)
    (69/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.099325697 seconds)
    (70/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.129595291 seconds)
    (71/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.165969453 seconds)
    (72/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.078391679 seconds)
    (73/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.067313415 seconds)
    (74/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.085645798 seconds)
    (75/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.122373746 seconds)
    (76/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.227410416 seconds)
    (77/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.069875799 seconds)
    (78/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.074936168 seconds)
    (79/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.091911383 seconds)
    (80/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.139216031 seconds)
    (81/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.098901285 seconds)
    (82/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.091593276 seconds)
    (83/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.15368348 seconds)
    (84/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.05403387 seconds)
    (85/309) benchmarking ("sort", Int64, false)...
    done (took 0.089899153 seconds)
    (86/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.075462183 seconds)
    (87/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.06226223 seconds)
    (88/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.090893734 seconds)
    (89/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.160625217 seconds)
    (90/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.165876696 seconds)
    (91/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.166544779 seconds)
    (92/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.055508856 seconds)
    (93/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.093696086 seconds)
    (94/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.117258178 seconds)
    (95/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.054117799 seconds)
    (96/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.165038666 seconds)
    (97/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.078422228 seconds)
    (98/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.115016279 seconds)
    (99/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.095802869 seconds)
    (100/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.197283805 seconds)
    (101/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.075097831 seconds)
    (102/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.090830697 seconds)
    (103/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.081431704 seconds)
    (104/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.076978523 seconds)
    (105/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.164647523 seconds)
    (106/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.067228815 seconds)
    (107/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.092161927 seconds)
    (108/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.114216907 seconds)
    (109/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.092384767 seconds)
    (110/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.093143341 seconds)
    (111/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.176629248 seconds)
    (112/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.061825796 seconds)
    (113/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.16788288 seconds)
    (114/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.173551566 seconds)
    (115/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.07476266 seconds)
    (116/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.109259005 seconds)
    (117/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.160468957 seconds)
    (118/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.05158405 seconds)
    (119/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.189742668 seconds)
    (120/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.052678499 seconds)
    (121/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.11093612 seconds)
    (122/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.188350437 seconds)
    (123/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.129856708 seconds)
    (124/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.112637225 seconds)
    (125/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.161799134 seconds)
    (126/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.144823957 seconds)
    (127/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.098665076 seconds)
    (128/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.353648284 seconds)
    (129/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.053547263 seconds)
    (130/309) benchmarking ("sort", Bool, false)...
    done (took 0.161494411 seconds)
    (131/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.073864326 seconds)
    (132/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.075328306 seconds)
    (133/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.197519322 seconds)
    (134/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.073935815 seconds)
    (135/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.192998382 seconds)
    (136/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.074874912 seconds)
    (137/309) benchmarking ("sort", BigInt, false)...
    done (took 0.210992837 seconds)
    (138/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.081858331 seconds)
    (139/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.052765905 seconds)
    (140/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.070450545 seconds)
    (141/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.098211748 seconds)
    (142/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.096126526 seconds)
    (143/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.093553167 seconds)
    (144/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.072471156 seconds)
    (145/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.090344445 seconds)
    (146/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.191940741 seconds)
    (147/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.094837163 seconds)
    (148/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.05233168 seconds)
    (149/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.172806977 seconds)
    (150/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.079625252 seconds)
    (151/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.165260154 seconds)
    (152/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.067356567 seconds)
    (153/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.068474155 seconds)
    (154/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.09622146 seconds)
    (155/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.067430376 seconds)
    (156/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.051655299 seconds)
    (157/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.095765446 seconds)
    (158/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.084413226 seconds)
    (159/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.080241869 seconds)
    (160/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.096393273 seconds)
    (161/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.100636475 seconds)
    (162/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.095858875 seconds)
    (163/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.076829275 seconds)
    (164/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.053206567 seconds)
    (165/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.139231401 seconds)
    (166/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.114851742 seconds)
    (167/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.147641027 seconds)
    (168/309) benchmarking ("sort", Int8, false)...
    done (took 0.162805585 seconds)
    (169/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.06554935 seconds)
    (170/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.110334163 seconds)
    (171/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.062041404 seconds)
    (172/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.088512753 seconds)
    (173/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.077959741 seconds)
    (174/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.053563598 seconds)
    (175/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.118277398 seconds)
    (176/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.053748933 seconds)
    (177/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.065756758 seconds)
    (178/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.194547719 seconds)
    (179/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.167093274 seconds)
    (180/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.14732502 seconds)
    (181/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.129543157 seconds)
    (182/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.139739188 seconds)
    (183/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.103305202 seconds)
    (184/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.069109879 seconds)
    (185/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.099949499 seconds)
    (186/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.067041525 seconds)
    (187/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.051934689 seconds)
    (188/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.094745813 seconds)
    (189/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.066879301 seconds)
    (190/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.07318493 seconds)
    (191/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.095105417 seconds)
    (192/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.051927292 seconds)
    (193/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.068348442 seconds)
    (194/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.095609285 seconds)
    (195/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.078191683 seconds)
    (196/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.102579217 seconds)
    (197/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.110013584 seconds)
    (198/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.076414995 seconds)
    (199/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.086386827 seconds)
    (200/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.086511486 seconds)
    (201/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.093800948 seconds)
    (202/309) benchmarking ("sort", Float32, false)...
    done (took 0.128571032 seconds)
    (203/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.094378864 seconds)
    (204/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.075623573 seconds)
    (205/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.072729073 seconds)
    (206/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.072638617 seconds)
    (207/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.090399053 seconds)
    (208/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.071058176 seconds)
    (209/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.076386267 seconds)
    (210/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.076847932 seconds)
    (211/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.075036106 seconds)
    (212/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.157594206 seconds)
    (213/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.053888892 seconds)
    (214/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.192771832 seconds)
    (215/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.078733504 seconds)
    (216/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.093731456 seconds)
    (217/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.056090661 seconds)
    (218/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.066823888 seconds)
    (219/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.078468314 seconds)
    (220/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.053564461 seconds)
    (221/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.073206013 seconds)
    (222/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.195594788 seconds)
    (223/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.051711749 seconds)
    (224/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.064074953 seconds)
    (225/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.064026819 seconds)
    (226/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.086036167 seconds)
    (227/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.079781446 seconds)
    (228/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.14102526 seconds)
    (229/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.075333175 seconds)
    (230/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.151297671 seconds)
    (231/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.084845121 seconds)
    (232/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.091240582 seconds)
    (233/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.051169115 seconds)
    (234/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.088658107 seconds)
    (235/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.126376946 seconds)
    (236/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.084319082 seconds)
    (237/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.067415876 seconds)
    (238/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.157241573 seconds)
    (239/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.091278498 seconds)
    (240/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.072763055 seconds)
    (241/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.08498585 seconds)
    (242/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.053177888 seconds)
    (243/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.087431946 seconds)
    (244/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.075859505 seconds)
    (245/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.053531296 seconds)
    (246/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.051622629 seconds)
    (247/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.103533687 seconds)
    (248/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.066236474 seconds)
    (249/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.198719746 seconds)
    (250/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.065317499 seconds)
    (251/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.08923322 seconds)
    (252/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.072374108 seconds)
    (253/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.066595462 seconds)
    (254/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.095920459 seconds)
    (255/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.074456498 seconds)
    (256/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.065469719 seconds)
    (257/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.098348803 seconds)
    (258/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.069262803 seconds)
    (259/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.166972802 seconds)
    (260/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.069623858 seconds)
    (261/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.066603634 seconds)
    (262/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.088194453 seconds)
    (263/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.074435269 seconds)
    (264/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.08871026 seconds)
    (265/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.065942948 seconds)
    (266/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.052293825 seconds)
    (267/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.07400882 seconds)
    (268/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.067335535 seconds)
    (269/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.052106661 seconds)
    (270/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.062865736 seconds)
    (271/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.09280138 seconds)
    (272/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.054090163 seconds)
    (273/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.198633373 seconds)
    (274/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.071459822 seconds)
    (275/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.098498207 seconds)
    (276/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.055044264 seconds)
    (277/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.067913932 seconds)
    (278/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.074188024 seconds)
    (279/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.077522708 seconds)
    (280/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.070213105 seconds)
    (281/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.103718407 seconds)
    (282/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.067356454 seconds)
    (283/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.067564468 seconds)
    (284/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.078902455 seconds)
    (285/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.070812976 seconds)
    (286/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.054423763 seconds)
    (287/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.099057504 seconds)
    (288/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.053976081 seconds)
    (289/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.05689359 seconds)
    (290/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.067439676 seconds)
    (291/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.078447034 seconds)
    (292/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.054096386 seconds)
    (293/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.053630309 seconds)
    (294/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.096315326 seconds)
    (295/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.054035209 seconds)
    (296/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.068819605 seconds)
    (297/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.076048181 seconds)
    (298/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.056767419 seconds)
    (299/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.069379445 seconds)
    (300/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.097772724 seconds)
    (301/309) benchmarking ("sort", Float64, false)...
    done (took 0.129007048 seconds)
    (302/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.113396148 seconds)
    (303/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.052695431 seconds)
    (304/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.053435738 seconds)
    (305/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.093840472 seconds)
    (306/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.176520833 seconds)
    (307/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.111783941 seconds)
    (308/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.067562203 seconds)
    (309/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.052011697 seconds)
  done (took 33.137031425 seconds)
done (took 34.053874194 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.084267488 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.11892353 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.076721849 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.095814811 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.106540041 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.079915436 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.09814327 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.081779599 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.079807888 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.079894582 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.103145622 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.055199325 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.074212721 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.097496116 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.075494168 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.113944997 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.079053552 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.095280264 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.073713306 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.065297079 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.095415451 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.066497924 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.067291344 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.078098766 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.078687254 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.071630631 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.09447217 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.075196269 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.088339803 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.066829968 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.06967555 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.097609849 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.068310239 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.080034622 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.097193505 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.075666227 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.099595724 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.079371312 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.070024914 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.091868929 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.076850841 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.068007619 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.098404655 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.076415755 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.073824002 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.097293736 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.076241846 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.101766992 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.092660718 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.091688048 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.075790361 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.076885875 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.100027755 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.073927331 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.091970711 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.074453083 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.071155169 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.114416512 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.074435101 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067348949 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.07267059 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.072491125 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.070162029 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.071231469 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.072129012 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.102633707 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.076789333 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.094600955 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.076756098 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.073052988 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.092226481 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.076509528 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.071068446 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.066697192 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.078080504 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.077556675 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.065379704 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.071732207 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.101927364 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.074145539 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.067897664 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.094299862 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.070277275 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.074085063 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.094117288 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.057918645 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.072205702 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.097464718 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.068090103 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.098796733 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.074204474 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.075670949 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.093055159 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.078522803 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.067759439 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.096777118 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.068542747 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.06852195 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.092850704 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.071970516 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.068225115 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.093669079 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.077272436 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.069271528 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.097287235 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.082332598 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.091042041 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.075273368 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.067552281 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.066576058 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.081111045 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.10249672 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.068463862 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.071360979 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.090846198 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.075883375 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.067511917 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.091461045 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.068980719 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.068251985 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.097030384 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.06858356 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.070966283 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.098495305 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.081134101 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.090935748 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.07163539 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.071495764 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.091336585 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.074560676 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.068399842 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.090950241 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.070631995 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.065226021 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.094353325 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.06911433 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.0752636 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.094448169 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.076126474 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.070043887 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.099025308 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.073312066 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.096397075 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.073804141 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.06804939 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.083391683 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.071716344 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.071285844 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.09228234 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.067902656 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.070847623 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.091547146 seconds)
done (took 13.264473939 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.069525026 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.172771787 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.126536681 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.098893275 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.113896102 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.069071362 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.078888623 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.129576403 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.09342742 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.107078729 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.113132076 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.088683315 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.140824814 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.067606649 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.091803265 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.07266371 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.070051986 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.114503416 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.127290075 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.09027517 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.138626084 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.067705125 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.120984445 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.092759507 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.111860672 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.125323008 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.069375201 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.072468589 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.095214763 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.095555473 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.113289547 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.072646895 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.068859776 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.124278652 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.117508277 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.086911999 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.090724264 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.086431507 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.068518723 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.091520108 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.091393661 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.125130844 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.106115632 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.084542748 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.074276915 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.094270117 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.070482536 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.1117155 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.093818106 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.105860726 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.111445779 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.106498803 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.091580018 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.082317998 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.088853954 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.09094361 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.107057689 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.071002047 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.068758658 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.094269482 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.068595596 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.072274526 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.114457021 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.117067926 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.074040794 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.10798431 seconds)
  done (took 7.340737474 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.086333798 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.092985891 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.111090226 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.086720519 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.067497237 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.06766891 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.067785829 seconds)
  done (took 1.558601976 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.069307899 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.092106049 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.116746005 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.093517044 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.111285633 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.090441777 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.102565921 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.070137192 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.085901259 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.094738759 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.092104511 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.129382236 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.071480962 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.099415835 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.09519192 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.069376801 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.118000539 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.069799528 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.092513341 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.091186184 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.091645639 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.087148678 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.069479584 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.089898528 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.082261294 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.067130573 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.110141282 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.09649088 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068538994 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.070800204 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.088622242 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.105357302 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.103915902 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.074524814 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.067670595 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.104619955 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.083404054 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.064647671 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.08260697 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.070534421 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.107602298 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.068209636 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.091742132 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.067100628 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.074142616 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.10358434 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.071935566 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.070232406 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.095494833 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.090336533 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.094863447 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.083794484 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.069957081 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.097874937 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.071791403 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.098932405 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.080367673 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.071155375 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.114397639 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.071446078 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.111156991 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.086500055 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.083922283 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.085396119 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.069124659 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.106056147 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.08281915 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.070315129 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.09538948 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.073850999 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.108705191 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.066509119 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.070513018 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.10460805 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.072446712 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.117818519 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.094239317 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070752431 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.105970517 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.070138438 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.093566421 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.069953379 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.093392368 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.097454147 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.069938238 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.098312181 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.072521704 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.067840867 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.092974375 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.073365985 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.067853893 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.094264471 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.073279014 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.07063008 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.096971492 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.087565544 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.094325321 seconds)
  done (took 9.378483257 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.071148125 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.071132382 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.095848686 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.070864169 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.070945127 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.094730253 seconds)
  done (took 1.464257981 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.098231509 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.096719489 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.084224929 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.075320539 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.132357283 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.085010832 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.110185877 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.106836938 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.087154436 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.082982877 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.110541424 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.085594234 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.116297748 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.075956591 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.107339565 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.075312985 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.10545896 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.078622713 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.10264487 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.074719252 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.11116089 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.074307415 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.0733506 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.105458683 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.07115821 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.097633822 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.078268692 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.102608108 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.079816236 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.103905976 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.074403762 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.071506235 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.098254502 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.083594575 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.109952442 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.07418138 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.100059234 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.075107143 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.104153198 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.074735353 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.109792554 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.076835268 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.078511682 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.098875802 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.08320922 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.098643242 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.075669264 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.104079562 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.085539187 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.098708707 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.075691261 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.07486104 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.09911121 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.074860546 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.09807707 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.084060957 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.099088487 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.086340615 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.100361253 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.074378078 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.07288753 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.098251125 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.083318291 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.097311454 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.083366056 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.098706559 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.074245896 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.076124582 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.101586335 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.076091595 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.098357191 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.074037591 seconds)
  done (took 7.45750328 seconds)
done (took 28.175268664 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.669674962 seconds)
  done (took 1.656932736 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.738323116 seconds)
  done (took 1.728742047 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 14.505713069 seconds)
  done (took 15.497846322 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.597491627 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.753119037 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.839030582 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.152819345 seconds)
  done (took 3.33372792 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.883647367 seconds)
  done (took 1.894702578 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.241759874 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.22591192 seconds)
  done (took 1.46552845 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.763241566 seconds)
  done (took 1.764604479 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.250276307 seconds)
  done (took 2.248278502 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.31931789 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.176340393 seconds)
  done (took 1.501243822 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.49929337 seconds)
  done (took 1.503060128 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.615285773 seconds)
  done (took 7.626517283 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.209460669 seconds)
  done (took 1.229600661 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.269365588 seconds)
  done (took 1.282952685 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.061912234 seconds)
  done (took 4.072333551 seconds)
done (took 47.806664508 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.080706078 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.0842588 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.103979656 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.079173736 seconds)
  done (took 1.350207466 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.080390404 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.075535885 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.103748283 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.075835422 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.103621692 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.075450788 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.077467967 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.105155576 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.075596596 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.099685657 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.075574379 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.073555751 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.101196972 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.075343094 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.095004865 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.075758106 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.099145496 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.072641581 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.076257024 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.095999307 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.072128321 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.075362905 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.098690219 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.072118527 seconds)
  done (took 3.045590482 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.080013355 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.076382287 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.100921599 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.075440214 seconds)
  done (took 1.350173487 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.080316284 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.095084981 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.11784308 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.079715464 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.09139281 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.112232651 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.071385513 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.070979458 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.098426547 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.08036739 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.070583786 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.125847169 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.113129814 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.079851311 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.081913414 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.091811258 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.072318264 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.113012967 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.080356242 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.079978706 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.099161914 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.080355862 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.094041902 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.092402153 seconds)
  done (took 3.192037537 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.080718552 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.105448082 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.10616459 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.089981992 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.117392964 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.06793767 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.103069536 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.09317209 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.152307747 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.068275635 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.096974941 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.06821796 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.075196336 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.092100024 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.080917786 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.132644078 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.112805959 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.070607666 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.1243368 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.068458581 seconds)
  done (took 2.928097761 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.075437185 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.07283582 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.091943106 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.071025618 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.079836194 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.09962522 seconds)
  done (took 1.514489002 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.070577621 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.07000008 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.09339686 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.06942356 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.074066585 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.093354511 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.068575342 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.06928918 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.093242671 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.069494272 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.068908655 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.092756886 seconds)
  done (took 1.950162155 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.399819349 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.09552878 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.069623653 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.089411413 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.071679234 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.066070898 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.10409925 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.068816619 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.113593043 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.067615836 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.067628152 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.095678415 seconds)
  done (took 2.327944557 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.264386459 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.080217899 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.295055375 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162203112 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139039222 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141678346 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.129108394 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140206214 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.171109011 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.127795531 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.220973729 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194488783 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13292815 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163721411 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.1128437 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.099375716 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207924756 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190598793 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129992146 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19149595 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173430413 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.154145202 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.176139643 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.127291097 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.131737955 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149824107 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.071421212 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105069741 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225402518 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159088839 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173915702 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136471544 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.120316653 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228350882 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224532486 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170080463 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132145767 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.082857424 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.156936464 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.159956851 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.253694147 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.11390979 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165712052 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137346873 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105502171 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166542356 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145815704 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.146500096 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.10623977 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.088038971 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199469115 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209647063 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.163783674 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087676679 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138365986 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14019084 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.142118258 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12832788 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235171268 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188079154 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152868706 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.095691343 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.099791358 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203025171 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.156621738 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.135098224 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.153191023 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.118440719 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159969592 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.181706902 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145187116 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194650826 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.156392011 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112634795 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119765546 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.189806066 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155472786 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197820066 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150280964 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.096424914 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151393369 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129199485 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082128969 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.16495356 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.075955044 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.22744443 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123567371 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.106707207 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138806771 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.133689915 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.134964319 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190435356 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19782925 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.127620241 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.065603056 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128012004 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.14535655 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17574633 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.112268626 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.133470348 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142741996 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.07856531 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164904205 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.099229533 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149402112 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.076122254 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149855855 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156068386 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.100927852 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.150036795 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102119298 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.124838013 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160487427 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211789882 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.090211918 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107359599 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193717932 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148366562 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.129833255 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.168186593 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.184131838 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.125210149 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104104543 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202989274 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.234708096 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.089703549 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190425497 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134857676 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.084044279 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.112396103 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150559103 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.13897858 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.14936535 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082881032 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.146410721 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.22289519 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.075151359 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.120042477 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161442536 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.104429638 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081772693 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129873624 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126594805 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.120774648 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.101585702 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.132474856 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167454348 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174277369 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107169429 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123231993 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126885583 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224624592 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115001875 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.102079972 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.129285038 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.07065251 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.188903553 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185515226 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.105151886 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194147908 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.149232732 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131136058 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145318173 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083307536 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.191908228 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.079858328 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.070434212 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197334562 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135951437 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.135786019 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.179187915 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130619239 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.154839738 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.148285643 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16303555 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159873427 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.156905717 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132006416 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.113615131 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.11236074 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179322875 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.073732581 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.117582038 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.081799007 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130418676 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122388273 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.085035173 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195558881 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153429281 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.100709854 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138248989 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123006888 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.174411844 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.101987262 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157325746 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.146218654 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120381152 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.180919377 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180704583 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184362133 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.10121839 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203152706 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.074202853 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.101950344 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.094186355 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.153254696 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.112203344 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.08799353 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114982241 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.201844277 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156852382 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166728705 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137376217 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14857086 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.182551464 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.095208298 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.116525058 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174111774 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146213596 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.126962036 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.112943494 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.099521334 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.168741254 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107014102 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239179772 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140872334 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149830628 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181773481 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.126752235 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083912284 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.129151454 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166238207 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132319064 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.174347955 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.125679493 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113189267 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137729458 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.075959788 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.12796126 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154806138 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148094809 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163735509 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.140962108 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158207578 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077697438 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146486609 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.152079549 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150794178 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.06368961 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171791094 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19136313 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121124843 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1452441 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181779923 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105356699 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.151371875 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.233732228 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174599832 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110229469 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137689399 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.119534088 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.178587667 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146715416 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.169478373 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138814838 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16354793 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135128053 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.086594843 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113839392 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.097677167 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.130974225 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.120102471 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.137283706 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.141419632 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.095258234 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184951105 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104082373 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137275808 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144992015 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.121556581 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.091778873 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12417229 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203137727 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147096732 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226149621 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.124930105 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.174830669 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.219091515 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074861966 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10552094 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.079095167 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.19396033 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085261327 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159984025 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.124417165 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131965632 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151884657 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171640039 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.120872235 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.069887928 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.136019568 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16391137 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139113692 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125265818 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.10620459 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.219287875 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.126977561 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.081193802 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.141020477 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131949548 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104474476 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229868514 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.061364833 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.125182924 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.101775149 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.082320827 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.156347293 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208647941 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.083836971 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.146917675 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146658035 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138691224 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.155601186 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129607318 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100887378 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141265609 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206108874 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157293768 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.09121484 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.110683173 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158290953 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211737582 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13232024 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.095772679 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226865412 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180445896 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.189207139 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.115616681 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141827805 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140636802 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109845027 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194477659 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.083470443 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.221546328 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107864257 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166912805 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131212676 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.117104584 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15891441 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.099732356 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132174305 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176233277 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14436554 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108618517 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.077581194 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171721092 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1476404 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108466987 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.101121705 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169192168 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.098503053 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16245505 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199089888 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107733507 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.131742838 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097998223 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.1067134 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135466474 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130011602 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089558959 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.143114069 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202097835 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.08619724 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205498979 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170128899 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140949758 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189771876 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100521982 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.66292653 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.103997621 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184449636 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.14469024 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.230115708 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.123811373 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144793172 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110791365 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121251864 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200917002 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132808996 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.177290397 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186544991 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.144122663 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.08053251 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101944924 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130341764 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.08892412 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.131753134 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139841566 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14391795 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.120467357 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.143153264 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152066887 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.082579583 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.120988015 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.209971336 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.117237312 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169171386 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.16821841 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112452805 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145476788 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168412612 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105660995 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.150706787 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182369168 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.133534876 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125168552 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.081749009 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.130310852 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197063861 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.072686628 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.219361283 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147326534 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135839252 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140790874 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.142595658 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15963678 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134668388 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149125748 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.120645454 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.137577552 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.113452305 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.108786677 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.10310105 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106076535 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139424059 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.123442007 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.125872381 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.121900269 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201835121 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.072711372 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123032668 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104401073 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200089998 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.230761298 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.088198997 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.109027171 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147424982 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142117996 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.140379854 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147404142 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.080633994 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108833627 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.082884724 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.104866064 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.129613099 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139992634 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131647342 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138355875 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194500269 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.109435123 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.249372416 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.096301507 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.131853052 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.069634926 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.105781655 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12314651 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099650441 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135695828 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.127542897 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198492921 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.122081671 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.116440253 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093981053 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.072313879 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081642663 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.156350207 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137403089 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146736066 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123846063 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.063466906 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135460589 seconds)
  done (took 68.931495882 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.143953743 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.121552088 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.135729551 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.190804889 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.166077725 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.257041361 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.199178462 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.241973971 seconds)
  done (took 2.554333748 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.072691114 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.121569343 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.103000183 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.111559011 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.068319667 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.094412953 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.273586857 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.083236085 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.092203466 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.089173447 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.105983676 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.090237062 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.460569712 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.068764399 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.097079494 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.066808149 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.089518705 seconds)
  done (took 3.18380985 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.424618459 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.620629345 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.420216531 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.098494936 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.860625964 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.089927493 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.354729552 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.162522848 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.071859852 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.431005045 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.740724315 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.130618852 seconds)
  done (took 17.498415705 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.078945502 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.072687661 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.114293515 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.08730205 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.074859458 seconds)
  done (took 1.535777191 seconds)
done (took 112.366505114 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.0830094 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.360866268 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.055874302 seconds)
  done (took 1.55411355 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.085955578 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.087695884 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.115188647 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.08708944 seconds)
  done (took 1.486945221 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.077329157 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.07887681 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.114798607 seconds)
  done (took 1.379366461 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.287454144 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.140101409 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.085745131 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.085047283 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.081740803 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.108248528 seconds)
  done (took 1.385595821 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.074829667 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.077900022 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.102625296 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.078599586 seconds)
  done (took 1.436355214 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.079201625 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.054670658 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.057012021 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.085800681 seconds)
  done (took 1.386020564 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.090491433 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.081174245 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.108770059 seconds)
  done (took 1.38341307 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.110518987 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.115618727 seconds)
  done (took 1.331411597 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.084782077 seconds)
  done (took 1.187806597 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.102856451 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.145557416 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.158920746 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.137561747 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.166610357 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.10850252 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.08372681 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.117441217 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.104422201 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.088849401 seconds)
  done (took 2.323864378 seconds)
done (took 16.557599316 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.081728722 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.398955013 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.363325482 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.094359932 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.698639096 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.359124025 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.045642215 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.095924341 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.155307892 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.098227171 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.086845482 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.650545815 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.998306318 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.327131909 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.98775902 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.32568558 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.679556809 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.071008779 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.069303397 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.094323403 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.001819674 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067506858 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.09427929 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068576193 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.676482475 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.372021763 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068354599 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.349324638 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068956404 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.095916415 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.355712021 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068790009 seconds)
  done (took 16.067416917 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.073150121 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.147298717 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.076774783 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.086228908 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.100157921 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.070429215 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.098601201 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.069273995 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.15247471 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.069869685 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.111322892 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.068729904 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.073301633 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.095822741 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.08798477 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.067944178 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.067997813 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.067443436 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.096677084 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068653675 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.087230701 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.093344491 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068779771 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.095133991 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.069110235 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.080929171 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.095209932 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068463171 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068450946 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.096645362 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071857463 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069656166 seconds)
  done (took 3.829663487 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.118029477 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.157498285 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.078108786 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.134314705 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.117457845 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.100888378 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.147714876 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.123189568 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.159738447 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.070614049 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.1129569 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.070584505 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.128903478 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.072187142 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.091302124 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.09853933 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.072454615 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.099561313 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.070984577 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.072043488 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.115364485 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.070201507 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.070657615 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.070166886 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.068518494 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.11066455 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.069656809 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.069386283 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.0952522 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070802363 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.097419221 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069076658 seconds)
  done (took 4.192601836 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.075030457 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.078423276 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.113849652 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.086619593 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.071712513 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.102516275 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.075889055 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.099372133 seconds)
  done (took 1.823267237 seconds)
done (took 27.023430583 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.081833453 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.071592455 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.103214605 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.083920968 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.075986654 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.110004723 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.070165572 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.104962779 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.074680596 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.07587975 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.10624159 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.070926079 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.073636319 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.098093822 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.076639924 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.07033892 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.110262307 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.074357595 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.110289296 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.083199336 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.072088323 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.104792373 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.077310736 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.11007317 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.082413588 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.110042944 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.080422938 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.076144156 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.100134241 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.073326042 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.079705267 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.114994519 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.071371378 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.109692516 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.070832199 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.070393283 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.101886687 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.070808177 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.110572369 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.079732662 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.072675234 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.107658218 seconds)
  done (took 4.779650089 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.090869233 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.094793121 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.116057609 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.06405497 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.069714212 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.096323748 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.092706704 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.09046689 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.061986298 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.091852471 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.086677558 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.062201151 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.065331833 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.05607325 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.090435744 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.060293919 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.063974113 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.086552479 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.061898563 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.062524032 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.059947241 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.084541053 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.062966493 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.065378507 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.086906482 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.06490005 seconds)
  done (took 3.107832586 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.077539828 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.087538705 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.119130597 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.131505037 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.135936166 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.080172586 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.109156197 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.089376738 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.114925797 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.069018636 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.072539608 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.124456183 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.091483221 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.107975174 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.070573551 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.087851633 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.124789592 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.072277307 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.104665043 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.094515831 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.087437794 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.109544043 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.095992879 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.112839199 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.069628285 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.072218596 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.072431233 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.082654111 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.105135683 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.079487442 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.075239937 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.10093938 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.070740042 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.1065868 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.074665937 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.071974792 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.121502975 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.078687292 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.108178529 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.071396638 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.074125845 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.099640865 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.093933879 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.145231529 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.070582251 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.077324779 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.077182232 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.078069014 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.101262313 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.08897282 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.081614228 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.097499575 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.072629487 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.06970495 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.068848768 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.082111819 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.10176351 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.072462645 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.078330765 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.098956849 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.081146698 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.098356614 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.083102643 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.068284802 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.103144657 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.06762782 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.069155882 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.093659419 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.09398093 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.0959683 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.110232973 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.099529404 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.070724306 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.077892682 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.102607006 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.075079484 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.06890396 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.110059148 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.078358769 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.098396143 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.076860476 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.071549765 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.098136673 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.088895282 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.070627213 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.068125874 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.067723667 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.07304238 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.068948473 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.067200955 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.110025088 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.068522385 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.071116641 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.111541661 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.06895024 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.100362058 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.076818518 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.074896137 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.094993569 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.07955475 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.101423708 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.069538019 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.07777558 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.094354068 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.071335746 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.105378573 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.07479177 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.066730007 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.099676229 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.075030177 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.068809909 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.095867566 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.071411229 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.069869684 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.076189992 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.073843969 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.101478813 seconds)
  done (took 11.342086793 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.189913024 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.152649757 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.097920125 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.172431753 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.077045963 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.079299771 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.173438639 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.12307879 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.068902694 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.06850112 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.096353671 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.115614829 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.1342929 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.150099088 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.079127844 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.093012551 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.083650408 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.144960332 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.17548035 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.143297807 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.111298376 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.077250757 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.098778445 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.069366427 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.07517228 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.110120019 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.090335616 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.100997895 seconds)
  done (took 4.285486819 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.084414962 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.130883207 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.07529329 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.08990839 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.119258697 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.06890943 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.098018936 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.070119046 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.080927196 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.107816153 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.068661344 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.100863425 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.075652159 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.101081244 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.069600229 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.075110371 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.102631125 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.070816753 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.070944265 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.100280937 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.077471929 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.10905528 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.072843958 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.068633441 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.101355989 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.067487713 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.092345337 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.086248977 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.094906966 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.090877184 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.066204303 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.102624026 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.081950111 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.069345978 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.067361721 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.066927729 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.097895315 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.068300884 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.069884001 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.094762633 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.067545171 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.05799292 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.094691697 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.080976842 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.10096459 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.057308105 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.073124492 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.100656201 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.0739317 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.065837424 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.098136401 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.071872165 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.071433094 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.102260414 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.073178865 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.10027802 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.069494404 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.066157579 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.103444799 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.068860748 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.065096433 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.095188181 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.073344667 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.067679511 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.103122828 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.072747095 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.093936319 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.067921183 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.070926551 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.101906611 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.068129066 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.071638054 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.093587508 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.070259413 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.072805552 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.09665819 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.070304009 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.067793656 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.095254912 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.068638977 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.0564315 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.095693706 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.054462546 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.070688608 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.093321034 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.067546229 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.094925194 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.074114808 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.081425719 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.096763045 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.073888862 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.096425721 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.068163028 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.071276274 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.088104443 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.0722667 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.083986545 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.110619101 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.068366063 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.093430042 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.082822475 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.100954637 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.067793279 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.057415337 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.102949811 seconds)
  done (took 9.758394926 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.097596468 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.091804839 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.100838617 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.087059927 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.121485095 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.089283385 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.075208582 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.102614565 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.070264066 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.107827993 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.073664822 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.076649102 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.095600669 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.077050531 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.09511231 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.10388136 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.070235651 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.104781286 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.073078267 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.102066187 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.110814621 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.082658308 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.103131467 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.068980475 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.073518067 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.107757171 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.090911235 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.108640609 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.079168782 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.07666966 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.107534064 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.090974 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.102592446 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.073057546 seconds)
  done (took 4.235931593 seconds)
done (took 38.622362519 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.235030134 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.411978755 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.19826149 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.120348724 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.219977278 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.20559226 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.205610459 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.19830449 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.352791744 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.195814506 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.432132581 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.807480275 seconds)
done (took 58.726832161 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.210115573 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.341517624 seconds)
    (2/2) benchmarking "String"...
    done (took 1.474051058 seconds)
  done (took 3.971436879 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.609547259 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.081512567 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.457189248 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.20017282 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.199523664 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.501098023 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.825286978 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.046987318 seconds)
  done (took 27.451642633 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.200511728 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.553374928 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.450743892 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.456742517 seconds)
  done (took 17.803548978 seconds)
done (took 59.18674703 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.197626349 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.213038285 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.209447832 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.181621309 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.31977871 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.228763613 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.493263672 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.371510452 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.19698697 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.183529669 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.197855349 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.196571418 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.210957369 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.477405421 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.206865353 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.201397837 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.212002224 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.862289849 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.57254069 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.221314282 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.198771032 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.25643751 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.1988116 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.20496027 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.214767304 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.208917681 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.201335553 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.214982029 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.357326751 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.204283587 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.285985325 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.690064734 seconds)
  done (took 190.332180414 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.20088576 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.272194625 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.342362622 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.257862931 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.637068477 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.397013831 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.32916685 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.721643203 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.216175697 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.212278833 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.44871566 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.199185095 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.523765804 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.166995145 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.218674171 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.285929815 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.4085205 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.527123031 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.218927509 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.448568632 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.21227118 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.420435376 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.316245362 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.437278402 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.235903547 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.203760935 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.208556703 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.220001666 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.390294824 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.352203425 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.219311037 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.215690461 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.752437265 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.060392917 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.224992626 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.231978017 seconds)
  done (took 149.877489684 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.470694812 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.202698525 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.203696094 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.204107265 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.231784764 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.202654918 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.720851623 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.720058146 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.744497372 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.708777773 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.264917106 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.399045132 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.200868762 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.295399774 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.215373551 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.204724046 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.218245903 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.229561657 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.200444811 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.203774103 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.720585235 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.216574019 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.287167293 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.211250638 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.203595421 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.233124408 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.599341749 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.201118344 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.233917225 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.518491581 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.243914592 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.200130724 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.476362653 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.977294878 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.309270239 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.201334007 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.233553419 seconds)
    (37/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.204724525 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.204032922 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.476516214 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.202327346 seconds)
    (41/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.204689785 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.205175018 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.207913183 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.759906259 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.201601186 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.724151888 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.206760797 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.096937191 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.203134128 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.205563194 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.055050785 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.636746235 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.202219224 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.205104082 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.207651695 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.204931583 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.206533762 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.23467554 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.020167596 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.305685942 seconds)
    (61/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.206637196 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.206933605 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.209384378 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.235448587 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.206946286 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.217569318 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.20771798 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.536629028 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.262775257 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.425286295 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.726202397 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.207668614 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.298709696 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.321627469 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.205239902 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.206895007 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.206869035 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.206968373 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.312274498 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.203462068 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.59754857 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.21034831 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.207963182 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.268181699 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.300672497 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.203821059 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.528440392 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.207997151 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.206500172 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.898809854 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.296129447 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.20399555 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.208000062 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.207744505 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.600862672 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.723893464 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.379885539 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.203745456 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.126523555 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.208304493 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.614172849 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.711214127 seconds)
    (103/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.205125397 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.76362358 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.206075919 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.314657746 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.209065405 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.210206391 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.208173904 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.237839416 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.210843514 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.267639878 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.208745191 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.604289651 seconds)
  done (took 346.343397627 seconds)
done (took 689.165865967 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.915357209 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.904972538 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.007813552 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.89874293 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.881211564 seconds)
  done (took 10.757135067 seconds)
done (took 11.905915553 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.385727467 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.384657379 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.262680199 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.386821625 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.232965299 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.402232865 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.36196859 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.227971641 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.306883893 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.284626989 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.307274186 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.257096923 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.236014235 seconds)
  done (took 18.185355358 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.510538419 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.509051166 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.274760816 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.512415712 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.250692082 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.519296989 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.401261561 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.423052462 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.396327909 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.226063654 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.223842385 seconds)
  done (took 16.398124173 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.516445979 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.515112146 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.277852918 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.521988562 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.250781112 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.517490177 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.406875718 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.412726638 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.398192971 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.225664891 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.22447382 seconds)
  done (took 16.41716405 seconds)
done (took 52.151194542 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.218672506 seconds)
  done (took 2.367526807 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.251535788 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.416514148 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.233605275 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.22442872 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.22155016 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.222093329 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.224493297 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.220955954 seconds)
  done (took 11.1670318 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.219024755 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.215877953 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.217231657 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.215901929 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.217030269 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.219079844 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.216333548 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.22015297 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.219593508 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.220132859 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.219722221 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.217085607 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.220633839 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.220059399 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.217565049 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.216504137 seconds)
  done (took 20.642991893 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.219340618 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.217964984 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.218045738 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.21778822 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.217954297 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.219012459 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.218897876 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.217919339 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.217173572 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.217567687 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.218481604 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.218770856 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.219170876 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.21799304 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.219352921 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.218869811 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.219839103 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.218468983 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.222890963 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.219002309 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.219861189 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.218164256 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.219017839 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.21948756 seconds)
  done (took 30.404651718 seconds)
done (took 65.732568888 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.201056891 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.886513852 seconds)
  done (took 9.239946934 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.222130652 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.221992399 seconds)
  done (took 3.599014006 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.22193337 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.221252587 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.220663293 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.220048936 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.222359775 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.222951151 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.221247898 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.220863778 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.222072998 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.221193008 seconds)
  done (took 13.368025269 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.222298265 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.222270968 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.219424858 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.222886677 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.223360944 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.219757642 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.221897275 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.222233431 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.223502893 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.219733896 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.222889055 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.220175387 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.223278999 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.219552151 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.222094623 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.220084443 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.220399967 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.219618053 seconds)
  done (took 23.139010741 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.223419941 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.222594695 seconds)
  done (took 3.600674191 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.219977269 seconds)
    (2/7) benchmarking "second"...
    done (took 1.220597976 seconds)
    (3/7) benchmarking "month"...
    done (took 1.220707981 seconds)
    (4/7) benchmarking "year"...
    done (took 1.219705314 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.221095785 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.220567678 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.219249564 seconds)
  done (took 9.696719463 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.224637068 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.400544746 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.484910862 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.931927224 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.22532734 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.227716424 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.175432456 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.227521637 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.228724593 seconds)
  done (took 14.281530332 seconds)
done (took 78.077728842 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.212961794 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.212828778 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.109197791 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.226365999 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.229907937 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.55970439 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.218970163 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.464560467 seconds)
done (took 38.391120767 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.224091405 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 1.943625673 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 1.96436376 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.216562773 seconds)
  done (took 11.279928673 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.210797828 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.119354601 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.205235016 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.215887804 seconds)
  done (took 17.909136209 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 1.835464323 seconds)
    (2/2) benchmarking "read"...
    done (took 1.54898321 seconds)
  done (took 4.540229465 seconds)
done (took 41.10927778 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.22490505 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.225519693 seconds)
    (3/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.2249896 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.221146122 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.225271119 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.222442176 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.223619209 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.225569776 seconds)
    (9/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.226207565 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.225570159 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.22608482 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.225781873 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.225882273 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.22295324 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.224064451 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.226563427 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.224304468 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.22386749 seconds)
    (19/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.223656666 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.222753512 seconds)
    (21/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.22424994 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.225577636 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.223611559 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.223710578 seconds)
  done (took 30.544480897 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.225924433 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.223095071 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.226888167 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.22692159 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.224204655 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.226282772 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.226238955 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.22329992 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.227412814 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.226443588 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.223454251 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.223310324 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.22620783 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.224437341 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.226346758 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.223822207 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.227064736 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.224114373 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.227035805 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.224520489 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.227030667 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.223931916 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.224163974 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.226823178 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.224339403 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.225173261 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.228499559 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.224886254 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.227294668 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.225468747 seconds)
  done (took 37.923267595 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.231760961 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.236372666 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.227062209 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.227816711 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.228570913 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.22853136 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.227936401 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.227666675 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.227710546 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.228315628 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.228701286 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.22870583 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.228867206 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.227601122 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.227758413 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.229158131 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.228812619 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.228157591 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.228073849 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.227681027 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.229408311 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.229623069 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.228760055 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.228187286 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.228505978 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.228063169 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.227976096 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.22945664 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.228658177 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.228915179 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.229554445 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.229335562 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.229879065 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.229860915 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.229797805 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.22934639 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.234082153 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.238013737 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.229611423 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.229421212 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.22899509 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.231043333 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.228997705 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.2297808 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.229531154 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.230016783 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.22957447 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.230586362 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.23073072 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.229635417 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.229927322 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.230802145 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.231034361 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.229884254 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.230943949 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.231061977 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.230407537 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.23117908 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.230687778 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.231277587 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.232037037 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.230894404 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.231806916 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.230853896 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.232014577 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.230100917 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.230219902 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.232571971 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.230757947 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.231199956 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.232402344 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.232145019 seconds)
  done (took 89.715917215 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.230481147 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.229452382 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.229373029 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.228263606 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.228661826 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.230428478 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.22750271 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.231507581 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.230156546 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.231391057 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.230768247 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.228552054 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.228436808 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.231143709 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.230730654 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.228599539 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.231844787 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.230346576 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.231587214 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.231539869 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.233016304 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.230912316 seconds)
  done (took 28.228116404 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.231910217 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.231977632 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.228990122 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.23215997 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.228560361 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.231980102 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.232247531 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.233272112 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.231283884 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.229325241 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.230271962 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.232728543 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.230182874 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.229181013 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.229651421 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.229820671 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.231833539 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.231464987 seconds)
  done (took 23.320480793 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.230464086 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.231965339 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.233078585 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.230877456 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.231538974 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.233746771 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.231228907 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.235251759 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.232955313 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.231426527 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.234144706 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.233794345 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.233672261 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.232222179 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.233283295 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.231808795 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.233254045 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.231756353 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.233237121 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.231701497 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.231624024 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.233825132 seconds)
  done (took 28.281566959 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.234186607 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.233619429 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.231694653 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.232637796 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.231704864 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.234459674 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.234620486 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.231000138 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.234305149 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.233676277 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.231775859 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.23361195 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.232404676 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.232884293 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.232670367 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.231771052 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.234798052 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.233692484 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.234976964 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.23159894 seconds)
  done (took 25.827398603 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.23524918 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.237049507 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.235690675 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.236346826 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.235754605 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.236783266 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.236670909 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.237624714 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.236768726 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.237552284 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.237038743 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.236377468 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.236724866 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.23651158 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.236946572 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.236433311 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.237919462 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.237550414 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.237396958 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.237440842 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.237853349 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.23743425 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.239211628 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.23797332 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.236658392 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.23776185 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.237953904 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.238581453 seconds)
  done (took 35.806484913 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.236127223 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.23679838 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.234970471 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.235257381 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.234598925 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.233158072 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.234261892 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.234269807 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.236871658 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.233913104 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.237345604 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.236760984 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.237248278 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.237529028 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.237401003 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.238026387 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.236653848 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.235410816 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.234974189 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.235107664 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.237426056 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.238203896 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.238285103 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.234768189 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.235768424 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.238222293 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.234985897 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.235130214 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.238800561 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.235162869 seconds)
  done (took 38.253402474 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.255931095 seconds)
    (2/2) benchmarking "in"...
    done (took 1.25686827 seconds)
  done (took 3.682350245 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.23628042 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.239169331 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.238765959 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.235277438 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.237288625 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.238571175 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.238882221 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.2369274 seconds)
  done (took 11.071164468 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.238114799 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.238339425 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.238884991 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.239882193 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.239573313 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.240666784 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.251356041 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.255489478 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.241865942 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.240869284 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.246998902 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.250453173 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.245568641 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.24097197 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.240441834 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.241721274 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.240799321 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.240125544 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.239516618 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.240938667 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.239627776 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.244676652 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.243542097 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.237730976 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.242849362 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.255966436 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.248704603 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.240659718 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.241140688 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.249081036 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.241691633 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.238053819 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.241662614 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.241214412 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.241863393 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.241317747 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.256130789 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.262542971 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.251145872 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.241693074 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.241912716 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.239173502 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.244115656 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.246530975 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.244451265 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.242728918 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.241905442 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.238848045 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.24142838 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.244523124 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.247108569 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.242670615 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.240152716 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.249810616 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.244069141 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.251739266 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.259603517 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.245795851 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.253522832 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.257282833 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.259398254 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.252699029 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.244934477 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.243697988 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.254693251 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.269473267 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.254300802 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.256792189 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.240791914 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.24270735 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.253902961 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.25898015 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.254772959 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.24392281 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.243059424 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.243205995 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.243740985 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.244479433 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.255767179 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.264240537 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.24292428 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.24369007 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.255010881 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.269336359 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.243053382 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.243712398 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.245032939 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.24451098 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.245023322 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.257447424 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.259798621 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.244634041 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.244688513 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.245717096 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.249648518 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.244643123 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.243744848 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.246622272 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.24176342 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.245118593 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.244208572 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.248470951 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.255817795 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.245029695 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.244906005 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.255602502 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.244863962 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.24519692 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.257332063 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.246163776 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.245051128 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.246802012 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.255411816 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.243104525 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.250133215 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.255321019 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.245271987 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.248904043 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.245381419 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.246471427 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.256187587 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.275783891 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.246014064 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.247034747 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.252087439 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.259173009 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.246417291 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.250921538 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.247666289 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.245299723 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.243014772 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.250636352 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.246193199 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.248067986 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.247419579 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.249533471 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.245363201 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.246904738 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.247826631 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.249587342 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.250609573 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.249097228 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.248590994 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.252590496 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.247922096 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.251520461 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.257907344 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.249556009 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.248716834 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.24960095 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.245162654 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.249181094 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.250787126 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.24704384 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.249742835 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.248415803 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.248084876 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.247388706 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.248383004 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.248024753 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.248453385 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.24950723 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.253428763 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.249083941 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.25586591 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.249860299 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.245865743 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.24862616 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.248866873 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.249182445 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.249546938 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.248127434 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.252079847 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.258061548 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.249946846 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.248520823 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.254600601 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.248678489 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.249129959 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.249763011 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.252939295 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.259159989 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.2488124 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.259183915 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.250470665 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.249380382 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.249910605 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.249605728 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.250051914 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.250011967 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.253042161 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.259306791 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.265348072 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.261798901 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.251262924 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.252831912 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.251033081 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.253860796 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.257331644 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.250330528 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.25209061 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.249636666 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.250582858 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.249761641 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.254443192 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.25006658 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.25139273 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.251570112 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.251565533 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.250782069 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.250807963 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.253468837 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.253046725 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.247717361 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.251930369 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.251634048 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.251972802 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.248962142 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.250818531 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.252140359 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.251523892 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.252241654 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.26302076 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.2498771 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.253312303 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.253680681 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.253056619 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.250948149 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.252866272 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.253610457 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.252849746 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.264174928 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.270266363 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.25438641 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.260892529 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.269644547 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.253353545 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.25588027 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.25322759 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.250431013 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.254234989 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.260862718 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.252305462 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.251326649 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.252620987 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.254089583 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.253391251 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.26304909 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.25042687 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.252821155 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.253470099 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.257850662 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.249920374 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.255270737 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.255815079 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.253612143 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.25537447 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.25454675 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.253591838 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.255655456 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.253800779 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.252970718 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.253326038 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.257006815 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.262058233 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.261280663 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.255672368 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.259161711 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.255952243 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.257965125 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.256723696 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.253866096 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.255003187 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.27078891 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.264061796 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.264300619 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.257612259 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.254642093 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.264356649 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.25700921 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.260949042 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.255298237 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.256448151 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.255625922 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.254551681 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.252410772 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.258041044 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.255687368 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.25780429 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.25768955 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.259675215 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.254012013 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.254691271 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.256033337 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.256974718 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.256938215 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.256343704 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.256857784 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.261828181 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.258898213 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.256472912 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.256337216 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.267174689 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.273709366 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.259740873 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.256240102 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.257550481 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.256164032 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.257884281 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.256845445 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.26170816 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.265853 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.259626001 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.268517427 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.257385367 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.269402149 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.256535558 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.259981762 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.266463041 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.253477476 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.255594919 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.258709473 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.256455747 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.268137772 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.27241601 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.258224514 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.262946048 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.256851503 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.257412545 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.25769876 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.255694428 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.257633701 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.257248075 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.270660682 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.279775944 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.262744706 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.260024986 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.255395116 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.257642676 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.257702688 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.25749113 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.264375811 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.257126079 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.260366314 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.25926613 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.259403037 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.257840048 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.258351413 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.257715336 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.255586588 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.25787728 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.27002964 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.27609306 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.26410321 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.259352092 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.271633488 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.259168709 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.270470576 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.277094139 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.264242692 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.259922166 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.260740734 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.266194025 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.262018546 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.263420597 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.261912367 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.263567613 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.267222368 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.262763095 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.269242724 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.263878078 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.261656925 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.261716008 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.273616442 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.289518509 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.265569585 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.267966251 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.261061995 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.264985062 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.267272087 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.261878949 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.2608406 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.263049318 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.273479589 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.268582723 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.261113255 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.260211201 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.261275007 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.261089111 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.260912918 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.260864696 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.260929208 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.262078243 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.2634746 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.260788453 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.267829357 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.260829744 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.261627134 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.263804728 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.262595069 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.27552372 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.261463447 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.262406585 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.259948898 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.260912187 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.262206535 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.26199699 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.262165842 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.263842553 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.261452645 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.262942755 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.270190599 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.270023647 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.265051735 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.261668306 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.261683802 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.263369279 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.263907184 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.261728285 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.26176701 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.262109394 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.264461091 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.262024985 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.266016481 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.261615662 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.262286551 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.26316616 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.261041478 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.265724184 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.272783936 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.263426836 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.259957298 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.262922848 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.261851904 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.262193616 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.264384149 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.27567232 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.266995136 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.274867418 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.273063905 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.267408026 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.264497257 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.266508315 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.274228948 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.262927677 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.265098925 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.263037296 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.26802105 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.264064696 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.267804235 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.263970877 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.274038803 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.265726639 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.264469736 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.27637916 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.285557878 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.263348153 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.264832474 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.26995988 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.264459235 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.262294449 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.264901079 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.264196801 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.275685933 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.285645613 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.26377317 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.267218053 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.263413823 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.26647701 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.268871527 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.266330689 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.266697498 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.262932538 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.264874966 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.264975388 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.265350343 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.263208764 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.265717008 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.266555171 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.267482091 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.274347048 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.263429581 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.269091185 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.26620213 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.265211963 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.265869614 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.26609643 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.264025253 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.262620863 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.266511248 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.264259029 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.268309909 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.26923588 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.265041827 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.266911711 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.267533732 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.266467828 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.270113723 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.279654872 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.275363802 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.263757107 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.265964219 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.26894233 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.270115285 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.265669929 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.26593264 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.267162475 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.270059837 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.265809201 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.266109837 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.267407114 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.270079055 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.289022024 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.287610839 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.268405678 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.268900228 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.274780307 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.267355802 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.265547619 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.268411165 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.272218155 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.27157175 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.2773162 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.267975415 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.275304734 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.285224479 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.2679498 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.273492592 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.271693495 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.279353652 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.272804995 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.267562276 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.267724476 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.273625579 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.289868596 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.269841881 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.278663222 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.305078763 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.287394488 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.271424411 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.26934623 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.268411316 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.269127399 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.272891886 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.269369988 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.26911356 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.268521525 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.269374346 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.270389531 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.276854498 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.271961468 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.26954226 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.269567981 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.271004798 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.273785179 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.266533121 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.268574768 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.270007423 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.268473174 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.268988012 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.270822185 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.269700657 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.285580439 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.284500965 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.269609281 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.269525028 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.266815227 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.275615889 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.273434296 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.28137965 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.277976841 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.269947638 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.269273175 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.272243531 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.270595255 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.267750551 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.271487974 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.270738516 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.270855133 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.268270919 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.286008048 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.280649764 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.278649288 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.273704256 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.270890456 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.27208845 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.274812418 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.270611914 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.270686417 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.274928894 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.271565656 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.275355578 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.271538691 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.270776841 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.27450055 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.28032397 seconds)
  done (took 751.499043101 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.269593662 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.268368873 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.269872961 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.269194955 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.269310809 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.269913793 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.26995015 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.269842115 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.269025041 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.26998887 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.269724673 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.269307176 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.26957557 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.270173426 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.2696231 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.270088112 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.26863819 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.269957527 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.270049973 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.269447708 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.269423325 seconds)
  done (took 27.862327195 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.273512581 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.269930729 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.270853605 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.27382869 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.270359517 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.272574453 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.269845172 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.272653681 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.274688358 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.270592413 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.273869309 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.274135458 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.271226726 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.270055203 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.270621555 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.272969494 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.273210683 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.270266621 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.273716421 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.270744025 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.273442866 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.271746332 seconds)
  done (took 29.187857826 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.274522958 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.274213672 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.273499005 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.272512563 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.274282361 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.270678549 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.27369544 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.273474344 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.27430196 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.276031149 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.274112984 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.275482995 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.28182195 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.280485605 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.277716898 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.275340715 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.419120108 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.275962691 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.2754798 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.27475823 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.27145245 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.283079007 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.273023599 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.273274831 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.27464181 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.274571049 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.275076204 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.274361442 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.276324721 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.276924342 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.281019115 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.275017766 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.27601969 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.277645451 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.27657972 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.276458029 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.280871003 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.276976364 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.273672725 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.275535079 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.285814737 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.299060013 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.277145314 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.285581279 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.2758442 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.275633113 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.280094081 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.286796855 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.273439966 seconds)
  done (took 63.912512464 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.276523202 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.276763784 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.274452992 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.27699496 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.27758399 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.276297232 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.276951026 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.277507921 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.275100385 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.274438198 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.277694589 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.274485618 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.27463161 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.277987969 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.275773713 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.275283029 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.274596454 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.273562402 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.274350337 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.274494519 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.274295831 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.276810247 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.277943627 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.27500598 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.276872689 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.275307513 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.274642332 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.277767606 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.275919092 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.274830915 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.277766861 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.277605593 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.278126706 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.275725247 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.275368463 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.276684626 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.27820625 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.275242441 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.277812765 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.275674791 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.277628601 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.277778585 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.278599273 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.279552723 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.276922705 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.277704604 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.276880917 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.276923877 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.276238635 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.279130395 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.278467953 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.276848224 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.278620698 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.275947072 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.278199839 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.27912441 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.277366656 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.276453749 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.278849508 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.276335928 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.276333049 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.279025568 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.276216687 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.2778249 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.27957991 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.277853983 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.276832831 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.27942743 seconds)
  done (took 88.027924386 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.279410105 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.279591605 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.279065705 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.28076714 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.280278217 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.279779942 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.279431994 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.280901448 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.280872823 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.279561082 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.28098299 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.281364205 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.27996685 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.282434024 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.281541363 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.281595073 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.280969898 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.281081076 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.281355347 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.280879912 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.281593303 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.281882327 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.28176753 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.281262705 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.281689076 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.281679884 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.280917835 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.281564515 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.282110663 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.281474599 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.2822643 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.280932661 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.282655739 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.281901359 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.281747364 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.281557608 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.281406599 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.281030998 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.281345857 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.281775337 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.282328529 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.282046961 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.28271886 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.281278002 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.280987292 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.281785172 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.281530916 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.282758705 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.282371415 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.28238169 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.281798741 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.281466783 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.28284481 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.283148112 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.282046444 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.282519902 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.282564372 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.28285257 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.282271206 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.28265569 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.283448155 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.283898637 seconds)
  done (took 80.667189235 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.283308844 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.283049331 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.280429445 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.280977717 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.283229131 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.280463323 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.283663475 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.28342253 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.282842912 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.283475175 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.283794327 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.28086822 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.28080825 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.283843688 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.280768032 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.28115162 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.281693361 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.282103105 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.284922822 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.281982592 seconds)
  done (took 26.85880188 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.281995881 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.285531442 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.281757756 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.282599397 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.28396345 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.282249249 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.284690754 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.284517735 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.282612844 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.285050092 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.28472349 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.284759927 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.283046677 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.282319232 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.284298036 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.282812013 seconds)
  done (took 21.749583593 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.282532852 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.284907564 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.285463426 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.285993595 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.282595814 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.282537591 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.285648085 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.282512589 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.282473664 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.285641999 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.285854013 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.285648563 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.285758858 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.285192171 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.283825981 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.285130986 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.283392725 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.282327319 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.285847877 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.28626913 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.285341611 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.283705881 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.285642884 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.285966409 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.283835924 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.284556445 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.284273404 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.283714633 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.283535809 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.286083091 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.284365299 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.28418558 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.284860292 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.283491188 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.287107554 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.284848222 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.28735978 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.287481167 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.288040188 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.286504757 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.286748302 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.284732254 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.287092087 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.287773234 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.286694169 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.287839311 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.284408017 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.285025753 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.283985385 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.284950427 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.287099388 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.286443197 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.28783196 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.288166145 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.288199171 seconds)
  done (took 71.90754361 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.28915528 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.289078849 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.286286543 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.288385493 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.288493664 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.286231053 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.289106756 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.286017855 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.285565815 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.288893111 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.287501508 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.288900726 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.286385771 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.28835184 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.286570401 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.288059253 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.285567007 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.286863214 seconds)
  done (took 24.393187462 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.287137112 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.286799685 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.289651576 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.286669279 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.285742729 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.288778136 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.285812559 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.288701398 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.289724143 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.287540371 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.287550001 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.289171374 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.28884076 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.289236505 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.287655425 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.287514897 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.290212604 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.288463023 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.287869538 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.286886589 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.289449102 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.290208417 seconds)
  done (took 29.557504349 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.288483787 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.289932527 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.306749359 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.338137484 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.323210654 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.288405674 seconds)
  done (took 9.053460518 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.287961883 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.29082425 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.288836351 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.290495656 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.289980544 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.287223781 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.286707567 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.288433197 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.289967803 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.288597243 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.288091956 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.29116068 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.291442483 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.289044645 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.290311222 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.290731473 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.28817079 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.288526911 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.28855734 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.29085106 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.288529046 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.292202258 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.288624542 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.289304432 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.289217656 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.289698884 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.291025049 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.290293651 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.289484032 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.291909129 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.292095557 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.289447344 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.291889757 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.29029506 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.293592206 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.292651223 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.289518374 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.293001642 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.291870645 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.290331246 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.292337244 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.291793883 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.292738075 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.289548711 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.292868103 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.289502853 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.289774972 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.29040085 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.289984284 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.293949976 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.293072075 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.290311463 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.292034206 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.292993019 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.292528623 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.293205506 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.290389676 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.29180374 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.292788816 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.289918764 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.290439942 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.293959322 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.290543005 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.291775598 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.293772607 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.290881802 seconds)
  done (took 86.404797003 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.290927765 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.291877444 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.290895704 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.292934567 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.291148852 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.291704899 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.291242557 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.291236417 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.291425411 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.292262352 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.294737392 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.291506062 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.291204082 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.293255479 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.291333628 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.292323782 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.292061208 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.292531452 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.292783554 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.295500793 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.292796561 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.292050781 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.293058478 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.292833503 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.29328659 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.295401387 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.292839164 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.292889352 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.293114584 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.292744071 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.29301908 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.293574397 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.293737999 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.293550191 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.292367705 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.293280725 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.293122631 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.292921909 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.292891881 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.295995117 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.293141577 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.297168648 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.292933333 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.294076507 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.29329442 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.294327188 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.294111631 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.293185188 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.293569589 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.294155877 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.293672679 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.294235326 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.293791198 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.293496965 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.294463744 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.294194439 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.294101404 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.29345701 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.294710059 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.29660456 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.294071947 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.294311095 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.298276635 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.294058033 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.294697486 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.29494187 seconds)
  done (took 86.585149072 seconds)
done (took 1751.477638983 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.365272971 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.336763053 seconds)
  done (took 13.926248019 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.455985998 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.410456854 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.295864654 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.298916907 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.292237373 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.298336081 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.310069489 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.291786769 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.296626817 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.295809932 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.295675872 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.483862163 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.294386191 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.292561756 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.296922047 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.38912112 seconds)
  done (took 42.531816831 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.336860503 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.301815681 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.434049468 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.317603509 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.336718298 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.504726375 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.350939716 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.301358372 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.472325488 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.349340861 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.867998016 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.332980204 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.303925904 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.41380041 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.315858037 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.508091062 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.560805029 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.868453767 seconds)
  done (took 30.10364928 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.744968038 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.317670356 seconds)
  done (took 9.289467519 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.320703848 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.302914208 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.312620667 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.327992625 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.324669528 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.309434022 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.326724698 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.31410593 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.30483164 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.310721107 seconds)
  done (took 64.390410598 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.32165296 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.30265726 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.302653608 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.299869866 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.292988866 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.289254312 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.301313145 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.296012792 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.874932187 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.426744852 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.321143642 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.308714445 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.302743156 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.301921346 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.299988708 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.338487512 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.438068086 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.299371651 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.299098032 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.307505282 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.302464833 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.387766495 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.33608706 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.299873843 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.426376464 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.902683727 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.304774191 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.30886798 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.43234523 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.299729861 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.300874218 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.302615208 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.303909787 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.865836352 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.791561978 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.308868871 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.322572909 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.311314089 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.299142609 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.413999123 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.304398758 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.309514244 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.29452678 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.764000126 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.456750904 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.416151425 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.581830203 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.300820915 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.303622731 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.36509935 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.30372755 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.304066125 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.333544148 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.079190336 seconds)
  done (took 109.495080849 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.326998518 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.782101088 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.465914707 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.313419596 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.820613408 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.762259669 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.292515547 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.582726426 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.313685758 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.78244954 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.585364766 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.661119483 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.293921276 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.296439304 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.293036655 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.292074935 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.562755557 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.611665894 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.292729149 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.299587233 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.347948342 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.818177297 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.535862936 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.483993938 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.33498435 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.76132066 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.537287507 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.66628107 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.293281238 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.292370999 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.618653728 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.298325457 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.298410366 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.295911716 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.587388546 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.653393424 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.646329902 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.294972237 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.297699542 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.297208478 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.315850048 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.772582211 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.658235777 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.556004885 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.675856189 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.788975146 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.299997123 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.296680374 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.297756027 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.509615145 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.541528595 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.823558325 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.545530346 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.312100345 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.564719943 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.299571936 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.386240037 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.805353335 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.648647815 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.673502664 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.34912228 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.297096973 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.294983528 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.875436812 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.303363773 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.659762886 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.549176876 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.300591353 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.664450203 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.667506597 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.652300849 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.808567061 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.342559592 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.315820536 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.357203403 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.841189463 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.62155419 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.805928844 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.347436607 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.295721412 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.650749295 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.303037661 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.589827516 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.881862586 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.821819121 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.354367698 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.319927107 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.299888656 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.808678938 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.804782557 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.550090771 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.683266405 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.59654419 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.367013121 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.300908108 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.300214978 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.304881651 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.55187114 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.311302726 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.662254549 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.807298407 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.07626599 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.348030206 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.874311831 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.558834429 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.310614756 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.301030786 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.302807479 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.521825728 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.373068295 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.319944855 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.30042081 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.804397536 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.173093373 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.440708449 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.008988207 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.62419069 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.304121399 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.825178472 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.306152025 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.80786832 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.322879107 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.869737174 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.656319332 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.360723247 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.526803493 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.688730888 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.315376146 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.826021881 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.878215826 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.550408154 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.815750299 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.062591606 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.303974399 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.854280833 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.341802725 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.342389292 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.488419047 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.330126686 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.596627701 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.325617591 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.831518692 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.340993445 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.595842019 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.482428459 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.836720686 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.360898962 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.622734622 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.343120448 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.447659868 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.320418404 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.325035657 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.502142886 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.435773124 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.302532454 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.855538002 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.304115798 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.463998261 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.876808778 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.340904314 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.632595775 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.30467165 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.304093711 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.657249261 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.345069961 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.936888648 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.304852419 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.594917748 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.265280528 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.743547573 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.304228559 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.877058848 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.526963374 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.325148214 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.300853963 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.106708612 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.304555722 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.439536466 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.479287543 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.955294024 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.303715774 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.784158118 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.306731759 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.561048879 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.320907094 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.300913261 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.658462543 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.372398037 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.30437984 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.309678082 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.304936119 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.3053611 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.800285509 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.346935782 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.023936432 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.460533998 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.829981527 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 1.614636838 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.831648258 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.364390174 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.325435745 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.823109737 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.332579751 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.629615993 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.306592242 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.346823994 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.809490738 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.306827161 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.791011107 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.852495969 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.326164764 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.607033813 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.305857797 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.417060572 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.304141629 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.574043394 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.666170126 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.303734677 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.308814318 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.544846474 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.568858425 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.524688873 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.325497745 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.35322494 seconds)
  done (took 845.719236512 seconds)
done (took 1116.681816533 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.307305287 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.304399388 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.295926453 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.305986806 seconds)
  done (took 26.454795961 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.315719181 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.313556074 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.313460113 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.312932233 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.316369879 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.313834228 seconds)
  done (took 9.129208781 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.367735583 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.303543076 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.307339805 seconds)
  done (took 19.220702287 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.544871093 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.591448503 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.703676238 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.494976468 seconds)
  done (took 10.578498655 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.313861759 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.315679275 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.31639095 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.318127161 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.318060898 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.320068898 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.316844547 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.317031682 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.318479633 seconds)
  done (took 13.096246951 seconds)
  (6/6) benchmarking "26942"...
  done (took 5.26910656 seconds)
done (took 84.990370987 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.523003293 seconds)
    (2/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.37281269 seconds)
    (3/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.372418846 seconds)
    (4/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.746471644 seconds)
    (5/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.193426894 seconds)
    (6/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.335765366 seconds)
    (7/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.318173513 seconds)
    (8/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.309915116 seconds)
    (9/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.56071561 seconds)
    (10/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.151885279 seconds)
    (11/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.543029809 seconds)
    (12/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.346013567 seconds)
    (13/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.309377385 seconds)
    (14/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.838747828 seconds)
    (15/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.335015121 seconds)
    (16/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.645058844 seconds)
    (17/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.295383007 seconds)
    (18/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.25896232 seconds)
    (19/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.725301898 seconds)
    (20/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.295339945 seconds)
    (21/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.29261187 seconds)
    (22/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.177339208 seconds)
    (23/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.358786051 seconds)
    (24/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.325397269 seconds)
    (25/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.798635576 seconds)
    (26/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.299366199 seconds)
    (27/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 5.513816337 seconds)
    (28/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.699221193 seconds)
    (29/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.897602212 seconds)
    (30/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.305944031 seconds)
    (31/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.473170887 seconds)
    (32/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.262648383 seconds)
    (33/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.373847307 seconds)
    (34/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.029059335 seconds)
    (35/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.688283313 seconds)
    (36/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.738006793 seconds)
    (37/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.714166722 seconds)
    (38/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.805866047 seconds)
    (39/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.828568646 seconds)
    (40/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.330584565 seconds)
    (41/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.684224411 seconds)
    (42/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.902023607 seconds)
    (43/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.345822217 seconds)
    (44/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.801252895 seconds)
    (45/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.318534172 seconds)
    (46/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.442109719 seconds)
    (47/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.329174273 seconds)
    (48/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.84959153 seconds)
    (49/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.896373726 seconds)
    (50/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.92692692 seconds)
    (51/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.338390655 seconds)
    (52/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.324630859 seconds)
    (53/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.43571577 seconds)
    (54/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.296638459 seconds)
    (55/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.38337061 seconds)
    (56/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.29542475 seconds)
    (57/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.68867933 seconds)
    (58/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.734289408 seconds)
    (59/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.517481493 seconds)
    (60/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.170344738 seconds)
    (61/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.440003919 seconds)
    (62/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.567753613 seconds)
    (63/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.315606537 seconds)
    (64/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.38679538 seconds)
    (65/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.900833529 seconds)
    (66/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.13804831 seconds)
    (67/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.317773822 seconds)
    (68/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.411429485 seconds)
    (69/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.322537852 seconds)
    (70/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.390722581 seconds)
    (71/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.69488357 seconds)
    (72/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.418360659 seconds)
    (73/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.369526975 seconds)
    (74/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 3.889959781 seconds)
    (75/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.502247419 seconds)
    (76/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.509045841 seconds)
    (77/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.416635739 seconds)
    (78/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.08682155 seconds)
    (79/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.278501452 seconds)
    (80/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.613661512 seconds)
    (81/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.339279718 seconds)
    (82/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.312954229 seconds)
    (83/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.337469885 seconds)
    (84/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.880016034 seconds)
    (85/309) benchmarking ("sort", Int64, false)...
    done (took 5.512404172 seconds)
    (86/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.418567896 seconds)
    (87/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.660912116 seconds)
    (88/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.309612638 seconds)
    (89/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.471169509 seconds)
    (90/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.633551037 seconds)
    (91/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.228322928 seconds)
    (92/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.314739749 seconds)
    (93/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 4.367908532 seconds)
    (94/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.359171082 seconds)
    (95/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.298904765 seconds)
    (96/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.490490751 seconds)
    (97/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.359144073 seconds)
    (98/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 3.852404359 seconds)
    (99/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.342155148 seconds)
    (100/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.313379115 seconds)
    (101/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.774420299 seconds)
    (102/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.980579762 seconds)
    (103/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.393626297 seconds)
    (104/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.424277378 seconds)
    (105/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.313762652 seconds)
    (106/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.346374467 seconds)
    (107/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.932197407 seconds)
    (108/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.299590702 seconds)
    (109/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.418853355 seconds)
    (110/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.527661791 seconds)
    (111/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 4.137872476 seconds)
    (112/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.694688223 seconds)
    (113/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.315145117 seconds)
    (114/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.914393983 seconds)
    (115/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.341672361 seconds)
    (116/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.669999088 seconds)
    (117/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.634577588 seconds)
    (118/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.977789759 seconds)
    (119/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.144774556 seconds)
    (120/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.888718785 seconds)
    (121/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 4.376131514 seconds)
    (122/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.921780745 seconds)
    (123/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.408024938 seconds)
    (124/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.387708621 seconds)
    (125/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.69495753 seconds)
    (126/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.508182869 seconds)
    (127/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.359344021 seconds)
    (128/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.300576014 seconds)
    (129/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.980453045 seconds)
    (130/309) benchmarking ("sort", Bool, false)...
    done (took 1.828515723 seconds)
    (131/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.809290644 seconds)
    (132/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.338760194 seconds)
    (133/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.601043087 seconds)
    (134/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.591404741 seconds)
    (135/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.316294328 seconds)
    (136/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.317010763 seconds)
    (137/309) benchmarking ("sort", BigInt, false)...
    done (took 6.31429322 seconds)
    (138/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.801575558 seconds)
    (139/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.632594546 seconds)
    (140/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.101827013 seconds)
    (141/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.596702819 seconds)
    (142/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.365080904 seconds)
    (143/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.341566507 seconds)
    (144/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.100510876 seconds)
    (145/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.400945758 seconds)
    (146/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.392359758 seconds)
    (147/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.460765515 seconds)
    (148/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.978479774 seconds)
    (149/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.299938205 seconds)
    (150/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.483150123 seconds)
    (151/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.949484924 seconds)
    (152/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.191372826 seconds)
    (153/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.394662515 seconds)
    (154/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.344095733 seconds)
    (155/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.0864779 seconds)
    (156/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.76100165 seconds)
    (157/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.324972715 seconds)
    (158/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.704486901 seconds)
    (159/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.415098319 seconds)
    (160/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.720119754 seconds)
    (161/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.699492192 seconds)
    (162/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.340039731 seconds)
    (163/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.317216245 seconds)
    (164/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.318577295 seconds)
    (165/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.439181964 seconds)
    (166/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.839656713 seconds)
    (167/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.317758514 seconds)
    (168/309) benchmarking ("sort", Int8, false)...
    done (took 4.337814659 seconds)
    (169/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.088199701 seconds)
    (170/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 3.798187596 seconds)
    (171/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.7069399 seconds)
    (172/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.79702464 seconds)
    (173/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.727226028 seconds)
    (174/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.145507616 seconds)
    (175/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.313909025 seconds)
    (176/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.958479264 seconds)
    (177/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.72661667 seconds)
    (178/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.331900149 seconds)
    (179/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.362727165 seconds)
    (180/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.319590213 seconds)
    (181/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.932635037 seconds)
    (182/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.120083988 seconds)
    (183/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.574517765 seconds)
    (184/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.738074309 seconds)
    (185/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.418514458 seconds)
    (186/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.317766393 seconds)
    (187/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.725718391 seconds)
    (188/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.36389423 seconds)
    (189/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.318251527 seconds)
    (190/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.347066786 seconds)
    (191/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.345104037 seconds)
    (192/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 3.89498322 seconds)
    (193/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.450995711 seconds)
    (194/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.360178835 seconds)
    (195/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.981963658 seconds)
    (196/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.727190947 seconds)
    (197/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.638458458 seconds)
    (198/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.416015338 seconds)
    (199/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.376010581 seconds)
    (200/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.335309588 seconds)
    (201/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.401915668 seconds)
    (202/309) benchmarking ("sort", Float32, false)...
    done (took 5.346654993 seconds)
    (203/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.347059361 seconds)
    (204/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.416241123 seconds)
    (205/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.404434013 seconds)
    (206/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.20147624 seconds)
    (207/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.679593149 seconds)
    (208/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.53551865 seconds)
    (209/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.274189649 seconds)
    (210/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.856101526 seconds)
    (211/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.527660522 seconds)
    (212/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.419519574 seconds)
    (213/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.617892948 seconds)
    (214/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.3208953 seconds)
    (215/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.360015714 seconds)
    (216/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.319608217 seconds)
    (217/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.316279786 seconds)
    (218/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.009545933 seconds)
    (219/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.326347584 seconds)
    (220/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.640312166 seconds)
    (221/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.343885397 seconds)
    (222/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.233713384 seconds)
    (223/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.461092059 seconds)
    (224/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.36047714 seconds)
    (225/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 4.280372507 seconds)
    (226/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.743986846 seconds)
    (227/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.978445262 seconds)
    (228/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.320571668 seconds)
    (229/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 4.436000332 seconds)
    (230/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.303830906 seconds)
    (231/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.682354238 seconds)
    (232/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 5.974601468 seconds)
    (233/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.755691808 seconds)
    (234/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.25513116 seconds)
    (235/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.438025706 seconds)
    (236/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.125087957 seconds)
    (237/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.337906048 seconds)
    (238/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.322362627 seconds)
    (239/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.174864527 seconds)
    (240/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.362074236 seconds)
    (241/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.082555032 seconds)
    (242/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.509958924 seconds)
    (243/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.323427727 seconds)
    (244/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.947861124 seconds)
    (245/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.375046666 seconds)
    (246/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.955511769 seconds)
    (247/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.466100796 seconds)
    (248/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.540915629 seconds)
    (249/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.336374036 seconds)
    (250/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.461073216 seconds)
    (251/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.380526936 seconds)
    (252/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.349279042 seconds)
    (253/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.997247716 seconds)
    (254/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.327985386 seconds)
    (255/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.713371915 seconds)
    (256/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.234862372 seconds)
    (257/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.380922299 seconds)
    (258/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.345041895 seconds)
    (259/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.489754659 seconds)
    (260/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.386223995 seconds)
    (261/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.407181934 seconds)
    (262/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.685561217 seconds)
    (263/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.39078062 seconds)
    (264/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.346350652 seconds)
    (265/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.187220644 seconds)
    (266/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.695458209 seconds)
    (267/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.321762002 seconds)
    (268/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.743928479 seconds)
    (269/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.931318417 seconds)
    (270/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.308325412 seconds)
    (271/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.322291574 seconds)
    (272/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.137297824 seconds)
    (273/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.323928153 seconds)
    (274/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.443492875 seconds)
    (275/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.41509906 seconds)
    (276/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.411302466 seconds)
    (277/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.405627537 seconds)
    (278/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.349309177 seconds)
    (279/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.758744364 seconds)
    (280/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.374574615 seconds)
    (281/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.051947841 seconds)
    (282/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.454546029 seconds)
    (283/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.406742636 seconds)
    (284/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.309170971 seconds)
    (285/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.357917079 seconds)
    (286/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 4.304499708 seconds)
    (287/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 4.500972446 seconds)
    (288/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.210331824 seconds)
    (289/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.309609089 seconds)
    (290/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.612641924 seconds)
    (291/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.667836196 seconds)
    (292/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.631603091 seconds)
    (293/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.927937968 seconds)
    (294/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.366500125 seconds)
    (295/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.765652248 seconds)
    (296/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.695317816 seconds)
    (297/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.697636178 seconds)
    (298/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.309900448 seconds)
    (299/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.338739794 seconds)
    (300/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.456316582 seconds)
    (301/309) benchmarking ("sort", Float64, false)...
    done (took 5.655614654 seconds)
    (302/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.432893336 seconds)
    (303/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.554310933 seconds)
    (304/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.810275328 seconds)
    (305/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.366212537 seconds)
    (306/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.325639905 seconds)
    (307/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.745696928 seconds)
    (308/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.946630084 seconds)
    (309/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.189957576 seconds)
  done (took 928.594207491 seconds)
done (took 929.838676177 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.357732453 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.350899135 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.335863097 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.356760975 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.446230757 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.364259153 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.346562197 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.337759778 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.383132743 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.384831673 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.333205713 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.362569652 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.337632927 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.335624054 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.335967286 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.34890301 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.396076174 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.336529186 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.353449682 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.34602866 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.352525999 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.334510843 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.384945482 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.363986574 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.339826606 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.339464205 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.339483737 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.356342001 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.4482056 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.339340065 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.338372337 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.349318088 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.396973114 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.334159607 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.330878163 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.356609928 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.348021301 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.347906792 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.340464717 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.368342443 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.751758935 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.333299951 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.338893084 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.338465182 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.33780978 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.345363768 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.338514022 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.3460656 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.350637063 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.35196719 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.746734725 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.348855483 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.341527292 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.338688658 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.348786179 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.338618377 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.343673147 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.353816596 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.357669632 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.354894242 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.394029113 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.345193344 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.341392447 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.354811758 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.345979368 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.796815207 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.330385295 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.34407028 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.818806932 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.346294488 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.80219549 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.342098941 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.341210234 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.352398212 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.371180535 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.40334004 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.33443283 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.338752394 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.345960547 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.337631965 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.350478853 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.351622544 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.345028821 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.341138131 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.351851355 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.369090199 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.349449711 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.340883351 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.352036909 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.359589431 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.346701061 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.351830834 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.343933971 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.334782167 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.35054805 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.344128774 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.341756248 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.343605514 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.34532559 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.351524223 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.790822592 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.353430734 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.336652423 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.337583047 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.340742694 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.354334438 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.817853238 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.341679223 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.363447412 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.389034564 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.342603287 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.398985643 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.344108312 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.3575143 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.35153435 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.344189825 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.336566407 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.399625452 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.753251316 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.350303289 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.344328872 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.34015467 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.35783386 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.344983644 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.33966105 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.409246589 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.342979043 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.355146443 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.463069882 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.353430591 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.374231989 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.340485613 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.346109735 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.370887348 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.35798056 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.373568207 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.345953819 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.35861233 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.358288859 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.339237364 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.355175904 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.35354225 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.344246928 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.349310722 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.337026988 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.374803182 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.355683774 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.355412 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.364247999 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.463017364 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.339803915 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.400687919 seconds)
done (took 226.597563217 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.408338623 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.332933644 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.446044405 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.340503658 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.446548596 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.440849948 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.338719502 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.33875922 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.338574329 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.718161003 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.339046118 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.339166447 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.334571021 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.33763956 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.430303572 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.343135524 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.338989859 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.684643376 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.34227766 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.422313966 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.340647875 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.339038436 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.339737284 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.72340877 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.339862689 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.339376493 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.413953483 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.341400662 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.687151257 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.337388853 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.336310633 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.694076969 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.433936922 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.359447059 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.350940808 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.349796511 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.44375927 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.359118381 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.423944182 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.430908163 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.448764657 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.380270017 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.340389812 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.341646713 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.343606711 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.342900467 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.340391032 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.370008001 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.340793123 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.340820344 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.687824194 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.353131987 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.351120115 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.340697882 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.339895675 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.362877949 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.341017224 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.343314439 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.447838618 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.343626563 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.407296791 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.725095446 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.722953544 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.344471051 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.339970605 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.341969549 seconds)
  done (took 149.096340189 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.412359883 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.418528493 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.458858838 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.345148197 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.394291051 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.466798384 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.345111322 seconds)
  done (took 11.111426293 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.351477511 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.34469716 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.394761994 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.395699274 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.344301567 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.492204072 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.345654922 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.355689534 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.342335298 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.397779529 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.346130854 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.34534737 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.351600288 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.341869537 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.393467067 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.356055792 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.460345514 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.345346736 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.344348989 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.496428262 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.342690736 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.352819361 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.396447451 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.357619677 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.346712543 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.352035614 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.928024991 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.350604009 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.346877377 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.34801358 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.344870435 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.384262613 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.347247338 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.344024679 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.343804052 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.462226613 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.346180193 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.343823693 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.346667528 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.345087652 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.347497371 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.346727571 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.347756947 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.344052037 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.346218685 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.37054676 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.347057539 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.347323287 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.34666938 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.347797332 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.39668702 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.348494506 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.344261648 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.344359584 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.402540669 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.354146023 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.346542919 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.344323402 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.348343221 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.344792272 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.498501695 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.395104545 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.347756363 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.395425411 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.347038835 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.348091943 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.348078308 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.347056603 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.403047324 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.347751097 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.396130346 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.345838502 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.502438304 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.37198395 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.349053174 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.35128083 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.351450307 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.347736947 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.348038305 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.355076328 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.346196126 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.349103714 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.353802364 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.346033952 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.345504403 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.451399972 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.458446633 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.346917375 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.361110032 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.357759647 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.347875384 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.404708129 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.348895188 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.34634677 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.40090893 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.465042632 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.40381855 seconds)
  done (took 154.546288361 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.353965959 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.358704913 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.351252206 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.367685128 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.349373172 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.350001139 seconds)
  done (took 9.405258507 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.351607208 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.35235897 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.348901115 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.349021586 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.34893801 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.350199118 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.349029146 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.350678147 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.353119535 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.349427859 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.349632384 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.351818376 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.351598918 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.350429207 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.351842656 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.350420179 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.351353453 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.347337614 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.351039962 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.350514373 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.455644766 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.35020179 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.350315957 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.352844891 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.354910163 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.350910797 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.359413429 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.351175109 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.350785322 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.356883832 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.353676294 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.352111535 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.352959515 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.358688555 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.355655343 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.353851245 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.355674898 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.354072541 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.812391454 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.351374341 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.353388444 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.352931417 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.352716403 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.353431495 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.354680011 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.358213814 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.3580854 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.360750541 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.351303882 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.353365778 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.354740271 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.353566226 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.35202244 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.35366392 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.356240947 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.357451716 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.358418907 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.352364151 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.35265758 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.354120985 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.354419638 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.352589593 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.354406248 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.357837891 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.350139681 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.353465171 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.354634656 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.357445063 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.351551076 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.352697024 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.355110096 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.35136574 seconds)
  done (took 100.261104725 seconds)
done (took 425.687609844 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.467431826 seconds)
  done (took 7.74559876 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.463730935 seconds)
  done (took 7.744187731 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 20.076572002 seconds)
  done (took 21.360998498 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.376106222 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.392798328 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.35789574 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.340050939 seconds)
  done (took 26.745443271 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.764556799 seconds)
  done (took 8.044852441 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.343626358 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.340289015 seconds)
  done (took 13.96414196 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.411719963 seconds)
  done (took 7.690556587 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.84069427 seconds)
  done (took 8.125166321 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.346129002 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.382030499 seconds)
  done (took 14.27663031 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.347920626 seconds)
  done (took 7.628822196 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.447768165 seconds)
  done (took 8.727718971 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.344726884 seconds)
  done (took 7.625442211 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.401240524 seconds)
  done (took 7.680285645 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.198193657 seconds)
  done (took 9.478180879 seconds)
done (took 158.11769049 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.345980268 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.347367652 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.349295449 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.347180967 seconds)
  done (took 26.668321812 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.387052062 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.387734167 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.388511328 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.399183992 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.391180603 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.387740911 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.380107393 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.379846674 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.399718143 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.391180616 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.390464837 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.390089935 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.389050659 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.380763048 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.389973619 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.390904056 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.39910222 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.390094761 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.381086395 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.392097311 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.355852655 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.399375242 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.392980575 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.355920095 seconds)
  done (took 34.572196582 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.551901096 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.427215952 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.511100385 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.410631597 seconds)
  done (took 7.182755554 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.407327001 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.409732026 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.423859951 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.462436064 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.487633754 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.418630689 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.384062052 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.378600865 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.363961595 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.409977039 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.485663604 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.425084088 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.497841613 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.356317062 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.543752956 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.356103816 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.356510433 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.408865507 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.460083725 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.476343315 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.357413829 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.408658906 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.415259299 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.425528136 seconds)
  done (took 35.401894937 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.354632638 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.363946526 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.361865071 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.356071169 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.355605855 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.355942292 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.361200949 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.357394666 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.376328077 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.35762324 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.355813052 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.356271562 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.354988971 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.356213913 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.355642535 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.368329947 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.368627314 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.355495218 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.359772488 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.362304027 seconds)
  done (took 28.476814366 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.35079516 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 5.261717195 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.70227108 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.607046664 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.351233144 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.344379852 seconds)
  done (took 28.900701067 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.425765528 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.553372119 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.35257297 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.732610901 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.8133754 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.358644773 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.359196141 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.593142857 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.90649136 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.914499067 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.413350475 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.412919241 seconds)
  done (took 20.118658152 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.359296705 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.350606402 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.360573786 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.367941606 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.414708017 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.362220937 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.365191369 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.352262899 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.415072042 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.418820934 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.361533504 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.417100355 seconds)
  done (took 37.831902635 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.439478191 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.402993301 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.384507328 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.227951433 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.759758349 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.559768131 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.265636769 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.800637168 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.352340066 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.627499118 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.352652845 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.443107644 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.612921946 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.353993953 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.350382006 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.408460912 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.580965903 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.845625983 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.355882205 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.373570307 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.379487672 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.365824662 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.574477567 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.382856058 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.567032495 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.49187748 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.614884054 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.353998856 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.641909004 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.365641645 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.365641048 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.354267444 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.629956209 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.041264666 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.442927415 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.365434814 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.25345951 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.067624888 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.343801034 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.487417746 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.358775813 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.356970191 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.367701534 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.355617495 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.291462666 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.360810997 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.821388173 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.358789824 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.067251106 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.356036044 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.367114146 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.449282608 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.360210723 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.175234964 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.525185738 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.350177755 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.352668729 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.362089211 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.926067725 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.991660747 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.362844219 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.292204038 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.526205629 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.483526492 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.008934124 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.459339331 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.360265211 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.359868337 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.303207288 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.454052864 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.374008905 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.696262447 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.37286852 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.015116174 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.097295298 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.354239364 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.299865696 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.910489398 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.362820636 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.292860004 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.586973787 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.356325366 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.298307551 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.304632659 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.292384728 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.076805505 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.366975347 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.756383949 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.360833892 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.809486648 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.364497561 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.376057055 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.381258169 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.583295422 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.24222721 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.358825542 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.35949844 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.480221517 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.376090008 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.816521654 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.302618586 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.357845556 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.618145671 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.570169951 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.37263864 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.410007078 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.567863761 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.370020825 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.374768269 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.36210279 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.369658501 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.957183418 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.371955251 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.991673374 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.376975767 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.359892515 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.114469841 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.375423983 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.461210317 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.359706735 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.615815724 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.161203702 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.361858743 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.442010791 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.36424265 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.359268837 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.502821436 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.879310537 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.359716454 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.362467418 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.359726931 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.3727752 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.361544147 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.358024366 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.352311618 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.361014389 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.362712834 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.586275386 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.360491082 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.637360021 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.296472651 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.699952412 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.420739219 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.580498449 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.639568135 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.360230142 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.624088082 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.362075408 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.37121706 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.371999929 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.381252077 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.459158824 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.383420896 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.368435716 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.621790525 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.365338899 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.365487423 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.53399172 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.364275828 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.369891043 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.368103283 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.326109659 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.95570324 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.336000443 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.366616817 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.257514881 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.376995395 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.427136914 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.368054649 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.373656512 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.239141266 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.359799484 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.362168383 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.370319501 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.587942011 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.374219308 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.522036609 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.443229514 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.574243634 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.958182276 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.37689404 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.29852161 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.074805535 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.056393018 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.362531721 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.298820587 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.363184607 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.373299798 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.373588083 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.685949583 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.965213492 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.365294712 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.430126945 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.368401337 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.375476674 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.369488997 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.364924461 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.235678984 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.88207185 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.374550486 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.374560367 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.507115889 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.378234033 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.299380257 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.36706148 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.368961873 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.363728097 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.364862661 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.397030584 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.433512836 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.876505663 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.624025541 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.222575719 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.376733528 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.631995141 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.396906507 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.368098248 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.364507408 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.380787766 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.38556331 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.374976902 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.377696708 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.512364777 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.035037431 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.928064382 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.145615181 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.908899152 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.343939311 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.375172625 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.367367167 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.826086674 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.297164248 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.925807077 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.563408058 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.827625405 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.354296717 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.582127888 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.63966179 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.165308049 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.376973047 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.596748177 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.336505232 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.372707766 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.377967319 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.578990914 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.40110093 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.372645709 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.306156065 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.648451036 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.624947734 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.362961184 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.448829641 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.827721812 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.36131338 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.388273319 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.365888349 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.752857 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.551277417 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.083491571 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.576306406 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.362228596 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.370185344 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.868777132 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.371680077 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.598333782 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.019276644 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.370054641 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.580995177 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.30380877 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.379665678 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.378213515 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.369507902 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.756780102 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.37789704 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.624464524 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.378618828 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.302456341 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.366634899 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.91815433 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.231531961 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.37511263 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.368428854 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.127315357 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.371355607 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.658653094 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.370982764 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.238543046 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.370093512 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.302753146 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.303316375 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.062523056 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.377003191 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.340833133 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.862812666 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.483052881 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.482338387 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.385329596 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.592655911 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.62877948 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.383494691 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.972674493 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.601625869 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.346875331 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.388054874 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.469185614 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.383480408 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.355585664 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.36933526 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.60775389 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.34095841 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.592234788 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.403454553 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.281096235 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.367787387 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.578906466 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.369738897 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.383786185 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.626572836 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.082475541 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.370469669 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.1433466 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.390423903 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.371955232 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.292059418 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.536075205 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.377394863 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.451470374 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.382179565 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.381531244 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.381622535 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.552487999 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.367541891 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.373222609 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.385600615 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.464934963 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.058322308 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.239986767 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.375059533 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.983385411 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.128914713 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.977841003 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.384568888 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.371003328 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.371441812 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.315549192 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.516364141 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.602741844 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.645795878 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.490717009 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.580593772 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.394194593 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.371320684 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.395205223 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.585607538 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.647691139 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.272699155 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.371561278 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.386236677 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.372614175 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.382470753 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.584349014 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.874064203 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.945346068 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.500615975 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.372195979 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.83371035 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.644632881 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.372326091 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.374866508 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.970069899 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.387803613 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.779913612 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.380481551 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.374705338 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.522792314 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.385394591 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.070307635 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.380052259 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.531262495 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.147848781 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.473890034 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.632573229 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.801094288 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.381683651 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.986050715 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.111893285 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.642773973 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.441523637 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.387190016 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.490738194 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.521880603 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.385626544 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.374521483 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.375794795 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.430427754 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.086290949 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.38485442 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.993383576 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.640859663 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.373794158 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.372616716 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.398881978 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.386448066 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.601352656 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.111023873 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.603366976 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.388329613 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.38477197 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.194862908 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.98723867 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.389292752 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.321803729 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.375146833 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.631934727 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.614340716 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.398930617 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.829940109 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.085987489 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.949133323 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.352592554 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.398908652 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.390377973 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.115525458 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.990005815 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.259012118 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.877871031 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.939892442 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.379997542 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.651326212 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.382524769 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.378178892 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.653792388 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.380967894 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.380570367 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.389775669 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.98393448 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.183813441 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.394079108 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.497463546 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.31546219 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.723543352 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.106569601 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.322712034 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.382042982 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.573022715 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.373192461 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.500264211 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.384456902 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.390634931 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.383397096 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.134226681 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.670198176 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.378449198 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.374167169 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.365585927 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.380173441 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.400912781 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.644318509 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.381759469 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.052525086 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.730500565 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.637721 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.379246227 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.364026377 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.382753281 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.378903448 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.417215342 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.612604419 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.697311696 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.9514586 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.386081234 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.389878345 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.383304893 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.598377982 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.592500728 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.38171292 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.392078433 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.393563001 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.395700294 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.287133863 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.888466657 seconds)
  done (took 1615.79073319 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.422643781 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.419153778 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.422109645 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.479536305 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.393762846 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.396611615 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.427180855 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.417753909 seconds)
  done (took 52.689641669 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.381964254 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.617696569 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.412305291 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.389934604 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.388927339 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.387598779 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.843198746 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.38954949 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.383040489 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.390143408 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.391186076 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.376605318 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.027161431 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.390485838 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.390059066 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.366149415 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.39017121 seconds)
  done (took 66.234530657 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.387693376 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.541123738 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.395523571 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.379314724 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.563962598 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.392282106 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.462966058 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.42366696 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.385665458 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.482842597 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.045039745 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.416854597 seconds)
  done (took 80.191509639 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.387418104 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.387831416 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.388275449 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.388041711 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.388472225 seconds)
  done (took 8.252677209 seconds)
done (took 2043.594077325 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.820517455 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.116221878 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.077776711 seconds)
  done (took 5.507516671 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.530005643 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.581237526 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.732906009 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.721356789 seconds)
  done (took 7.879304446 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.665970364 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.773650473 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.595392852 seconds)
  done (took 6.348697701 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.842732289 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.404387782 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.458572693 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.380838129 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.38349992 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.380413249 seconds)
  done (took 20.460692448 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.388439677 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.389234937 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.387079259 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.390694506 seconds)
  done (took 6.870319092 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.368442905 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.103021619 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.369103964 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.383251995 seconds)
  done (took 18.537260882 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.132742996 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.146683734 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.131507184 seconds)
  done (took 7.72603379 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.388045509 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.234331562 seconds)
  done (took 9.936492203 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.704324551 seconds)
  done (took 3.018365425 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.519603822 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.650947905 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.463533245 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.364306588 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.498230953 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 5.437035979 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 3.090131072 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.669683101 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.350013796 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.63343938 seconds)
  done (took 28.993322568 seconds)
done (took 129.117625027 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.294529893 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.404278923 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.589281079 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.26633007 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.611631418 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.588484156 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.88403125 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.238124645 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.772195542 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.762401712 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.264763906 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.611733407 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.61000874 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.410015129 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.61239512 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.405627863 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.61503847 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.334045754 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.998829779 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.155253673 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.883727994 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.903507141 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.090212325 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.920321708 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.61317949 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.541351838 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.486795537 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.397739791 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.172974558 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.509092779 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.535927273 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.333464495 seconds)
  done (took 193.133668434 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.40084515 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.381201104 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.381956903 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.381890596 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.382139962 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.396017993 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.395895701 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.381317048 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.393931762 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.381438768 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.381145227 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.407237322 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.38254208 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.381125096 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.382058381 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.408707111 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.38216477 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.397243552 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.381309727 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.386158128 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.381181636 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.394438726 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.382308839 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.400756483 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.39562766 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.382600544 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.382327984 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.400675433 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.396057273 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.381401285 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.387382538 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.388205754 seconds)
  done (took 205.757889818 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.386328495 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.382021998 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.398793307 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.391937771 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.382070886 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.38391966 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.383542862 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.382954377 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.390426606 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.383437174 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.382713385 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.383777434 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.392790609 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.382355606 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.385667896 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.396665096 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.391030559 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.382958157 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.382797759 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.386932544 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.383592933 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.395191778 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.383996513 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.382992656 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.383984928 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.389489087 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.390264336 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.382358538 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.39755766 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.383987242 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.385733723 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.388623512 seconds)
  done (took 205.70018618 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.586678337 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.396563422 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.397612627 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.331022303 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.397593071 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.397639854 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.394247104 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.596532142 seconds)
  done (took 14.818557074 seconds)
done (took 620.725622878 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.777121648 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.492510673 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.603112356 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.414917431 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.226103197 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.41834688 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.416292915 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.591312056 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.942785802 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.580278042 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.758984492 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.416202532 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.917958656 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.415816904 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.673384059 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.513421805 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.316869802 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.434182669 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.743660473 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.985181392 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.678794636 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 3.010780635 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.589561889 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.998347549 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.914801831 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 3.035360988 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.241979257 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.316835796 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.416995315 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.748518338 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.170201606 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.48930314 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.480513592 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.460662092 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.515040588 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.498843176 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.48482178 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.459464035 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.603860313 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.764574747 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.991384141 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.749955122 seconds)
  done (took 97.580463525 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.387935446 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.387631799 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.385609826 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.387698309 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.387709658 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.387570771 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.386453342 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.386507493 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.387360939 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.387438132 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.386995996 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.387846689 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.387078352 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.388172849 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.386483196 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.387111951 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.388097183 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.388864732 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.387037661 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.387215789 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.388090647 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.385997186 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.388438993 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.387528744 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.387571762 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.386977523 seconds)
  done (took 37.396651692 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.400073851 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.64046743 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.833901778 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.406993006 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.399322835 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.40600692 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.481535459 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.401577047 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.40355334 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.403779039 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.564080444 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.400294821 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.434205411 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.836156197 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.40260033 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.400894437 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.411968538 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.401071978 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.64808729 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.410002751 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.496812708 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.402243883 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.482096409 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.41079824 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.418995526 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.400550557 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.405952906 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.937035419 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.40376118 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.56572044 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.208138736 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.481687419 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.904752968 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.827660216 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.204096925 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.403843509 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.401720978 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.567458859 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.399444221 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.402133618 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.483963521 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.400911197 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.827234577 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.038471436 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.414459559 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.404509111 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.955531761 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.56179803 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.659347215 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.412248183 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.864762386 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.407127095 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.405488693 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.40593523 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.664292342 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.410212465 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.403766344 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.998718685 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.418524386 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.485422255 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.404556295 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.406194865 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.659546111 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.403909353 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.646268097 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.406773493 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.41155185 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.404584999 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.841685008 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.407264211 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.070273018 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.421869708 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.4041641 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.571110397 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.647120505 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.996120374 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.408883891 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.662604139 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.919862561 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.485176212 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.409099154 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.930439292 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.49011058 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.408883958 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.407708026 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.407377816 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.405792841 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.448399273 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.484914303 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.999818747 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.068634086 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.021422848 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.505569521 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.418289716 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.408676111 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.007532087 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.423792706 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.406667636 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.839359932 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.075989097 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.421820821 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.412826497 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.054681437 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.424796942 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.486738465 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.410723895 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.84803978 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.409384529 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.449712845 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.408366769 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.413294968 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.409516412 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.486828968 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.410867802 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.407883808 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.055462335 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.592251237 seconds)
  done (took 184.614286316 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.405815523 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.394789119 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.406243527 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.394890063 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.399996825 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.405625733 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.399423646 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.400704608 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.406712246 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.399747599 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.400314368 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.405020506 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.402242472 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.402336219 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.407839868 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.407754909 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.014116856 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.407337373 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.402027519 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.396563674 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.207904526 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.40151151 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.402176307 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.396133768 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.406483545 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.402039455 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.415016053 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.400662818 seconds)
  done (took 154.025183503 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.409998578 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.01693936 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.410570374 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.546121882 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.431899699 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.406721747 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.548442716 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.469638298 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.411608534 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.40662389 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.407172631 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.737174138 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.409961724 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.948603603 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.599637649 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.5453754 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.934881377 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.405531605 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.407893412 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.408403484 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.549507733 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.419642136 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.719134879 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.983938007 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.406923469 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.991473336 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.394542328 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.411365961 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.408256247 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.991844291 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.404036728 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.722115129 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.486235143 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.472063041 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.99289848 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.953624815 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.97008346 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.564242715 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.409720643 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.40809153 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.408943426 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.398421157 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.992777567 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.408070438 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.411275537 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.98593364 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.421390744 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.412650174 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.420325581 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.41004568 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.472655414 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.473602886 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.724204109 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.993460432 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.485941076 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.432096079 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.550917839 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.798637816 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.414559872 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.971577556 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.39874533 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.997232223 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.409267293 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.40000594 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.411143922 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.415596397 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.568093542 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.550320896 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.972937585 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.413887742 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.973013909 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.568337976 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.411507087 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.410287688 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.413267717 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.996218237 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.969874662 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.568309028 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.55253588 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.614547804 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.404121155 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.411482075 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.401902995 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.493288039 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.411497259 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.000477569 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.971789248 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.415100885 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.414343669 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.414633595 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.413648934 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.595594849 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.999406549 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.489621704 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.940820335 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.736421157 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.721725977 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.409192888 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.475800019 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.413019279 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.729314646 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.41042186 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.473594934 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.864340933 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.731867849 seconds)
  done (took 168.20663263 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.662015878 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.632049288 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.500040658 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.530118056 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 1.944532102 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.997472518 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.543023524 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.537739284 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.521506249 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.663039155 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.102519083 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.495686951 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.61028731 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.503463222 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.133295014 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.484307127 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.510535521 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.553494529 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.52758873 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.457593839 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.027209671 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.715685201 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.574372126 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.494971769 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.511082377 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.198718761 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.183959763 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.940806008 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.589665919 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.598911493 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.92494373 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.579329438 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.170822598 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.080132267 seconds)
  done (took 66.839542832 seconds)
done (took 709.984748939 seconds)
SAVING RESULT...
DONE!
